require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks
 */

var emptyFunction = require('./emptyFunction');

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (process.env.NODE_ENV !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
}).call(this,require('_process'))

},{"./emptyFunction":8,"_process":25}],2:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;
},{}],3:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;
},{}],4:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var camelize = require('./camelize');

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;
},{"./camelize":3}],5:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

var isTextNode = require('./isTextNode');

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;
},{"./isTextNode":18}],6:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = require('./invariant');

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
}).call(this,require('_process'))

},{"./invariant":16,"_process":25}],7:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = require('./ExecutionEnvironment');

var createArrayFromMixed = require('./createArrayFromMixed');
var getMarkupWrap = require('./getMarkupWrap');
var invariant = require('./invariant');

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
}).call(this,require('_process'))

},{"./ExecutionEnvironment":2,"./createArrayFromMixed":6,"./getMarkupWrap":12,"./invariant":16,"_process":25}],8:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],9:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}).call(this,require('_process'))

},{"_process":25}],10:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;
},{}],11:[function(require,module,exports){
(function (global){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || global.document;
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],12:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = require('./ExecutionEnvironment');

var invariant = require('./invariant');

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
}).call(this,require('_process'))

},{"./ExecutionEnvironment":2,"./invariant":16,"_process":25}],13:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable.Window && scrollable instanceof scrollable.Window) {
    return {
      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;
},{}],14:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;
},{}],15:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var hyphenate = require('./hyphenate');

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;
},{"./hyphenate":14}],16:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
}).call(this,require('_process'))

},{"_process":25}],17:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
},{}],18:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = require('./isNode');

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;
},{"./isNode":17}],19:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;
},{}],20:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var ExecutionEnvironment = require('./ExecutionEnvironment');

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
},{"./ExecutionEnvironment":2}],21:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var performance = require('./performance');

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
},{"./performance":20}],22:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
},{}],23:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = require('./emptyFunction');

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  (function () {
    var printWarning = function printWarning(format) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };

    warning = function warning(condition, format) {
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }

      if (format.indexOf('Failed Composite propType: ') === 0) {
        return; // Ignore CompositeComponent proptype check.
      }

      if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }

        printWarning.apply(undefined, [format].concat(args));
      }
    };
  })();
}

module.exports = warning;
}).call(this,require('_process'))

},{"./emptyFunction":8,"_process":25}],24:[function(require,module,exports){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],25:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],26:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ARIADOMPropertyConfig = {
  Properties: {
    // Global States and Properties
    'aria-current': 0, // state
    'aria-details': 0,
    'aria-disabled': 0, // state
    'aria-hidden': 0, // state
    'aria-invalid': 0, // state
    'aria-keyshortcuts': 0,
    'aria-label': 0,
    'aria-roledescription': 0,
    // Widget Attributes
    'aria-autocomplete': 0,
    'aria-checked': 0,
    'aria-expanded': 0,
    'aria-haspopup': 0,
    'aria-level': 0,
    'aria-modal': 0,
    'aria-multiline': 0,
    'aria-multiselectable': 0,
    'aria-orientation': 0,
    'aria-placeholder': 0,
    'aria-pressed': 0,
    'aria-readonly': 0,
    'aria-required': 0,
    'aria-selected': 0,
    'aria-sort': 0,
    'aria-valuemax': 0,
    'aria-valuemin': 0,
    'aria-valuenow': 0,
    'aria-valuetext': 0,
    // Live Region Attributes
    'aria-atomic': 0,
    'aria-busy': 0,
    'aria-live': 0,
    'aria-relevant': 0,
    // Drag-and-Drop Attributes
    'aria-dropeffect': 0,
    'aria-grabbed': 0,
    // Relationship Attributes
    'aria-activedescendant': 0,
    'aria-colcount': 0,
    'aria-colindex': 0,
    'aria-colspan': 0,
    'aria-controls': 0,
    'aria-describedby': 0,
    'aria-errormessage': 0,
    'aria-flowto': 0,
    'aria-labelledby': 0,
    'aria-owns': 0,
    'aria-posinset': 0,
    'aria-rowcount': 0,
    'aria-rowindex': 0,
    'aria-rowspan': 0,
    'aria-setsize': 0
  },
  DOMAttributeNames: {},
  DOMPropertyNames: {}
};

module.exports = ARIADOMPropertyConfig;
},{}],27:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var focusNode = require('fbjs/lib/focusNode');

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;
},{"./ReactDOMComponentTree":58,"fbjs/lib/focusNode":10}],28:[function(require,module,exports){
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var FallbackCompositionState = require('./FallbackCompositionState');
var SyntheticCompositionEvent = require('./SyntheticCompositionEvent');
var SyntheticInputEvent = require('./SyntheticInputEvent');

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (currentComposition) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;
},{"./EventPropagators":44,"./FallbackCompositionState":45,"./SyntheticCompositionEvent":109,"./SyntheticInputEvent":113,"fbjs/lib/ExecutionEnvironment":2}],29:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;
},{}],30:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactInstrumentation = require('./ReactInstrumentation');

var camelizeStyleName = require('fbjs/lib/camelizeStyleName');
var dangerousStyleValue = require('./dangerousStyleValue');
var hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');
var memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');
var warning = require('fbjs/lib/warning');

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if (process.env.NODE_ENV !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (process.env.NODE_ENV !== 'production') {
        warnValidStyle(styleName, styleValue, component);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: component._debugID,
        type: 'update styles',
        payload: styles
      });
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if (process.env.NODE_ENV !== 'production') {
        warnValidStyle(styleName, styles[styleName], component);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;
}).call(this,require('_process'))

},{"./CSSProperty":29,"./ReactInstrumentation":87,"./dangerousStyleValue":126,"_process":25,"fbjs/lib/ExecutionEnvironment":2,"fbjs/lib/camelizeStyleName":4,"fbjs/lib/hyphenateStyleName":15,"fbjs/lib/memoizeStringOnly":19,"fbjs/lib/warning":23}],31:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PooledClass = require('./PooledClass');

var invariant = require('fbjs/lib/invariant');

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    _classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */


  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
    this._callbacks = this._callbacks || [];
    this._callbacks.push(callback);
    this._contexts = this._contexts || [];
    this._contexts.push(context);
  };

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */


  CallbackQueue.prototype.notifyAll = function notifyAll() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    var arg = this._arg;
    if (callbacks && contexts) {
      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i], arg);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  };

  CallbackQueue.prototype.checkpoint = function checkpoint() {
    return this._callbacks ? this._callbacks.length : 0;
  };

  CallbackQueue.prototype.rollback = function rollback(len) {
    if (this._callbacks && this._contexts) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  };

  /**
   * Resets the internal queue.
   *
   * @internal
   */


  CallbackQueue.prototype.reset = function reset() {
    this._callbacks = null;
    this._contexts = null;
  };

  /**
   * `PooledClass` looks for this.
   */


  CallbackQueue.prototype.destructor = function destructor() {
    this.reset();
  };

  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);
}).call(this,require('_process'))

},{"./PooledClass":49,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],32:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');
var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');
var isEventSupported = require('./isEventSupported');
var isTextInputElement = require('./isTextInputElement');

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}
function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  // IE10+ fire input events to often, such when a placeholder
  // changes or when an input with a placeholder is focused.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
}

/**
 * (For IE <=11) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp = {
  get: function () {
    return activeElementValueProp.get.call(this);
  },
  set: function (val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For IE <=11) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
  // on DOM elements
  Object.defineProperty(activeElement, 'value', newValueProp);
  if (activeElement.attachEvent) {
    activeElement.attachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.addEventListener('propertychange', handlePropertyChange, false);
  }
}

/**
 * (For IE <=11) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;

  if (activeElement.detachEvent) {
    activeElement.detachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
  }

  activeElement = null;
  activeElementInst = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For IE <=11) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetInstForInputEvent(topLevelType, targetInst) {
  if (topLevelType === 'topInput') {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return targetInst;
  }
}

function handleEventsForInputEventIE(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9-11, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventIE(topLevelType, targetInst) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementInst;
    }
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === 'topClick') {
    return targetInst;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
        event.type = 'change';
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }
  }

};

module.exports = ChangeEventPlugin;
},{"./EventPluginHub":41,"./EventPropagators":44,"./ReactDOMComponentTree":58,"./ReactUpdates":102,"./SyntheticEvent":111,"./getEventTarget":134,"./isEventSupported":142,"./isTextInputElement":143,"fbjs/lib/ExecutionEnvironment":2}],33:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var Danger = require('./Danger');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setInnerHTML = require('./setInnerHTML');
var setTextContent = require('./setTextContent');

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onHostOperation({
      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
      type: 'replace text',
      payload: stringText
    });
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if (process.env.NODE_ENV !== 'production') {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: prevInstance._debugID,
        type: 'replace with',
        payload: markup.toString()
      });
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: nextInstance._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if (process.env.NODE_ENV !== 'production') {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case 'INSERT_MARKUP':
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'insert child',
              payload: { toIndex: update.toIndex, content: update.content.toString() }
            });
          }
          break;
        case 'MOVE_EXISTING':
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'move child',
              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
            });
          }
          break;
        case 'SET_MARKUP':
          setInnerHTML(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace children',
              payload: update.content.toString()
            });
          }
          break;
        case 'TEXT_CONTENT':
          setTextContent(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace text',
              payload: update.content.toString()
            });
          }
          break;
        case 'REMOVE_NODE':
          removeChild(parentNode, update.fromNode);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'remove child',
              payload: { fromIndex: update.fromIndex }
            });
          }
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;
}).call(this,require('_process'))

},{"./DOMLazyTree":34,"./Danger":38,"./ReactDOMComponentTree":58,"./ReactInstrumentation":87,"./createMicrosoftUnsafeLocalFunction":125,"./setInnerHTML":147,"./setTextContent":148,"_process":25}],34:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMNamespaces = require('./DOMNamespaces');
var setInnerHTML = require('./setInnerHTML');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setTextContent = require('./setTextContent');

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;
},{"./DOMNamespaces":35,"./createMicrosoftUnsafeLocalFunction":125,"./setInnerHTML":147,"./setTextContent":148}],35:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;
},{}],36:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if (process.env.NODE_ENV !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if (process.env.NODE_ENV !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
}).call(this,require('_process'))

},{"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],37:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');
var warning = require('fbjs/lib/warning');

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  }

};

module.exports = DOMPropertyOperations;
}).call(this,require('_process'))

},{"./DOMProperty":36,"./ReactDOMComponentTree":58,"./ReactInstrumentation":87,"./quoteAttributeValueForBrowser":144,"_process":25,"fbjs/lib/warning":23}],38:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');
var emptyFunction = require('fbjs/lib/emptyFunction');
var invariant = require('fbjs/lib/invariant');

var Danger = {

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }

};

module.exports = Danger;
}).call(this,require('_process'))

},{"./DOMLazyTree":34,"./reactProdInvariant":145,"_process":25,"fbjs/lib/ExecutionEnvironment":2,"fbjs/lib/createNodesFromMarkup":7,"fbjs/lib/emptyFunction":8,"fbjs/lib/invariant":16}],39:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */

var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

module.exports = DefaultEventPluginOrder;
},{}],40:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');

var eventTypes = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }

};

module.exports = EnterLeaveEventPlugin;
},{"./EventPropagators":44,"./ReactDOMComponentTree":58,"./SyntheticMouseEvent":115}],41:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventPluginRegistry = require('./EventPluginRegistry');
var EventPluginUtils = require('./EventPluginUtils');
var ReactErrorUtils = require('./ReactErrorUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var invariant = require('fbjs/lib/invariant');

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function (inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
    // live here; needs to be moved to a better place soon
    var bankForRegistrationName = listenerBank[registrationName];
    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
      return null;
    }
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }

};

module.exports = EventPluginHub;
}).call(this,require('_process'))

},{"./EventPluginRegistry":42,"./EventPluginUtils":43,"./ReactErrorUtils":78,"./accumulateInto":122,"./forEachAccumulated":130,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],42:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if (process.env.NODE_ENV !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
  // Trust the developer to only use possibleRegistrationNames in __DEV__

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (injectedEventPluginOrder) {
    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
      // that it is not undefined.
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }

};

module.exports = EventPluginRegistry;
}).call(this,require('_process'))

},{"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],43:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactErrorUtils = require('./ReactErrorUtils');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if (process.env.NODE_ENV !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
}).call(this,require('_process'))

},{"./ReactErrorUtils":78,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23}],44:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var warning = require('fbjs/lib/warning');

var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
}).call(this,require('_process'))

},{"./EventPluginHub":41,"./EventPluginUtils":43,"./accumulateInto":122,"./forEachAccumulated":130,"_process":25,"fbjs/lib/warning":23}],45:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;
},{"./PooledClass":49,"./getTextContentAccessor":139,"object-assign":24}],46:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    // specifies target context for links with `preload` type
    as: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    playsInline: HAS_BOOLEAN_VALUE,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {}
};

module.exports = HTMLDOMPropertyConfig;
},{"./DOMProperty":36}],47:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
},{}],48:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var React = require('react/lib/React');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: React.PropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
}).call(this,require('_process'))

},{"./ReactPropTypesSecret":95,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23,"react/lib/React":154}],49:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}).call(this,require('_process'))

},{"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],50:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var EventPluginRegistry = require('./EventPluginRegistry');
var ReactEventEmitterMixin = require('./ReactEventEmitterMixin');
var ViewportMetrics = require('./ViewportMetrics');

var getVendorPrefixedEventName = require('./getVendorPrefixedEventName');
var isEventSupported = require('./isEventSupported');

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === 'topWheel') {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === 'topScroll') {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === 'topFocus' || dependency === 'topBlur') {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening.topBlur = true;
          isListening.topFocus = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
  supportsEventPageXY: function () {
    if (!document.createEvent) {
      return false;
    }
    var ev = document.createEvent('MouseEvent');
    return ev != null && 'pageX' in ev;
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }

});

module.exports = ReactBrowserEventEmitter;
},{"./EventPluginRegistry":42,"./ReactEventEmitterMixin":79,"./ViewportMetrics":121,"./getVendorPrefixedEventName":140,"./isEventSupported":142,"object-assign":24}],51:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactReconciler = require('./ReactReconciler');

var instantiateReactComponent = require('./instantiateReactComponent');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if (process.env.NODE_ENV !== 'production') {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
    }
    if (!keyUnique) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
  ) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if (process.env.NODE_ENV !== 'production') {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
  ) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }

};

module.exports = ReactChildReconciler;
}).call(this,require('_process'))

},{"./KeyEscapeUtils":47,"./ReactReconciler":97,"./instantiateReactComponent":141,"./shouldUpdateReactComponent":149,"./traverseAllChildren":150,"_process":25,"fbjs/lib/warning":23,"react/lib/ReactComponentTreeHook":158}],52:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMIDOperations = require('./ReactDOMIDOperations');

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

};

module.exports = ReactComponentBrowserEnvironment;
},{"./DOMChildrenOperations":33,"./ReactDOMIDOperations":62}],53:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;
}).call(this,require('_process'))

},{"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],54:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var React = require('react/lib/React');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactErrorUtils = require('./ReactErrorUtils');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactNodeTypes = require('./ReactNodeTypes');
var ReactReconciler = require('./ReactReconciler');

if (process.env.NODE_ENV !== 'production') {
  var checkReactTypeSpec = require('./checkReactTypeSpec');
}

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var shallowEqual = require('fbjs/lib/shallowEqual');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

// Separated into a function to contain deoptimizations caused by try/finally.
function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    // Top-level wrappers (see ReactMount) and empty components (see
    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
    // Both are implementation details that should go away in the future.
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponent = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if (process.env.NODE_ENV !== 'production') {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if (process.env.NODE_ENV !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
    if (process.env.NODE_ENV !== 'production') {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if (process.env.NODE_ENV !== 'production') {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    // This can still be an instance in case of factory components
    // but we'll count this as time spent rendering as the more common case.
    if (process.env.NODE_ENV !== 'production') {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if (process.env.NODE_ENV !== 'production') {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if (process.env.NODE_ENV !== 'production') {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if (process.env.NODE_ENV !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if (process.env.NODE_ENV !== 'production') {
        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    if (process.env.NODE_ENV !== 'production') {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if (process.env.NODE_ENV !== 'production') {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if (process.env.NODE_ENV !== 'production') {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedElement;

    if (process.env.NODE_ENV !== 'production') {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if (process.env.NODE_ENV !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedElement === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedElement;
    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedElement;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if (process.env.NODE_ENV !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null

};

module.exports = ReactCompositeComponent;
}).call(this,require('_process'))

},{"./ReactComponentEnvironment":53,"./ReactErrorUtils":78,"./ReactInstanceMap":86,"./ReactInstrumentation":87,"./ReactNodeTypes":92,"./ReactReconciler":97,"./checkReactTypeSpec":124,"./reactProdInvariant":145,"./shouldUpdateReactComponent":149,"_process":25,"fbjs/lib/emptyObject":9,"fbjs/lib/invariant":16,"fbjs/lib/shallowEqual":22,"fbjs/lib/warning":23,"object-assign":24,"react/lib/React":154,"react/lib/ReactCurrentOwner":159}],55:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDefaultInjection = require('./ReactDefaultInjection');
var ReactMount = require('./ReactMount');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdates = require('./ReactUpdates');
var ReactVersion = require('./ReactVersion');

var findDOMNode = require('./findDOMNode');
var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');
var warning = require('fbjs/lib/warning');

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if (process.env.NODE_ENV !== 'production') {
  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

if (process.env.NODE_ENV !== 'production') {
  var ReactInstrumentation = require('./ReactInstrumentation');
  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');
  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');

  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
}

module.exports = ReactDOM;
}).call(this,require('_process'))

},{"./ReactDOMComponentTree":58,"./ReactDOMInvalidARIAHook":64,"./ReactDOMNullInputValuePropHook":65,"./ReactDOMUnknownPropertyHook":72,"./ReactDefaultInjection":75,"./ReactInstrumentation":87,"./ReactMount":90,"./ReactReconciler":97,"./ReactUpdates":102,"./ReactVersion":103,"./findDOMNode":128,"./getHostComponentFromComposite":135,"./renderSubtreeIntoContainer":146,"_process":25,"fbjs/lib/ExecutionEnvironment":2,"fbjs/lib/warning":23}],56:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* global hasOwnProperty:true */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var AutoFocusUtils = require('./AutoFocusUtils');
var CSSPropertyOperations = require('./CSSPropertyOperations');
var DOMLazyTree = require('./DOMLazyTree');
var DOMNamespaces = require('./DOMNamespaces');
var DOMProperty = require('./DOMProperty');
var DOMPropertyOperations = require('./DOMPropertyOperations');
var EventPluginHub = require('./EventPluginHub');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMInput = require('./ReactDOMInput');
var ReactDOMOption = require('./ReactDOMOption');
var ReactDOMSelect = require('./ReactDOMSelect');
var ReactDOMTextarea = require('./ReactDOMTextarea');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMultiChild = require('./ReactMultiChild');
var ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');

var emptyFunction = require('fbjs/lib/emptyFunction');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var isEventSupported = require('./isEventSupported');
var shallowEqual = require('fbjs/lib/shallowEqual');
var validateDOMNesting = require('./validateDOMNesting');
var warning = require('fbjs/lib/warning');

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { 'string': true, 'number': true };

var STYLE = 'style';
var HTML = '__html';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setAndValidateContentChildDev = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  setAndValidateContentChildDev = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    // This ID represents the inlined child that has no backing instance:
    var contentDebugID = -debugID;

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    validateDOMNesting(null, String(content), this, this._ancestorInfo);
    this._contentDebugID = contentDebugID;
    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'video':
    case 'audio':

      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
};

var newlineEatingTags = {
  'listing': true,
  'pre': true,
  'textarea': true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  'menuitem': true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = 0;
  this._domID = 0;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if (process.env.NODE_ENV !== 'production') {
    this._ancestorInfo = null;
    setAndValidateContentChildDev.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, null, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if (process.env.NODE_ENV !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      // TODO: Validate that text is allowed as a child of this node
      if (contentToUse != null) {
        // Avoid setting textContent when the text is empty. In IE11 setting
        // textContent on a text area will cause the placeholder to not
        // show within the textarea until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        if (contentToUse !== '') {
          if (process.env.NODE_ENV !== 'production') {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'input':
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    switch (this._tag) {
      case 'input':
        // Update the wrapper around inputs *after* updating props. This has to
        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
        // raise warnings and prevent the new value from being assigned.
        ReactDOMInput.updateWrapper(this);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        break;
      case 'select':
        // <select> value update needs to occur after <option> children
        // reconciliation
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        break;
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if (process.env.NODE_ENV !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if (process.env.NODE_ENV !== 'production') {
        setAndValidateContentChildDev.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    this._rootNodeID = 0;
    this._domID = 0;
    this._wrapperState = null;

    if (process.env.NODE_ENV !== 'production') {
      setAndValidateContentChildDev.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }

};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
}).call(this,require('_process'))

},{"./AutoFocusUtils":27,"./CSSPropertyOperations":30,"./DOMLazyTree":34,"./DOMNamespaces":35,"./DOMProperty":36,"./DOMPropertyOperations":37,"./EventPluginHub":41,"./EventPluginRegistry":42,"./ReactBrowserEventEmitter":50,"./ReactDOMComponentFlags":57,"./ReactDOMComponentTree":58,"./ReactDOMInput":63,"./ReactDOMOption":66,"./ReactDOMSelect":67,"./ReactDOMTextarea":70,"./ReactInstrumentation":87,"./ReactMultiChild":91,"./ReactServerRenderingTransaction":99,"./escapeTextContentForBrowser":127,"./isEventSupported":142,"./reactProdInvariant":145,"./validateDOMNesting":151,"_process":25,"fbjs/lib/emptyFunction":8,"fbjs/lib/invariant":16,"fbjs/lib/shallowEqual":22,"fbjs/lib/warning":23,"object-assign":24}],57:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;
},{}],58:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');

var invariant = require('fbjs/lib/invariant');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Check if a given node should be cached.
 */
function shouldPrecacheNode(node, nodeID) {
  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
}

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID === 0) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (shouldPrecacheNode(childNode, childID)) {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
}).call(this,require('_process'))

},{"./DOMProperty":36,"./ReactDOMComponentFlags":57,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],59:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var validateDOMNesting = require('./validateDOMNesting');

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if (process.env.NODE_ENV !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
}).call(this,require('_process'))

},{"./validateDOMNesting":151,"_process":25}],60:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = 0;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;
},{"./DOMLazyTree":34,"./ReactDOMComponentTree":58,"object-assign":24}],61:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMFeatureFlags = {
  useCreateElement: true,
  useFiber: false
};

module.exports = ReactDOMFeatureFlags;
},{}],62:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;
},{"./DOMChildrenOperations":33,"./ReactDOMComponentTree":58}],63:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMPropertyOperations = require('./DOMPropertyOperations');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined,
      // Make sure we set .min & .max before .value (to ensure proper order
      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
      min: undefined,
      max: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };

    if (process.env.NODE_ENV !== 'production') {
      inst._wrapperState.controlled = isControlled(props);
    }
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (process.env.NODE_ENV !== 'production') {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {

      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        // In Chrome, assigning defaultValue to certain input types triggers input validation.
        // For number inputs, the display value loses trailing decimal points. For email inputs,
        // Chrome raises "The specified value <x> is not a valid email address".
        //
        // Here we check to see if the defaultValue has actually changed, avoiding these problems
        // when the user is inputting text
        //
        // https://github.com/facebook/react/issues/7253
        if (node.defaultValue !== '' + props.defaultValue) {
          node.defaultValue = '' + props.defaultValue;
        }
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.

    switch (props.type) {
      case 'submit':
      case 'reset':
        break;
      case 'color':
      case 'date':
      case 'datetime':
      case 'datetime-local':
      case 'month':
      case 'time':
      case 'week':
        // This fixes the no-show issue on iOS Safari and Android Chrome:
        // https://github.com/facebook/react/issues/7233
        node.value = '';
        node.value = node.defaultValue;
        break;
      default:
        node.value = node.value;
        break;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
}).call(this,require('_process'))

},{"./DOMPropertyOperations":37,"./LinkedValueUtils":48,"./ReactDOMComponentTree":58,"./ReactUpdates":102,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23,"object-assign":24}],64:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name, debugID) {
  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
    return true;
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(debugID, element) {
  var invalidProps = [];

  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (invalidProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
}

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }

  warnInvalidARIAProps(debugID, element);
}

var ReactDOMInvalidARIAHook = {
  onBeforeMountComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  },
  onBeforeUpdateComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  }
};

module.exports = ReactDOMInvalidARIAHook;
}).call(this,require('_process'))

},{"./DOMProperty":36,"_process":25,"fbjs/lib/warning":23,"react/lib/ReactComponentTreeHook":158}],65:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

var didWarnValueNull = false;

function handleElement(debugID, element) {
  if (element == null) {
    return;
  }
  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
    return;
  }
  if (element.props != null && element.props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

    didWarnValueNull = true;
  }
}

var ReactDOMNullInputValuePropHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMNullInputValuePropHook;
}).call(this,require('_process'))

},{"_process":25,"fbjs/lib/warning":23,"react/lib/ReactComponentTreeHook":158}],66:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var React = require('react/lib/React');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMSelect = require('./ReactDOMSelect');

var warning = require('fbjs/lib/warning');
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }

};

module.exports = ReactDOMOption;
}).call(this,require('_process'))

},{"./ReactDOMComponentTree":58,"./ReactDOMSelect":67,"_process":25,"fbjs/lib/warning":23,"object-assign":24,"react/lib/React":154}],67:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else if (!props.multiple && isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
}).call(this,require('_process'))

},{"./LinkedValueUtils":48,"./ReactDOMComponentTree":58,"./ReactUpdates":102,"_process":25,"fbjs/lib/warning":23,"object-assign":24}],68:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var getNodeForCharacterOffset = require('./getNodeForCharacterOffset');
var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;
},{"./getNodeForCharacterOffset":138,"./getTextContentAccessor":139,"fbjs/lib/ExecutionEnvironment":2}],69:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMChildrenOperations = require('./DOMChildrenOperations');
var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var validateDOMNesting = require('./validateDOMNesting');

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = 0;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(null, this._stringText, this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }

});

module.exports = ReactDOMTextComponent;
}).call(this,require('_process'))

},{"./DOMChildrenOperations":33,"./DOMLazyTree":34,"./ReactDOMComponentTree":58,"./escapeTextContentForBrowser":127,"./reactProdInvariant":145,"./validateDOMNesting":151,"_process":25,"fbjs/lib/invariant":16,"object-assign":24}],70:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, props, {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var textContent = node.textContent;

    // Only set node.value if textContent is equal to the expected
    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
    // will populate textContent as well.
    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
    if (textContent === inst._wrapperState.initialValue) {
      node.value = textContent;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
}).call(this,require('_process'))

},{"./LinkedValueUtils":48,"./ReactDOMComponentTree":58,"./ReactUpdates":102,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23,"object-assign":24}],71:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
}).call(this,require('_process'))

},{"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],72:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

if (process.env.NODE_ENV !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,

    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true
  };
  var warnedProperties = {};

  var validateProperty = function (tagName, name, debugID) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return true;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }
    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
      return true;
    }
    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    if (standardName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else if (registrationName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else {
      // We were unable to guess which prop the user intended.
      // It is likely that the user was just blindly spreading/forwarding props
      // Components should be careful to only render valid props/attributes.
      // Warning will be invoked in warnUnknownProperties to allow grouping.
      return false;
    }
  };
}

var warnUnknownProperties = function (debugID, element) {
  var unknownProps = [];
  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (unknownProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
};

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }
  warnUnknownProperties(debugID, element);
}

var ReactDOMUnknownPropertyHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyHook;
}).call(this,require('_process'))

},{"./DOMProperty":36,"./EventPluginRegistry":42,"_process":25,"fbjs/lib/warning":23,"react/lib/ReactComponentTreeHook":158}],73:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactInvalidSetStateWarningHook = require('./ReactInvalidSetStateWarningHook');
var ReactHostOperationHistoryHook = require('./ReactHostOperationHistoryHook');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var performanceNow = require('fbjs/lib/performanceNow');
var warning = require('fbjs/lib/warning');

var hooks = [];
var didHookThrowForEvent = {};

function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
  try {
    fn.call(context, arg1, arg2, arg3, arg4, arg5);
  } catch (e) {
    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
    didHookThrowForEvent[event] = true;
  }
}

function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    var fn = hook[event];
    if (fn) {
      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
  }
}

var isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = [];
var currentFlushStartTime = 0;
var currentTimerDebugID = null;
var currentTimerStartTime = 0;
var currentTimerNestedFlushDuration = 0;
var currentTimerType = null;

var lifeCycleTimerHasWarned = false;

function clearHistory() {
  ReactComponentTreeHook.purgeUnmountedComponents();
  ReactHostOperationHistoryHook.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var parentID = ReactComponentTreeHook.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeHook.getDisplayName(id),
      text: ReactComponentTreeHook.getText(id),
      updateCount: ReactComponentTreeHook.getUpdateCount(id),
      childIDs: ReactComponentTreeHook.getChildIDs(id),
      // Text nodes don't have owners but this is close enough.
      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements;
  var previousOperations = ReactHostOperationHistoryHook.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = 0;
    currentFlushMeasurements = [];
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (allowRoot && debugID === 0) {
    return;
  }
  if (!debugID) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
  }
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  if (isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
      startTime = _lifeCycleTimerStack$.startTime,
      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
      debugID = _lifeCycleTimerStack$.debugID,
      timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var lastMarkTimeStamp = 0;
var canUsePerformanceMeasure =
// $FlowFixMe https://github.com/facebook/flow/issues/2345
typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

function shouldMark(debugID) {
  if (!isProfiling || !canUsePerformanceMeasure) {
    return false;
  }
  var element = ReactComponentTreeHook.getElement(debugID);
  if (element == null || typeof element !== 'object') {
    return false;
  }
  var isHostElement = typeof element.type === 'string';
  if (isHostElement) {
    return false;
  }
  return true;
}

function markBegin(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  lastMarkTimeStamp = performanceNow();
  performance.mark(markName);
}

function markEnd(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

  // Chrome has an issue of dropping markers recorded too fast:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
  // To work around this, we will not report very small measurements.
  // I determined the magic number by tweaking it back and forth.
  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
  // When the bug is fixed, we can `measure()` unconditionally if we want to.
  var timeStamp = performanceNow();
  if (timeStamp - lastMarkTimeStamp > 0.1) {
    var measurementName = displayName + ' [' + markType + ']';
    performance.measure(measurementName, markName);
  }

  performance.clearMarks(markName);
  performance.clearMeasures(measurementName);
}

var ReactDebugTool = {
  addHook: function (hook) {
    hooks.push(hook);
  },
  removeHook: function (hook) {
    for (var i = 0; i < hooks.length; i++) {
      if (hooks[i] === hook) {
        hooks.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function () {
    return isProfiling;
  },
  beginProfiling: function () {
    if (isProfiling) {
      return;
    }

    isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
  },
  endProfiling: function () {
    if (!isProfiling) {
      return;
    }

    isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
  },
  getFlushHistory: function () {
    return flushHistory;
  },
  onBeginFlush: function () {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function () {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    markBegin(debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    markEnd(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function (operation) {
    checkDebugID(operation.instanceID);
    emitEvent('onHostOperation', operation);
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onSetChildren: function (debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onBeforeMountComponent: function (debugID, element, parentDebugID) {
    checkDebugID(debugID);
    checkDebugID(parentDebugID, true);
    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
    markBegin(debugID, 'mount');
  },
  onMountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'mount');
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
    markBegin(debugID, 'update');
  },
  onUpdateComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'update');
    emitEvent('onUpdateComponent', debugID);
  },
  onBeforeUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onBeforeUnmountComponent', debugID);
    markBegin(debugID, 'unmount');
  },
  onUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'unmount');
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function () {
    emitEvent('onTestEvent');
  }
};

// TODO remove these when RN/www gets updated
ReactDebugTool.addDevtool = ReactDebugTool.addHook;
ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
ReactDebugTool.addHook(ReactComponentTreeHook);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;
}).call(this,require('_process'))

},{"./ReactHostOperationHistoryHook":83,"./ReactInvalidSetStateWarningHook":88,"_process":25,"fbjs/lib/ExecutionEnvironment":2,"fbjs/lib/performanceNow":21,"fbjs/lib/warning":23,"react/lib/ReactComponentTreeHook":158}],74:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactUpdates = require('./ReactUpdates');
var Transaction = require('./Transaction');

var emptyFunction = require('fbjs/lib/emptyFunction');

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;
},{"./ReactUpdates":102,"./Transaction":120,"fbjs/lib/emptyFunction":8,"object-assign":24}],75:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ARIADOMPropertyConfig = require('./ARIADOMPropertyConfig');
var BeforeInputEventPlugin = require('./BeforeInputEventPlugin');
var ChangeEventPlugin = require('./ChangeEventPlugin');
var DefaultEventPluginOrder = require('./DefaultEventPluginOrder');
var EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');
var HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMComponent = require('./ReactDOMComponent');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');
var ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');
var ReactDOMTextComponent = require('./ReactDOMTextComponent');
var ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');
var ReactEventListener = require('./ReactEventListener');
var ReactInjection = require('./ReactInjection');
var ReactReconcileTransaction = require('./ReactReconcileTransaction');
var SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');
var SelectEventPlugin = require('./SelectEventPlugin');
var SimpleEventPlugin = require('./SimpleEventPlugin');

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};
},{"./ARIADOMPropertyConfig":26,"./BeforeInputEventPlugin":28,"./ChangeEventPlugin":32,"./DefaultEventPluginOrder":39,"./EnterLeaveEventPlugin":40,"./HTMLDOMPropertyConfig":46,"./ReactComponentBrowserEnvironment":52,"./ReactDOMComponent":56,"./ReactDOMComponentTree":58,"./ReactDOMEmptyComponent":60,"./ReactDOMTextComponent":69,"./ReactDOMTreeTraversal":71,"./ReactDefaultBatchingStrategy":74,"./ReactEventListener":80,"./ReactInjection":84,"./ReactReconcileTransaction":96,"./SVGDOMPropertyConfig":104,"./SelectEventPlugin":105,"./SimpleEventPlugin":106}],76:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
},{}],77:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;
},{}],78:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (process.env.NODE_ENV !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = func.bind(null, a);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      // $FlowFixMe https://github.com/facebook/flow/issues/2336
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
}).call(this,require('_process'))

},{"_process":25}],79:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;
},{"./EventPluginHub":41}],80:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var EventListener = require('fbjs/lib/EventListener');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var PooledClass = require('./PooledClass');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var getEventTarget = require('./getEventTarget');
var getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;
},{"./PooledClass":49,"./ReactDOMComponentTree":58,"./ReactUpdates":102,"./getEventTarget":134,"fbjs/lib/EventListener":1,"fbjs/lib/ExecutionEnvironment":2,"fbjs/lib/getUnboundedScrollPosition":13,"object-assign":24}],81:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;
},{}],82:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
}).call(this,require('_process'))

},{"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],83:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var history = [];

var ReactHostOperationHistoryHook = {
  onHostOperation: function (operation) {
    history.push(operation);
  },
  clearHistory: function () {
    if (ReactHostOperationHistoryHook._preventClearing) {
      // Should only be used for tests.
      return;
    }

    history = [];
  },
  getHistory: function () {
    return history;
  }
};

module.exports = ReactHostOperationHistoryHook;
},{}],84:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactHostComponent = require('./ReactHostComponent');
var ReactUpdates = require('./ReactUpdates');

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;
},{"./DOMProperty":36,"./EventPluginHub":41,"./EventPluginUtils":43,"./ReactBrowserEventEmitter":50,"./ReactComponentEnvironment":53,"./ReactEmptyComponent":77,"./ReactHostComponent":82,"./ReactUpdates":102}],85:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMSelection = require('./ReactDOMSelection');

var containsNode = require('fbjs/lib/containsNode');
var focusNode = require('fbjs/lib/focusNode');
var getActiveElement = require('fbjs/lib/getActiveElement');

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;
},{"./ReactDOMSelection":68,"fbjs/lib/containsNode":5,"fbjs/lib/focusNode":10,"fbjs/lib/getActiveElement":11}],86:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;
},{}],87:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// Trust the developer to only use ReactInstrumentation with a __DEV__ check

var debugTool = null;

if (process.env.NODE_ENV !== 'production') {
  var ReactDebugTool = require('./ReactDebugTool');
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
}).call(this,require('_process'))

},{"./ReactDebugTool":73,"_process":25}],88:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var warning = require('fbjs/lib/warning');

if (process.env.NODE_ENV !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningHook = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningHook;
}).call(this,require('_process'))

},{"_process":25,"fbjs/lib/warning":23}],89:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var adler32 = require('./adler32');

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;
},{"./adler32":123}],90:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var DOMProperty = require('./DOMProperty');
var React = require('react/lib/React');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMContainerInfo = require('./ReactDOMContainerInfo');
var ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMarkupChecksum = require('./ReactMarkupChecksum');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdateQueue = require('./ReactUpdateQueue');
var ReactUpdates = require('./ReactUpdates');

var emptyObject = require('fbjs/lib/emptyObject');
var instantiateReactComponent = require('./instantiateReactComponent');
var invariant = require('fbjs/lib/invariant');
var setInnerHTML = require('./setInnerHTML');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props.child;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
  );

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

/**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
function nodeIsRenderedByOtherInstance(container) {
  var rootEl = getReactRootElementInContainer(container);
  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
}

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
}

/**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
function isReactNode(node) {
  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if (process.env.NODE_ENV !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {

  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
    // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if (process.env.NODE_ENV !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if (process.env.NODE_ENV !== 'production') {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: hostNode._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  }
};

module.exports = ReactMount;
}).call(this,require('_process'))

},{"./DOMLazyTree":34,"./DOMProperty":36,"./ReactBrowserEventEmitter":50,"./ReactDOMComponentTree":58,"./ReactDOMContainerInfo":59,"./ReactDOMFeatureFlags":61,"./ReactFeatureFlags":81,"./ReactInstanceMap":86,"./ReactInstrumentation":87,"./ReactMarkupChecksum":89,"./ReactReconciler":97,"./ReactUpdateQueue":101,"./ReactUpdates":102,"./instantiateReactComponent":141,"./reactProdInvariant":145,"./setInnerHTML":147,"./shouldUpdateReactComponent":149,"_process":25,"fbjs/lib/emptyObject":9,"fbjs/lib/invariant":16,"fbjs/lib/warning":23,"react/lib/React":154,"react/lib/ReactCurrentOwner":159}],91:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactReconciler = require('./ReactReconciler');
var ReactChildReconciler = require('./ReactChildReconciler');

var emptyFunction = require('fbjs/lib/emptyFunction');
var flattenChildren = require('./flattenChildren');
var invariant = require('fbjs/lib/invariant');

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if (process.env.NODE_ENV !== 'production') {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      var selfDebugID = 0;
      if (process.env.NODE_ENV !== 'production') {
        selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var selfDebugID = 0;
          if (process.env.NODE_ENV !== 'production') {
            selfDebugID = getDebugID(this);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }

  }

};

module.exports = ReactMultiChild;
}).call(this,require('_process'))

},{"./ReactChildReconciler":51,"./ReactComponentEnvironment":53,"./ReactInstanceMap":86,"./ReactInstrumentation":87,"./ReactReconciler":97,"./flattenChildren":129,"./reactProdInvariant":145,"_process":25,"fbjs/lib/emptyFunction":8,"fbjs/lib/invariant":16,"react/lib/ReactCurrentOwner":159}],92:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var React = require('react/lib/React');

var invariant = require('fbjs/lib/invariant');

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;
}).call(this,require('_process'))

},{"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"react/lib/React":154}],93:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {
  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;
}).call(this,require('_process'))

},{"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],94:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
}).call(this,require('_process'))

},{"_process":25}],95:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
},{}],96:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactInputSelection = require('./ReactInputSelection');
var ReactInstrumentation = require('./ReactInstrumentation');
var Transaction = require('./Transaction');
var ReactUpdateQueue = require('./ReactUpdateQueue');

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
}).call(this,require('_process'))

},{"./CallbackQueue":31,"./PooledClass":49,"./ReactBrowserEventEmitter":50,"./ReactInputSelection":85,"./ReactInstrumentation":87,"./ReactUpdateQueue":101,"./Transaction":120,"_process":25,"object-assign":24}],97:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactRef = require('./ReactRef');
var ReactInstrumentation = require('./ReactInstrumentation');

var warning = require('fbjs/lib/warning');

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
  ) {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }

};

module.exports = ReactReconciler;
}).call(this,require('_process'))

},{"./ReactInstrumentation":87,"./ReactRef":98,"_process":25,"fbjs/lib/warning":23}],98:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactOwner = require('./ReactOwner');

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef ||
  // If owner changes but we have an unchanged function ref, don't update refs
  typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;
},{"./ReactOwner":93}],99:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');
var Transaction = require('./Transaction');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactServerUpdateQueue = require('./ReactServerUpdateQueue');

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;
}).call(this,require('_process'))

},{"./PooledClass":49,"./ReactInstrumentation":87,"./ReactServerUpdateQueue":100,"./Transaction":120,"_process":25,"object-assign":24}],100:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = require('./ReactUpdateQueue');

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;
}).call(this,require('_process'))

},{"./ReactUpdateQueue":101,"_process":25,"fbjs/lib/warning":23}],101:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onSetState();
      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }

};

module.exports = ReactUpdateQueue;
}).call(this,require('_process'))

},{"./ReactInstanceMap":86,"./ReactInstrumentation":87,"./ReactUpdates":102,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23,"react/lib/ReactCurrentOwner":159}],102:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactReconciler = require('./ReactReconciler');
var Transaction = require('./Transaction');

var invariant = require('fbjs/lib/invariant');

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
}).call(this,require('_process'))

},{"./CallbackQueue":31,"./PooledClass":49,"./ReactFeatureFlags":81,"./ReactReconciler":97,"./Transaction":120,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"object-assign":24}],103:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

module.exports = '15.4.2';
},{}],104:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;
},{}],105:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInputSelection = require('./ReactInputSelection');
var SyntheticEvent = require('./SyntheticEvent');

var getActiveElement = require('fbjs/lib/getActiveElement');
var isTextInputElement = require('./isTextInputElement');
var shallowEqual = require('fbjs/lib/shallowEqual');

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === 'onSelect') {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;
},{"./EventPropagators":44,"./ReactDOMComponentTree":58,"./ReactInputSelection":85,"./SyntheticEvent":111,"./isTextInputElement":143,"fbjs/lib/ExecutionEnvironment":2,"fbjs/lib/getActiveElement":11,"fbjs/lib/shallowEqual":22}],106:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventListener = require('fbjs/lib/EventListener');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticAnimationEvent = require('./SyntheticAnimationEvent');
var SyntheticClipboardEvent = require('./SyntheticClipboardEvent');
var SyntheticEvent = require('./SyntheticEvent');
var SyntheticFocusEvent = require('./SyntheticFocusEvent');
var SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');
var SyntheticDragEvent = require('./SyntheticDragEvent');
var SyntheticTouchEvent = require('./SyntheticTouchEvent');
var SyntheticTransitionEvent = require('./SyntheticTransitionEvent');
var SyntheticUIEvent = require('./SyntheticUIEvent');
var SyntheticWheelEvent = require('./SyntheticWheelEvent');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getEventCharCode = require('./getEventCharCode');
var invariant = require('fbjs/lib/invariant');

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

var onClickListeners = {};

function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topAbort':
      case 'topCanPlay':
      case 'topCanPlayThrough':
      case 'topDurationChange':
      case 'topEmptied':
      case 'topEncrypted':
      case 'topEnded':
      case 'topError':
      case 'topInput':
      case 'topInvalid':
      case 'topLoad':
      case 'topLoadedData':
      case 'topLoadedMetadata':
      case 'topLoadStart':
      case 'topPause':
      case 'topPlay':
      case 'topPlaying':
      case 'topProgress':
      case 'topRateChange':
      case 'topReset':
      case 'topSeeked':
      case 'topSeeking':
      case 'topStalled':
      case 'topSubmit':
      case 'topSuspend':
      case 'topTimeUpdate':
      case 'topVolumeChange':
      case 'topWaiting':
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }

};

module.exports = SimpleEventPlugin;
}).call(this,require('_process'))

},{"./EventPropagators":44,"./ReactDOMComponentTree":58,"./SyntheticAnimationEvent":107,"./SyntheticClipboardEvent":108,"./SyntheticDragEvent":110,"./SyntheticEvent":111,"./SyntheticFocusEvent":112,"./SyntheticKeyboardEvent":114,"./SyntheticMouseEvent":115,"./SyntheticTouchEvent":116,"./SyntheticTransitionEvent":117,"./SyntheticUIEvent":118,"./SyntheticWheelEvent":119,"./getEventCharCode":131,"./reactProdInvariant":145,"_process":25,"fbjs/lib/EventListener":1,"fbjs/lib/emptyFunction":8,"fbjs/lib/invariant":16}],107:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;
},{"./SyntheticEvent":111}],108:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;
},{"./SyntheticEvent":111}],109:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;
},{"./SyntheticEvent":111}],110:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;
},{"./SyntheticMouseEvent":115}],111:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (process.env.NODE_ENV !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (process.env.NODE_ENV !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {

  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      // eslint-disable-line valid-typeof
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // eslint-disable-line valid-typeof
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (process.env.NODE_ENV !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (process.env.NODE_ENV !== 'production') {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }

});

SyntheticEvent.Interface = EventInterface;

if (process.env.NODE_ENV !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
}).call(this,require('_process'))

},{"./PooledClass":49,"_process":25,"fbjs/lib/emptyFunction":8,"fbjs/lib/warning":23,"object-assign":24}],112:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;
},{"./SyntheticUIEvent":118}],113:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;
},{"./SyntheticEvent":111}],114:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventCharCode = require('./getEventCharCode');
var getEventKey = require('./getEventKey');
var getEventModifierState = require('./getEventModifierState');

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;
},{"./SyntheticUIEvent":118,"./getEventCharCode":131,"./getEventKey":132,"./getEventModifierState":133}],115:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');
var ViewportMetrics = require('./ViewportMetrics');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;
},{"./SyntheticUIEvent":118,"./ViewportMetrics":121,"./getEventModifierState":133}],116:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;
},{"./SyntheticUIEvent":118,"./getEventModifierState":133}],117:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;
},{"./SyntheticEvent":111}],118:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;
},{"./SyntheticEvent":111,"./getEventTarget":134}],119:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX :
    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY :
    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY :
    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;
},{"./SyntheticMouseEvent":115}],120:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var OBSERVED_ERROR = {};

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var TransactionImpl = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;
}).call(this,require('_process'))

},{"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],121:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;
},{}],122:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
}).call(this,require('_process'))

},{"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16}],123:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;
},{}],124:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,require('_process'))

},{"./ReactPropTypeLocationNames":94,"./ReactPropTypesSecret":95,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23,"react/lib/ReactComponentTreeHook":158}],125:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals MSApp */

'use strict';

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;
},{}],126:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var warning = require('fbjs/lib/warning');

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if (process.env.NODE_ENV !== 'production') {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
}).call(this,require('_process'))

},{"./CSSProperty":29,"_process":25,"fbjs/lib/warning":23}],127:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

'use strict';

// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html


/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;
},{}],128:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstanceMap = require('./ReactInstanceMap');

var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if (process.env.NODE_ENV !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;
}).call(this,require('_process'))

},{"./ReactDOMComponentTree":58,"./ReactInstanceMap":86,"./getHostComponentFromComposite":135,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23,"react/lib/ReactCurrentOwner":159}],129:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var KeyEscapeUtils = require('./KeyEscapeUtils');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if (process.env.NODE_ENV !== 'production') {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
      }
      if (!keyUnique) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if (process.env.NODE_ENV !== 'production') {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
}).call(this,require('_process'))

},{"./KeyEscapeUtils":47,"./traverseAllChildren":150,"_process":25,"fbjs/lib/warning":23,"react/lib/ReactComponentTreeHook":158}],130:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;
},{}],131:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;
},{}],132:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var getEventCharCode = require('./getEventCharCode');

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;
},{"./getEventCharCode":131}],133:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;
},{}],134:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;
},{}],135:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactNodeTypes = require('./ReactNodeTypes');

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;
},{"./ReactNodeTypes":92}],136:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
},{}],137:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;
},{}],138:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;
},{}],139:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;
},{"fbjs/lib/ExecutionEnvironment":2}],140:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;
},{"fbjs/lib/ExecutionEnvironment":2}],141:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactCompositeComponent = require('./ReactCompositeComponent');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactHostComponent = require('./ReactHostComponent');

var getNextDebugID = require('./getNextDebugID');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};
_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if (process.env.NODE_ENV !== 'production') {
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
    }

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if (process.env.NODE_ENV !== 'production') {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if (process.env.NODE_ENV !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

module.exports = instantiateReactComponent;
}).call(this,require('_process'))

},{"./ReactCompositeComponent":54,"./ReactEmptyComponent":77,"./ReactHostComponent":82,"./getNextDebugID":137,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23,"object-assign":24}],142:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;
},{"fbjs/lib/ExecutionEnvironment":2}],143:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;
},{}],144:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;
},{"./escapeTextContentForBrowser":127}],145:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;
},{}],146:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactMount = require('./ReactMount');

module.exports = ReactMount.renderSubtreeIntoContainer;
},{"./ReactMount":90}],147:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var DOMNamespaces = require('./DOMNamespaces');

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xFEFF) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;
},{"./DOMNamespaces":35,"./createMicrosoftUnsafeLocalFunction":125,"fbjs/lib/ExecutionEnvironment":2}],148:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var setInnerHTML = require('./setInnerHTML');

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      if (node.nodeType === 3) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;
},{"./escapeTextContentForBrowser":127,"./setInnerHTML":147,"fbjs/lib/ExecutionEnvironment":2}],149:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;
},{}],150:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}).call(this,require('_process'))

},{"./KeyEscapeUtils":47,"./ReactElementSymbol":76,"./getIteratorFn":136,"./reactProdInvariant":145,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23,"react/lib/ReactCurrentOwner":159}],151:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var validateDOMNesting = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':

      case 'pre':
      case 'listing':

      case 'table':

      case 'hr':

      case 'xmp':

      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      var whitespaceInfo = '';
      if (childTag === '#text') {
        if (/\S/.test(childText)) {
          tagDisplayName = 'Text nodes';
        } else {
          tagDisplayName = 'Whitespace text nodes';
          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
        }
      } else {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
}).call(this,require('_process'))

},{"_process":25,"fbjs/lib/emptyFunction":8,"fbjs/lib/warning":23,"object-assign":24}],152:[function(require,module,exports){
arguments[4][47][0].apply(exports,arguments)
},{"dup":47}],153:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}).call(this,require('_process'))

},{"./reactProdInvariant":174,"_process":25,"fbjs/lib/invariant":16}],154:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactChildren = require('./ReactChildren');
var ReactComponent = require('./ReactComponent');
var ReactPureComponent = require('./ReactPureComponent');
var ReactClass = require('./ReactClass');
var ReactDOMFactories = require('./ReactDOMFactories');
var ReactElement = require('./ReactElement');
var ReactPropTypes = require('./ReactPropTypes');
var ReactVersion = require('./ReactVersion');

var onlyChild = require('./onlyChild');
var warning = require('fbjs/lib/warning');

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = require('./ReactElementValidator');
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if (process.env.NODE_ENV !== 'production') {
  var warned = false;
  __spread = function () {
    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,
  PureComponent: ReactPureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function (mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

module.exports = React;
}).call(this,require('_process'))

},{"./ReactChildren":155,"./ReactClass":156,"./ReactComponent":157,"./ReactDOMFactories":160,"./ReactElement":161,"./ReactElementValidator":163,"./ReactPropTypes":166,"./ReactPureComponent":168,"./ReactVersion":169,"./onlyChild":173,"_process":25,"fbjs/lib/warning":23,"object-assign":24}],155:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var PooledClass = require('./PooledClass');
var ReactElement = require('./ReactElement');

var emptyFunction = require('fbjs/lib/emptyFunction');
var traverseAllChildren = require('./traverseAllChildren');

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
},{"./PooledClass":153,"./ReactElement":161,"./traverseAllChildren":175,"fbjs/lib/emptyFunction":8}],156:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactComponent = require('./ReactComponent');
var ReactElement = require('./ReactElement');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

/**
 * Policies that describe methods in `ReactClassInterface`.
 */


var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or host components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will be available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: 'DEFINE_MANY',

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: 'DEFINE_MANY',

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: 'DEFINE_MANY',

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: 'DEFINE_MANY',

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: 'DEFINE_MANY',

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: 'DEFINE_MANY_MERGED',

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: 'DEFINE_MANY_MERGED',

  /**
   * @return {object}
   * @optional
   */
  getChildContext: 'DEFINE_MANY_MERGED',

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: 'DEFINE_ONCE',

  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: 'DEFINE_MANY',

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: 'DEFINE_MANY',

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: 'DEFINE_MANY',

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: 'DEFINE_ONCE',

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: 'DEFINE_MANY',

  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: 'OVERRIDE_BASE'

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function (Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function (Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function (Constructor, childContextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, childContextTypes, 'childContext');
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
  },
  contextTypes: function (Constructor, contextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, contextTypes, 'context');
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function (Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function (Constructor, propTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, propTypes, 'prop');
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
  },
  statics: function (Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  },
  autobind: function () {} };

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but only in __DEV__
      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (isAlreadyDefined) {
    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classes.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    if (process.env.NODE_ENV !== 'production') {
      var typeofSpec = typeof spec;
      var isMixinValid = typeofSpec === 'object' && spec !== null;

      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
    }

    return;
  }

  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above.
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride.
          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === 'DEFINE_MANY_MERGED') {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === 'DEFINE_MANY') {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if (process.env.NODE_ENV !== 'production') {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if (process.env.NODE_ENV !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function (newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function () {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function () {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function (spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function (mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;
}).call(this,require('_process'))

},{"./ReactComponent":157,"./ReactElement":161,"./ReactNoopUpdateQueue":164,"./ReactPropTypeLocationNames":165,"./reactProdInvariant":174,"_process":25,"fbjs/lib/emptyObject":9,"fbjs/lib/invariant":16,"fbjs/lib/warning":23,"object-assign":24}],157:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var canDefineProperty = require('./canDefineProperty');
var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (process.env.NODE_ENV !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;
}).call(this,require('_process'))

},{"./ReactNoopUpdateQueue":164,"./canDefineProperty":170,"./reactProdInvariant":174,"_process":25,"fbjs/lib/emptyObject":9,"fbjs/lib/invariant":16,"fbjs/lib/warning":23}],158:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty)
  // Strip regex characters so we can use it for regex
  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  // Remove hasOwnProperty from the template to make it generic
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs
};

module.exports = ReactComponentTreeHook;
}).call(this,require('_process'))

},{"./ReactCurrentOwner":159,"./reactProdInvariant":174,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23}],159:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;
},{}],160:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactElement = require('./ReactElement');

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = require('./ReactElementValidator');
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
}).call(this,require('_process'))

},{"./ReactElement":161,"./ReactElementValidator":163,"_process":25}],161:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var warning = require('fbjs/lib/warning');
var canDefineProperty = require('./canDefineProperty');
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (process.env.NODE_ENV !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if (process.env.NODE_ENV !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
}).call(this,require('_process'))

},{"./ReactCurrentOwner":159,"./ReactElementSymbol":162,"./canDefineProperty":170,"_process":25,"fbjs/lib/warning":23,"object-assign":24}],162:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"dup":76}],163:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactComponentTreeHook = require('./ReactComponentTreeHook');
var ReactElement = require('./ReactElement');

var checkReactTypeSpec = require('./checkReactTypeSpec');

var canDefineProperty = require('./canDefineProperty');
var getIteratorFn = require('./getIteratorFn');
var warning = require('fbjs/lib/warning');

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {

  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }
        info += getDeclarationErrorAddendum();
        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if (process.env.NODE_ENV !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;
}).call(this,require('_process'))

},{"./ReactComponentTreeHook":158,"./ReactCurrentOwner":159,"./ReactElement":161,"./canDefineProperty":170,"./checkReactTypeSpec":171,"./getIteratorFn":172,"_process":25,"fbjs/lib/warning":23}],164:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
}).call(this,require('_process'))

},{"_process":25,"fbjs/lib/warning":23}],165:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
}).call(this,require('_process'))

},{"_process":25}],166:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactElement = require('./ReactElement');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getIteratorFn = require('./getIteratorFn');
var warning = require('fbjs/lib/warning');

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),
  symbol: createPrimitiveTypeChecker('symbol'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: createElementTypeChecker(),
  instanceOf: createInstanceTypeChecker,
  node: createNodeChecker(),
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
/*eslint-disable no-self-compare*/
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}
/*eslint-enable no-self-compare*/

/**
 * We use an Error-like object for backward compatibility as people may call
 * PropTypes directly and inspect their output. However we don't use real
 * Errors anymore. We don't inspect their stack anyway, and creating them
 * is prohibitively expensive if they are created too often, such as what
 * happens in oneOfType() for any type before the one that matched.
 */
function PropTypeError(message) {
  this.message = message;
  this.stack = '';
}
// Make `instanceof Error` still work for returned errors.
PropTypeError.prototype = Error.prototype;

function createChainableTypeChecker(validate) {
  if (process.env.NODE_ENV !== 'production') {
    var manualPropTypeCallCache = {};
  }
  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
    componentName = componentName || ANONYMOUS;
    propFullName = propFullName || propName;
    if (process.env.NODE_ENV !== 'production') {
      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
        var cacheKey = componentName + ':' + propName;
        if (!manualPropTypeCallCache[cacheKey]) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
          manualPropTypeCallCache[cacheKey] = true;
        }
      }
    }
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        if (props[propName] === null) {
          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
        }
        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
      }
      return null;
    } else {
      return validate(props, propName, componentName, location, propFullName);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location, propFullName, secret) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns(null));
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
    }
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    if (!ReactElement.isValidElement(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location, propFullName) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      var actualClassName = getClassName(props[propName]);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  if (!Array.isArray(expectedValues)) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (is(propValue, expectedValues[i])) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
    }
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  if (!Array.isArray(arrayOfTypeCheckers)) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }

      var iteratorFn = getIteratorFn(propValue);
      if (iteratorFn) {
        var iterator = iteratorFn.call(propValue);
        var step;
        if (iteratorFn !== propValue.entries) {
          while (!(step = iterator.next()).done) {
            if (!isNode(step.value)) {
              return false;
            }
          }
        } else {
          // Iterator will provide entry [k,v] tuples rather than values.
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              if (!isNode(entry[1])) {
                return false;
              }
            }
          }
        }
      } else {
        return false;
      }

      return true;
    default:
      return false;
  }
}

function isSymbol(propType, propValue) {
  // Native Symbol.
  if (propType === 'symbol') {
    return true;
  }

  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
  if (propValue['@@toStringTag'] === 'Symbol') {
    return true;
  }

  // Fallback for non-spec compliant Symbols which are polyfilled.
  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
    return true;
  }

  return false;
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  if (isSymbol(propType, propValue)) {
    return 'symbol';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

// Returns class name of the object, if any.
function getClassName(propValue) {
  if (!propValue.constructor || !propValue.constructor.name) {
    return ANONYMOUS;
  }
  return propValue.constructor.name;
}

module.exports = ReactPropTypes;
}).call(this,require('_process'))

},{"./ReactElement":161,"./ReactPropTypeLocationNames":165,"./ReactPropTypesSecret":167,"./getIteratorFn":172,"_process":25,"fbjs/lib/emptyFunction":8,"fbjs/lib/warning":23}],167:[function(require,module,exports){
arguments[4][95][0].apply(exports,arguments)
},{"dup":95}],168:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactComponent = require('./ReactComponent');
var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = ReactPureComponent;
},{"./ReactComponent":157,"./ReactNoopUpdateQueue":164,"fbjs/lib/emptyObject":9,"object-assign":24}],169:[function(require,module,exports){
arguments[4][103][0].apply(exports,arguments)
},{"dup":103}],170:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var canDefineProperty = false;
if (process.env.NODE_ENV !== 'production') {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
}).call(this,require('_process'))

},{"_process":25}],171:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('./ReactComponentTreeHook');
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require('./ReactComponentTreeHook');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,require('_process'))

},{"./ReactComponentTreeHook":158,"./ReactPropTypeLocationNames":165,"./ReactPropTypesSecret":167,"./reactProdInvariant":174,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23}],172:[function(require,module,exports){
arguments[4][136][0].apply(exports,arguments)
},{"dup":136}],173:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
}).call(this,require('_process'))

},{"./ReactElement":161,"./reactProdInvariant":174,"_process":25,"fbjs/lib/invariant":16}],174:[function(require,module,exports){
arguments[4][145][0].apply(exports,arguments)
},{"dup":145}],175:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}).call(this,require('_process'))

},{"./KeyEscapeUtils":152,"./ReactCurrentOwner":159,"./ReactElementSymbol":162,"./getIteratorFn":172,"./reactProdInvariant":174,"_process":25,"fbjs/lib/invariant":16,"fbjs/lib/warning":23}],"classnames":[function(require,module,exports){
/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
		// register as 'classnames', consistent with npm package name
		define('classnames', [], function () {
			return classNames;
		});
	} else {
		window.classNames = classNames;
	}
}());

},{}],"fusioncharts":[function(require,module,exports){
/*
 FusionCharts JavaScript Library
 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>

 @version 3.12.0
 FusionCharts JavaScript Library
 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>

 @version 3.12.0
 FusionCharts JavaScript Library
 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>
 FusionCharts JavaScript Library - KDtree
 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>

 @version 3.12.0
*/
(function(sb,Nb){"object"===typeof module&&module.exports?module.exports=sb.document?Nb(sb):function(N){if(!N.document)throw Error("Window with document not present");return Nb(N,!0)}:sb.FusionCharts=Nb(sb,!0)})("undefined"!==typeof window?window:this,function(sb,Nb){"undefined"===typeof sb&&"object"===typeof window&&(sb=window);var N=function(b){if(b.FusionCharts&&b.FusionCharts.version)return b.FusionCharts;var z=b.document,G=b.navigator,v={window:b},F=v.modules={},E=v.interpreters={},t=Object.prototype.toString,
a=/msie/i.test(G.userAgent)&&!b.opera,Q=/loaded|complete/,r=!1,P=function(){var a=v.ready;v.ready=!0;v.raiseEvent&&(v.readyNotified=!0,v.raiseEvent("ready",{version:v.core.version,now:!a},v.core));v.readyNow=!a},T=function(a,b){var B,m;if(b instanceof Array)for(B=0;B<b.length;B+=1)"object"!==typeof b[B]?a[B]=b[B]:("object"!==typeof a[B]&&(a[B]=b[B]instanceof Array?[]:{}),T(a[B],b[B]));else for(B in b)"object"===typeof b[B]?(m=t.call(b[B]),"[object Object]"===m?("object"!==typeof a[B]&&(a[B]={}),T(a[B],
b[B])):"[object Array]"===m?(a[B]instanceof Array||(a[B]=[]),T(a[B],b[B])):a[B]=b[B]):a[B]=b[B];return a};v.extend=function(a,b,B,m){var p;B&&a.prototype&&(a=a.prototype);if(!0===m)T(a,b);else for(p in b)a[p]=b[p];return a};v.uniqueId=function(){return"chartobject-"+(v.uniqueId.lastId+=1)};v.uniqueId.lastId=0;v.policies={options:{chartTypeSourcePath:["typeSourcePath",""],product:["product","v3"],insertMode:["insertMode","replace"],safeMode:["safeMode",!0],overlayButton:["overlayButton",void 0],containerBackgroundColor:["containerBackgroundColor",
"#ffffff"],containerBackgroundOpacity:["containerBackgroundOpacity",1],containerClassName:["containerClassName","fusioncharts-container"],chartType:["type",void 0],baseChartMessageFont:["baseChartMessageFont","Verdana,sans"],baseChartMessageFontSize:["baseChartMessageFontSize","10"],baseChartMessageColor:["baseChartMessageColor","#666666"],baseChartMessageImageHAlign:["baseChartMessageImageHAlign","middle"],baseChartMessageImageVAlign:["baseChartMessageImageVAlign","middle"],baseChartMessageImageAlpha:["baseChartMessageImageAlpha",
100],baseChartMessageImageScale:["baseChartMessageImageScale",100],dataLoadStartMessage:["dataLoadStartMessage","Retrieving data. Please wait."],dataLoadErrorMessage:["dataLoadErrorMessage","Error in loading data."],dataInvalidMessage:["dataInvalidMessage","Invalid data."],dataEmptyMessage:["dataEmptyMessage","No data to display."],typeNotSupportedMessage:["typeNotSupportedMessage","Chart type not supported."],browserNotSupportedMessage:["browserNotSupportedMessage","This browser is not supported."],
loadMessage:["loadMessage","Loading chart. Please wait."],renderErrorMessage:["renderErrorMessage","Unable to render chart."]},attributes:{lang:["lang","EN"],id:["id",void 0]},width:["width","400"],height:["height","300"],src:["swfUrl",""]};E.stat="swfUrl id width height debugMode registerWithJS backgroundColor scaleMode lang detectFlashVersion autoInstallRedirect".split(" ");v.parsePolicies=function(a,b,B){var m,p,q;for(p in b)if(v.policies[p]instanceof Array)q=B[b[p][0]],a[p]=void 0===q?b[p][1]:
q;else for(m in"object"!==typeof a[p]&&(a[p]={}),b[p])q=B[b[p][m][0]],a[p][m]=void 0===q?b[p][m][1]:q};v.parseCommands=function(a,b,B){var m,p;"string"===typeof b&&(b=E[b]||[]);m=0;for(p=b.length;m<p;m++)a[b[m]]=B[m];return a};v.registrars={module:function(){return v.core.apply(v.core,arguments)}};v.core=function(a){if(!(this instanceof v.core)){if(1===arguments.length&&a instanceof Array&&"private"===a[0]){if(F[a[1]])return;F[a[1]]={};a[3]instanceof Array&&(v.core.version[a[1]]=a[3]);return"function"===
typeof a[2]?a[2].call(v,F[a[1]]):v}if(1===arguments.length&&"string"===typeof a)return v.core.items[a];v.raiseError&&v.raiseError(this,"25081840","run","",new SyntaxError('Use the "new" keyword while creating a new FusionCharts object'))}var b={};this.__state={};1===arguments.length&&"object"===typeof arguments[0]?b=arguments[0]:v.parseCommands(b,E.stat,arguments);1<arguments.length&&"object"===typeof arguments[arguments.length-1]&&(delete b[E.stat[arguments.length-1]],v.extend(b,arguments[arguments.length-
1]));this.id="undefined"===typeof b.id?this.id=v.uniqueId():b.id;this.args=b;v.core.items[this.id]instanceof v.core&&v.raiseWarning(this,"06091847","param","",Error('A FusionCharts object with the specified id "'+this.id+'" already exists. Renaming it to '+(this.id=v.uniqueId())));v.parsePolicies(this,v.policies,b);this.attributes.id=this.id;this.resizeTo&&this.resizeTo(b.width,b.height,!0);this.chartType&&this.chartType(b.type||b.swfUrl,!0);v.raiseEvent("beforeInitialize",b,this);v.core.items[this.id]=
this;v.core.defaultOptions=v.core.options;v.raiseEvent("initialized",b,this);return this};v.core.prototype={};v.core.prototype.constructor=v.core;v.extend(v.core,{id:"FusionCharts",version:["3","12","0"],items:{},options:{},getObjectReference:function(a){return v.core.items[a].ref},register:function(a){return v.registrars[a=a&&a.toString&&a.toString().toLowerCase()]&&v.registrars[a].apply(v.core,Array.prototype.slice.call(arguments,1))},get:function(a){return v.registrars[a=a&&a.toString&&a.toString().toLowerCase()]&&
v.registrars[a].apply(v.core,Array.prototype.slice.call(arguments,1))}});b.FusionCharts=v.core;b.FusionMaps&&b.FusionMaps.legacy&&(v.core(["private","modules.core.geo",b.FusionMaps.legacy,b.FusionMaps.version]),r=!0);Q.test(z.readyState)||z.loaded?(v.ready=!0,setTimeout(P,1)):function(){function L(){p||(p=!0,B&&clearTimeout(B),r||(b.FusionMaps&&b.FusionMaps.legacy&&v.core(["private","modules.core.geo",b.FusionMaps.legacy,b.FusionMaps.version]),b.FusionMaps=v.core),setTimeout(P,1))}function D(){Q.test(z.readyState)?
L():B=setTimeout(D,10)}var B,m,p;z.addEventListener?z.addEventListener("DOMContentLoaded",L,!1):z.attachEvent&&b.attachEvent("onLoad",L);if(a)try{"https:"===b.location.protocol?z.write('<script id="__ie_onload_fusioncharts" defer="defer" src="//:">\x3c/script>'):z.write('<script id="__ie_onload_fusioncharts" defer="defer" src="javascript:void(0)">\x3c/script>'),m=z.getElementById("__ie_onload_fusioncharts"),m.onreadystatechange=function(){"complete"==this.readyState&&L()}}catch(q){}/WebKit/i.test(G.userAgent)&&
(B=setTimeout(D,10));b.onload=function(a){return function(){L();a&&a.call&&a.call(b)}}(b.onload)}();return b.FusionMaps=v.core}(sb);N.register("module",["private","modules.mantle.errormanager",function(){var b=this,z=b.window,G={type:"TypeException",range:"ValueRangeException",impl:"NotImplementedException",param:"ParameterException",run:"RuntimeException",comp:"DesignTimeError",undefined:"UnspecifiedException"},v=function(E,t,a,Q,r,P){var T="#"+t+" "+(E?E.id:"unknown-source")+Q+" "+P+" >> ";r instanceof
Error?(r.name=G[a],r.module="FusionCharts"+Q,r.level=P,r.message=T+r.message,T=r.message,z.setTimeout(function(){throw r;},0)):T+=r;t={id:t,nature:G[a],source:"FusionCharts"+Q,message:T};b.raiseEvent(P,t,E);if("function"===typeof z["FC_"+P])z["FC_"+P](t)},F;b.raiseError=function(b,t,a,Q,r){v(b,t,a,Q,r,"Error")};b.raiseWarning=function(b,t,a,Q,r){v(b,t,a,Q,r,"Warning")};F={outputHelpers:{text:function(b,t){F.outputTo("#"+b.eventId+" ["+(b.sender.id||b.sender).toString()+'] fired "'+b.eventType+'" event. '+
("error"===b.eventType||"warning"===b.eventType?t.message:""))},event:function(b,t){this.outputTo(b,t)},verbose:function(b,t){F.outputTo(b.eventId,b.sender.id,b.eventType,t)}},outputHandler:function(v,t){"function"!==typeof F.outputTo?b.core["debugger"].outputFailed=!0:(b.core["debugger"].outputFailed=!1,F.currentOutputHelper(v,t))},currentOutputHelper:void 0,outputTo:void 0,enabled:!1};F.currentOutputHelper=F.outputHelpers.text;b.extend(b.core,{"debugger":{syncStateWithCharts:!0,outputFormat:function(b){return b&&
"function"===typeof b.toLowerCase&&"function"===typeof F.outputHelpers[b=b.toLowerCase()]?(F.currentOutputHelper=F.outputHelpers[b],!0):!1},outputTo:function(v){"function"===typeof v?F.outputTo=v:null===v&&(b.core["debugger"].enable(!1),delete F.outputTo)},enable:function(v,t,a){var Q;"object"===typeof v&&1===arguments.length&&(Q=v,v=Q.state,t=Q.outputTo,a=Q.outputFormat);"function"===typeof v&&("string"!==typeof t||2!==arguments.length&&!Q||(a=t),t=v,v=!0);if("boolean"===typeof v&&v!==F.enabled)b.core[(F.enabled=
v)?"addEventListener":"removeEventListener"]("*",F.outputHandler);"function"===typeof t&&(F.outputTo=t);b.core["debugger"].outputFormat(a);return F.enabled},enableFirebugLite:function(){var v;z.console&&z.console.firebug?b.core["debugger"].enable(z.console.log,"verbose"):((v=z.document.getElementsByTagName("html"))&&v[0].setAttribute("debug","true"),b.loadScript("https://getfirebug.com/firebug-lite.js#overrideConsole=false,startOpened=true",function(){b.core["debugger"].enable(z.console.log,"verbose")},
"{ startOpened: true }",!0,!0))}},debugMode:{enabled:function(){z.setTimeout(function(){throw Error("Deprecated! Please use FusionCharts.debugger.enable instead.");},0);return b.core["debugger"].enable.apply(b.core["debugger"],arguments)}}},!1)}]);N.register("module",["private","modules.mantle.eventmanager",function(){var b=this,z=b.window,G=b.core,v=Object.prototype.toString,F=v.call([]),E=function(a,b,r,B){try{a[0].call(b,r,B||{})}catch(m){setTimeout(function(){throw m;},0)}},t=function(a,r,D){if(a instanceof
Array)for(var B=0,m;B<a.length;B+=1){if(a[B][1]===r.sender||void 0===a[B][1])m=a[B][1]===r.sender?r.sender:b.core,E(a[B],m,r,D),!0===r.detached&&(a.splice(B,1),--B,r.detached=!1);if(!0===r.cancelled)break}},a={unpropagator:function(){return!1===(this.cancelled=!0)},detacher:function(){return!1===(this.detached=!0)},undefaulter:function(){return!1===(this.prevented=!0)},listeners:{},lastEventId:0,addListener:function(r,L,D){var B,m;if(v.call(r)===F){B=[];for(m=0;m<r.length;m+=1)B.push(a.addListener(r[m],
L,D));return B}if("string"!==typeof r)b.raiseError(D||b.core,"03091549","param","::EventTarget.addListener",Error("Unspecified Event Type"));else if("function"!==typeof L)b.raiseError(D||b.core,"03091550","param","::EventTarget.addListener",Error("Invalid Event Listener"));else return r=r.toLowerCase(),a.listeners[r]instanceof Array||(a.listeners[r]=[]),a.listeners[r].push([L,D]),L},removeListener:function(r,L,D){var B;if("function"!==typeof L)b.raiseError(D||b.core,"03091560","param","::EventTarget.removeListener",
Error("Invalid Event Listener"));else if(r instanceof Array)for(B=0;B<r.length;B+=1)a.removeListener(r[B],L,D);else if("string"!==typeof r)b.raiseError(D||b.core,"03091559","param","::EventTarget.removeListener",Error("Unspecified Event Type"));else if(r=r.toLowerCase(),r=a.listeners[r],r instanceof Array)for(B=0;B<r.length;B+=1)r[B][0]===L&&r[B][1]===D&&(r.splice(B,1),--B)},triggerEvent:function(r,L,D,B,m,p){if("string"!==typeof r)b.raiseError(L,"03091602","param","::EventTarget.dispatchEvent",Error("Invalid Event Type"));
else{r=r.toLowerCase();var q={eventType:r,eventId:a.lastEventId+=1,sender:L||Error("Orphan Event"),cancelled:!1,stopPropagation:this.unpropagator,prevented:!1,preventDefault:this.undefaulter,detached:!1,detachHandler:this.detacher};t(a.listeners[r],q,D);t(a.listeners["*"],q,D);switch(q.prevented){case !0:if("function"===typeof p)try{p.call(B||L||z,q,D||{})}catch(A){setTimeout(function(){throw A;},0)}break;default:if("function"===typeof m)try{m.call(B||L||z,q,D||{})}catch(A){setTimeout(function(){throw A;
},0)}}return!0}}},Q=b.raiseEvent=function(b,r,D,B,m,p){return a.triggerEvent(b,D,r,B,m,p)},r=b.legacyEventList={},P={};b.disposeEvents=function(b){var r,D;for(r in a.listeners)for(D=0;D<a.listeners[r].length;D+=1)a.listeners[r][D][1]===b&&a.listeners[r].splice(D,1)};b.raiseEventWithLegacy=function(a,b,D,B,m,p,q){var A=r[a];Q(a,b,D,m,p,q);A&&"function"===typeof z[A]&&setTimeout(function(){z[A].apply(m||z,B)},0)};b.raiseEventGroup=function(a,b,r,B,m,p,q){var A=B.id,n=a+A;P[n]?(clearTimeout(P[n]),delete P[n]):
A&&n?P[n]=setTimeout(function(){Q(b,r,B,m,p,q);delete P[n]},0):Q(b,r,B,m,p,q)};b.addEventListener=function(b,r){return a.addListener(b,r)};b.removeEventListener=function(b,r){return a.removeListener(b,r)};b.extend(G,{addEventListener:function(b,r){return a.addListener(b,r)},removeEventListener:function(b,r){return a.removeListener(b,r)},ready:function(a,r,D){b.ready?(G.ready=function(a,m){"function"===typeof a&&setTimeout(function(){a.call(m||G,r||G)},0)},G.ready(a,D)):"function"===typeof a&&G.addEventListener("ready",
function(){G.ready(a,r,D)});return this}});G.on=G.addEventListener;b.extend(G.prototype,{addEventListener:function(b,r){return a.addListener(b,r,this)},removeEventListener:function(b,r){return a.removeListener(b,r,this)}});G.prototype.on=G.prototype.addEventListener;b.policies.options.events=["events",{}];b.addEventListener("beforeInitialize",function(a){a=a.sender;var b=a.options.events,r;if(b)for(r in b)"function"===typeof b[r]&&a.addEventListener(r,b[r])});b.ready&&!b.readyNotified&&(b.readyNotified=
!0,b.raiseEvent("ready",{version:b.core.version,now:b.readyNow},b.core))}]);N.register("module",["private","modules.mantle.ajax",function(){var b=this,z=b.window,G=parseFloat(z.navigator.appVersion.split("MSIE")[1]),v=5.5<=G&&7>=G?!0:!1,F=/mozilla/i.test(z.navigator.userAgent),E="file:"===z.location.protocol,t=z.ActiveXObject,a=(!t||!E)&&z.XMLHttpRequest,Q={objects:0,xhr:0,requests:0,success:0,failure:0,idle:0},r=function(){var b;if(a)return r=function(){Q.xhr++;return new a},r();try{b=new t("Msxml2.XMLHTTP"),
r=function(){Q.xhr++;return new t("Msxml2.XMLHTTP")}}catch(v){try{b=new t("Microsoft.XMLHTTP"),r=function(){Q.xhr++;return new t("Microsoft.XMLHTTP")}}catch(L){b=!1}}return b};b.core.ajax={stats:function(a){return a?Q[a]:b.extend({},Q)},headers:{"If-Modified-Since":"Sat, 29 Oct 1994 19:43:31 GMT","X-Requested-With":"XMLHttpRequest","X-Requested-By":"FusionCharts",Accept:"text/plain, */*","Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}};G=b.ajax=function(a,b){this.onSuccess=a;this.onError=
b;this.open=!1;Q.objects++;Q.idle++};b.extend(G.prototype,{headers:b.core.ajax.headers,transact:function(a,t,L,D){var B=this,m=B.xmlhttp,p=B.headers,q=B.onError,A=B.onSuccess;a="POST"===a;var n,k=Object.prototype.hasOwnProperty,g;-1!==t.search(/^(http:\/\/|https:\/\/)/)&&z.location.hostname!==/(http:\/\/|https:\/\/)([^\/\:]*)/.exec(t)[2]?delete p["X-Requested-By"]:!k.call(p,"X-Requested-By")&&(p["X-Requested-By"]="FusionCharts");if(!m||v||F)m=r(),B.xmlhttp=m;m.onreadystatechange=function(){try{4===
m.readyState&&(!m.status&&E||200<=m.status&&300>m.status||304===m.status||1223===m.status||0===m.status?(A&&A(m.responseText,B,D,t),Q.success++):q&&(q(Error("XmlHttprequest Error"),B,D,t),Q.failure++),Q.idle--,B.open=!1)}catch(a){q&&q(a,B,D,t),z.FC_DEV_ENVIRONMENT&&setTimeout(function(){throw a;},0),Q.failure++}};try{m.open(a?"POST":"GET",t,!0);m.overrideMimeType&&m.overrideMimeType("text/plain");if(a)if("string"===typeof L)n=L;else{n=[];for(g in L)n.push(g+"="+(L[g]+"").replace(/\=/g,"%3D").replace(/\&/g,
"%26"));n=n.join("&")}else n=null;for(g in p)m.setRequestHeader(g,p[g]);m.send(n);Q.requests++;Q.idle++;B.open=!0}catch(f){b.raiseError(b.core,"1110111515A","run","XmlHttprequest Error",f.message)}return m},get:function(a,b){return this.transact("GET",a,void 0,b)},post:function(a,b,r){return this.transact("POST",a,b,r)},abort:function(){var a=this.xmlhttp;this.open=!1;return a&&"function"===typeof a.abort&&a.readyState&&0!==a.readyState&&a.abort()},dispose:function(){this.open&&this.abort();delete this.onError;
delete this.onSuccess;delete this.xmlhttp;delete this.open;Q.objects--;return null}})}]);N.register("module",["private","modules.mantle.runtime;1.1",function(){var b=this,z=b.window,G=/(^|[\/\\])(fusioncharts\.js)([\?#].*)?$/ig,v=/[\\\"<>;&]/,F=/^[^\S]*?(sf|f|ht)(tp|tps):\/\//i,E={},t={},a={},Q={},r=b.purgeDOM=function(a){var b=a.attributes,B,m;if(b)for(B=b.length-1;0<=B;--B)m=b[B].name,"function"===typeof a[m]&&(a[m]=null);if(b=a.childNodes)for(b=b.length,B=0;B<b;B+=1)r(a.childNodes[B])},P=function(a,
b,B){var m,p;for(m in a)if(a[m]instanceof Array)b[a[m][0]]=B[m];else for(p in a[m])b[a[m][p][0]]=B[m][p]},T=/^(FusionCharts|FusionWidgets|FusionMaps)/;b.getScriptBaseUri=function(a){var b=z.document.getElementsByTagName("script"),B=b.length,m,p;for(p=0;p<B;p+=1)if(m=b[p].getAttribute("src"),void 0!==m&&null!==m&&null!==m.match(a))return m.replace(a,"$1")};b.core.options.scriptBaseUri=function(){var a=b.getScriptBaseUri(G);return void 0===a?(b.raiseError(N,"1603111624","run",">GenericRuntime~scriptBaseUri",
"Unable to locate FusionCharts script source location (URL)."),""):a}();b.isXSSSafe=function(a,b){return b&&null!==F.exec(a)?!1:null===v.exec(a)};b.xssEncode=function(a){return null===a||void 0===a||"function"!==typeof a.toString?"":a=a.toString().replace(/&/g,"&amp;").replace(/\'/g,"&#39;").replace(/\"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;")};b.loadScript=function(r,D,B,m,p){if(!r)return!1;var q=D&&D.success||D,A=D&&D.failure,n,k=b.hcLib,g=k.priorityList,f=k.schedular.addJob,S={type:"script",
success:!1},C=function(){Q[n]=clearTimeout(Q[n]);S.success?q&&q(r,n):A&&A(r,n);b.raiseEvent("externalresourceload",S,b.core)};p=p?"":b.core.options.scriptBaseUri;n=p+r;b.isXSSSafe(n,!1)||(n="function"===typeof z.encodeURIComponent?z.encodeURIComponent(n):z.escape(n));S.path=p;S.src=n;S.file=r;if(!0===a[n]&&m)return S.success=!0,S.notReloaded=!0,"function"===typeof D&&(D(),b.raiseEvent("externalresourceload",S,b.core)),!0;if(E[n]&&m)return!1;E[n]=!0;t[n]&&t[n].parentNode&&t[n].parentNode.removeChild(t[n]);
D=t[n]=z.document.createElement("script");D.type="text/javascript";D.src=n;B&&(D["\v"==="v"?"text":"innerHTML"]=B);"function"===typeof q&&(a[n]=!1,Q[n]=clearTimeout(Q[n]),D.onload=function(){a[n]=!0;S.success=!0;f(C,void 0,void 0,g.render)},D.onerror=function(){a[n]=!1;E[n]=!1;f(C,void 0,void 0,g.render)},D.onreadystatechange=function(){if("complete"===this.readyState||"loaded"===this.readyState)a[n]=!0,S.success=!0,f(C,void 0,void 0,g.render)});z.document.getElementsByTagName("head")[0].appendChild(D);
"function"===typeof A&&(Q[n]=setTimeout(function(){a[n]||C()},b.core.options.html5ResourceLoadTimeout||15E3));return!0};b.capitalizeString=function(a,b){return a?a.replace(b?/(^|\s)([a-z])/g:/(^|\s)([a-z])/,function(a,m,b){return m+b.toUpperCase()}):a};b.extend(b.core,{clone:function(a,r){var B=typeof a,m,p=b.extend({},this.args,!1,!1);P(b.policies,p,this);P(b.renderer.getRendererPolicy(this.options.renderer),p,this);delete p.id;delete p.animate;delete p.stallLoad;m=p.link;p=b.extend({},p,!1,!1);
p.link=m;switch(B){case "object":b.extend(p,a);break;case "boolean":r=a}return r?p:new b.core(p)},isActive:function(){if(!this.ref||z.document.getElementById(this.id)!==this.ref)return!1;try{return T.test(this.ref.signature())}catch(a){return!1}},chartType:function(a,r){var B=this.src,m=!0===r,p=this.options,q;"string"===typeof a&&(r="object"===typeof r?r:{},B=a.replace(/[\?\#][\s\S]*$/g,""),q=null!==B.match(/\.swf\s*?$/ig),B=B.replace(/\.swf\s*?$/ig,""),p.chartType=B.replace(/^[\s\S]*\//ig,"").replace(/^fcmap_/i,
""),p.chartTypeSourcePath=-1===B.indexOf("/")?r.chartTypeSourcePath||this.options.chartTypeSourcePath||b.core.options.chartTypeSourcePath||"":B.replace(/[^\/]*?$/ig,""),this.src=((b.core.options.scriptBaseUri||"")+(p.chartTypeSourcePath||b.core.options.chartTypeSourcePath||"")).replace(/\/\s*$/g,"")+"/"+p.chartType.replace(/\.swf\s*?$/ig,"")+".swf",q&&(b.raiseWarning(this,"08101320181","comp","FusionCharts#chartType",'Chart type has ".swf" in alias and as such has been deprecated. Please use chart type alias.'),
p.chartTypeSourcePath=b.core.options.chartTypeSourcePath||""),void 0!==r.dataSource&&null!==r.dataSource?this.setChartData(r.dataSource,r.dataFormat,r.dataConfiguration):this.isActive()&&!m&&this.render());return(p.chartType||"").toLowerCase()}},!0);z.getChartFromId=function(a){b.raiseWarning(this,"11133001041","comp","GenericRuntime~getObjectFromId()",'Use of deprecated getChartFromId() or getMapFromId(). Replace with "FusionCharts()" or FusionCharts.items[].');return b.core.items[a]instanceof b.core?
b.core.items[a].ref:z.swfobject&&z.swfobject.getObjectById(a)};z.getMapFromId=z.getChartFromId}]);N.register("module",["private","api.printmanager",function(){var b=this;b.extend(b.core,{printManager:{configure:function(){b.raiseWarning(b.core,"28141714","impl",".printManager.configure","PrintManager is deprecated")},isReady:function(){b.raiseWarning(b.core,"28141714","impl",".printManager.isReady","PrintManager is deprecated");return!1},enabled:function(){b.raiseWarning(b.core,"28141714","impl",
".printManager.enabled","PrintManager is deprecated");return!1},managedPrint:function(){b.raiseWarning(b.core,"28141714","impl",".printManager.managedPrint","PrintManager is deprecated")}}},!1)}]);N.register("module",["private","modules.interface.renderer",function(){var b=this,z=b.window,G=z.document,v=function(){b.raiseError(this,"25081845","run","::RendererManager",Error("No active renderer"))},F=b.FusionChartsDOMInsertModes={REPLACE:"replace",APPEND:"append",PREPEND:"prepend"},E={undefined:{render:v,
remove:v,update:v,resize:v,config:v,policies:{}}},t={},a=function(a){return function(){var m=this.ref;if(void 0===m||null===m||"function"!==typeof m[a])b.raiseError(this,"25081617","run","#"+a+"()","ExternalInterface call failed. Check whether chart has been rendered.");else return m[a].apply(m,arguments)}},Q=function(a,m){return"function"===typeof a[m]?function(){return a[m].apply(a,arguments)}:a[m]},r=function(a,m){var b=G.getElementById(a),q=m.id||m.getAttribute("id"),A,n;if(null===b)return!1;
if(a===q)return!0;q=m.getElementsByTagName("*");A=0;for(n=q.length;A<n;A++)if(q[A]===b)return!1;return!0},P=/[^\%\d]*$/ig,T=function(){var a=function(m){var b=m.parentNode;if(9===b.nodeType)return!1;var q="display";z.getComputedStyle?q=z.getComputedStyle(m)[q]:m.currentStyle&&(q=m.currentStyle[q]);return"none"===q?!0:b?a(b):!1};return a}(),L=function(){var a={},m,p=function(){var q=0,A=parseInt(b.core.options.visibilityTrackingInterval,10)||300,n,k,g,f,r;for(n in a)if(q+=1,k=a[n].chart,g=a[n].container,
f=a[n].insertMode,r=a[n].callback,k.disposed||!T(g))delete a[n],--q,!k.disposed&&k.renderChart.call(k,g,f,r);m=q?setTimeout(p,A):clearTimeout(m)};return function(q,A,n,k){a[q.id]={chart:q,container:A,insertMode:n,callback:k};m||(m=setTimeout(p,parseInt(b.core.options.visibilityTrackingInterval,10)||300))}}(),D;b.policies.options.containerElementId=["renderAt",void 0];b.policies.options.renderer=["renderer",void 0];b.policies.options.containerElementType=["containerElementType",void 0];b.policies.options.visibilityTrackingInterval=
300;b.normalizeCSSDimension=function(a,m,b){a=void 0===a?b.offsetWidth||parseFloat(b.style.width):a;m=void 0===m?b.offsetHeight||parseFloat(b.style.height):m;var q={},A=b.style,n;A.width=a=a.toString?a.toString():"0";A.height=m=m.toString?m.toString():"0";if((q.widthIsRelative=a.match(/^\s*\d*\.?\d*\%\s*$/)&&!a.match(/^\s*0\%\s*$/))&&0===b.offsetWidth)for(n=b;n=n.offsetParent;)if(0<n.offsetWidth){a=(n.offsetWidth*parseFloat(a.match(/\d*/)[0])/100).toString();break}if((q.heightIsRelative=m.match(/^\s*\d*\.?\d*\%\s*$/)&&
!m.match(/^\s*0\%\s*$/))&&20>=b.offsetHeight)for(n=b;n=n.offsetParent;)if(0<n.offsetHeight){m=(n.offsetHeight*parseFloat(m.match(/\d*/)[0])/100).toString();break}q.width=a.replace?a.replace(/^\s*(\d*\.?\d*)\s*$/ig,"$1px"):a;q.height=m.replace?m.replace(/^\s*(\d*\.?\d*)\s*$/ig,"$1px"):m;A.width=q.width;A.height=q.height;q.pixelWidth=q.widthIsRelative?b.offsetWidth:parseInt(q.width,10)||0;q.pixelHeight=q.heightIsRelative?b.offsetHeight:parseInt(q.height,10)||0;return q};D=b.renderer={register:function(a,
m){if(!a||"function"!==typeof a.toString)throw Error("#03091436 ~renderer.register() Invalid value for renderer name.");a=a.toString().toLowerCase();if(void 0!==E[a])return b.raiseError(b.core,"03091438","param","::RendererManager>register",'Duplicate renderer name specified in "name"'),!1;E[a]=m;return!0},userSetDefault:!1,setDefault:function(a){if(!a||"function"!==typeof a.toString)return b.raiseError(b.core,"25081731","param","::RendererManager>setDefault",'Invalid renderer name specified in "name"'),
!1;if(void 0===E[a=a.toString().toLowerCase()])return b.raiseError(b.core,"25081733","range","::RendererManager>setDefault","The specified renderer does not exist."),!1;this.userSetDefault=!1;b.policies.options.renderer=["renderer",a];return!0},notifyRender:function(a){var m=b.core.items[a&&a.id];m&&(!1!==a.success||a.silent)||b.raiseError(b.core.items[a.id],"25081850","run","::RendererManager",Error("There was an error rendering the chart. Enable FusionCharts JS debugger for more information."));
m.ref=a.ref;b.raiseEvent("internal.DOMElementCreated",{},m)},protectedMethods:{options:!0,attributes:!0,src:!0,ref:!0,constructor:!0,signature:!0,link:!0,addEventListener:!0,removeEventListener:!0},getRenderer:function(a){return E[a]},getRendererPolicy:function(a){a=E[a].policies;return"object"===typeof a?a:{}},currentRendererName:function(){return b.policies.options.renderer[1]},update:function(a){t[a.id].update.apply(a,Array.prototype.slice.call(arguments,1))},render:function(a){t[a.id].render.apply(a,
Array.prototype.slice.call(arguments,1))},remove:function(a){t[a.id].remove.apply(a,Array.prototype.slice.call(arguments,1))},resize:function(a){t[a.id].resize.apply(a,Array.prototype.slice.call(arguments,1))},config:function(a){t[a.id].config.apply(a,Array.prototype.slice.call(arguments,1))},dispose:function(a){t[a.id].dispose.apply(a,Array.prototype.slice.call(arguments,1))}};b.addEventListener("beforeInitialize",function(a){a=a.sender;var m=a.options.renderer.toLowerCase(),p;"string"===typeof a.options.renderer&&
void 0===E[m]&&(a.options.renderer=b.policies.options.renderer[1]);a.options.renderer=m;t[a.id]=E[a.options.renderer];!0!==t[a.id].initialized&&"function"===typeof t[a.id].init&&(t[a.id].init(),t[a.id].initialized=!0);b.parsePolicies(a,t[a.id].policies||{},a.args);for(p in t[a.id].prototype)a[p]=t[a.id].prototype[p];for(p in t[a.id].events)a.addEventListener(p,t[a.id].events[p])});b.addEventListener(["rendered","dataloaderror","nodatatodisplay","rendercancelled"],function(a,m){var p=a.sender;p instanceof
b.core&&p.__state&&p.__state.rendering&&(b.raiseEvent("internal.rendered",m,p),delete p.__state.rendering)});b.addEventListener("loaded",function(B){var m=B.sender;B=B.sender.ref;var p,q;if(void 0!==B&&null!==B&&"function"===typeof B.getExternalInterfaceMethods){try{p=B.getExternalInterfaceMethods(),p="string"===typeof p?p.split(","):[]}catch(A){p=[],b.raiseError(m,"13111126041","run","RendererManager^Loaded",Error("Error while retrieving data from the chart-object."+(A.message&&0<=A.message.indexOf("NPObject")?
" Possible cross-domain security restriction.":"")))}for(B=0;B<p.length;B+=1)q=p[B],void 0===m[q]&&(m[q]=a(q));if(m.ref)for(q in p=D.protectedMethods,B=D.getRenderer(m.options.renderer).protectedMethods,m)if(B&&!p[q]&&!B[q]&&void 0===m.ref[q])try{m.ref[q]=Q(m,q)}catch(A){}}});b.legacyEventList.resized="FC_Resized";b.extend(b.core.prototype,{render:function(a,m,p){p?"function"!==typeof p&&(p=void 0):"function"===typeof m?(p=m,m=void 0):m||"function"!==typeof a||(p=a,a=void 0);void 0===a&&(a=this.options.containerElementId);
"string"===typeof a&&(a=G.getElementById(a));if(void 0===a||null===a)return b.raiseError(this,"03091456","run",".render()",Error("Unable to find the container DOM element.")),this;T(a)?L(this,a,m,p):this.renderChart(a,m,p);return this},renderChart:function(a,m,p){var q=this,A,n,k;if(!this.disposed){if((k=z[this.id])&&k.FusionCharts&&k.FusionCharts===this||(k=this.ref)&&k.FusionCharts&&k.FusionCharts===this)b.renderer.dispose(this),k===z[this.id]&&(z[this.id]=void 0);void 0!==z[this.id]&&b.raiseError(this,
"25081843","comp",".render",Error("#25081843:IECompatibility() Chart Id is same as a JavaScript variable name. Variable naming error. Please use unique name forchart JS variable, chart-id and container id."));p?"function"!==typeof p&&(p=void 0):"function"===typeof m?(p=m,m=void 0):m||"function"!==typeof a||(p=a,a=void 0);m=(m||this.options.insertMode).toLowerCase()||F.REPLACE;void 0===a&&(a=this.options.containerElementId);"string"===typeof a&&(a=G.getElementById(a));if(void 0===a||null===a)return b.raiseError(this,
"03091456","run",".render()",Error("Unable to find the container DOM element.")),this;if(r(this.id,a))return b.raiseError(this,"05102109","run",".render()",Error("A duplicate object already exists with the specific Id: "+this.id)),this;A=G.createElement(this.options.containerElementType||"span");A.setAttribute("id",this.id);if("append"!==m&&"prepend"!==m)for(;a.hasChildNodes();)a.removeChild(a.firstChild);"prepend"===m&&a.firstChild?a.insertBefore(A,a.firstChild):a.appendChild(A);this.options.containerElement=
a;this.options.containerElementId=a.id;if(m=A.style)m.position="relative",m.textAlign="left",m.lineHeight="normal",m.display="inline-block",m.zoom="1",m["vertical-align"]="middle",m.fontWeight="normal",m.fontVariant="normal",m.fontStyle="normal",m.textDecoration="none",m["*DISPLAY"]="inline",m.padding="0",m.margin="0",m.border="none",m.direction="ltr";this.options.containerClassName&&(A.className=this.options.containerClassName);m=b.normalizeCSSDimension(this.width,this.height,A);this.__state.renderedWidth=
m.pixelWidth;this.__state.renderedHeight=m.pixelHeight;this.__state.rendering=!0;b.raiseEvent("beforeRender",n={container:a,width:this.width,height:this.height,renderer:this.options.renderer},this,void 0,function(a,k){!0!==this.disposed&&b.renderer.render(q,A,function(){b.renderer.notifyRender.apply(this,arguments);if(p)try{p.call(a.sender,k.container)}catch(m){setTimeout(function(){throw m;})}})},function(){b.raiseEvent("renderCancelled",n,q)});return this}},remove:function(){b.renderer.remove(this);
return this},resizeTo:function(a,m,p){var q=this,A=q.width,n=q.height,k=q.__state;(q.apiInstance&&q.apiInstance.config||{}).resize=!0;"object"===typeof a&&(p=m,m=a.h,a=a.w);a=null===a||void 0===a?A:a.toString().replace(P,"");m=null===m||void 0===m?n:m.toString().replace(P,"");!0!==p?b.raiseEvent("beforeresize",{currentWidth:A,currentHeight:n,newWidth:a,newHeight:m},q,void 0,function(){q.width=a;q.height=m;b.renderer.resize(q,{width:a,height:m});b.raiseEventWithLegacy("resized",{width:q.width,height:q.height,
prevWidth:A,prevHeight:n,pixelWidth:q.ref&&q.ref.offsetWidth||0,pixelHeight:q.ref&&q.ref.offsetHeight||0,originalWidth:k.renderedWidth,originalHeight:k.renderedHeight},q,[q.id,q.width,q.height])},function(){b.raiseEvent("resizecancelled",{currentWidth:A,currentHeight:n,cancelledTargetWidth:a,cancelledTargetHeight:m},q)}):(q.width=a,q.height=m);return this},dispose:function(){var a=this,m={};b.raiseEvent("beforeDispose",m,a,void 0,function(){b.renderer.dispose(a);b.raiseEvent("disposed",m,a);b.disposeEvents(a);
delete b.core.items[a.id];for(var p in a)a.hasOwnProperty(p)&&delete a[p];a.disposed=!0},function(){b.raiseEvent("disposeCancelled",m,a)})},configure:function(a,m){var p;a&&("string"===typeof a?(p={},p[a]=m):p=a,b.renderer.config(this,p))}});b.extend(b.core,{setCurrentRenderer:function(){var a=D.setDefault.apply(D,arguments);D.userSetDefault=!0;return a},getCurrentRenderer:function(){return D.currentRendererName.apply(D,arguments)},render:function(a,m){return a instanceof b.core?(a.render(m),a):(new b.core(a)).render(m)}},
!1)}]);N.register("module",["private","modules.interface.transcoder",function(){var b=this,z=b.window,G=b.transcoders={},v={},F={},E=/url$/i,t=b._interactiveCharts={selectscatter:[!0,!1],dragcolumn2d:[!0,!0],dragarea:[!0,!0],dragline:[!0,!0],dragnode:[!0,!0]},a=function(a,p,q,A){var n=q.obj;q=q.args;q.dataSource=a;q.xmlHttpRequestObject=p;q.source="XmlHttpRequest";q.url=A;b.raiseEvent("dataLoadRequestCompleted",q,n,void 0,r,P)},Q=function(a,p,q){var A=q.obj;q=q.args;q.error=a;q.httpStatus=p.xhr&&
p.xhr.status?p.xhr.status:-1;q.xmlHttpRequestObject=p;b.raiseEvent("dataLoadError",q,A);"function"===typeof z.FC_DataLoadError&&z.FC_DataLoadError(A.id,q)},r=function(a,b){a.sender.setChartData(b.dataSource,b.dataFormat,b.config,b.successcallback,b.silent)},P=function(a,p){b.raiseEvent("dataLoadCancelled",p,a.sender);p.xmlHttpRequestObject.abort()},T=function(m,p){var q=m.sender,A=q.__state,n=p.url;q.options.dataSource=p.url;A.dhmXhrObj||(A.dhmXhrObj=new b.ajax(a,Q));A.dhmXhrObj.get("function"===
typeof z.decodeURIComponent?z.decodeURIComponent(n):z.unescape(n),{obj:q,args:p})},L=function(a,p){var q=a.sender,A=q.__state;b.raiseEvent("dataLoadRequestCancelled",p,q);A&&A.dhmXhrObj&&A.dhmXhrObj.abort()},D=function(a,p){var q=a.sender,A=q.__state,n=q.id;v[n]=p;F[n]&&delete F[n];F[n]={};A.dataReady=void 0;A.dataAvailable=!0;!0!==p.silent&&(!0!==q.options.safeMode||!0!==A.rendering||q.isActive()?(delete A.args,b.renderer.update(q,p)):(A.updatePending=p,b.raiseWarning(q,"23091255","run","::DataHandler~update",
"Renderer update was postponed due to async loading.")));b.raiseEvent("dataUpdated",p,q,void 0,p.successcallback)},B=function(a,p){b.raiseEvent("dataUpdateCancelled",p,a.sender,void 0,p.failurecallback)};b.dataFormats={};b.policies.options.dataSource=["dataSource",void 0];b.policies.options.dataFormat=["dataFormat",void 0];b.policies.options.dataConfiguration=["dataConfiguration",void 0];b.policies.options.showDataLoadingMessage=["showDataLoadingMessage",!1];b.addDataHandler=function(a,p){if("string"!==
typeof a||void 0!==G[a.toLowerCase()])b.raiseError(b.core,"03091606","param","::DataManager.addDataHandler",Error("Invalid Data Handler Name"));else{var q={},A=a.toLowerCase();G[A]=p;p.name=a;q["set"+a+"Data"]=function(n,k,g){return this.setChartData(n,a,k,g)};p.transportable&&(q["set"+a+"Url"]=function(n,k,g){return this.setChartDataUrl(n,a,k,g)},b.dataFormats[a+"URL"]=A+"Url");q["get"+a+"Data"]=function(){return this.getChartData(a)};b.dataFormats[a]=A;b.extend(b.core,q,!0)}};b.extend(b.core.prototype,
{setChartDataUrl:function(a,p,q,A,n){if(void 0===p||null===p||"function"!==typeof p.toString)p=this.options.dataFormat,b.raiseWarning(this,"03091609","param","FusionCharts#setChartDataUrl","Invalid Data Format. Reverting to current data format - "+p);p=p.toString().toLowerCase();p=E.test(p)?p.slice(0,-3):p;b.raiseEvent("dataLoadRequested",{source:"XmlHttpRequest",url:a,dataFormat:p,silent:!!n,config:q,successcallback:A},this,void 0,T,L)},setChartData:function(a,p,q,A,n){var k=this.options,g,f;if(void 0===
p||null===p||"function"!==typeof p.toString)p=k.dataFormat,b.raiseWarning(this,"03091610","param","FusionCharts#setChartData","Invalid Data Format. Reverting to current data format - "+p);p=p.toString().toLowerCase();E.test(p)?this.setChartDataUrl(a,p,q,A,n):(k.dataSource=a,g=p,k.dataFormat=p,f=G[g],"undefined"===typeof f?b.raiseError(b.core,"03091611","param","FusionCharts#setChartData",Error("Data Format not recognized")):(p=(p=b.renderer&&b.renderer.getRenderer(k.renderer||b.renderer.currentRendererName()))&&
p.dataFormat,q=p===g?f.passthrough?f.passthrough(a,q,k.chartType):{data:a}:f.encode(a,this,q||k.dataConfiguration)||{},q["native"]=p===g,q.format=q["native"]?p:"xml",q.dataFormat=g,q.dataSource=a,q.silent=!!n,"function"===typeof A&&(q.successcallback=A),b.raiseEvent("beforeDataUpdate",q,this,void 0,D,B)))},getChartData:function(a,p){var q=this.options,A=this.id,n;if(void 0===a||"function"!==typeof a.toString||void 0===(n=G[a=a.toString().toLowerCase()]))b.raiseError(this,"25081543","param","::transcoder~getChartData()",
Error('Unrecognized data-format specified in "format"'));else return F[A][a]&&(F[A][a]=null),F[A][a]?q=F[A][a]:v[A]?(a===v[A].format?F[A][a]=v[A]:(F[A].xml||(F[A].xml="xml"===v[A].format?v[A]:G[v[A].format].encode(v[A].data,this,q.dataConfiguration)),F[A][a]||(F[A][a]=n.decode(F[A].xml.data,this,q.dataConfiguration))),q=F[A][a]):q={error:Error("Data not defined")},!0===!!p?q:q.data},dataReady:function(a){return a?this.__state.dataAvailable:this.__state.dataReady}});b.extend(b.core,{transcodeData:function(a,
p,q,A,n){if(p&&"function"===typeof p.toString&&q&&"function"===typeof q.toString&&void 0!==G[q=q.toString().toLowerCase()]&&void 0!==G[p=p.toString().toLowerCase()])return a=G[p].encode(a,this,n),p=G[q].decode(a.data,this,n,p),p.error instanceof Error||(p.error=a.error),A?p:p.data;b.raiseError(this,"14090217","param",".transcodeData()",Error("Unrecognized data-format specified during transcoding."))}},!1);b.getRenderer&&!b.getRenderer("flash")||b.addEventListener("DataLoadRequested",function(a){var b=
a.sender;b.options&&"flash"===b.options.renderer&&b.options.useLegacyXMLTransport&&a.preventDefault()});b.addEventListener("beforeInitialize",function(a){a=a.sender;var p=a.options,q=p.dataSource,A=b.renderer&&b.renderer.getRenderer(p.renderer);delete v[a.id];F[a.id]={};if(void 0!==q&&null!==q){a.__state.dataSetDuringConstruction=!0;if("string"!==typeof p.dataFormat)switch(typeof q){case "function":q=p.dataSource=q.call(a,p.dataConfiguration);p.dataFormat="JSON";break;case "string":p.dataFormat=/^\s*?\{[\s\S]*\}\s*?$/g.test(a.options.dataFormat)?
"JSON":"XML";break;case "object":p.dataFormat="JSON"}p.dataFormat&&p.dataFormat.toString&&(a.__state.dataFetchDuringConstruction=E.test(p.dataFormat.toString()));a.setChartData(q,p.dataFormat,void 0,void 0,!0)}else A&&(a.__state.dataSetDuringConstruction=!1,b.raiseWarning(a,"1810131922A","param",":dataHandler~event:beforeInitialize","Data source was not defined during construction, hence set to blank renderer default - "+A.dataFormat),a.setChartData("",A.dataFormat,void 0,void 0,!0),a.__state.dataAvailable=
!1)});b.addEventListener("beforeDispose",function(a){var b=a.sender;delete v[a.sender.id];delete F[a.sender.id];b&&b.__state&&b.__state.dhmXhrObj&&b.__state.dhmXhrObj.abort()});b.addEventListener("disposed",function(a){delete F[a.sender.id]});b.addEventListener("loaded",function(a){a=a.sender;var p=a.__state.updatePending;a instanceof b.core&&void 0!==p&&(delete a.__state.updatePending,b.renderer.update(a,p))});b.addEventListener("dataUpdated",function(a,p){var q=a.sender,A=q.__state;A.rendering&&
(A.dataFetchDuringConstruction||A.updatePending)&&(delete A.dataFetchDuringConstruction,delete A.updatePending,b.renderer.update(q,p))});b.addEventListener(["dataLoadError","dataInvalid"],function(a){a.sender.__state.dataAvailable=!1});b.addEventListener("loaded",function(a){a=a.sender;var p=a.__state,q,A,n;n=function(a,g){return function(f){return!1===f?g.apply(this):this.ref.getUpdatedXMLData?b.core.transcodeData(this.ref.getUpdatedXMLData(),"xml",a):this.getData?this.getData(a):g.apply(this)}};
if(a.chartType&&t[a.chartType()]&&t[a.chartType()][0]){for(q in b.transcoders)A=b.transcoders[q].name,A="get"+A+"Data",a[A]=n(q,a.constructor.prototype[A]),a[A]._dynamicdatarouter=!0;p.dynamicDataRoutingEnabled=!0}else if(p.dynamicDataRoutingEnabled){for(q in b.transcoders)A=b.transcoders[q].name,A="get"+A+"Data",a.hasOwnProperty(A)&&a[A]._dynamicdatarouter&&delete a[A];p.dynamicDataRoutingEnabled=!1}})}]);N.register("module",["private","modules.data.json",function(){var b=this,z=b.window,G=z.document,
v=b.xssEncode,F,E,t=function(a){var b,r;for(b in a)a.hasOwnProperty(b)&&(r=b.toLowerCase(),b!==r&&(a[r]=a[b],delete a[b]),"object"===typeof a[r]&&"data"!==r&&t(a[r]))};void 0===z.JSON&&b.raiseError(this,"1113062012","run","JSONDataHandler",Error("Could not find library support for JSON parsing."));b.policies.options.allowIESafeXMLParsing=["_allowIESafeXMLParsing",!0];F=function(){var a={set:!0,trendlines:!0,vtrendlines:!0,line:{trendlines:!0,vtrendlines:!0},data:!0,dataset:!0,lineset:!0,categories:!0,
category:!0,tasks:!0,linkeddata:!0,application:!0,definition:!0,axis:!0,connectors:!0,connector:{connectors:!0},trendset:!0,row:{rows:!0},column:{columns:!0},label:{labels:!0},color:{colorrange:!0},dial:{dials:!0},pointer:{pointers:!0},point:{trendpoints:!0},process:{processes:!0},task:{tasks:!0},milestone:{milestones:!0},datacolumn:{datatable:!0},text:{datacolumn:!0},item:{legend:!0},alert:{alerts:!0},groups:{annotations:!0},items:{groups:!0,data:!0},shapes:!0,shape:{shapes:!0},entitydef:!0,entity:{entitydef:!0}},
Q={chart:"linkedchart",map:"linkedmap",set:"data",vline:{chart:"data",graph:"data",dataset:"data",categories:"category",linkedchart:"data"},apply:{application:"application"},style:{definition:"definition"},marker:{application:"application",definition:"definition",data:"items"},entity:{entitydef:"entitydef",data:"data"},shape:{shapes:"shapes"},connector:{connectors:{chart:"connector",linkedchart:"connector",map:"connectors",linkedmap:"connectors"}},annotationgroup:{annotations:"groups"},annotation:{groups:"items"}},
r={vline:{vline:"true"}},P={chart:!0,map:!0,graph:!0},t={dataset:"data",categories:"category"},L={target:"target",value:"value"},D={styles:{definition:!0,application:!0},chart:{value:!0,target:!0},graph:{value:!0,target:!0},linkedchart:{value:!0,target:!0},markers:{definition:!0,application:!0,shapes:!0,connectors:!0,data:!0},map:{entitydef:!0,data:!0},linkedmap:{entitydef:!0,data:!0}},B,m,p;B={append:function(m,b,n,k){!a[n]||!0!==a[n]&&!0!==a[n][k]?b[n]=m:(b[n]instanceof Array||(b[n]=[]),b[n].push(m))},
child:function(a,m,n,k){var g,f,p,C,Y,R;for(g=0;g<m.length;g+=1)switch(p=m[g],f=p.nodeName.toLowerCase(),p.nodeType){case 1:C=B.attr(p.attributes);R=P[f];!0===R&&(Y=C,C={},C[f]=Y);R=r[f];"object"===typeof R&&b.extend(C,R);if(R=Q[f])if("object"===typeof R&&"object"===typeof R[n])for(Y in Y=void 0,R[n]){if(k[Y]){f=R[n][Y];break}}else"object"===typeof R&&"string"===typeof R[n]?f=R[n]:"string"===typeof R&&(f=R);p.childNodes.length&&((R=D[n])&&R[f]?B.child(a,p.childNodes,f,k):B.child(C,p.childNodes,f,
k));(R=D[n])&&R[f]||B.append(C,a,f,n);break;case 3:if(R=L[n])f=R,C=p.data,B.append(C,a,f,n);R=t[n];"string"===typeof R&&k.chart&&parseInt(k.chart.compactdatamode,10)&&(f=R,C=p.data,a[f]=a[f]?a[f]+C:C)}},attr:function(a){var m,n={};if(!a||!a.length)return n;for(m=0;m<a.length;m+=1)"xml"===p&&(a[m].value?a[m].value=a[m].value.replace(/</g,"&lt;").replace(/>/g,"&gt;"):a[m].nodeValue&&(a[m].nodeValue=a[m].nodeValue.replace(/</g,"&lt;").replace(/>/g,"&gt;"))),n[a[m].nodeName.toLowerCase()]=a[m].value||
a[m].nodeValue;return n}};m=function(a){var p={},n,k,g,f,r,C,D,R,u;if("object"!==typeof a&&a&&"function"!==typeof a.toString)return m.errorObject=new TypeError("xml2json.parse()"),p;a=a.toString().replace(/<\!--[\s\S]*?--\x3e/g,"").replace(/<\?xml[\s\S]*?\?>/ig,"").replace(/&(?!([^;\n\r]+?;))/g,"&amp;$1");a=a.replace(/^\s\s*/,"");for(var X=/\s/,O=a.length;X.test(a.charAt(--O)););a=a.slice(0,O+1);if(!a)return p;try{z.DOMParser?n=(new z.DOMParser).parseFromString(a,"text/xml"):G.body&&b.core.options.allowIESafeXMLParsing?
(k=G.createElement("xml"),k.innerHTML=a,G.body.appendChild(k),n=k.XMLDocument,G.body.removeChild(k)):(n=new z.ActiveXObject("Microsoft.XMLDOM"),n.async="false",n.loadXML(a));if(!(n&&n.childNodes&&1===n.childNodes.length&&(g=n.childNodes[0])&&g.nodeName&&(f=g.nodeName.toLowerCase()))||"chart"!==f&&"map"!==f&&"graph"!==f)return m.errorObject=new TypeError("xml2json.parse()"),p;if("graph"===f){r=n.createElement("chart");for(u=(D=g.attributes)&&D.length||0;u--;)r.setAttribute(D[u].name,D[u].value),D.removeNamedItem(D[u].name);
if(u=(R=g.childNodes)&&R.length||0)--u,C=g.removeChild(R[u]),r.appendChild(C);for(;u--;)C=g.removeChild(R[u]),r.insertBefore(C,r.firstChild);n.replaceChild(r,g);g=r}}catch(W){m.errorObject=W}g?(g.attributes&&(p[f]=B.attr(g.attributes)),g.childNodes&&B.child(p,g.childNodes,f,p),delete m.errorObject):m.errorObject=new TypeError("xml2json.parse()");return p};return function(a){delete m.errorObject;p=arguments[arguments.length-1];return{data:m(a),error:m.errorObject}}}();E=function(){var a,b;a={items:{explode:{data:"set",
groups:{annotations:"annotationgroup"},items:{groups:"annotation"}},text:{chart:{target:"target",value:"value"},graph:{target:"target",value:"value"}},dsv:{dataset:{data:"dataset"},categories:{category:"categories"}},attr:{chart:{chart:"chart"},graph:{graph:"graph"},map:{map:"map"},linkedmap:{map:"map"},linkedchart:{chart:"chart"}},group:{styles:{definition:"style",application:"apply"},map:{data:"entity",entitydef:"entity"},markers:{definition:"marker",application:"marker",shapes:"shape",connectors:"connector",
items:"marker"}},tag:{markers:{items:"data"}}},qualify:function(a,b,Q){return"object"===typeof this.items[a][Q]?this.items[a][Q][b]:this.items[a][Q]}};b=function(r,P,t,L){var D="",B="",m="",p="",q,A,n;P&&"function"===typeof P.toLowerCase&&(P=P.toLowerCase());if(void 0===t&&r[P])for(q in r[P])A=q.toLowerCase(),"compactdatamode"===A&&(L.applyDSV=1==r[P][q]);if(r instanceof Array)for(q=0;q<r.length;q+=1)m="string"===typeof r[q]?m+v(r[q]):m+b(r[q],P,t,L);else{for(q in r)A=q.toLowerCase().replace(/[`~!@#$%^&*()|+\=?;:'", <>\{\}\[\]\\\/]/gi,
""),r[q]instanceof Array&&(n=a.qualify("group",A,P))?(m=a.qualify("tag",A,P)||A,B+="<"+m+">"+b(r[q],n,P,L)+"</"+m+">"):"object"===typeof r[q]?(n=a.qualify("attr",A,P))?(p=b(r[q],n,P,L).replace(/\s*\/\>/ig,""),P=A):B+=b(r[q],A,P,L):L.applyDSV&&(n=a.qualify("dsv",A,P))?B+=r[q]:(n=a.qualify("text",A,P))?(m=a.qualify("tag",A,P)||n,B+="<"+m+">"+r[q]+"</"+m+">"):"vline"===A&&r[q]?P="vline":D+=" "+A+'="'+v(r[q]).toString().replace(/\"/ig,"&quot;")+'"';if(n=a.qualify("explode",t,P))P=n;m=P;m=(""!==p?p:"<"+
m)+D+(""!==B?">"+B+"</"+m+">":" />")}return m};return function(a){delete b.errorObject;if(a&&"string"===typeof a)try{a=JSON.parse(a)}catch(P){b.errorObject=P}return{data:b(a,a&&a.graph?"graph":a&&a.map?"map":"chart",void 0,{}),error:b.errorObject}}}();b.addDataHandler("JSON",{encode:E,decode:F,passthrough:function(a,b,r){b={data:{}};r=!!/zoomscatter/ig.test(r);if(!a)return b;if("string"!==typeof a)try{a=JSON.stringify(a)}catch(P){return b.error=P,b}try{r?(b.data=JSON.parse(a),t(b.data)):b.data=JSON.parse(a.replace(/"([^"]+)"[\s]*:/g,
function(a,b){return'"'+b.toLowerCase()+'":'}))}catch(P){console.log(P),b.error=P}return b},transportable:!0})}]);N.register("module",["private","modules.data.xml",function(){var b=function(b){return{data:b,error:void 0}};this.addDataHandler("XML",{encode:b,decode:b,transportable:!0})}]);N.register("module",["private","modules.data.csv",function(){var b=this,z=b.window,G=b.core,v=z.parseInt,F=z.parseFloat,E=function(a){return a},t;t=function(a){this.data=[];this.columnCount=this.rowCount=0;this.configure(a)};
t.decodeLiterals=function(a,b){return void 0!==a&&null!==a&&a.toString?a.replace("{tab}","\t").replace("{quot}",'"').replace("{apos}","'"):b};t.prototype.set=function(a,b,r){var P;if(this.rowCount<=a){for(P=this.rowCount;P<=a;P+=1)this.data[P]=[];this.rowCount=a+1}this.columnCount<=b&&(this.columnCount=b+1);this.data[a][b]=r};t.prototype.setRow=function(a,b){var r;if(this.rowCount<=a){for(r=this.rowCount;r<=a;r+=1)this.data[r]=[];this.rowCount=a+1}this.columnCount<b.length&&(this.columnCount=b.length);
this.data[a]=b};t.prototype.get=function(a,b){var r=this.data;return r[a]&&r[a][b]};t.prototype.configure=function(a){var b=t.decodeLiterals;this.delimiter=b(a.delimiter,",");this.qualifier=b(a.qualifier,'"');this.eolCharacter=b(a.eolCharacter,"\r\n");this.numberFormatted=!!v(a.numberFormatted,0)};t.prototype.clear=function(){this.data=[];this.columnCount=this.rowCount=0};t.prototype.toString=function(){var a,b,r="";for(a=0;a<this.rowCount;a+=1)b=this.qualifier+this.data[a].join(this.qualifier+this.delimiter+
this.qualifier)+this.qualifier,r+='""'===b?this.eolCharacter:b+this.eolCharacter;0<this.rowCount&&(r=r.slice(0,r.length-2));return r};b.addDataHandler("CSV",{encode:function(a,t){b.raiseError(t,"0604111215","run","::CSVDataHandler.encode()","FusionCharts CSV data-handler only supports encoding of data.");throw Error("FeatureNotSupportedException()");},decode:function(a,b){var r=G.transcodeData(a,"xml","json")||{},P=b.jsVars,v=P&&P.instanceAPI,L=v&&v.components,D,B,m,p,q,A,n=r.chart||r.map||r.graph||
{},k=!!n.exporterrorcolumns,g=r.categories&&r.categories[0]&&r.categories[0].category||[],f=r.map&&!r.chart||P&&P.instanceAPI&&"geo"===P.instanceAPI.defaultSeriesType,S=!1,C=!1,Y=!1,R=!1,u=!1,X=E,O={},W,H,w,K,h,V,e,d,c,l;m=0;var M=-1,J;D=new t({separator:n.exportdataseparator,qualifier:n.exportdataqualifier,numberFormatted:n.exportdataformattedval});G.formatNumber&&D.numberFormatted&&(X=function(c,a){return G.formatNumber(c,n,a)});if(f)for(B in O.geo=!0,g=(f=L&&P.instanceAPI.components.dataset&&P.instanceAPI.components.dataset[0])&&
f.components.data||[],D.setRow(0,["Id"," Short Name","Long Name","Value","Formatted Value"]),P=0,g)C=g[B],l=C.config,f=l.cleanValue,!0!==C.hidden&&D.setRow(++P,[B,l.shortLabel,l.label,null===f?"":f,l.formattedValue]);else if(void 0!==(W=r.dials&&r.dials.dial||r.pointers&&r.pointers.pointer||r.value))if(O.gauge=!0,"string"===typeof W)D.set(0,0,X(W)),O.singlevalue=!0,"string"===typeof r.target&&(D.set(0,1,X(r.target)),O.bullet=!0);else for(D.setRow(0,["Id","Value"]),O.multivalue=!0,P=0,A=1,q=W.length;P<
q;P+=1,A+=1)D.setRow(A,[A,X(W[P].value)]);else if(W=r.dataset||!(r.data instanceof Array)&&[]){O.multiseries=!0;m=1;if(H=r.lineset)W=W.concat(H),O.lineset=!0;if(w=r.axis)W=W.concat(w),O.multiaxis=!0;f=v.defaultDatasetType&&v.defaultDatasetType.toLowerCase();"dragnode"!==f&&"dragcolumn"!==f&&"dragline"!==f&&"dragarea"!==f||!v.getJSONData||(W=v.getJSONData().dataset);V=W.length;h=g.length;if(!(V=W.length)){for(P=0;P<h;P+=1)e=g[P],D.set(P+1,0,e.label||e.name);O.multilevel=!0}for(P=0;P<V;P+=1)for(d=W,
d[P].dataset?(d=d[P].dataset,p=0,K=d.length):(d=W,p=P,K=p+1);p<K&&!S&&!Y;p+=1)if(u=d[p],M++,!(L&&L.dataset&&L.dataset[M]&&!1===L.dataset[M].visible)){J=(f=L&&L.dataset&&L.dataset[M])&&f.config&&f.config.parentYAxis;D.set(0,m,u.seriesname);"string"===typeof u.data&&(O.compactdata=!0,u.data=u.data.split(n.dataseparator||"|"));A=q=0;for(c=u.data&&u.data.length||0;q<c||q<h;q+=1){e=g[q];B=A+1;f=u.data&&u.data[A]||{};if(void 0!==f.x&&void 0!==f.y){S=O.xy=!0;break}if(void 0!==f.open||void 0!==f.high||void 0!==
f.close||void 0!==f.low){R=O.ohlc=!0;break}if(void 0!==f.rowid&&void 0!==f.columnid){Y=O.heatmap=!0;break}if(q<h&&!e.vline){D.set(B,0,e.label||e.name);e=F(f?f.value:"");e=isNaN(e)?"":X(e,J);D.set(B,m,e);if(C||k||f.errorvalue)C||D.set(0,m+1,"Error"),l=1,D.set(B,m+1,X(f.errorvalue));A+=1}}l&&(m+=l,l=0);m+=1}H&&(W=W.slice(0,-H.length));w&&(W=W.slice(0,-w.length))}else if(W=r.data){D.set(0,1,n.yaxisname||"Value");O.singleseries=!0;u="1"==n.showsumatend;P=0;for(h=W.length;P<h;P+=1)f=W[P],f.vline||(e=F(f.value?
f.value:""),D.setRow(P+1,[f.label||f.name,isNaN(e)?"":(m+=e,X(e))]));u&&(O.summation=!0,D.setRow(P+1,[n.sumlabel||"Total",X(m)]))}if(R)for(D.clear(),D.setRow(0,["Open","Close","High","Low"]),P=0,B=1,W=r.dataset,K=W.length;P<K;P+=1)for(q=0,u=W[P]&&W[P].data||[],V=u.length;q<V;q+=1,B+=1)f=u[q]||{},D.setRow(q+1,[X(f.open),X(f.close),X(f.high),X(f.low)]);else if(S)for(D.clear(),C=!1,l=0,D.setRow(0,["Series","x","y"]),P=0,B=1,W=r.dataset,K=W.length;P<K;P+=1){if(!(L&&L.dataset&&L.dataset[P]&&!1===L.dataset[P].visible))for(f=
v.defaultDatasetType&&v.defaultDatasetType.toLowerCase(),"dragnode"===f&&v.getJSONData&&(W=v.getJSONData().dataset),q=0,u=W[P]&&W[P].data||[],V=u.length;q<V;q+=1,B+=1){f=u[q]||{};e=[W[P].seriesname,X(f.x),X(f.y)];void 0!==f.z&&(e.push(X(f.z)),l||(D.set(0,3,"z"),l=1));if(C||k||void 0!==f.errorvalue||void 0!==f.horizontalerrorvalue||void 0!==f.verticalerrorvalue)r=X(f.errorvalue),e.push(f.errorvalue,void 0===f.horizontalerrorvalue?r:X(f.horizontalerrorvalue),void 0===f.verticalerrorvalue?r:X(f.verticalerrorvalue)),
C||(D.set(0,l+3,"Error"),D.set(0,l+4,"Horizontal Error"),D.set(0,l+5,"Vertical Error")),C=O.error=!0;D.setRow(B,e)}}else if(Y){D.clear();k={};S={};P=0;q=1;g=r.rows&&r.rows.row||[];for(v=g.length;P<v;P+=1,q+=1)e=g[P],e.id&&(k[e.id.toLowerCase()]=q,D.set(q,0,e.label||e.id));P=0;q=1;g=r.columns&&r.columns.column||[];for(v=g.length;P<v;P+=1,q+=1)e=g[P],e.id&&(S[e.id.toLowerCase()]=q,D.set(0,q,e.label||e.id));u=r.dataset&&r.dataset[0]&&r.dataset[0].data||[];L=L&&L.dataset&&L.dataset[0]&&L.dataset[0].components&&
L.dataset[0].components.data||[];P=0;for(v=u.length;P<v;P+=1)f=u[P],B=f.rowid.toLowerCase(),m=f.columnid.toLowerCase(),L[P]&&!1===L[P].visible||(k[B]||(k[B]=D.rowCount,D.set(D.rowCount,0,f.rowid)),S[m]||(S[m]=D.columnCount,D.set(0,D.columnCount,f.columnid)),D.set(k[B],S[m],X(f.value)))}W=g=H=w=null;0<D.rowCount&&void 0===D.get(0,0)&&D.set(0,0,n.xaxisname||"Label");return{data:D.toString(),error:void 0,predictedFormat:O}},transportable:!1});G.addEventListener("Loaded",function(a){a=a.sender;"javascript"!==
a.options.renderer||a.getDataAsCSV||(a.getDataAsCSV=a.ref.getDataAsCSV=a.getCSVData)})}]);N.register("module",["private","modules.renderer.js",function(){var b=this,z=b.window,G=z.document,v=b.core.options,F=/msie/i.test(z.navigator.userAgent)&&!z.opera,E=!(!z.SVGAngle&&!G.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")),t=function(){},a=b.hcLib={cmdQueue:[]},Q=a.moduleCmdQueue={base:[],charts:[],powercharts:[],widgets:[],maps:[]},r=a.moduleDependencies={},P=a.moduleMeta=
{base:"fusioncharts.js",charts:"fusioncharts.charts.js",powercharts:"fusioncharts.powercharts.js",widgets:"fusioncharts.widgets.js",maps:"fusioncharts.maps.js"},T={},L=a.getMetaSentence=function(){var a={};return function(g){g=g&&g.replace(/(^\s*)|(\s*$)/g,"")||"";return a[g]||(a[g]={key:g,subject:g.replace(/[^\/]*?$/ig,""),predicate:g.replace(/^.*\//ig,"")})}}(),D=a.getDependentModuleName=function(a){var g=[],f,b;a=L(a).predicate;for(f in r)void 0!==(b=r[f][a])&&(g[b]=f);return g},B=a.hasModule=
function(a){var g,f;if(a instanceof Array){g=0;for(f=a.length;g<f;g+=1)if(!b.modules["modules.renderer.js-"+L(a[g]).predicate])return!1;return!0}return!!b.modules["modules.renderer.js-"+L(a).predicate]},m=a.loadModule=function(a,g,f,m){a instanceof Array||(a=[a]);var n=a.length,p=0,q;q=function(){if(p>=n)g&&g();else{var u=a[p],A=u&&u.match(/[^\/]*$/i)[0],O=P[u];p+=1;if(u){if(B(A)){q();return}if(T[A]){b.raiseError(m||b.core,"1112201445A","run","JavaScriptRenderer~loadModule() ","required resources are absent or blocked from loading.");
f&&f(A);return}}else f&&f(A);u=b.core.options["html5"+b.capitalizeString(A)+"Src"];b.loadScript(void 0===u?O:u,{success:function(){B(A)?q():f&&f(A)},failure:f&&function(){f(A)}},void 0,!0)}};q()},p=a.executeWaitingCommands=function(a){for(var g;g=a.shift();)"object"===typeof g&&t[g.cmd].apply(g.obj,g.args)},q=function(a){delete a.sender.jsVars._reflowData;a.sender.jsVars._reflowData={};delete a.sender.jsVars._reflowClean},A=function(){var a=function(){};a.prototype={LoadDataErrorText:"Error in loading data.",
XMLLoadingText:"Retrieving data. Please wait",InvalidXMLText:"Invalid data.",ChartNoDataText:"No data to display.",ReadingDataText:"Reading data. Please wait",ChartNotSupported:"Chart type not supported.",PBarLoadingText:"",LoadingText:"Loading chart. Please wait",RenderChartErrorText:"Unable to render chart."};return a.prototype.constructor=a}(),n=a.getContainerBackgroundColor=function(k){k=k.chartInstance;var g=k.options,f=g.containerBackgroundColor,g=g.containerBackgroundOpacity,b=k.jsVars.transparent;
void 0!==b&&null!==b?g=k.jsVars.transparent?0:1:(g=parseFloat(g),0>g?g=0:1<g&&(g=1));f||(f="#ffffff");if(F&&!E)return g?f:"transparent";f=f.replace(/^#?([a-f0-9]+)/ig,"$1");f=a.graphics.HEXtoRGB(f);f[3]=g.toString();return"rgba("+f.join(",")+")"};a.injectModuleDependency=function(k,g,f){var b=!1,m=L(k).subject;k=L(k).predicate;g=void 0===g?k:L(g).predicate;r[k]||(r[k]={},Q[k]||(Q[k]=[],a.moduleMeta[k]=m+v.html5ScriptNamePrefix+(g&&g.replace&&g.replace(/^[\s\S]*\//ig,"").replace(/\?/g,"%3F").replace(/\#/g,
"%23").replace(/\:/g,"%3A")||"")+v.html5ScriptNameSuffix),b=!0);r[k][g]=f||0;return b};a.needsModule=function(k,g){k=L(k).predicate;g=L(g).predicate;return void 0!==(a.moduleDependencies[k]&&a.moduleDependencies[k][g])};a.cleanupWaitingCommands=function(a){for(var g=a.chartType(),g=D(g),f,b=[],m;f=g.shift();){for(f=Q[f]||[];m=f.shift();)"object"===typeof m&&m.obj!==a&&b.push(m);f.concat(b);b=[]}};b.extend(b.core.options,{html5ScriptNameSuffix:".js",html5ScriptNamePrefix:"fusioncharts."});b.extend(t,
{dataFormat:"json",ready:!1,policies:{jsVars:{},options:{showChartLoadingMessage:["showChartLoadingMessage",!0]}},init:function(){B("base")?t.ready=!0:m("base",function(){t.ready=!0;p(a.cmdQueue)},void 0,b.core)},render:function(k){var g=k,f=this.jsVars.msgStore;g&&this.options.showChartLoadingMessage&&(g.innerHTML='<small style="display: inline-block; *zoom:1; *display:inline; width: 100%; font-family: Verdana,sans; font-size: 10px; color: #666666; text-align: center; padding-top: '+(parseInt(g.style.height,
10)/2-5)+'px">'+(f.PBarLoadingText||f.LoadingText)+"</small>",g.style.backgroundColor=n(this));a.cmdQueue.push({cmd:"render",obj:this,args:arguments})},update:function(){a.cmdQueue.push({cmd:"update",obj:this,args:arguments})},resize:function(){a.cmdQueue.push({cmd:"resize",obj:this,args:arguments})},dispose:function(){var k=a.cmdQueue,g,f;g=0;for(f=k.length;g<f;g+=1)k[g].obj===this&&(k.splice(g,1),--f,--g)},load:function(){a.cmdQueue.push({cmd:"load",obj:this,args:arguments})},config:function(a,
g){var f,b=this.jsVars,m=b.msgStore,b=b.cfgStore,n=this.options,p;p={LoadingText:"loadMessage",ChartNotSupported:"typeNotSupportedMessage",RenderChartErrorText:"renderErrorMessage",XMLLoadingText:"dataLoadStartMessage",ChartNoDataText:"dataEmptyMessage",LoadDataErrorText:"dataLoadErrorMessage",InvalidXMLText:"dataInvalidMessage"};"string"===typeof a&&1<arguments.length&&(f=a,a={},a[f]=g);for(f in a)void 0!==m[f]?m[f]=a[f]:b[f.toLowerCase()]=a[f],p[f]?n[p[f]]=a[f]:n[f]=a[f]},protectedMethods:{},events:{beforeInitialize:function(k){var g=
k.sender;k=g.jsVars;var f;k.fcObj=g;k.msgStore=k.msgStore||new A;k.cfgStore=k.cfgStore||{};k.previousDrawCount=-1;k.drawCount=0;k._reflowData={};g.addEventListener("beforeRender",function(k){k.sender.jsVars.smartLabel=new a.SmartLabelManager(g.id,G.body||G.getElementsByTagName("body")[0]);k.detachHandler()});k.userModules instanceof Array||(f=k.userModules,k.userModules=[],"string"===typeof f&&(k.userModules=k.userModules.concat(f.split(","))));a.chartAPI&&a.chartAPI[void 0]||(k.needsLoaderCall=!0)},
initialized:function(a){a=a.sender;var g=a.jsVars;g.needsLoaderCall&&(delete g.needsLoaderCall,t.load.call(a))},beforeDataUpdate:q,beforeDispose:function(a){var g=a.sender.jsVars;g.smartLabel&&!g.smartLabel.disposed&&g.smartLabel.dispose();q.apply(this,arguments)},beforeRender:function(a){var g=a.sender.jsVars;delete g.drLoadAttempted;delete g.waitingModule;delete g.waitingModuleError;q.apply(this,arguments)},dataLoadRequested:function(a){a=a.sender;var g=a.jsVars;delete g.loadError;a.ref&&a.options.showDataLoadingMessage?
g.hcObj&&!g.hasNativeMessage&&g.hcObj.showLoading?g.hcObj.showMessage(g.msgStore.XMLLoadingText):a.ref.showChartMessage?a.ref.showChartMessage("XMLLoadingText"):g.stallLoad=!0:g.stallLoad=!0},dataLoadRequestCompleted:function(a){delete a.sender.jsVars.stallLoad},dataLoadError:function(a){var g=a.sender,f=g.jsVars,b=g.args,m=g.options;delete f.stallLoad;f.loadError=!0;g._chartMessageImageStyle={imageHAlign:b.dataLoadErrorMessageImageHAlign||m.baseChartMessageImageHAlign,imageVAlign:b.dataLoadErrorMessageImageVAlign||
m.baseChartMessageImageVAlign,imageAlpha:b.dataLoadErrorMessageImageAlpha||m.baseChartMessageImageAlpha,imageScale:b.dataLoadErrorMessageImageScale||m.baseChartMessageImageScale};g._chartMessageStyle={color:b.dataLoadErrorMessageColor||m.baseChartMessageColor,fontFamily:b.dataLoadErrorMessageFont||m.baseChartMessageFont,fontSize:b.dataLoadErrorMessageFontSize||m.baseChartMessageFontSize};g.apiInstance.setChartMessage&&(g.apiInstance.setChartMessage(m.dataLoadErrorMessage,g),g.apiInstance.drawChartMessage());
g.__state.dataFetchDuringConstruction&&delete g.__state.dataFetchDuringConstruction;q.apply(this,arguments)}},_call:function(a,g,f){a.apply(f||z,g||[])}});b.extend(t.prototype,{getSWFHTML:function(){b.raiseWarning(this,"11090611381","run","JavaScriptRenderer~getSWFHTML()","getSWFHTML() is not supported for JavaScript charts.")},addVariable:function(){b.raiseWarning(this,"11090611381","run","JavaScriptRenderer~addVariable()",'Use of deprecated "addVariable()". Replace with "configure()".');b.core.prototype.configure.apply(this,
arguments)},getXML:function(){b.raiseWarning(this,"11171116291","run","JavaScriptRenderer~getXML()",'Use of deprecated "getXML()". Replace with "getXMLData()".');return this.getXMLData.apply(this,arguments)},setDataXML:function(){b.raiseWarning(this,"11171116292","run","JavaScriptRenderer~setDataXML()",'Use of deprecated "setDataXML()". Replace with "setXMLData()".');return this.setXMLData.apply(this,arguments)},setDataURL:function(){b.raiseWarning(this,"11171116293","run","JavaScriptRenderer~setDataURL()",
'Use of deprecated "SetDataURL()". Replace with "setXMLUrl()".');return this.setXMLUrl.apply(this,arguments)},hasRendered:function(){return!(!this.jsVars.hcObj||!this.jsVars.hcObj.hasRendered)},setTransparent:function(a){var g;if(g=this.jsVars)"boolean"!==typeof a&&null!==a&&(a=!0),g.transparent=null===a?!1:!0===a?!0:!1}});b.extend(b.core,{_fallbackJSChartWhenNoFlash:function(){z.swfobject.hasFlashPlayerVersion(b.core.options.requiredFlashPlayerVersion)||b.renderer.setDefault("javascript")},_enableJSChartsForSelectedBrowsers:function(a){void 0!==
a&&null!==a&&b.renderer.setDefault((new RegExp(a)).test(z.navigator.userAgent)?"javascript":"flash")},_doNotLoadExternalScript:function(a){var g,f;for(g in a)f=g.toLowerCase(),P[f]&&(T[f]=!!a[g])},_preloadJSChartModule:function(){throw"NotImplemented()";}});b.renderer.register("javascript",t);E||F?b.renderer.setDefault("javascript"):z.swfobject&&z.swfobject.hasFlashPlayerVersion&&!z.swfobject.hasFlashPlayerVersion(b.core.options.requiredFlashPlayerVersion)&&(b.raiseWarning(b.core,"1204111846","run",
"JSRenderer","Switched to JavaScript as default rendering due to absence of required Flash Player."),b.renderer.setDefault("javascript"))}]);N.register("module",["private","modules.renderer.polyfill",function(){"function"!=typeof Object.create&&(Object.create=function(){function b(){}var z=Object.prototype.hasOwnProperty;return function(G){var v,F,E;if("object"!=typeof G)throw new TypeError("Object prototype may only be an Object or null");b.prototype=G;E=new b;b.prototype=null;if(1<arguments.length)for(F in v=
Object(arguments[1]),v)z.call(v,F)&&(E[F]=v[F]);return E}}());Array.prototype.indexOf||(Array.prototype.indexOf=function(b,z){var G,v,F;if(null==this)throw new TypeError('"this" is null or not defined');v=Object(this);F=v.length>>>0;if(0===F)return-1;G=+z||0;Infinity===Math.abs(G)&&(G=0);if(G>=F)return-1;for(G=Math.max(0<=G?G:F-Math.abs(G),0);G<F;){if(G in v&&v[G]===b)return G;G++}return-1});Array.prototype.forEach||(Array.prototype.forEach=function(b,z){var G,v,F,E,t;if(null==this)throw new TypeError(" this is null or not defined");
F=Object(this);E=F.length>>>0;if("function"!==typeof b)throw new TypeError(b+" is not a function");1<arguments.length&&(G=z);for(v=0;v<E;)v in F&&(t=F[v],b.call(G,t,v,F)),v++});Array.prototype.indexOf||(Array.prototype.indexOf=function(b,z){var G;if(null==this)throw new TypeError('"this" is null or not defined');var v=Object(this),F=v.length>>>0;if(0===F)return-1;G=+z||0;Infinity===Math.abs(G)&&(G=0);if(G>=F)return-1;for(G=Math.max(0<=G?G:F-Math.abs(G),0);G<F;){if(G in v&&v[G]===b)return G;G++}return-1});
"function"!=typeof Object.create&&(Object.create=function(){function b(){}var z=Object.prototype.hasOwnProperty;return function(G){var v,F,E;if("object"!=typeof G)throw TypeError("Object prototype may only be an Object or null");b.prototype=G;v=new b;b.prototype=null;if(1<arguments.length)for(E in F=Object(arguments[1]),F)z.call(F,E)&&(v[E]=F[E]);return v}}());Function.prototype.bind||(Function.prototype.bind=function(b){if("function"!==typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
var z=Array.prototype.slice.call(arguments,1),G=this,v=function(){},F=function(){return G.apply(this instanceof v?this:b,z.concat(Array.prototype.slice.call(arguments)))};this.prototype&&(v.prototype=this.prototype);F.prototype=new v;return F});Array.prototype.reduce||(Array.prototype.reduce=function(b){if(null==this)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!==typeof b)throw new TypeError(b+" is not a function");var z=Object(this),G=z.length>>>0,v=0,F;
if(2==arguments.length)F=arguments[1];else{for(;v<G&&!(v in z);)v++;if(v>=G)throw new TypeError("Reduce of empty array with no initial value");F=z[v++]}for(;v<G;v++)v in z&&(F=b(F,z[v],v,z));return F});Object.keys||(Object.keys=function(){var b=Object.prototype.hasOwnProperty,z=!{toString:null}.propertyIsEnumerable("toString"),G="toString toLocaleString valueOf hasOwnProperty isPrototypeOf propertyIsEnumerable constructor".split(" "),v=G.length;return function(F){if("object"!==typeof F&&("function"!==
typeof F||null===F))throw new TypeError("Object.keys called on non-object");var E=[],t;for(t in F)b.call(F,t)&&E.push(t);if(z)for(t=0;t<v;t++)b.call(F,G[t])&&E.push(G[t]);return E}}())}]);N&&N.register("module",["private","vendor.svgdecanvo",function(){var b=this.window,z=this.hcLib;(function(b){var v=b.document,z={},E={},t;t=function(a,b,r,P,v,L,D){var B={svg:"",context:"",callBack:"",imageArr:[],canvas:"",dimention:{}};if(!(this instanceof t))throw"This function should be used as class";this._getStore=
function(a){return"undefined"!=typeof B[a]?B[a]:!1};this._setStore=function(a,b){"undefined"!=typeof B[a]&&(B[a]=b)};this._setStore("dimention",{x:r,y:P,width:v,height:L});a&&this.setSVG(a);b&&this.setContext(b);D&&this.setCallback(D);this.drawOnCanvas()};t.prototype.setContext=function(a){var b;if(a.getContext&&a.getContext("2d"))b=a.getContext("2d"),this._setStore("canvas",a),this._setStore("context",b);else throw"Please provide valid canvas";};t.prototype.getContext=function(){return this._getStore("context")};
t.prototype.setSVG=function(a){if("undefined"!=typeof a.documentElement)this._setStore("svg",a);else if("<"==a.substr(0,1))a=E.StrToDom(a),this._setStore("svg",a);else throw"Please provide valid SVG";};t.prototype.getSVG=function(){return this._getStore("svg")};t.prototype.setCallback=function(a){"function"===typeof a&&this._setStore("callBack",a)};t.prototype.getCallback=function(){return this._getStore("callBack")};t.prototype.drawOnCanvas=function(a,b,r,P,t,L,D){var B,m,p,q;a&&this.setSVG(a);b&&
this.setContext(b);D&&this.setCallback(D);b=b||this._getStore("canvas");p=this._getStore("dimention");D=this.getCallback();B=this.getContext();(a=this.getSVG())&&B&&(q=E.getSvgDimention(a),m=q.width,b=q.height,r=r||p.x||0,P=P||p.y||0,t=t||p.width||m,L=L||p.height||b,m=q.width?t/m:1,b=q.height?L/b:1,E.startTransform("translate("+r+","+P+") scale("+m+","+b+")",B),B.save(),B.fillStyle="#ffffff",B.fillRect(0,0,t,L),B.restore(),E.storeImagesInArr(this),E.drawNodes([a],[],this,B,function(){"function"===
typeof D&&D();E.resetTransform(B)}))};z.common=function(a,b,r,t,v){var L=a.childNodes,D,B=function(){a.attributes&&t.restore();v&&v()};for(D in b)b.hasOwnProperty(D)&&"class"!=b[D].name&&"id"!=b[D].name&&"transform"!=b[D].name&&"clip-path"!=b[D].name&&"object"==typeof b[D]&&a.attributes&&!a.attributes[b[D].name]&&a.setAttribute([b[D].name],b[D].value);if(a.attributes&&a.attributes.style)for(D in styleArr=a.attributes.style.value.replace(/;$/,"").split(";"),styleArr)if(styleArr.hasOwnProperty(D)&&
(styleName=styleArr[D].split(":")[0].trim(),!a.attributes[styleName]||"undefined"==a.attributes[styleName].value))try{a.setAttribute(styleName,styleArr[D].split(":")[1].trim())}catch(m){}a.attributes&&(t.save(),a.attributes.transform&&E.startTransform(a.attributes.transform.value,t),a.attributes["clip-path"]&&E.applyClip(a.attributes["clip-path"].value,t,r));if(0===L.length||1===L.length&&!L[0].tagName)if("undefined"!==typeof a.tagName)if(b="draw"+a.tagName,z[b])if(a.attributes.display&&"none"==a.attributes.display.value)B();
else z[b](a,t,r,"draw",B);else B();else B();else E.drawNodes(L,"svg"==a.tagName?[]:a.attributes,r,t,B)};z.drawtext=function(a,b,r,t,v){this.drawtspan(a,b,r,t,v)};z.drawtspan=function(a,t,r,P,z){var L=a.innerHTML||a.textContent,D=a.attributes.x?a.attributes.x.value:0,B=a.attributes.y?a.attributes.y.value:0,m=a.attributes.dx?a.attributes.dx.value:0,p=a.attributes.dy?a.attributes.dy.value:0,q="serief",A="normal",n="16px",k=[],g;v.getElementsByTagName("body")[0]&&(g=b.getComputedStyle(v.getElementsByTagName("body")[0],
null),g.getPropertyValue("font-family")&&(q=g.getPropertyValue("font-family")),g.getPropertyValue("font-weight")&&(A=g.getPropertyValue("font-weight")),g.getPropertyValue("font-size")&&(n=g.getPropertyValue("font-size")));q=a.attributes["font-family"]?a.attributes["font-family"].value:q;A=a.attributes["font-weight"]?a.attributes["font-weight"].value:A;g=a.attributes["text-anchor"]?a.attributes["text-anchor"].value:"start";n=a.attributes["font-size"]?a.attributes["font-size"].value:n;D=Number(D)+Number(m);
B=Number(B)+Number(p);L=L.trim();g="middle"==g?"center":g;t.save();t.font=A+" "+n+" "+q;t.textAlign=g;if("draw"===P){if(!a.attributes.fill||a.attributes.fill&&"none"!=a.attributes.fill.value)E.applyFillEffect(a,t,r,k),t.fillText(L,D,B),E.endFillEffect(a,t);if(!a.attributes.stroke||a.attributes.stroke&&"none"!=a.attributes.stroke.value)E.applyStrokeEffect(a,t,r,k),t.strokeText(L,D,B),E.endStrokeEffect(a,t)}t.restore();"function"===typeof z&&z()};z.drawcircle=function(a,b,r,t,v){var L=Number(a.attributes.cx.value),
D=Number(a.attributes.cy.value),B=Number(a.attributes.r.value),m=[];b.beginPath();b.arc(L,D,B,0,2*Math.PI);E.bBoxFromPoint([L,1*L+1*B,1*L-1*B],[D,1*D+1*B,1*D-1*B],m);if("draw"===t){if(!a.attributes.fill||a.attributes.fill&&"none"!=a.attributes.fill.value)E.applyFillEffect(a,b,r,m),b.fill(),E.endFillEffect(a,b);if(!a.attributes.stroke||a.attributes.stroke&&"none"!=a.attributes.stroke.value)E.applyStrokeEffect(a,b,r,m),b.stroke(),E.endStrokeEffect(a,b)}b.closePath();"function"===typeof v&&v()};z.drawrect=
function(a,b,r,t,v){var L=Number(a.attributes.x.value),D=Number(a.attributes.y.value),B=a.attributes.rx?Number(a.attributes.rx.value):0,m=a.attributes.ry?Number(a.attributes.ry.value):0,p=Number(a.attributes.height.value),q=Number(a.attributes.width.value),A=[];E.bBoxFromPoint([L,L+q],[D,D+p],A);b.beginPath();b.moveTo(L+B,D);b.lineTo(L+q-B,D);b.quadraticCurveTo(L+q,D,L+q,D+m);b.lineTo(L+q,D+p-m);b.quadraticCurveTo(L+q,D+p,L+q-B,D+p);b.lineTo(L+B,D+p);b.quadraticCurveTo(L,D+p,L,D+p-m);b.lineTo(L,D+
m);b.quadraticCurveTo(L,D,L+B,D);if("draw"===t){if(!a.attributes.fill||a.attributes.fill&&"none"!=a.attributes.fill.value)E.applyFillEffect(a,b,r,A),b.fill(),E.endFillEffect(a,b);if(!a.attributes.stroke||a.attributes.stroke&&"none"!=a.attributes.stroke.value)E.applyStrokeEffect(a,b,r,A),b.stroke(),E.endStrokeEffect(a,b)}b.closePath();"function"===typeof v&&v()};z.drawellipse=function(a,b,r,t,v){var L=Number(a.attributes.cx.value),D=Number(a.attributes.cy.value),B=Number(a.attributes.rx.value),m=Number(a.attributes.ry.value),
p=.5522848*B,q=.5522848*m,A=L+B,n=D+m,k=[];b.beginPath();b.moveTo(L-B,D);b.bezierCurveTo(L-B,D-q,L-p,D-m,L,D-m);b.bezierCurveTo(L+p,D-m,A,D-q,A,D);b.bezierCurveTo(A,D+q,L+p,n,L,n);b.bezierCurveTo(L-p,n,L-B,D+q,L-B,D);E.bBoxFromPoint([L+B,L-B],[D+m,D-m],k);if("draw"===t){if(!a.attributes.fill||a.attributes.fill&&"none"!=a.attributes.fill.value)E.applyFillEffect(a,b,r,k),b.fill(),E.endFillEffect(a,b);if(!a.attributes.stroke||a.attributes.stroke&&"none"!=a.attributes.stroke.value)E.applyStrokeEffect(a,
b,r,k),b.stroke(),E.endStrokeEffect(a,b)}b.closePath();"function"===typeof v&&v()};z.drawimage=function(a,b,r,t,v){var L=a.attributes.x?Number(a.attributes.x.value):0,D=a.attributes.y?Number(a.attributes.y.value):0,B=a.attributes.height?Number(a.attributes.height.value):0,m=a.attributes.width?Number(a.attributes.width.value):0,p,q=r._getStore("imageArr");b.save();a.attributes.opacity&&(b.globalAlpha=a.attributes.opacity.value);a.attributes["xlink:href"]?(p=a.attributes["xlink:href"].value,"complete"===
q[p].status?(b.drawImage(q[p].obj,L,D,m,B),b.globalAlpha=1,b.restore(),"function"===typeof v&&v()):"error"===q[p].status?(b.globalAlpha=1,b.restore(),"function"===typeof v&&v()):"progress"===q[p].status?(q[p].callback=function(){b.drawImage(q[p].obj,L,D,m,B);b.globalAlpha=1;b.restore();"function"===typeof v&&v()},q[p].errCallback=function(){b.globalAlpha=1;b.restore();"function"===typeof v&&v()}):(b.globalAlpha=1,b.restore(),"function"===typeof v&&v())):(b.globalAlpha=1,b.restore(),"function"===typeof v&&
v())};z.drawpath=function(a,b,r,t,v){var L=a.attributes.d.value.match(/[a-z][^a-z"]*/ig),D=[],B,m,p,q=0,A=0,n;b.beginPath();for(B in L)if(L.hasOwnProperty(B))switch(m=L[B].substring(0,1),p=E.getArgsAsArray(L[B].substring(1,L[B].length)),m){case "M":q=Number(p[0]);A=Number(p[1]);b.moveTo(q,A);break;case "m":q+=Number(p[0]);A+=Number(p[1]);b.moveTo(q,A);break;case "L":for(n=0;p[n];n+=2)E.bBoxFromPoint([q,p[n]],[A,p[n+1]],D),q=Number(p[n]),A=Number(p[n+1]),b.lineTo(q,A);break;case "l":for(n=0;p[n];n+=
2)E.bBoxFromPoint([q,1*q+1*p[n]],[A,1*A+1*p[n+1]],D),q+=Number(p[n]),A+=Number(p[n+1]),b.lineTo(q,A);break;case "V":for(n=0;p[n];n+=1)E.bBoxFromPoint([q],[A,p[n]],D),A=Number(p[n]),b.lineTo(q,A);break;case "v":for(n=0;p[n];n+=1)E.bBoxFromPoint([q],[A,1*A+1*p[n]],D),A+=Number(p[n]),b.lineTo(q,A);break;case "H":for(n=0;p[n];n+=1)E.bBoxFromPoint([q,p[n]],[A],D),q=Number(p[n]),b.lineTo(q,A);break;case "h":for(n=0;p[n];n+=1)E.bBoxFromPoint([q,1*q+1*p[n]],[A],D),q+=Number(p[n]),b.lineTo(q,A);break;case "Q":for(n=
0;p[n];n+=4)E.qBezierBBox(q,A,p[n],p[n+1],p[n+2],p[n+3],D),b.quadraticCurveTo(Number(p[n]),Number(p[n+1]),Number(p[n+2]),Number(p[n+3])),q=Number(p[n+2]),A=Number(p[n+3]);break;case "q":for(n=0;p[n];n+=4)E.qBezierBBox(q,A,q+1*p[n],A+1*p[n+1],1*q+1*p[n+2],1*A+1*p[n+3],D),b.quadraticCurveTo(q+1*p[n],A+1*p[n+1],q+=Number(p[n+2]),A+=Number(p[n+3]));break;case "C":for(n=0;p[n];n+=6)E.cBezierBBox(q,A,p[n],p[n+1],p[n+2],p[n+3],p[n+4],p[n+5],D),b.bezierCurveTo(p[n],p[n+1],p[n+2],p[n+3],p[n+4],p[n+5]),q=Number(p[n+
4]),A=Number(p[n+5]);break;case "c":for(n=0;p[n];n+=6)E.cBezierBBox(q,A,q+1*p[n],1*A+1*p[n+1],q+1*p[n+2],1*A+1*p[n+3],q+1*p[n+4],1*A+1*p[n+5],D),b.bezierCurveTo(q+Number(p[n]),A+Number(p[n+1]),q+Number(p[n+2]),A+Number(p[n+3]),q+=Number(p[n+4]),A+=Number(p[n+5]));break;case "a":case "A":for(n=0;p[n];n+=7){var k=Number(p[n]),g=Number(p[n+1]),f,S,C,Y,R,u,X,O,W,H,w,K,h,V;f=Math.PI/180*Number(p[n+2]);S=Number(p[n+3]);C=Number(p[n+4]);Y=Number(p[n+5]);R=Number(p[n+6]);u=Math.cos(f)*(q-Y)/2+Math.sin(f)*
(A-R)/2;X=-Math.sin(f)*(q-Y)/2+Math.cos(f)*(A-R)/2;k=0>k?-k:k;g=0>g?-g:g;K=Math.pow(u,2)/Math.pow(k,2)+Math.pow(X,2)/Math.pow(g,2);1<K&&(k*=Math.sqrt(K),g*=Math.sqrt(K));K=k>g?k:g;h=k>g?1:k/g;V=k>g?g/k:1;S=(S==C?-1:1)*Math.sqrt((Math.pow(k,2)*Math.pow(g,2)-Math.pow(k,2)*Math.pow(X,2)-Math.pow(g,2)*Math.pow(u,2))/(Math.pow(k,2)*Math.pow(X,2)+Math.pow(g,2)*Math.pow(u,2)));isNaN(S)&&(S=0);O=S*k*X/g;W=-S*g*u/k;H=O*Math.cos(f)-W*Math.sin(f)+(q+Y)/2;w=O*Math.sin(f)+W*Math.cos(f)+(A+R)/2;S=E.angleBetweenVectors(1,
0,(u-O)/k,(X-W)/g);u=E.angleBetweenVectors((u-O)/k,(X-W)/g,(-u-O)/k,(-X-W)/g);0===C&&0<u&&(u-=Math.PI/180*360);1==C&&0>u&&(u+=Math.PI/180*360);if(0===k&&0===g){b.lineTo(Y,R);break}b.save();k=E.combineTransformMatrix([[1,0,H,0,1,w],[Math.cos(f),Math.sin(f),0,Math.sin(f),Math.cos(f),0],[h,0,0,0,V,0]]);b.transform(k[0],k[3],k[1],k[4],k[2],k[5]);b.arc(0,0,K,S,S+u,1-C);b.restore();E.arcBBox(0,0,K,S,S+u,1-C,[k[0],k[3],k[1],k[4],k[2],k[5]],D);"A"==m?(q=Number(p[n+5]),A=Number(p[n+6])):(q+=Number(p[n+5]),
A+=Number(p[n+6]))}break;case "Z":case "z":b.closePath()}if("draw"===t){if(!a.attributes.fill||a.attributes.fill&&"none"!=a.attributes.fill.value)E.applyFillEffect(a,b,r,D),b.fill(),E.endFillEffect(a,b);if(!a.attributes.stroke||a.attributes.stroke&&"none"!=a.attributes.stroke.value)E.applyStrokeEffect(a,b,r,D),b.stroke(),E.endStrokeEffect(a,b);v()}};E.drawNodes=function(a,b,r,t,v){var L=a.length,D=-1,B=0,m=0,p=function(){var q;D+=1;D<L?(q=a[D],q.tagName&&"defs"===q.tagName&&(D+=1,q=a[D]),q.attributes&&
(q.attributes.dy&&(m=q.attributes.dy.value=1*q.attributes.dy.value+1*m),q.attributes.dx&&(B=q.attributes.dx.value=1*q.attributes.dx.value+1*B)),z.common(q,b,r,t,p)):v&&v()};p()};E.getSvgDimention=function(a){var b={width:0,height:0};node=a.childNodes&&a.childNodes[0]&&a.childNodes[0].attributes;b.width=Number(node.width&&node.width.value||0);b.height=Number(node.height&&node.height.value||0);return b};E.storeImagesInArr=function(a){var b=a.getSVG(),r,t;r=a._getStore("imageArr");a=b.getElementsByTagName("image");
for(t in a)a.hasOwnProperty(t)&&a[t].attributes&&a[t].attributes["xlink:href"]&&(b=a[t].attributes["xlink:href"].value,r[b]||(r[b]=[],r[b].status="progress",r[b].callback=null,r[b].obj=new Image,r[b].obj.onload=function(a){return function(){var b=r[a].callback;b?(r[a].status="complete",b()):r[a].status="complete"}}(b),r[b].obj.onerror=function(a){return function(){var b=r[a].errCallback;b?(r[a].status="error",b()):r[a].status="error"}}(b),r[b].obj.src=b))};E.startTransform=function(a,b){var r=a.match(/[^\s][a-z,0-9.\-(\s]+\)/gi),
t,v;for(v in r)r.hasOwnProperty(v)&&(-1<r[v].indexOf("matrix")&&(t=E.stringToArgs(r[v]),b.transform(t[0],t[1],t[2],t[3],t[4],t[5])),-1<r[v].indexOf("translate")&&(t=E.stringToArgs(r[v]),b.translate(t[0]||0,t[1]||0)),-1<r[v].indexOf("rotate")&&(t=E.stringToArgs(r[v]),3==t.length?(b.translate(t[1],t[2]),b.rotate(Math.PI/180*t[0]),b.translate(-t[1],-t[2])):b.rotate(Math.PI/180*t[0])),-1<r[v].indexOf("scale")&&(t=E.stringToArgs(r[v]),1==t.length?b.scale(t[0]||1,t[0]||1):b.scale(t[0]||1,t[1]||1)),-1<r[v].indexOf("skewX")&&
(t=E.stringToArgs(r[v]),b.transform(1,0,Math.tan(Math.PI/180*t[0]),1,0,0)),-1<r[v].indexOf("skewY")&&(t=E.stringToArgs(r[v]),b.transform(1,Math.tan(Math.PI/180*t[0]),0,1,0,0)))};E.resetTransform=function(a){a.setTransform(1,0,0,1,0,0)};E.stringToArgs=function(a){a=/\(([^\)]+)/.exec(a)[1];return E.getArgsAsArray(a)};E.getArgsAsArray=function(a){var b;a=a.trim().split(/[\s,]+/);for(b=0;b<a.length;b++)a[b].trim(),0===a[b].length&&a.splice(b,1);return a};E.applyFillEffect=function(a,b,r,t){b.globalAlpha=
a.attributes["fill-opacity"]&&"none"!=a.attributes["fill-opacity"].value?a.attributes["fill-opacity"].value:1;a.attributes.fill&&-1<a.attributes.fill.value.indexOf("url(")?(a=E.getFillStyleById(/url\(.*#([^\)'"]+)/.exec(a.attributes.fill.value)[1],b,r,t),b.fillStyle=a):b.fillStyle=a.attributes.fill?a.attributes.fill.value:"#000000"};E.endFillEffect=function(a,b){b.globalAlpha=1};E.applyStrokeEffect=function(a,b,r,t){a.attributes["stroke-opacity"]&&"none"!=a.attributes["stroke-opacity"].value&&(b.globalAlpha=
a.attributes["stroke-opacity"].value);a.attributes["stroke-width"]&&(b.lineWidth=a.attributes["stroke-width"].value,0===a.attributes["stroke-width"].value&&(b.globalAlpha=0));a.attributes["stroke-linecap"]&&"none"!=a.attributes["stroke-linecap"].value&&(b.lineCap=a.attributes["stroke-linecap"].value);a.attributes["stroke-linejoin"]&&"none"!=a.attributes["stroke-linejoin"].value&&(b.lineJoin=a.attributes["stroke-linejoin"].value);a.attributes["stroke-dasharray"]&&"none"!=a.attributes["stroke-dasharray"].value&&
b.setLineDash&&b.setLineDash(E.getArgsAsArray(a.attributes["stroke-dasharray"].value));b.strokeStyle=a.attributes.stroke?a.attributes.stroke.value:"#000000"};E.endStrokeEffect=function(a,b){a.attributes["stroke-opacity"]&&"none"!=a.attributes["stroke-opacity"].value&&(b.globalAlpha=1,b.setLineDash&&b.setLineDash([]),b.lineWidth=1);b.globalAlpha=1};E.applyClip=function(a,b,r){var t=r.getSVG(),v,L;if(-1!==a.indexOf("url(")){a=/url\(.*#([^\)'"]+)/.exec(a)[1];t=t.getElementById(a);t.attributes&&(b.save(),
t.attributes.transform&&E.startTransform(t.attributes.transform.value,b));a=t.childNodes;for(v in a)a.hasOwnProperty(v)&&a[v].tagName&&a[v].constructor!==Array&&(L="draw"+a[v].tagName,a[v].attributes&&(b.save(),a[v].attributes.transform&&E.startTransform(a[v].attributes.transform.value,b)),z[L]&&(z[L](a[v],b,r,"clip"),b.closePath()),a[v].attributes&&b.restore());t.attributes&&b.restore();b.clip()}};E.getFillStyleById=function(a,b,r,t){a=r.getSVG().getElementById(a);return"linearGradient"==a.tagName?
E.getLinearGradient(a,b,t):"radialGradient"==a.tagName?E.getRadialGradient(a,b,t):"#FFFFFF"};E.getLinearGradient=function(a,b,r){var t=a.attributes.x1?E.getPercentValue(a.attributes.x1.value,r.xMax-r.xMin,r.xMin):0,v=a.attributes.y1?E.getPercentValue(a.attributes.y1.value,r.yMax-r.yMin,r.yMin):0,L=a.attributes.x2?E.getPercentValue(a.attributes.x2.value,r.xMax-r.xMin,r.xMin):0;r=a.attributes.y2?E.getPercentValue(a.attributes.y2.value,r.yMax-r.yMin,r.yMin):0;var D;linGrad=b.createLinearGradient(t,v,
L,r);a=a.childNodes;for(D in a)a.hasOwnProperty(D)&&a[D].attributes&&a[D].attributes["stop-color"]&&(b=E.toRGB(a[D].attributes["stop-color"].value),t=a[D].attributes["stop-opacity"]?a[D].attributes["stop-opacity"].value:1,b.status?linGrad.addColorStop(E.getPercentValue(a[D].attributes.offset.value,1,0),"rgba("+b.r+","+b.g+","+b.b+","+Number(t)+")"):linGrad.addColorStop(E.getPercentValue(a[D].attributes.offset.value,1,0),a[D].attributes["stop-color"].value));return linGrad};E.getRadialGradient=function(a,
b,r){var t=a.attributes.cx?E.getPercentValue(a.attributes.cx.value,r.xMax-r.xMin,r.xMin):r.xMin+.5*(r.xMax-r.xMin),v=a.attributes.cy?E.getPercentValue(a.attributes.cy.value,r.yMax-r.yMin,r.yMin):r.yMin+.5*(r.yMax-r.yMin),L=a.attributes.fx?E.getPercentValue(a.attributes.fx.value,r.xMax-r.xMin,r.xMin):r.xMin+.5*(r.xMax-r.xMin),D=a.attributes.fy?E.getPercentValue(a.attributes.fy.value,r.yMax-r.yMin,r.yMin):r.yMin+.5*(r.yMax-r.yMin);r=a.attributes.r?E.getPercentValue(a.attributes.r.value,(r.yMax-r.yMin+
r.xMax-r.xMin)/2,0):E.getPercentValue("50%",(r.yMax-r.yMin+r.xMax-r.xMin)/2,0);var B;b=b.createRadialGradient(L,D,0,t,v,r);a=a.childNodes;for(B in a)a.hasOwnProperty(B)&&a[B].attributes&&a[B].attributes["stop-color"]&&(t=E.toRGB(a[B].attributes["stop-color"].value),v=a[B].attributes["stop-opacity"]?a[B].attributes["stop-opacity"].value:1,t.status?b.addColorStop(E.getPercentValue(a[B].attributes.offset.value,1,0),"rgba("+t.r+","+t.g+","+t.b+","+Number(v)+")"):b.addColorStop(E.getPercentValue(a[B].attributes.offset.value,
1,0),a[B].attributes["stop-color"].value));return b};E.getPercentValue=function(a,b,r){return-1!=a.indexOf("%")?(a=/(\d.*)%/.exec(a)[1],100<a&&(a=100),a*b/100+1*r):1<a?a:a*b+1*r};E.bBoxFromPoint=function(a,b,r){"undefined"!==typeof r.xMin&&(a.push(r.xMin,r.xMax),b.push(r.yMin,r.yMax));r.xMin=Math.min.apply(this,a);r.xMax=Math.max.apply(this,a);r.yMin=Math.min.apply(this,b);r.yMax=Math.max.apply(this,b)};E.arcBBox=function(a,b,r,t,v,L,D,B){var m,p,q;D instanceof Array&&(a=a*D[0]+a*D[2]+D[4],b=b*D[1]+
b*D[3]+D[5]);q=function(a,b,k){a=(a+2*Math.PI)%(2*Math.PI);b=(b+2*Math.PI)%(2*Math.PI);if(a<=b)return a<=k&&k<=b?!0:!1;if(a>=b)return a>=k&&k>=b?!1:!0};D=t%(2*Math.PI);m=v%(2*Math.PI);L&&(D=v%(2*Math.PI),m=t%(2*Math.PI));L=a+r*Math.cos(D);t=b+r*Math.sin(D);p=a+r*Math.cos(m);v=b+r*Math.sin(m);L=[L,p];t=[t,v];q(D,m,0)&&(L.push(1*a+1*r),t.push(b));q(D,m,.5*Math.PI)&&(L.push(a),t.push(1*b+1*r));q(D,m,Math.PI)&&(L.push(a-1*r),t.push(b));q(D,m,1.5*Math.PI)&&(L.push(a),t.push(b-1*r));a=Math.max.apply(this,
L);b=Math.min.apply(this,L);r=Math.max.apply(this,t);D=Math.min.apply(this,t);"undefined"!==typeof B.xMin?(B.xMin=Math.min(b,B.xMin),B.xMax=Math.max(a,B.xMax),B.yMin=Math.min(D,B.yMin),B.yMax=Math.max(r,B.yMax)):(B.xMin=b,B.xMax=a,B.yMin=D,B.yMax=r)};E.qBezierBBox=function(a,b,r,t,v,L,D){var B=1*a-2*r+1*v,m=1*b-2*t+1*L;0===B||0===m?(t=Math.max(a,v),a=Math.min(a,v),v=Math.max(b,L),b=Math.min(b,L)):(B=(a-r)/B,m=(b-t)/m,r=a*Math.pow(1-B,2)+2*r*(1-B)*B+v*Math.pow(B,2),m=b*Math.pow(1-m,2)+2*t*(1-m)*m+
L*Math.pow(m,2),t=Math.max(a,v,r),a=Math.min(a,v,r),v=Math.max(b,L,m),b=Math.min(b,L,m));"undefined"!==typeof D.xMin?(D.xMin=Math.min(a,D.xMin),D.xMax=Math.max(t,D.xMax),D.yMin=Math.min(b,D.yMin),D.yMax=Math.max(v,D.yMax)):(D.xMin=a,D.xMax=t,D.yMin=b,D.yMax=v)};E.cBezierBBox=function(a,b,r,t,v,L,D,B,m){var p,q,A,n,k,g,f;null===v&&null===L&&(r=a+2/3*(r-a),v=b+2/3*(t-b),t=r+1/3*(D-a),L=v+1/3*(B-b));f=function(a,b,f,k,g){return a*Math.pow(1-g,3)+3*b*g*Math.pow(1-g,2)+3*f*g*g*(1-g)+k*g*g*g};A=3*D-9*v+
9*r-3*a;n=6*a-12*r+6*v;k=Math.pow(n,2)-4*A*(3*r-3*a);q=p=a;D<p&&(p=D);D>q&&(q=D);0<=k&&(g=(-n+Math.sqrt(k))/(2*A),0<g&&1>g&&(g=f(a,r,v,D,g),g<p&&(p=g),g>q&&(q=g)),A=(-n-Math.sqrt(k))/(2*A),0<A&&1>A&&(g=f(a,r,v,D,A),g<p&&(p=g),g>q&&(q=g)));A=3*B-9*L+9*t-3*b;n=6*b-12*t+6*L;k=Math.pow(n,2)-4*A*(3*t-3*b);r=a=b;B<a&&(a=B);B>r&&(r=B);0<=k&&(g=(-n+Math.sqrt(k))/(2*A),0<g&&1>g&&(v=f(b,t,L,B,g),v<a&&(a=v),v>r&&(r=v)),A=(-n-Math.sqrt(k))/(2*A),0<A&&1>A&&(v=f(b,t,L,B,A),v<a&&(a=v),v>r&&(r=v)));"undefined"!==
typeof m.xMin?(m.xMin=Math.min(p,m.xMin),m.xMax=Math.max(q,m.xMax),m.yMin=Math.min(a,m.yMin),m.yMax=Math.max(r,m.yMax)):(m.xMin=p,m.xMax=q,m.yMin=a,m.yMax=r)};E.combineTransformMatrix=function(a){var b=a.length-1,r;if(0>=b)return a[0];r=a[0];for(i=1;i<=b;i++)r[0]=r[0]*a[i][0]+r[1]*a[i][3],r[1]=r[0]*a[i][1]+r[1]*a[i][4],r[2]=r[0]*a[i][2]+r[1]*a[i][5]+1*r[2],r[3]=r[3]*a[i][0]+r[4]*a[i][3],r[4]=r[3]*a[i][1]+r[4]*a[i][4],r[5]=r[3]*a[i][2]+r[4]*a[i][5]+1*r[5];return r};E.angleBetweenVectors=function(a,
b,r,t){return(a*t<b*r?-1:1)*Math.acos((a*r+b*t)/(Math.sqrt(Math.pow(a,2)+Math.pow(b,2))*Math.sqrt(Math.pow(r,2)+Math.pow(t,2))))};E.toRGB=function(a){var b={r:0,g:0,b:0,status:0},r,t;r=function(a){for(t in a)a.hasOwnProperty(t)&&(0>a[t]||isNaN(a[t])?a[t]=0:255<a[t]&&(a[t]=255));return b={r:a[0],g:a[1],b:a[2],status:1}};a=a.trim();a.match(/^rgb\(|^rgba\(/i)?(a=/\(\s*(\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})/.exec(a),r([parseInt(a[1]),parseInt(a[2]),parseInt(a[3])])):a.match(/^#/)&&(a=/(\w{2})(\w{2})(\w{2})/.exec(a),
r([parseInt(a[1],16),parseInt(a[2],16),parseInt(a[3],16)]));return b};E.StrToDom=function(a){var t;b.DOMParser?(t=new DOMParser,t=t.parseFromString(a,"text/xml")):(t=new ActiveXObject("Microsoft.XMLDOM"),t.async=!1,t.loadXML(a));return t};b.SvgDeCanvo=t})(this.window||window);b.SvgDeCanvo&&(z.SvgDeCanvo=b.SvgDeCanvo,b.SvgDeCanvo=void 0)}]);N.register("module",["private","modules.renderer.js-lib-attr",function(){var b={},z=this.hcLib||(this.hcLib={}),G=Math.max,v=z.attrTypeNum=1,F=z.attrTypeBool=2;
z.parseConfiguration=function(E,t,a,G,r,P){var T=z.attribDefs||b,L,D,B,m=1,p;G=G||b;P=P||b;r=r||{};for(L in E)if(!G[L]&&((D=E[L])||!1===D||0===D))switch(B=(p=P[L]||T[L])&&p.type,B){case v:D=Number(D);isNaN(D)||(t[L]=D);break;case F:D=Number(D);isNaN(D)||(t[L]=!!D);break;default:t[L]=D}if(a)for(L in t)void 0===t[L]&&(p=P[L]||T[L])&&p.pAttr&&(t[L]=a[p.pAttr]);for(;m;)for(L in m=0,t)void 0===t[L]&&(p=P[L]||T[L])&&(p.attr?void 0!==(D=t[p.attr])&&(t[L]=D,m+=1):p.parser&&void 0!==(D=p.parser(t,a,r))&&(t[L]=
D,m+=1))};z.setAttribDefs=function(b,t){var a=z.attribDefs,v,r;"string"===typeof b?(v={},v[b]=t):v=b;for(r in v)a[r]||(a[r]=v[r])};z.hasAttribDefs=function(b){return!!z.attribDefs[b]};z.attribDefs={setBorderWidth:{type:v,pAttr:"plotborderthickness"},plotborderthickness:{type:v,pAttr:"plotborderthickness"},showBorderEffect:{parser:function(b,t){return 1===+t.showplotborder&&.1===t.plotborderthickness?1:0}},alphaanimation:{type:v},showplotborder:{type:v,pAttr:"showplotborder"},zeroplanethickness:{type:v},
showzeroplaneontop:{type:v},stickytracking:{type:v},usemessagelog:{type:v},showtooltip:{type:v,pAttr:"showtooltip"},seriesnameintooltip:{type:v},plothovereffect:{type:v,attr:"anchorhovereffect"},anchorhovereffect:{type:v,attr:"showhovereffect"},showhovereffect:{type:v,attr:"drawcrossline"},drawcrossline:{type:v},linethickness:{type:v,pAttr:"linethickness"},dashed:{type:v,pAttr:"linedashed"},linedashed:{type:v,attr:"plotborderdashed"},plotborderdashed:{type:v,pAttr:"plotborderdashed"},linedashlen:{type:v,
pAttr:"linedashlen"},linedashgap:{type:v,pAttr:"linedashgap"},anchoralpha:{pAttr:"anchoralpha"},anchorsides:{type:v,pAttr:"anchorsides"},anchorradius:{type:v,pAttr:"anchorradius"},anchorbgalpha:{pAttr:"anchorbgalpha"},anchorbgcolor:{pAttr:"anchorbgcolor"},anchorbordercolor:{pAttr:"anchorbordercolor"},anchorstartangle:{type:v,pAttr:"anchorstartangle"},anchorimageurl:{pAttr:"anchorimageurl"},anchorimagescale:{type:v,pAttr:"anchorimagescale"},anchorimagealpha:{pAttr:"anchorimagealpha"},anchorimagepadding:{type:v,
pAttr:"anchorimagepadding"},anchorborderthickness:{type:v,pAttr:"anchorborderthickness"},anchorshadow:{type:v,pAttr:"anchorshadow"},valuepadding:{type:v,pAttr:"valuepadding"},valueposition:{pAttr:"valueposition"},plotfillangle:{type:v,pAttr:"plotfillangle"},useplotgradientcolor:{type:v},rotatevalues:{type:v,pAttr:"rotatevalues"},includeinlegend:{type:v},connectnulldata:{type:v},plotfillalpha:{pAttr:"plotfillalpha"},alpha:{pAttr:"linealpha"},linealpha:{pAttr:"plotfillalpha"},showvalues:{type:v,pAttr:"showvalues"},
showpercentvalues:{type:v,parser:function(b){return b.isstacked&&b.stack100percent?1:0}},showpercentintooltip:{type:v,parser:function(b){return b.isstacked&&b.stack100percent?1:0}},stack100percent:{type:v,attr:"usepercentdistribution"},drawfullareaborder:{type:v},use3dlineshift:{type:v},parentyaxis:{type:v},radarborderthickness:{type:v},radarborderradius:{type:v},gaugeoriginx:{type:v},hasgaugeoriginx:{attr:"gaugeoriginx"},gaugeoriginy:{type:v},hasgaugeoriginy:{attr:"gaugeoriginy"},gaugeradius:{type:v},
hasgaugeradius:{attr:"gaugeradius"},showgaugeborder:{type:v},setAdaptiveMin:{type:v},adjustDiv:{type:v},axisNameWidth:{type:v},rotateAxisName:{type:v},useEllipsesWhenOverflow:{type:v},showZeroPlane:{type:v},zeroPlaneAlpha:{type:v},showZeroPlaneValue:{type:v},zeroPlaneOnTop:{type:v},trendlineThickness:{type:v},showTrendlinesOnTop:{type:v},trendlinesAreDashed:{type:v},trendlinesDashLen:{type:v},trendlinesDashGap:{type:v},showTrendlines:{type:v},showTrendlineLabels:{type:v},showLabels:{type:v},rotateLabels:{type:v},
slantLabel:{type:v},showAxisValues:{type:v},showTooltip:{type:v},maxLabelHeight:{type:v},useroundedges:{type:v,pAttr:"useroundedges"},placevaluesinside:{type:v},plotpaddingpercent:{type:v},use3dlighting:{type:v,pAttr:"use3dlighting"},usedataplotcolorforlabels:{type:v},plotspacepercent:{type:v,parser:function(b){return G(b.plotspacepercent%100,0)}},ratio:{pAttr:"plotfillratio"},base:{type:v},showMinorDivLineValues:{type:v},numMinorDivLines:{type:v},majorTMNumber:{type:v},majorTMHeight:{type:v},showTickMarks:{type:v},
majorTMThickness:{type:v},adjustTM:{type:F},minorTMNumber:{type:v},minorTMThickness:{type:v},tickMarkDistance:{type:v},placeTicksInside:{type:v},placeValuesInside:{type:v},axisValuePadding:{type:v},gridLineWidth:{type:v},showRadarBorder:{type:v},radarBorderThickness:{type:v},maxcolwidth:{type:v,parser:function(b){return Math.abs(b.maxcolwidth)}},maxbarheight:{type:v,parser:function(b){return Math.abs(b.maxbarheight)}},plotborderalpha:{parser:function(b,t){return t.plotborderalpha||b.plotfillalpha}},
autoscale:{type:v},plotborderdashlen:{type:v,pAttr:"plotborderdashlen"},plotborderdashgap:{type:v,pAttr:"plotborderdashgap"},plotfillratio:{pAttr:"plotfillratio"},drawverticaljoins:{type:v,pAttr:"drawverticaljoins"},useforwardsteps:{type:v,pAttr:"useforwardsteps"},minimizetendency:{type:v},usepercentdistribution:{type:v},stepatmiddle:{type:v}}}]);N.register("module",["private","modules.renderer.js-lib",function(){var b=this,z=b.window,G,v=z.document,F=z.navigator,E=!(!z.SVGAngle&&!v.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure",
"1.1")),t=/msie/i.test(F.userAgent)&&!z.opera,a=z.parseFloat,Q=/\s+/g,r=/^#?/,P=/^rgba/i,T=/[#\s]/ig,L=/\{br\}\s*/ig,D=/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i,B=Math.abs,m=Math.pow,p=Math.round,q=m(2,-24),A=Object.prototype.toString,n="ontouchstart"in v,F=n&&!(F.maxTouchPoints||F.msMaxTouchPoints),k="http://www.fusioncharts.com?BS=FCHSEvalMark&utm_source=FCS_trial&pver="+escape(b.core.version),g=/fusioncharts\.com|fusioncharts\.github\.io$/i,f=!g.test(z.location.hostname);G=Math;var S=G.max,C=G.min,
Y=z.Image,R={pageX:0,pageY:0},u="createTouch"in v,X=u&&!(z.navigator.maxTouchPoints||z.navigator.msMaxTouchPoints),O=b.hcLib||(b.hcLib={}),W=O.SvgDeCanvo,H=function(a){var c=a.data,e=c.chart,d=e.components.paper,l=a.state,I=Ka(Ea(a.originalEvent)),b=I.target||I.originalTarget||I.srcElement||I.relatedTarget||I.fromElement,h=e.components.resizeBox,f=c.layerX=I.pageX-c.chartPosLeft,k=c.layerY=I.pageY-c.chartPosTop,g=f-c.ox,M=k-c.oy,w=c.bBox,m=c.ox,J=c.oy,n=c.zoomX,u=c.zoomY,w=c.canvasY,H=c.canvasX,p=
c.canvasW,q=c.canvasH,K=c.canvasX2,O=c.canvasY2,A=c.strokeWidth,g=c.attr;switch(l){case "start":a=V(this);c.chartPosLeft=a.left;c.chartPosTop=a.top;f=I.pageX-c.chartPosLeft;k=I.pageY-c.chartPosTop;c.oy=k;c.ox=f;c.allowMove=!1;h||(h=e.components.resizeBox=d.rect(e.graphics.trackerGroup).attr(g));f>H&&f<K&&k>w&&k<O&&(c.allowMove=!0);b&&b.ishot&&(c.allowMove=!1);h.attr({x:0,y:0,width:0,height:0}).show();break;case "end":w=h.getBBox();e={chart:e,selectionLeft:w.x,selectionTop:w.y,selectionHeight:w.height,
selectionWidth:w.width,originalEvent:a.originalEvent};c.isDragged&&(c.selectionEnd&&c.selectionEnd(e),c.isDragged=0);h.hide();delete c.oy;delete c.ox;break;default:c.allowMove&&(g=f-c.ox,M=k-c.oy,m=c.ox,J=c.oy,c.isDragged||(e={chart:e,selectionLeft:(n?C(m,m+g):H)+.5*A,selectionTop:(u?C(J,J+M):w)+.5*A,selectionHeight:0,selectionWidth:0,originalEvent:a.originalEvent},c.selectionStart&&c.selectionStart(e),c.isDragged=1),g=-(m-C(m-(m-S(m+g,H)),K)),M=-(J-C(J-(J-S(J+M,w)),O)),h.attr({x:(n?C(m,m+g):H)+.5*
A,y:(u?C(J,J+M):w)+.5*A,width:n?B(g):p,height:u?B(M):q}))}},w=function(a){var c=a.data;a=a.originalEvent;var e=a.target||a.originalTarget||a.srcElement||a.relatedTarget||a.fromElement,d=a.type,l=a.layerX,I=a.layerY;void 0===l&&(l=a.pageX-c.chartPosLeft,I=a.pageY-c.chartPosTop);"mousedown"===d&&(e.ishot=l>c.canvasX&&l<c.canvasX2&&I>c.canvasY&&I<c.canvasY2);"mouseup"===d&&setTimeout(function(){e.ishot=!1},1)},K=function(){var a="innerWidth",c="innerHeight",e=v.documentElement||v.body,d=e;"innerWidth"in
z?d=z:(a="clientWidth",c="clientHeight");return function(){return{width:d[a],height:d[c],scrollTop:e.scrollTop,scrollLeft:e.scrollLeft}}}(),h=function(a){a.data&&(a.data.elScroll=!1)},V=function(a,c,e){c={top:0,left:0};var d,l,I=e&&e.config,b=e&&(e.eventListeners||(e.eventListeners=[])),f=e&&(I.isEvntAdded||(I.isEvntAdded=!1));if(a){c.top=a.offsetTop;c.left=a.offsetLeft;for(d=a;(d=d.parentNode)&&"BODY"!==d.tagName;)l=z.getComputedStyle(d).getPropertyValue("position"),/fixed/.test(l)&&e&&(I.itemFixed=
!0,O.toolTip.inform(e.chartInstance.id)),c.top-=d.scrollTop||0,c.left-=d.scrollLeft||0,e&&!f&&b.push(M(d,"scroll",h,I));for(;d;)c.top-=d.scrollTop||0,c.left-=d.scrollLeft||0,d=d.parentNode;for(;a=a.offsetParent;)c.top+=a.offsetTop,c.left+=a.offsetLeft;c.top+=z.pageYOffset||z.scrollY||v.documentElement.scrollTop;c.left+=z.pageXOffset||z.scrollX||v.documentElement.scrollLeft;e&&!f&&b.push(M(z,"resize",h,I));e&&!f&&b.push(M(z,"scroll",h,I));e&&!f&&(I.isEvntAdded=!0)}return c},e=function(a){return a&&
a.replace(/\$/g,"$$$$")},d=function(a,c){return a||!1===a||0===a?a:c},c=function(){var a,c,e;c=0;for(e=arguments.length;c<e;c+=1)if((a=arguments[c])||!1===a||0===a)return a;return""},l=function(){var a,c,e;c=0;for(e=arguments.length;c<e;c+=1)if((a=arguments[c])||!1===a||0===a)return a},M=function(a,c,e,d){return O.dem.listen(a,c,e,d)},J=function(a,c,e){return O.dem.unlisten(a,c,e)},Ea=function(a){a=a&&(a.sourceEvent||a.originalEvent||a);return n&&a&&a.touches&&a.touches[0]||a||R},Ka=function(){return function(a){void 0===
a.pageX&&(a.pageX=a.clientX+v.body.scrollLeft+v.documentElement.scrollLeft,a.pageY=a.clientY+v.body.scrollTop+v.documentElement.scrollTop);return a}}(),va=function(a,c,e){c=Ka(Ea(c));var d=c.pageX;c=c.pageY;var l=e&&e.config,I=l&&l.itemFixed?z.pageYOffset||z.scrollY||v.documentElement.scrollTop:0,b=l&&l.itemFixed?z.pageXOffset||z.scrollX||v.documentElement.scrollLeft:0;l&&l.elScroll?a=l.posOb:(l&&(l.elScroll=!0),a=V(a,void 0,e),l&&(l.posOb=a));return{chartX:d-a.left-b,chartY:c-a.top-I,pageX:d,pageY:c}},
ka=function(a,c,e){a=v.createElement(a);for(var d in c)a.setAttribute(d,c[d]);e&&e.appendChild&&e.appendChild(a);return a},ca=function(a){return a&&a.replace(/^#?([a-f0-9]+)/ig,"#$1")||"none"},U=function(){var a,c,e;c=0;for(e=arguments.length;c<e;c+=1)if(((a=arguments[c])||!1===a||0===a)&&!isNaN(a=Number(a)))return a},la=function(a,c){a=a||!1===a||0===a?Number(a):NaN;return isNaN(a)?null:c?B(a):a},Ga=function(a){return"string"===typeof a?a.replace(L,"<br />"):""},xa=function(a,c){a=a.split(",")[c||
0];a=a.replace(Q,"");""==a&&(a="000000");return a.replace(r,"#")},aa=function(a){a=parseInt(a,10);if(isNaN(a)||100<a||0>a)a=100;return a},Z=function(a,c){for(var e=c.length,d=-1;e--;)if(a===c[e]){d=e;break}return d},ja=function(){if(Array.isArray)return Array.isArray;var a=Object.prototype.toString,c=a.call([]);return function(e){return a.call(e)===c}}(),ma=function(a,c,e,d,l){var I,b,h,f;l?(d.push(a),l.push(c)):(d=[a],l=[c]);if(c instanceof Array)for(I=0;I<c.length;I+=1){try{b=a[I],h=c[I]}catch(k){continue}if("object"!==
typeof h)e&&void 0===h||(a[I]=h);else{if(null===b||"object"!==typeof b)b=a[I]=h instanceof Array?[]:{};f=Z(h,l);-1!==f?b=a[I]=d[f]:ma(b,h,e,d,l)}}else for(I in c){try{b=a[I],h=c[I]}catch(k){continue}if(null!==h&&"object"===typeof h)if(f=A.call(h),"[object Object]"===f){if(null===b||"object"!==typeof b)b=a[I]={};f=Z(h,l);-1!==f?b=a[I]=d[f]:ma(b,h,e,d,l)}else"[object Array]"===f?(null!==b&&b instanceof Array||(b=a[I]=[]),f=Z(h,l),-1!==f?b=a[I]=d[f]:ma(b,h,e,d,l)):a[I]=h;else a[I]=h}return a},oa=function(a,
c,e){if("object"!==typeof a&&"object"!==typeof c)return null;if("object"!==typeof c||null===c)return a;"object"!==typeof a&&(a=c instanceof Array?[]:{});ma(a,c,e);return a},Aa=function(a,c){var e;if(c instanceof Array)for(e=c.length-1;0<=e;--e)"object"!==typeof c[e]?!0===c[e]&&a&&a.splice&&a.splice(e,1):A.call(c[e])===A.call(a[e])&&Aa(a[e],c[e]);else for(e in c)"object"!==typeof c[e]?!0===c[e]&&a&&a.splice&&a.splice(e,1):A.call(c[e])===A.call(a[e])&&Aa(a[e],c[e]);return a},ga=function(){var a=/^@window_/g;
return function(c,e,d){c=c.replace(/\[[\'\"]/g,".").replace(/[\'\"]\]/g,"").replace(/\[/g,".@window_").replace(/\]/g,"").split(".");var l=z,I,b;b="";var h,f,k;f=c.length;for(k=0;k<f;k+=1){h=c[k];I=l;if(h.match(a))b=z[h.replace(a,"")],l=l[b];else{if(void 0===l||null===l)throw(b||h).replace(a,"")+" is not defined";l=l[h]}b=h}!l||"function"!==typeof l.call&&l!==z.alert?"void"!==b&&setTimeout(function(){throw h.replace(a,"")+"() is not a function";},0):l===z.alert?l(e):d?l.apply(I,e.split("-")):l.call(I,
e)}}(),wa=function(a,c){var e;a=a.replace(/^j\s*\-/i,"j-");e=a.indexOf("-",2);-1===e?ga(a.slice(2)):ga(a.substr(2,e-2).replace(/\s/g,""),a.slice(e+1),c)},ia=function(a){var c=a.split("(");a=c.pop().split(")")[0].split(",");var e=a.length,d;d="j-"+c[0];for(c=0;c<e;c++)d+="-"+a[c].replace(/\s*/,"").replace(/\s*$/,"").replace(/[\'|\"]/g,"");wa(d,!0)},ua=function(a){var c={image:!1};void 0!==a&&(a=a.replace(/^\s+/,"").replace(/\s+$/,""),/^i\s*[\-]\s*/i.test(a)?(c.image=!0,c.string=a.replace(/^i\s*[\-]\s*/i,
"")):c.string=a.replace(/^\\/,""));return c},Ca=function(a,c){a=Number(a);a=isNaN(a)?100:a;void 0!==c&&(a=a*c/100);return a%101},da=function(a,c,e){a=a.split(",");var d;void 0!==e&&(e=U(e.split(",")[0]));a[0]=Ca(a[0],e);for(d=1;d<c;d+=1)a[d]=a[0]*Ca(a[d],e)/100;return a.join(",")},qa=function(a,c,e){var d=0,l=0,I=0;e&&e.match(P)&&(e=e.split(","),d=e[0].slice(e[0].indexOf("(")+1),l=e[1],I=e[2],c||0===c||(c=parseInt(100*e[3].slice(0,e[3].indexOf(")")),10)));if(a)if(a.match(P))e=a.split(","),d=e[0].slice(e[0].indexOf("(")+
1),l=e[1],I=e[2];else{a=a.replace(T,"").split(",")[0];switch(a.length){case 3:a=a.charAt(0)+a.charAt(0)+a.charAt(1)+a.charAt(1)+a.charAt(2)+a.charAt(2);break;case 6:break;default:a=(a+"FFFFFF").slice(0,6)}d=parseInt(a.slice(0,2),16);l=parseInt(a.slice(2,4),16);I=parseInt(a.slice(4,6),16)}c||0===c||(c=100);"string"===typeof c&&(c=c.split(",")[0]);c=parseInt(c,10)/100;return"rgba("+d+","+l+","+I+","+c+")"},ba=function(){var c={};return function(e){var d=(e=e||this)&&e.FCcolor||e,l=d.color,b=d.ratio,
I=d.angle,h=d.alpha,f=d.r,k=d.cx,g=d.cy,M=d.fx,w=d.fy,m=d.gradientUnits,J=d.x1,n=d.y1,u=d.x2,C=d.y2,H=1,p,q,Ea,K;if("string"===typeof e)return c[K="~"+e]||(c[K]=e.replace(/^#?([a-f0-9]{3,6})/ig,"#$1"));l=l||"";if(!l)return p;K=[l,h,b,I,f,k,g,m,M,w,J,u,n,C].join("_").replace(/[\(\)\s,\xb0#]/g,"_");if(c[K])return c[K];b=b&&(b+"").split(",")||[];h=(h||0===h)&&(h+"").split(",")||[];if(l=l.split(","))if(p="",1===l.length)Ea=l[0].replace(/^#?([a-f0-9]{3,6})/ig,"$1"),p=h.length?"rgba("+za(Ea).join(",")+
","+.01*a(h[0])+")":Ea.replace(/^#?([a-f0-9]{3,6})/ig,"#$1");else{e=0;for(q=l.length;e<q;e++)Ea=l[e].replace(/^#?([a-f0-9]{3,6})/ig,"$1"),isNaN(b[e])||(b[e]=a(b[e]),Ea+=":"+b[e],isNaN(b[e+1])||(b[e+1]=a(b[e+1])+b[e])),isNaN(h[e])||""===h[e]||(H=.01*h[e]),l[e]="rgba("+za(Ea).join(",")+","+H+")",isNaN(b[e])||(l[e]=l[e]+":"+b[e]);p+=l.join("-");if(void 0!==f||void 0!==M||void 0!==k||d.radialGradient)p="xr("+[M,w,f,k,g,m].join()+")"+p;else{p="-"+p;if(void 0!==J||void 0!==n||void 0!==u||void 0!==C)p="("+
[J,n,u,C,m].join()+")"+p;void 0===I&&(I=0);p=360-a(I)%360+p}}return c[K]=p}}(),na=function(){return function(){return""}}(),pa=function(a){return a.replace(T,"").replace(r,"#")},La=function(a,c){c=(0>c||100<c?100:c)/100;a=a.replace(T,"");var e=parseInt(a,16),d=Math.floor(e/65536),l=Math.floor((e-65536*d)/256);return("000000"+(d*c<<16|l*c<<8|(e-65536*d-256*l)*c).toString(16)).slice(-6)},ea=function(a,c){c=(0>c||100<c?100:c)/100;a=a.replace(T,"");var e=parseInt(a,16),d=Math.floor(e/65536),l=Math.floor((e-
65536*d)/256);return("000000"+(256-(256-d)*c<<16|256-(256-l)*c<<8|256-(256-(e-65536*d-256*l))*c).toString(16)).slice(-6)},za=function(a){a=parseInt(a,16);var c=Math.floor(a/65536),e=Math.floor((a-65536*c)/256);return[c,e,Math.floor(a-65536*c-256*e)]},ha=function(a,c){if("object"!==typeof a)return"";if(a.fontSize||a["font-size"])!a.fontSize&&a["font-size"]&&(a.fontSize=a["font-size"],delete a["font-size"]),a.lineHeight=(parseFloat(a.fontSize)||c||10)*O.lineHeightFactor+"px",delete a["line-height"];
!a.lineHeight&&a["line-height"]&&(a.lineHeight=a["line-height"],delete a["line-height"]);return a.lineHeight},sa=function(a,e,d,b,h){var I=c(a.labelbordercolor,e.bordercolor,d.labelbordercolor,""),f=l(a.labelbgcolor,e.bgcolor,d.labelbgcolor),k=U(a.labelborderthickness,e.borderthickness,d.labelborderthickness,1);h=U(d.usedataplotcolorforlabels,0)?h||b.color:b.color;I=I?qa(I,U(a.labelborderalpha,e.borderalpha,d.labelborderalpha,a.labelalpha,e.alpha,d.labelalpha,100)):"";a={fontFamily:l(a.labelfont,
e.font,d.labelfont,b.fontFamily),fontSize:l(a.labelfontsize,e.fontsize,d.labelfontsize,parseInt(b.fontSize,10))+"px",color:qa(l(a.labelfontcolor,e.fontcolor,d.labelfontcolor,h),U(a.labelfontalpha,e.fontalpha,d.labelfontalpha,a.labelalpha,e.alpha,d.labelalpha,100)),fontWeight:U(a.labelfontbold,e.fontbold,d.labelfontbold)?"bold":"normal",fontStyle:U(a.labelfontitalic,e.fontitalic,d.labelfontitalic)?"italic":"normal",border:I||f?k+"px solid":"",borderColor:I,borderThickness:k,borderPadding:U(a.labelborderpadding,
e.borderpadding,d.labelborderpadding,2),borderRadius:U(a.labelborderradius,e.borderradius,d.labelborderradius,0),backgroundColor:f?qa(f,U(a.labelbgalpha,e.bgalpha,d.labelbgalpha,a.labelalpha,e.alpha,d.labelalpha,100)):"",borderDash:U(a.labelborderdashed,e.borderdashed,d.labelborderdashed,0)?Ja(U(a.labelborderdashlen,e.borderdashlen,d.labelborderdashlen,4),U(a.labelborderdashgap,e.borderdashgap,d.labelborderdashgap,2),k):"none"};a.lineHeight=ha(a);return a},fa=function(){var a={top:{align:"center",
verticalAlign:"top",textAlign:"center"},right:{align:"right",verticalAlign:"middle",textAlign:"left"},bottom:{align:"center",verticalAlign:"bottom",textAlign:"center"},left:{align:"left",verticalAlign:"middle",textAlign:"right"}},c=/([^\,^\s]+)\)$/g,e=function(a,c){var e;/^(bar|bar3d)$/.test(a)&&(this.isBar=!0,this.yPos="bottom",this.yOppPos="top",this.xPos="left",this.xOppPos="right");e=parseInt(c.labelstep,10);this.labelStep=1<e?e:1;this.showLabel=U(c.showlabels,c.shownames,1);this.is3D=/3d$/.test(a)};
e.prototype={isBar:!1,yPos:"left",yOppPos:"right",xPos:"bottom",xOppPos:"top",addAxisGridLine:function(e,d,I,l,b,h,ra,f){var k=""===I?!1:!0,g=0<l||0<h.match(c)[1]?!0:!1,M;if(k||g)g||(h="rgba(0,0,0,0)",l=.1),M={isGrid:!0,width:l,dashStyle:b,color:h,value:d,zIndex:void 0===ra?2:ra},k&&(d=e.opposite?f?this.xOppPos:this.yOppPos:f?this.xPos:this.yPos,d=a[d],M.label={text:I,style:e.labels.style,textAlign:d.textAlign,align:d.align,verticalAlign:d.verticalAlign,rotation:0,x:0,y:0}),e.plotLines.push(M);return M},
addAxisAltGrid:function(a,c){if(!this.is3D){var e=U(a._lastValue,a.min),d=l(a._altGrid,!1);d&&a.plotBands.push({isGrid:!0,color:a.alternateGridColor,to:c,from:e,zIndex:1});a._lastValue=c;a._altGrid=!d}},addXaxisCat:function(c,e,d,b,h,ta,ra,f){var k=a[c.opposite?this.xOppPos:this.xPos];e={isGrid:!0,isDataLabel:!0,width:.1,color:"rgba(0,0,0,0)",value:e,label:{text:b,link:l(h.labellink,ta.link,ra.labellink),style:sa(h,ta,ra,c.labels.style,f),textAlign:k.textAlign,align:k.align,verticalAlign:k.verticalAlign,
rotation:0,x:0,y:0}};0!==d%this.labelStep&&(e.stepped=!0,e.label.style=c.steppedLabels.style);c.plotLines.push(e)},addVline:function(a,c,e,d){d=d._FCconf;var b=d.isBar,h=d.divlineStyle,ta=Ga(c.label),ra=!!U(c.showlabelborder,d.showVLineLabelBorder,1),f=!!U(c.showlabelbackground,1),k=l(c.labelhalign,b?"left":"center"),g=l(c.labelvalign,b?"middle":"bottom").toLowerCase(),M=U(c.labelposition,0),w=U(c.lineposition,.5),m=U(c.showvlines,d.showVLines,1),J=U(c.alpha,d.vLineAlpha,80),n=l(c.color,d.vLineColor).replace(/^#?/,
"#"),u=f?l(c.labelbgcolor,d.vLineLabelBgColor,"333333").replace(/^#?/,"#"):"",C=l(c.labelcolor,d.vLineLabelColor,c.color,d.vLineColor).replace(/^#?/,"#"),p=U(c.thickness,d.vLineThickness,1),H=.5*p,q=!!Number(l(c.dashed,0)),Ea=U(c.dashlen,5),K=U(c.dashgap,2),O=d.smartLabel,A=parseInt(h.fontSize,10)+2,B=0,V=U(c.rotatelabel,d.rotateVLineLabels)?270:0,w=0>w||1<w?.5:w,M=0>M||1<M?0:M;O.setStyle(h);O=O.getOriSize(ta);n=qa(n,m?J:"0");if(b){switch(g){case "top":A-=O.height+H+2;break;case "middle":A-=.5*O.height+
1;break;default:A+=H}c.labelhalign||(B-=O.width*M)}else{switch(g){case "top":A=.5*-O.height+1;break;case "middle":A=0;break;default:A=.5*O.height}switch(k){case "left":B+=p;break;case "right":B-=p+1}}a.plotLines.push({isVline:!0,color:n,width:p,value:e-1+w,zIndex:U(c.showontop,d.showVLinesOnTop)?5:3,dashStyle:q?Ja(Ea,K,p):"none",label:{text:ta,align:b?"left":"center",offsetScale:M,rotation:V,y:A,x:B,textAlign:k,backgroundColor:u,borderWidth:m&&ra?1:0,borderType:m&&ra?"solid":"",borderColor:m&&ra?
C:"",backgroundOpacity:m&&f?l(c.labelbgalpha,d.vLineLabelBgAlpha)/100:0,style:{color:m?C:n,fontSize:h.fontSize,fontFamily:h.fontFamily,lineHeight:h.lineHeight,backgroundColor:u}}})}};return e.prototype.constructor=e}(),N=function(){var a=function(a,e,d,l,b){a=Math.abs(e-a);e=a/(d+1);c(a,d,l)||(b&&Number(e)/Number(l)<(1<l?2:.5)&&(l/=10),e=(Math.floor(e/l)+1)*l,a=e*(d+1));return a},c=function(a,c,d){return e(a/(c+1))>e(d)?!1:!0},e=function(a){a=Math.abs(a);a=String(a);var c=0,e=a.indexOf(".");-1!=e&&
(c=a.length-e-1);return c};return function(e,d,I,l,b,h,ra,f){var k,g,M,w,m,J,n,u=0;e=!0===isNaN(e)||void 0===e?.1:e;d=!0===isNaN(d)||void 0===d?0:d;e===d&&0===e&&(e=.1);g=Math.max(Math.floor(Math.log(Math.abs(d))/Math.LN10),Math.floor(Math.log(Math.abs(e))/Math.LN10));k=Math.pow(10,g);2>Math.abs(e)/k&&2>Math.abs(d)/k&&(g--,k=Math.pow(10,g));g=Math.floor(Math.log(e-d)/Math.LN10);M=Math.pow(10,g);0<e-d&&10<=k/M&&(k=M);g=(Math.floor(e/k)+1)*k;0>d?M=-1*(Math.floor(Math.abs(d/k))+1)*k:h?M=0:(M=Math.floor(Math.abs(d/
k)-1)*k,M=0>M?0:M);b&&0>=e&&(g=0);b=I||0===I?!0:!1;h=l||0===l?!0:!1;e=!1===b||!0===b&&Number(I)<e&&e-Number(I)>q?g:Number(I);d=!1===h||!0===h&&Number(l)>d&&Number(l)-d>q?M:Number(l);l=Math.abs(e-d);if(!1===h&&!1===b&&f)if(0<e&&0>d)for(I=!1,b=10<k?k/10:k,f=a(d,e,ra,b,!1),h=f-(ra+1)*b;!1===I;){if(h+=(ra+1)*b,c(h,ra,b))if(f=h-l,g=h/(ra+1),w=Math.min(Math.abs(d),e),M=w==Math.abs(d)?-1:1,0===ra)I=!0;else for(J=1;J<=Math.floor((ra+1)/2);J++)m=g*J,!(m-w>f)&&m>w&&(n=h-m,n/g==Math.floor(n/g)&&m/g==Math.floor(m/
g)&&(l=h,e=-1==M?n:m,d=-1==M?-m:-n,I=!0))}else I=a(d,e,ra,k,!0),f=I-l,l=I,0<e?e+=f:d-=f;else f&&(I=function(a,e,d){for(var l=0,I=1,b;;){b=a+l*I;b=0===b?1:b;if(c(e,b,d))break;l=-1==I||l>a?++l:l;if(25<l){b=0;break}I=l<=a?-1*I:1}return b},0<ra&&(f=I(ra,l,k),0===f&&(f=I(ra,l+1,k),u=1),ra=f));return{Max:e,Min:d,Range:l,interval:k,divGap:(e-d+u)/(ra+1)}}}(),Ia=function(){var a=function(a,c,e){var d=e.jsVars&&e.jsVars.smartLabel,l=a.offsetWidth,b=a.offsetHeight,h=this.chart;a=this.title;var f=e._chartMessageImageStyle,
k=ua(c);a.y=b/2;a.x=l/2;h.bgSWF=a.text=void 0;c=k.string;k.image?(h.bgSWF=c,h.bgImageHAlign=f.imageHAlign,h.bgImageVAlign=f.imageVAlign,h.bgImageScale=f.imageScale,h.bgSWFAlpha=f.imageAlpha):void 0!==c&&(d?(ha(a.style),d.setStyle(a.style),c=d.getSmartText(Ga(c),l,b),a.text=c.text):a.text=Ga(c),a.verticalAlign="middle");a.style=e._chartMessageStyle;delete e._chartMessageImageStyle;delete e._chartMessageStyle};a.prototype={chart:{events:{},margin:[0,0,0,0],backgroundColor:{FCcolor:{alpha:0}}},credits:{href:k,
text:"FusionCharts XT Trial",enabled:f},legend:{enabled:!1},title:{text:"",style:{fontFamily:"Verdana,sans",fontSize:"10px",color:"#666666"}},plotOptions:{series:{}},series:[{}],exporting:{enabled:!1},nativeMessage:!0};return a.prototype.constructor=a}(),Fa={"true":{"true":{"true":"center","false":"center"},"false":{"true":"center","false":"center"}},"false":{"true":{"true":"right","false":"left"},"false":{"true":"left","false":"right"}}},Ba=function(){return function(a,c,e,b,h,I,f){var k,g=e.trendStyle,
M,w,m,J,n,u,C,p,H,q,Ea,K,A,O=I?"xAxis":"dataLabels";if(I?e.showVLines:e.showTrendlines)for(k=0,w=a.length;k<w;k+=1)if((A=a[k])&&A.line)for(M=0,m=A.line.length;M<m;M+=1)J=A.line[M],q=e.numberFormatter.getCleanValue(l(J.startvalue,J.value,0)),Ea=e.numberFormatter.getCleanValue(l(J.endvalue,l(J.startvalue,J.value,0))),I?p=c:b&&J.parentyaxis&&/^s$/i.test(J.parentyaxis)?(p=c[1],K=1):p=c[0],u=p.max,C=p.min,n=!1,u>=q&&u>=Ea&&C<=q&&C<=Ea&&(b&&J.parentyaxis&&/^s$/i.test(J.parentyaxis)?n="1"!==l(J.valueonleft,
e.trendlineValuesOnOpp):b||(n="1"===l(J.valueonright,e.trendlineValuesOnOpp)),u=!!U(J.istrendzone,I?1:0),(C=(I?e.showVLineLabels:e.showTrendlineLabels)?Ga(l(J.displayvalue,e.numberFormatter[O](n?Ea:q,K))):"")?(H=q<Ea,n={text:C,textAlign:h?"center":n?"left":"right",align:h?Fa[u][!f][H]:n?"right":"left",verticalAlign:h?"bottom":"middle",rotation:0,x:0,y:0,style:g},C=l(J.color,e.trendlineColor),J.alwaysVisible=u,C&&(n.style=oa({},g),n.style.color=qa(C,U(J.alpha,100)))):n=void 0,C=d(Ga(l(J.tooltext,A.tooltext,
e.trendLineToolText))),C=Ma(C,[7,15,16,17,18,19],{startValue:q,startDataValue:e.numberFormatter[O](q,K),endValue:Ea,endDataValue:e.numberFormatter[O](Ea,K),axisName:p.title&&p.title.text},J),H=U(J.thickness,e.trendlineThickness,1),u?p.plotBands.push({isTrend:!0,color:qa(l(J.color,e.trendlineColor),l(J.alpha,e.trendlineAlpha,40)),from:q,to:Ea,label:n,zIndex:e.is3d||"1"!==l(J.showontop,e.showTrendlinesOnTop)?3:5,tooltext:C,alwaysVisible:J.alwaysVisible}):p.plotLines.push({isTrend:!0,color:qa(l(J.color,
e.trendlineColor,e.trendlineColor),l(J.alpha,e.trendlineAlpha,99)),value:q,to:Ea,width:H,dashStyle:"1"==l(J.dashed,e.trendlinesAreDashed)?Ja(U(J.dashlen,e.trendlinesDashLen),U(J.dashgap,e.trendlinesDashGap),H):"none",label:n,zIndex:e.is3d||"1"!==l(J.showontop,e.showTrendlinesOnTop)?3:5,tooltext:C}))}}(),Ja=function(a,c,e,d){return d||void 0===d?[a,c]:"none"},Ha=function(){},Da=function(a,c,e,d,l){var I,b=Da[a],h;b||(h=function(){},h.prototype=e instanceof Ha?e:new Ha,h.prototype.constructor=h,b=Da[a]=
new h,e&&(b.base=e),b.name=a,b.config={},null!==l&&(a=(l instanceof Ha?l:e instanceof Ha?e:{}).config)&&oa(b.config,a));d&&oa(b.config,d);for(I in c)switch(typeof c[I]){case "object":if(c[I]instanceof Ha){b[I]=c[I][I];break}default:b[I]=c[I];break;case "undefined":delete b[I]}return this instanceof Da?(c=function(){this.config={};this.__setDefaultConfig=function(){b&&b.config&&oa(this.config,b.config)};this.__setDefaultConfig()},c.prototype=b,c.prototype.constructor=c,new c):b},Ma=function(){var a=
[{regex:/((^|[^\\])((\\)\\)*\$cleanvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$cleanvalue))/ig,argIndex:2,argKey:"cleanvalue"},{regex:/((^|[^\\])((\\)\\)*\$datavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$datavalue))/ig,argIndex:2,argKey:"formattedValue"},{regex:/((^|[^\\])((\\)\\)*\$value)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$value))/ig,argIndex:3,argKey:"value"},{regex:/((^|[^\\])((\\)\\)*\$label)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$label))/ig,argIndex:2,argKey:"label"},{regex:/((^|[^\\])((\\)\\)*\$seriesname)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$seriesname))/ig,argIndex:5,argKey:"seriesname"},{regex:/((^|[^\\])((\\)\\)*\$yaxisname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$yaxisname))/ig,argIndex:2,argKey:"yaxisName"},{regex:/((^|[^\\])((\\)\\)*\$xaxisname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$xaxisname))/ig,argIndex:2,argKey:"xaxisName"},{regex:/((^|[^\\])((\\)\\)*\$displayvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$displayvalue))/ig,argIndex:3,argKey:"displayvalue"},{regex:/((^|[^\\])((\\)\\)*\$xdatavalue)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$xdatavalue))/ig,argIndex:2,argKey:"xDataValue"},{regex:/((^|[^\\])((\\)\\)*\$ydatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$ydatavalue))/ig,argIndex:2,argKey:"yDataValue"},{regex:/((^|[^\\])((\\)\\)*\$xvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$xvalue))/ig,argIndex:3,argKey:"x"},{regex:/((^|[^\\])((\\)\\)*\$yvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$yvalue))/ig,argIndex:3,argKey:"y"},{regex:/((^|[^\\])((\\)\\)*\$zvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$zvalue))/ig,
argIndex:3,argKey:"z"},{regex:/((^|[^\\])((\\)\\)*\$name)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$name))/ig,argIndex:3,argKey:"name"},{regex:/((^|[^\\])((\\)\\)*\$percentValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$percentValue))/ig,argIndex:2,argKey:"percentValue"},{regex:/((^|[^\\])((\\)\\)*\$startValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$startValue))/ig,argIndex:2,argKey:"startValue"},{regex:/((^|[^\\])((\\)\\)*\$startDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$startDataValue))/ig,
argIndex:2,argKey:"startDataValue"},{regex:/((^|[^\\])((\\)\\)*\$endValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$endValue))/ig,argIndex:2,argKey:"endValue"},{regex:/((^|[^\\])((\\)\\)*\$endDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$endDataValue))/ig,argIndex:2,argKey:"endDataValue"},{regex:/((^|[^\\])((\\)\\)*\$axisName)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$axisName))/ig,argIndex:2,argKey:"axisName"},{regex:/((^|[^\\])((\\)\\)*\$cumulativevalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$cumulativevalue))/ig,
argIndex:2,argKey:"cumulativeValue"},{regex:/((^|[^\\])((\\)\\)*\$cumulativedatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$cumulativedatavalue))/ig,argIndex:2,argKey:"cumulativeDataValue"},{regex:/((^|[^\\])((\\)\\)*\$cumulativePercentValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$cumulativePercentValue))/ig,argIndex:2,argKey:"cumulativePercentValue"},{regex:/((^|[^\\])((\\)\\)*\$cumulativepercentdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$cumulativepercentdatavalue))/ig,argIndex:2,argKey:"cumulativePercentDataValue"},
{regex:/((^|[^\\])((\\)\\)*\$sum)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$sum))/ig,argIndex:2,argKey:"sum"},{regex:/((^|[^\\])((\\)\\)*\$unformattedsum)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedsum))/ig,argIndex:2,argKey:"unformattedSum"},{regex:/((^|[^\\])((\\)\\)*\$targetvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$targetvalue))/ig,argIndex:2,argKey:"targetValue"},{regex:/((^|[^\\])((\\)\\)*\$targetdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$targetdatavalue))/ig,argIndex:2,argKey:"targetDataValue"},
{regex:/((^|[^\\])((\\)\\)*\$processname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$processname))/ig,argIndex:2,argKey:"processName"},{regex:/((^|[^\\])((\\)\\)*\$start)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$start))/ig,argIndex:2,argKey:"start"},{regex:/((^|[^\\])((\\)\\)*\$end)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$end))/ig,argIndex:2,argKey:"end"},{regex:/((^|[^\\])((\\)\\)*\$percentcomplete)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$percentcomplete))/ig,argIndex:2,argKey:"percentComplete"},{regex:/((^|[^\\])((\\)\\)*\$taskpercentcomplete)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$taskpercentcomplete))/ig,argIndex:2,argKey:"taskPercentComplete"},{regex:/((^|[^\\])((\\)\\)*\$taskstartdate)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$taskstartdate))/ig,argIndex:2,argKey:"taskStartDate"},{regex:/((^|[^\\])((\\)\\)*\$taskenddate)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$taskenddate))/ig,argIndex:2,argKey:"taskEndDate"},{regex:/((^|[^\\])((\\)\\)*\$tasklabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tasklabel))/ig,argIndex:2,argKey:"taskLabel"},{regex:/((^|[^\\])((\\)\\)*\$date)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$date))/ig,argIndex:2,argKey:"date"},{regex:/((^|[^\\])((\\)\\)*\$percentofprevvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$percentofprevvalue))/ig,argIndex:2,argKey:"percentOfPrevValue"},{regex:/((^|[^\\])((\\)\\)*\$sname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$sname))/ig,argIndex:2,argKey:"sName"},{regex:/((^|[^\\])((\\)\\)*\$lname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$lname))/ig,argIndex:2,argKey:"lName"},{regex:/((^|[^\\])((\\)\\)*\$fromid)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromid))/ig,
argIndex:2,argKey:"fromId"},{regex:/((^|[^\\])((\\)\\)*\$fromlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromlabel))/ig,argIndex:2,argKey:"fromLabel"},{regex:/((^|[^\\])((\\)\\)*\$toid)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toid))/ig,argIndex:2,argKey:"toId"},{regex:/((^|[^\\])((\\)\\)*\$tolabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tolabel))/ig,argIndex:2,argKey:"toLabel"},{regex:/((^|[^\\])((\\)\\)*\$fromxvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromxvalue))/ig,argIndex:2,argKey:"fromXValue"},
{regex:/((^|[^\\])((\\)\\)*\$fromyvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromyvalue))/ig,argIndex:2,argKey:"fromYValue"},{regex:/((^|[^\\])((\\)\\)*\$fromxdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromxdatavalue))/ig,argIndex:2,argKey:"fromXDataValue"},{regex:/((^|[^\\])((\\)\\)*\$fromydatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromydatavalue))/ig,argIndex:2,argKey:"fromYDataValue"},{regex:/((^|[^\\])((\\)\\)*\$fromlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromlabel))/ig,
argIndex:2,argKey:"fromLabel"},{regex:/((^|[^\\])((\\)\\)*\$toxvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toxvalue))/ig,argIndex:2,argKey:"toXValue"},{regex:/((^|[^\\])((\\)\\)*\$toyvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toyvalue))/ig,argIndex:2,argKey:"toYValue"},{regex:/((^|[^\\])((\\)\\)*\$toxdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toxdatavalue))/ig,argIndex:2,argKey:"toXDataValue"},{regex:/((^|[^\\])((\\)\\)*\$toydatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toydatavalue))/ig,
argIndex:2,argKey:"toYDataValue"},{regex:/((^|[^\\])((\\)\\)*\$tolabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tolabel))/ig,argIndex:2,argKey:"toLabel"},{regex:/((^|[^\\])((\\)\\)*\$openvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$openvalue))/ig,argIndex:2,argKey:"openValue"},{regex:/((^|[^\\])((\\)\\)*\$closevalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$closevalue))/ig,argIndex:2,argKey:"closeValue"},{regex:/((^|[^\\])((\\)\\)*\$highvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$highvalue))/ig,
argIndex:2,argKey:"highValue"},{regex:/((^|[^\\])((\\)\\)*\$lowvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$lowvalue))/ig,argIndex:2,argKey:"lowValue"},{regex:/((^|[^\\])((\\)\\)*\$opendatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$opendatavalue))/ig,argIndex:2,argKey:"openDataValue"},{regex:/((^|[^\\])((\\)\\)*\$closedatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$closedatavalue))/ig,argIndex:2,argKey:"closeDataValue"},{regex:/((^|[^\\])((\\)\\)*\$highdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$highdatavalue))/ig,
argIndex:2,argKey:"highDataValue"},{regex:/((^|[^\\])((\\)\\)*\$lowdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$lowdatavalue))/ig,argIndex:2,argKey:"lowDataValue"},{regex:/((^|[^\\])((\\)\\)*\$maxvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$maxvalue))/ig,argIndex:2,argKey:"maxValue"},{regex:/((^|[^\\])((\\)\\)*\$maxdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$maxdatavalue))/ig,argIndex:2,argKey:"maxDataValue"},{regex:/((^|[^\\])((\\)\\)*\$minvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$minvalue))/ig,
argIndex:2,argKey:"minValue"},{regex:/((^|[^\\])((\\)\\)*\$mindatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$mindatavalue))/ig,argIndex:2,argKey:"minDataValue"},{regex:/((^|[^\\])((\\)\\)*\$q1)/ig,argIndex:2,argKey:"Q1"},{regex:/((^|[^\\])((\\)\\)*\$unformattedQ1)/ig,argIndex:2,argKey:"unformattedQ1"},{regex:/((^|[^\\])((\\)\\)*\$q3)/ig,argIndex:2,argKey:"Q3"},{regex:/((^|[^\\])((\\)\\)*\$unformattedQ3)/ig,argIndex:2,argKey:"unformattedQ3"},{regex:/((^|[^\\])((\\)\\)*\$median)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$median))/ig,
argIndex:2,argKey:"median"},{regex:/((^|[^\\])((\\)\\)*\$unformattedMedian)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedMedian))/ig,argIndex:2,argKey:"unformattedMedian"},{regex:/((^|[^\\])((\\)\\)*\$SD)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$SD))/ig,argIndex:2,argKey:"SD"},{regex:/((^|[^\\])((\\)\\)*\$unformattedsd)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedsd))/ig,argIndex:2,argKey:"unformattedsd"},{regex:/((^|[^\\])((\\)\\)*\$QD)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$QD))/ig,
argIndex:2,argKey:"QD"},{regex:/((^|[^\\])((\\)\\)*\$unformattedQD)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedQD))/ig,argIndex:2,argKey:"unformattedQD"},{regex:/((^|[^\\])((\\)\\)*\$MD)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$MD))/ig,argIndex:2,argKey:"MD"},{regex:/((^|[^\\])((\\)\\)*\$unformattedMD)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedMD))/ig,argIndex:2,argKey:"unformattedMD"},{regex:/((^|[^\\])((\\)\\)*\$mean)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$mean))/ig,argIndex:2,
argKey:"mean"},{regex:/((^|[^\\])((\\)\\)*\$unformattedMean)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedMean))/ig,argIndex:2,argKey:"unformattedMean"},{regex:/((^|[^\\])((\\)\\)*\$unformattedMean)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedMean))/ig,argIndex:2,argKey:"unformattedMean"},{regex:/((^|[^\\])((\\)\\)*\$volumeValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$volumeValue))/ig,argIndex:2,argKey:"volumeValue"},{regex:/((^|[^\\])((\\)\\)*\$volumeDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$volumeDataValue))/ig,
argIndex:2,argKey:"volumeDataValue"},{regex:/((^|[^\\])((\\)\\)*\$fromXValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromXValue))/ig,argIndex:2,argKey:"fromXValue"},{regex:/((^|[^\\])((\\)\\)*\$fromYValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromYValue))/ig,argIndex:2,argKey:"fromYValue"},{regex:/((^|[^\\])((\\)\\)*\$fromXDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromXDataValue))/ig,argIndex:2,argKey:"fromXDataValue"},{regex:/((^|[^\\])((\\)\\)*\$fromYDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromYDataValue))/ig,
argIndex:2,argKey:"fromYDataValue"},{regex:/((^|[^\\])((\\)\\)*\$fromLabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromLabel))/ig,argIndex:2,argKey:"fromLabel"},{regex:/((^|[^\\])((\\)\\)*\$toXValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toXValue))/ig,argIndex:2,argKey:"toXValue"},{regex:/((^|[^\\])((\\)\\)*\$toYValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toYValue))/ig,argIndex:2,argKey:"toYValue"},{regex:/((^|[^\\])((\\)\\)*\$toXDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toXDataValue))/ig,
argIndex:2,argKey:"toXDataValue"},{regex:/((^|[^\\])((\\)\\)*\$toYDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toYDataValue))/ig,argIndex:2,argKey:"toYDataValue"},{regex:/((^|[^\\])((\\)\\)*\$tolabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tolabel))/ig,argIndex:2,argKey:"toLabel"},{regex:/((^|[^\\])((\\)\\)*\$tlLabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tlLabel))/ig,argIndex:5,argKey:"tlLabel"},{regex:/((^|[^\\])((\\)\\)*\$trlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$trlabel))/ig,argIndex:5,
argKey:"trLabel"},{regex:/((^|[^\\])((\\)\\)*\$bllabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$bllabel))/ig,argIndex:5,argKey:"blLabel"},{regex:/((^|[^\\])((\\)\\)*\$brlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$brlabel))/ig,argIndex:5,argKey:"brLabel"},{regex:/((^|[^\\])((\\)\\)*\$rowlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$rowlabel))/ig,argIndex:5,argKey:"rowLabel"},{regex:/((^|[^\\])((\\)\\)*\$columnlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$columnlabel))/ig,argIndex:5,argKey:"columnLabel"},
{regex:/((^|[^\\])((\\)\\)*\$errorvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$errorvalue))/ig,argIndex:2,argKey:"errorValue"},{regex:/((^|[^\\])((\\)\\)*\$errordatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$errordatavalue))/ig,argIndex:2,argKey:"errorDataValue"},{regex:/((^|[^\\])((\\)\\)*\$errorpercentvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$errorpercentvalue))/ig,argIndex:2,argKey:"errorPercentValue"},{regex:/((^|[^\\])((\\)\\)*\$errorpercentdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$errorpercentdatavalue))/ig,
argIndex:2,argKey:"errorPercentDataValue"},{regex:/((^|[^\\])((\\)\\)*\$horizontalErrorValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$horizontalErrorValue))/ig,argIndex:2,argKey:"horizontalErrorValue"},{regex:/((^|[^\\])((\\)\\)*\$horizontalErrorDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$horizontalErrorDataValue))/ig,argIndex:2,argKey:"horizontalErrorDataValue"},{regex:/((^|[^\\])((\\)\\)*\$verticalErrorValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$verticalErrorValue))/ig,argIndex:2,argKey:"verticalErrorValue"},
{regex:/((^|[^\\])((\\)\\)*\$verticalErrorDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$verticalErrorDataValue))/ig,argIndex:2,argKey:"verticalErrorDataValue"},{regex:/((^|[^\\])((\\)\\)*\$horizontalErrorPercent)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$horizontalErrorPercentValue))/ig,argIndex:2,argKey:"horizontalErrorPercentValue"},{regex:/((^|[^\\])((\\)\\)*\$horizontalErrorPercentDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$horizontalErrorPercentDataValue))/ig,argIndex:2,argKey:"horizontalErrorPercentDataValue"},
{regex:/((^|[^\\])((\\)\\)*\$verticalErrorPercent)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$verticalErrorPercentValue))/ig,argIndex:2,argKey:"verticalErrorPercentValue"},{regex:/((^|[^\\])((\\)\\)*\$verticalErrorPercentDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$verticalErrorPercentDataValue))/ig,argIndex:2,argKey:"verticalErrorPercentDataValue"},{regex:/((^|[^\\])((\\)\\)*\$xaxispercentvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$xaxispercentvalue))/ig,argIndex:2,argKey:"xAxisPercentValue"},
{regex:/((^|[^\\])((\\)\\)*\$percentdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$percentdatavalue))/ig,argIndex:2,argKey:"percentDataValue"},{regex:/((^|[^\\])((\\)\\)*\$trType)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$trType))/ig,argIndex:4,argKey:"trtype"},{regex:/((^|[^\\])((\\)\\)*\$tlType)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tlType))/ig,argIndex:4,argKey:"tltype"},{regex:/((^|[^\\])((\\)\\)*\$brType)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$brType))/ig,argIndex:4,argKey:"brtype"},{regex:/((^|[^\\])((\\)\\)*\$blType)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$blType))/ig,argIndex:4,argKey:"bltype"},{regex:/((^|[^\\])((\\)\\)*\$colorRangeLabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$colorRangeLabel))/ig,argIndex:5,argKey:"colorRangeLabel"},{regex:/((^|[^\\])((\\)\\)*\$zdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$zdatavalue))/ig,argIndex:2,argKey:"zDataValue"},{regex:/((^|[^\\])((\\)\\)*\$svalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$svalue))/ig,argIndex:3,argKey:"svalue"},{regex:/((^|[^\\])((\\)\\)*\$positiveErrorValue)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$positiveErrorValue))/ig,argIndex:2,argKey:"positiveErrorValue"},{regex:/((^|[^\\])((\\)\\)*\$negativeErrorValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$negativeErrorValue))/ig,argIndex:2,argKey:"negativeErrorValue"},{regex:/((^|[^\\])((\\)\\)*\$datasvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$datasvalue))/ig,argIndex:2,argKey:"formattedsValue"}],c=[],l,b=a.length;for(l=0;l<b;l+=1)c.push(l);return function(){var l=arguments[0],I=arguments[1],b,h,ra,f,k;ja(I)||
(I=c);if(l)for(k=I.length,f=0;f<k;f+=1)if(ra=a[I[f]])b=e(d((h=arguments[ra.argIndex])&&h[ra.argKey],"")+""),l=l.replace(ra.regex,"$2$4"+(ra.parsingMethod?ra.parsingMethod(b):b)),l=l.replace(ra.escapeRegex,"$2$4$5");return l}}(),Na=function(){var a=v.createElement("canvas");return!(!a.getContext||!a.getContext("2d"))},Oa=function(a){var c,e,d;c=0<=a.split(",")[0].indexOf("base64")?z.atob(a.split(",")[1]):z.unescape(a.split(",")[1]);a=a.split(",")[0].split(":")[1].split(";")[0];e=new Uint8Array(c.length);
for(d=0;d<c.length;d++)e[d]=c.charCodeAt(d);return new z.Blob([e],{type:a})},Sa=function(){var a=z.navigator.userAgent,c;return-1!==(c=a.indexOf("Edge"))?{name:"Edge",version:a.substring(c+5,c+11)}:-1!==(c=a.indexOf("Chrome"))?{name:"Chrome",version:a.substring(c+7,c+11)}:-1!==(c=a.indexOf("MSIE"))?{name:"ie",version:a.substring(c+5,c+9)}:-1!==(c=a.indexOf("rv"))&&-1!==a.indexOf("Trident")?{name:"ie",version:a.substring(c+5,c+9)}:-1!==(c=a.indexOf("Firefox"))?{name:"Firefox",version:a.substring(c+
8,c+12)}:-1!==(c=a.indexOf("Safari"))?{name:"Safari",version:a.substring(c+7,c+11)}:{name:"default",version:"Not Known"}},Ua=function(a){return a.replace(/<image [^\>]*\>/gi,function(a){return a.match(/href=["']\s*["']/)||a.match(/href=["']http:\/\/|href=["']https:\/\//)&&/(href=["']http:\/\/|href=["']https:\/\/)([^\/\:]*)/.exec(a)[2]&&z.location.hostname!==/(href=["']http:\/\/|href=["']https:\/\/)([^\/\:]*)/.exec(a)[2]?"":a})},Pa=function(a,c,e){var d=Sa(),l;"Chrome"===d.name||"Firefox"===d.name?
("blob"===a&&(c=z.URL.createObjectURL(c)),l=v.createElement("a"),l.download=e,l.href=c,v.body.appendChild(l),l.onclick=function(){l.parentNode.removeChild(l)},l.click()):"ie"!==d.name&&"Edge"!==d.name||!z.navigator.msSaveBlob||(a="url"===a?Oa(c):c,z.navigator.msSaveBlob(a,e))},ab=function(a,c){var e,d,l,I,h=c.exportTargetWindow,f=c.exportCallback,k=c.fusionCharts,g=c.paper,M=c.chartId;d=c.exportHandler;I=a.parameters;var w;if("download"===c.exportAction){/webkit/ig.test(z.navigator.userAgent)&&"_self"===
h&&(h=l=M+"export_iframe",w||(w=l=ka("IFRAME",{name:l,width:"1px",height:"1px"},v.body),l.style.cssText="position:absolute;left:-10px;top:-10px;"));d=ka("form",{method:"POST",action:d,target:h,style:"display:none;"},v.body);for(e in a)ka("input",{type:"hidden",name:e,value:a[e]},d);d.submit();v.body.removeChild(d);d=void 0;e=I.match(/exportfilename=([^|]+)/)[1];I=I.match(/exportformat=([^|]+)/)[1];b.raiseEvent("exported",{DOMId:M,height:g.height,width:g.width,fileName:e+"."+I,statusCode:void 0,statusMessage:void 0,
notice:void 0},k.chartInstance);return!0}I=new b.ajax(function(a){var c={};a.replace(RegExp("([^?=&]+)(=([^&]*))?","g"),function(a,e,d,l){c[e]=l});f&&z[f]&&"function"===typeof z[f]&&z[f].call(z,c);b.raiseEvent("exported",c,k.chartInstance)},function(a){a={statusCode:0,statusMessage:"failure",error:a,DOMId:M,width:g&&g.width,height:g&&g.height};f&&z[f]&&"function"===typeof z[f]&&z[f].call(z,a);b.raiseEvent("exported",a,k.chartInstance,[a])});for(e in a)a.hasOwnProperty(e)&&(a[e]=encodeURIComponent(a[e]));
I.post(d,a)},Xa=function(a,c){var e=0,d,l=0,I;a=a.replace(/NS\d+:/gi,"xlink:");a=Ua(a);-1===a.indexOf("<image ")?c(a):(d=a.match(/<image [^\>]*\>/gi).length,a=a.replace(/<image [^\>]*\>/gi,function(b){b=b.replace(/(:href=")([^"]*)(")/gi,function(a,c,d,l){I=d;return c+"{{{"+e+"}}}"+l});var h=v.createElement("canvas"),f,k;f=h.getContext("2d");k=new Y;k.src=I;k.ind=e;k.onload=function(){h.width=this.width;h.height=this.height;f.drawImage(this,0,0);var e=h.toDataURL("image/png");(new Y).src=e;a=a.replace(new RegExp("\\{\\{\\{"+
k.ind+"\\}\\}\\}","g"),e);l++;d===l&&c(a)};e++;return b}))},$a=function(a,c){Xa(a,function(a){c("data:image/svg+xml;base64,"+z.btoa(z.unescape(encodeURIComponent('<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">'+a))))})},Ta=function(){var a,c,e,d,l,I,b,h;if(this&&this!==z){this.disposing=!0;if(a=this.components)for(e in a)if(c=a[e],c instanceof Array)for(d=c.length,l=0;l<d;l++)(h=c[l])&&!this.disposing&&(h.dispose?
h.dispose():Ta.call(h));else c&&!c.disposing&&(c.dispose?c.dispose():Ta.call(c));a=this.graphics;for(I in a)if(c=a[I])if(c.hide)c.hide(),c.followers&&c.followers[0]&&(c=c.followers[0].el)&&c.hide&&c.hide();else for(b in c)d=c[b],d.hide&&d.hide();for(e in this)delete this[e]}},bb=function(a,c){return(a.pIndex||0)-(c.pIndex||0)},Qa={},Wa=Sa();Wa.hasCanvas=Na();Wa.hasSvg=E;b.registrars.component=function(a){var c,e,d,l,I,b,h,f,k;if(a&&a.length&&a[0]&&a[0].toLowerCase&&(b=a[0].toLowerCase(),f=Qa[b]||
(Qa[b]={}),a[1]&&a[1].toLowerCase)){b=a[1].toLowerCase();if(2==a.length){if("undefined"===typeof f[b])return}else{d=f[b]=f[b]||{constructor:function(){this.config={};this.__setDefaultConfig=function(){d&&d.defConfig&&oa(this.config,d.defConfig)};this.__setDefaultConfig()},defConfig:{}};l=d.constructor;k=d.defConfig;"undefined"!==typeof a[3]&&(h=a[3].toLowerCase(),e=f[h]);if(h&&e){c=new e.constructor;l.prototype=c;l.prototype.constructor=l;h=a[2]||{};for(I in h)l.prototype[I]="undefined"!==typeof h[I]?
h[I]:c[I];l.prototype.__base__=new e.constructor}else if(f[b])for(c in I=a[2],I)l.prototype[c]=I[c];else l.prototype=a[2],l.prototype.constructor=l;null!==a[5]&&("undefined"!==typeof a[5]&&(h=a[5].toLowerCase(),e=f[h]),e&&(e=e.defConfig,oa(k,e)));"undefined"!==typeof a[4]&&oa(k,a[4])}return f[b]&&f[b].constructor}};b.core._setLineHeightFactor=function(c){!(c=a(c))||0>c||(O.lineHeightFactor=c)};O.ColorRange=G=function(a){this.linkedItems={iapi:a};this.configure()};G.prototype={configure:function(){var a=
this.linkedItems.iapi,c=a.jsonData,e=c.colorrange&&oa({},c.colorrange).color,c=C(S(U(c.chart.palette,0)-1,0),4),c=a.defaultPaletteOptions&&a.defaultPaletteOptions.paletteColors[c||0]||O.defaultPaletteOptions.paletteColors[c||0],l=function(a,c){return a.minvalue-c.minvalue},b=a.components,I,h,f,k,g;delete this.defaultAsigned;c instanceof Array||(c=b.colorManager.getPlotColor(0));if(e&&0<e.length){for(h=f=e.length-1;0<=h;--h)if(a=e[h])a.minvalue=b.numberFormatter.getCleanValue(a.minvalue),a.maxvalue=
b.numberFormatter.getCleanValue(a.maxvalue),null===a.minvalue&&(null!==a.maxvalue?a.minvalue=a.maxvalue:h!==f&&e.splice(h,1)),void 0!==a.label&&(a.label=Ga(a.label)),void 0!==a.name&&(a.name=Ga(a.name)),null!==a.maxvalue&&a.minvalue>a.maxvalue&&(k=a.minvalue,a.minvalue=a.maxvalue,a.maxvalue=k);e.sort(l);e[0].code||(e[0].code=c[0]);void 0===d(e[0].alpha)&&(e[0].alpha="100");h=0;for(f=e.length-1;h<f;h+=1)if(b=h+1,a=e[h],l=e[b],l.code||(l.code=c[b]),void 0===d(l.alpha)&&(l.alpha="100"),null===a.maxvalue&&
(a.maxvalue=l.minvalue),a.maxvalue>l.minvalue){if(a.maxvalue>l.maxvalue){b=oa(a);b.maxvalue=a.maxvalue;g=b.minvalue=l.maxvalue;for(k=h+2;k<f&&e[k].minvalue<g;k+=1);e.splice(k,0,b);f+=1}a.maxvalue=l.minvalue}a=e[h];null===a.maxvalue&&(a.maxvalue=a.minvalue)}e&&0<e.length||(I||(I={code:"CCCCCC",alpha:"100",bordercolor:"000000",borderalpha:"100"}),e=[I],this.defaultAsigned=!0);this.colorArr=e},getColorObj:function(a){for(var c=this.colorArr,e=0,d=c.length,l,I,b={};e<d;e+=1){b.index=e;l=c[e];I=c[e+1];
if(a<l.minvalue)return b.nextObj=l,b;if(a>=l.minvalue&&a<=l.maxvalue)return b.colorObj=l,I&&a==I.minvalue&&(b.nextObj=I,b.isOnMeetPoint=!0),b;b.prevObj=l}b.index=e-1;return b},getColorRangeArr:function(a,c){var e,d=this.colorArr,l,I,b=[],h,f;if(!this.defaultAsigned&&(a>c&&(e=a,a=c,c=e),a<c&&(l=this.getColorObj(a),I=this.getColorObj(c),l&&I))){e=a;l=l.index;for(I=I.index;l<=I;l+=1)h=oa({},d[l]),h.minvalue!==e&&(h.minvalue=e),b.push(h),f=h,e=h.maxvalue;f.maxvalue=c}return b}};G.prototype.constructor=
G;O.nonGradientColorRange=G=function(a){var c=a.sortLegend||!1,e=a.mapByCategory||!1,d=a.numberFormatter;a=(a.colorRange||{}).color;var b=this.colorArr=[],I,h,f,k,g,M,w=function(a,c){return a.maxvalue-c.maxvalue};this.mapByCategory=e;if(a&&(I=a.length)){for(h=0;h<I;h+=1)k=a[h],f=l(k.color,k.code),g=U(k.maxvalue),M=U(k.minvalue),k=l(k.label,k.displayvalue,e?"":d.dataLabels(M)+" - "+d.dataLabels(g)),(f&&g>M||e&&k)&&b.push({code:f,maxvalue:g,minvalue:M,label:Ga(k),labelId:k.toLowerCase()});b.length?
c&&b.sort(w):this.noValidRange=!0}};G.prototype={getColorObj:function(a){var c=this.colorArr,e=this.gradient?1:0,d=c[e],l;if(this.mapByCategory){for(a=Ga(a).toLowerCase();d;){if(d.labelId===a)return{code:d.code,seriesIndex:e};e+=1;d=c[e]}return{outOfRange:!0}}if(this.gradient){if(this.scaleMin<=a&&this.scaleMax>=a){for(;d&&d.maxvalue<a;)e+=1,d=c[e];a=(a-d.minvalue)/d.range;c=c[e-1].codeRGB;d=d.codeRGB;e=c[0];l=c[1];c=c[2];return{code:("000000"+(e+(d[0]-e)*a<<16|l+(d[1]-l)*a<<8|c+(d[2]-c)*a).toString(16)).slice(-6)}}return{outOfRange:!0}}for(;d;){if(d.maxvalue>
a&&d.minvalue<=a)return{code:d.code,seriesIndex:e};d.maxvalue===a&&(l=e);e+=1;d=c[e]}return(d=c[l])&&d.maxvalue===a?{code:d.code,seriesIndex:l}:{outOfRange:!0}}};G.prototype.constructor=G;b.extend(O,{BLANKSTRINGPLACEHOLDER:"#BLANK#",BLANKSTRING:"",COLOR_BLACK:"000000",COLOR_GLASS:"rgba(255, 255, 255, 0.3)",COLOR_WHITE:"FFFFFF",COLOR_TRANSPARENT:"rgba(0,0,0,0)",HASHSTRING:"#",BREAKSTRING:"<br />",STRINGSTRING:"string",OBJECTSTRING:"object",COMMASTRING:",",ZEROSTRING:"0",SAMPLESTRING:"Ay0",TESTSTR:"Ag",
ONESTRING:"1",DECIMALSTRING:".",STRINGUNDEFINED:"undefined",POSITION_TOP:"top",POSITION_RIGHT:"right",POSITION_BOTTOM:"bottom",POSITION_LEFT:"left",POSITION_CENTER:"center",POSITION_MIDDLE:"middle",POSITION_START:"start",POSITION_END:"end",FC_CONFIG_STRING:"_FCconf",SHAPE_RECT:"rect",HUNDREDSTRING:"100",PXSTRING:"px",COMMASPACE:", ",TEXTANCHOR:"text-anchor",TOUCH_THRESHOLD_PIXELS:15,CLICK_THRESHOLD_PIXELS:5,regex:{stripWhitespace:Q,dropHash:r,startsRGBA:P,cleanColorCode:T,breakPlaceholder:L,hexcode:/^#?[0-9a-f]{6}/i},
fireEvent:function(a,c,e,d){O.dem.fire(a,c,e,d)},plotEventHandler:function(a,c,e,d){c=c||{};var h=c.type,I=va(a.linkedItems.container,c,a);d=this.data("eventArgs")||d;I=oa(I,d);d=a.fireGroupEvent;var f=this.data("groupId"),k=function(a,e){c.FusionChartsPreventEvent=!0;t&&e.toolText&&O.toolTip&&O.toolTip.preventTooltip()};"index"in I&&!("dataIndex"in I)&&(I.dataIndex=I.index);"value"in I&&!("dataValue"in I)&&(I.dataValue=I.value);e=l(e,"dataplotclick").toLowerCase();"dataplotrollover"===e?(c.FusionChartsPreventEvent=
!1,d?b.raiseEventGroup(f,e,I,a.chartInstance,void 0,void 0,k):b.raiseEvent(e,I,a.chartInstance,void 0,void 0,k)):d&&"dataplotclick"!==e?b.raiseEventGroup(f,e,I,a.chartInstance):b.raiseEvent(e,I,a.chartInstance);if(("click"===h||"mouseup"===h||"touchend"===h)&&/click/i.test(e)){if(u&&!X){e=(new Date).getTime();if(this.lastClickTimeStamp&&400>e-this.lastClickTimeStamp){c&&(c.originalEvent||c).preventDefault();return}this.lastClickTimeStamp=e}a.linkedItems&&a.linkedItems.linkClickFN.call({link:I.link},
a)}},getEventCoordinate:Ka,getMouseCoordinate:va,addEvent:M,removeEvent:J,getTouchEvent:Ea,extend2:oa,deltend:function(a,c){if("object"!==typeof a||"object"!==typeof c)return null;Aa(a,c);return a},imprint:function(a,c,e){var d;if("object"!==typeof a||null===a)return c;if("object"!==typeof c||null===c)return a;for(d in c)if(void 0===a[d]||!e&&null===a[d])a[d]=c[d];return a},pluck:l,pluckNumber:U,getFirstDefinedValue:function(){var a,c,e;c=0;for(e=arguments.length;c<e;c+=1)if((a=arguments[c])||!1===
a||0===a||""==a)return a},createElement:ka,hashify:ca,dehashify:function(a){return a&&a.replace(/^#?([a-f0-9]+)/ig,"$1")||"none"},pluckFontSize:function(){var a,c,e;c=0;for(e=arguments.length;c<e;c+=1)if(((a=arguments[c])||!1===a||0===a)&&!isNaN(a=Number(a)))return 1>a?1:a;return 1},getValidValue:d,getPosition:V,getViewPortDimension:K,bindSelectionEvent:function(a,e){e=e||{};var d=a.config,l=a.linkedItems.container,b=d.zoomType,I=oa({},e.attr||{}),h=I["stroke-width"]=U(I.strokeWidth,I["stroke-width"],
1),f=a.eventListeners||(a.eventListeners=[]),k=V(l,void 0,a);e=oa({chart:a,zoomX:/x/.test(b),zoomY:/y/.test(b),canvasY:d.canvasTop,canvasX:d.canvasLeft,canvasW:d.canvasWidth,canvasH:d.canvasHeight,canvasX2:d.canvasLeft+d.canvasWidth,canvasY2:d.canvasTop+d.canvasHeight,strokeWidth:h,chartPosLeft:k.left,chartPosTop:k.top,attr:I},e);I.stroke=c(I.stroke,"rgba(51,153,255,0.8)");I.fill=c(I.fill,"rgba(185,213,241,0.3)");I.ishot=!0;l&&(J(l,"pointerdrag",H),f.push(M(l,"pointerdrag",H,e)));d.link&&(J(a.linkedItems.container,
"mouseup mousedown",w),f.push(M(a.linkedItems.container,"mouseup mousedown",w,e)))},createContextMenu:function(a){var c=a.chart,e=c.smartLabel,d=c.logic.hcJSON&&c.logic.hcJSON.chart.useRoundEdges,l=O.Raphael,I=function(a){var c=a.menufillcolor&&ca(a.menufillcolor),e=a.menulabelcolor&&ca(a.menulabelcolor),d=a.menufillhovercolor&&ca(a.menufillhovercolor);a=a.menulabelhovercolor&&ca(a.menulabelhovercolor);return{attrs:{backgroundColor:c,color:e},hover:{backgroundColor:d,color:a}}}(c.definition.chart),
b=function(a,c,e){c=c||{};a=(a=(a=a&&l.tintshade(a.color,.7))&&l.getRGB(a))&&"rgb("+[a.r,a.g,a.b].join()+")";return{backgroundColor:c.backgroundHoverColor||e.backgroundColor||a||"rgb(64, 64, 64)",color:c.hoverColor||e.color||"#FFFFFF"}}(a.basicStyle,a.hover,I.hover),h=function(a,c,e){c=oa({},c||{});c=oa(c,a);return{fontFamily:c.fontFamily||"Verdana,sans",fontSize:c.fontSize||"10px",color:c.color||e.color||"#000000",backgroundColor:c.backgroundColor||e.backgroundColor||"rgb(255, 255, 255)"}}(a.basicStyle,
a.attrs,I.attrs),f={textAlign:"left",align:"left",paddingLeft:"5px",paddingRight:"5px",paddingTop:"5px",cursor:"pointer",borderWidth:"0px"},k=a.items,g=a.position,M=a.verticalPadding||3,w=a.horizontalPadding||6,J={},m,n,u,C,p,H,q,Ea,K,A,B,r,Ka;if(c)m=V(c.linkedItems.container);else return!1;C=function(){var a=J.items,c=a.length,l=0,I=0,b=0,k,g;J.menuItems||(J.menuItems=[]);for(e.setStyle(h);c--;)k=a[c],k=e.getOriSize(k.text),b||(b=k.height+2*M),l+=b,I=S(I,k.width+2*w);J.height=l;J.width=I;J.itemH=
b;this.style.width=I+"px";J.menuRect||(l=J.menuRect=v.createElement("div"),l.style.border="1px solid rgb(100, 100, 100)",d&&(l.style.mozBorderRadius="4px",l.style.webkitBorderRadius="4px",l.style.borderRadius="4px",l.style.overflow="hidden"),t&&!E?l.style.filter="progid:DXImageTransform.Microsoft.Shadow(Color=#999999,direction=135,strength=3)":(l.style.mozBoxShadow="3px 3px 3px #999",l.style.webkitBoxShadow="3px 3px 3px #999",l.style.boxShadow="3px 3px 3px #999"),this.appendChild(l));I=a.length;for(c=
0;c<I;c+=1)if(k=a[c],J.menuItems[c])J.menuItems[c].label.innerHTML=k.text;else{J.menuItems[c]={};l=J.menuItems[c].box=v.createElement("div");l.style.height=b+"px";l.style.lineHeight=b+"px";for(g in f)l.style[g]=f[g];for(g in h)l.style[g]=h[g];J.menuRect.appendChild(l);l.innerHTML=k.text;O.dem.listen(l,"click",Ka);O.dem.listen(l,"pointerhover",A);J.menuItems[c].box._itemIdx=c}for(;J.menuItems[c];)J.menuItems[c].box.parentNode.removeChild(J.menuItems[c].box),J.menuItems.splice(c,1)};p=function(){u||
(u=v.createElement("div"),u.style.position="absolute",u.style.zIndex="50",u.style.display="none",c.linkedItems.container.appendChild&&c.linkedItems.container.appendChild(u));return u};H=function(){n=setTimeout(J.hide,800)};q=function(){n&&clearTimeout(n)};Ea=function(a){var e=a.x;a=a.y;var d={x:e,y:a},l=J.width,I=J.height,b=c.chartHeight,h=c.chartWidth;e+l>h&&0<e-l?d.x-=l:e+l>h&&(d.x=0);a+I>b&&0<a-I&&(d.y-=I);return d};K=function(){J.hide()};A=function(a){a.target&&a.target.parentNode&&("start"===
a.state?B:r).call(a.target)};B=function(){var a=J.menuItems[this._itemIdx],c;q();for(c in b)a.box.style[c]=b[c]};r=function(){var a=J.menuItems[this._itemIdx],c;for(c in h)a.box.style[c]=h[c];H()};Ka=function(a){var c=J.items[this._itemIdx];c.onclick&&c.onclick.call(c,a);a.originalEvent.stopPropagation?a.originalEvent.stopPropagation():a.originalEvent.cancelBubble=!0;J.hide()};J.showItem=function(a){a=this.menuItems[a];var c=this.height,e=this.itemH;a&&a._isHidden&&(a.box.style.display="",this.height=
c+e,a._isHidden=!1,a=Ea(g),this.left=a.x,this.top=a.y)};J.hideItem=function(a){a=this.menuItems[a];var c=this.height,e=this.itemH;a&&!a._isHidden&&(a.box.style.display="none",this.height=c-e,a._isHidden=!0,a=Ea(g),this.left=a.x,this.top=a.y)};J.redraw=function(){var a=this.menuContainer;this.items=k;a?C.call(this.menuContainer):g&&void 0!==g.x&&void 0!==g.y?(this.menuContainer=p(),C.call(this.menuContainer),a=Ea(g),this.left=a.x,this.top=a.y,this.menuContainer.style.left=this.left+"px",this.menuContainer.style.top=
this.top+"px"):(this.menuContainer=p(),C.call(this.menuContainer))};J.show=function(a){var c=this;a&&void 0!==a.x&&void 0!==a.y?(a=Ea(a),c.menuContainer.style.left=a.x+"px",c.menuContainer.style.top=a.y+"px"):(c.menuContainer.style.left=c.left+"px",c.menuContainer.style.top=c.top+"px");c.menuContainer.style.display="";setTimeout(function(){c.visible=!0;l.click(K)},400)};J.hide=function(){this.visible&&(this.visible=!1,J.menuContainer.style.display="none",J.menuContainer.style.left=-J.width+"px",J.menuContainer.style.top=
-J.height+"px",l.unclick(K))};J.update=function(a){a&&a.length&&(this.items=a,this.redraw())};J.updatePosition=function(a){var e=m.left,d=m.top;m=V(c.linkedItems.container);a?(g=a,a=Ea(a),this.left=a.x,this.top=a.y):(this.left-=e-m.left,this.top-=d-m.top)};J.add=function(a){var c=this.menuItems,d=c.length,l;e.setStyle(h);this.width=S(this.width,e.getOriSize(a.text).width);c[d]={};c=c[d].box=v.createElement("div");c.style.height=this.itemH+"px";c.style.lineHeight=this.itemH+"px";for(l in f)c.style[l]=
f[l];for(l in h)c.style[l]=h[l];J.menuRect.appendChild(c);c.innerHTML=a.text;O.dem.listen(c,"click",Ka);O.dem.listen(c,"pointerhover",A);J.menuItems[d].box._itemIdx=d;this.height+=this.itemH};J.removeItems=function(){for(var a=this.menuItems,c=a&&a.length,e;c--;)e=a[c],O.dem.unlisten(e.box,"click",Ka),O.dem.unlisten(e.box,"pointerhover",A),e.box&&e.box.parentNode&&e.box.parentNode.removeChild(e.box);delete this.menuItems;delete this.items};J.setPosition=function(a){void 0!==a.x&&void 0!==a.y&&(this.menuContainer.style.x=
a.x,this.menuContainer.style.y=a.y)};J.destroy=function(){this.removeItems();this.menuContainer.parentNode.removeChild(this.menuContainer)};k&&k.length&&(J.redraw(),J.hide());return J},each:function(a,c,e,d){var l;e||(e=a);d||(d={});if(ja(a))for(l=0;l<a.length;l+=1){if(!1===c.call(e,a[l],l,a,d))return l}else if(null!==a&&void 0!==a)for(l in a)if(!1===c.call(e,a[l],l,a,d))return l},getDefinedColor:function(a,c){return a||0===a||""===a?a:c},getFirstValue:c,getFirstColor:xa,getColorCodeString:function(a,
c){var e="",d,l,I=0,b=c.split(",");for(l=b.length;I<l;I+=1)d=b[I].split("-"),e=2===d.length?"-1"!==d[0].indexOf("dark")?e+(ea(a,100-parseInt(d[1],10))+","):e+(La(a,100-parseInt(d[1],10))+","):e+(b[I]+",");return e.substring(0,e.length-1)},pluckColor:function(a){if(d(a))return a=a.split(",")[0],a=a.replace(Q,""),""==a&&(a="000000"),a.replace(r,"#")},toRaphaelColor:ba,gradientify:na,trimString:function(a){a=a.replace(/^\s\s*/,"");for(var c=/\s/,e=a.length;c.test(a.charAt(--e)););return a.slice(0,e+
1)},getFirstAlpha:aa,parsePointValue:la,parseUnsafeString:Ga,parseTooltext:Ma,toPrecision:function(a,c){var e=m(10,c);return p(a*e)/e},hasTouch:F,CREDIT_HREF:k,CREDIT_STRING:"FusionCharts XT Trial",getSentenceCase:function(a){a=a||"";return a.charAt(0).toUpperCase()+a.substr(1)},getCrispValues:function(a,c,e){var d=e%2/2;e=p(a+d)-d;a=p(a+c+d)-d-e;return{position:e,distance:a}},regescape:function(a){return a&&a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},regReplaceEscape:e,getImageURL:ua,isArray:ja,
preDefStr:{colors:{B90000:"B90000",FFFFFF:"FFFFFF",AAAAAA:"AAAAAA",c000000:"000000"},defaultFontStr:"Verdana,sans",line:"line",bar:"bar",column:"column",volume:"volume",HUNDREDSTRING:"100",SEVENTYSTRING:"70",NINETYSTRING:"90",AUTOSTRING:"auto",configStr:"config",animationObjStr:"animationObj",showHoverEffectStr:"showHoverEffect",hiddenStr:"hidden",visibleStr:"visible",columnStr:"columns",barStr:"bars",barHotStr:"bar-hot",colHotStr:"col-hot",shadowStr:"shadow",dataLabelStr:"datalabel",errorBarStr:"errorBar",
errorHotStr:"error-hot",errorShadowStr:"error-shadow",negativeValueStr:"negative-values",positiveValueStr:"positive-values",zeroPlaneStr:"zero-plane",categoryPlotsStr:"categoryplots",noneStr:"NONE",setRolloverAttrStr:"setRolloverAttr",setRolloutAttrStr:"setRolloutAttr",elementStr:"element",hotElementStr:"hotElement",strokeWidthStr:"stroke-width",strokeDashStr:"stroke-dasharray",strokeLineJoinStr:"stroke-linejoin",miterStr:"miter",visiblilityStr:"visibility",ROUND:"round",PERCENTAGESTRING:"%",pStr:"p",
sStr:"s",divLineAlpha3DStr:"divLineAlpha3D",divLineAlphaStr:"divLineAlpha",altVGridColorStr:"altVGridColor",altVGridAlphaStr:"altVGridAlpha",altHGridColorStr:"altHGridColor",altHGridAlphaStr:"altHGridAlpha",PLOTFILLCOLOR_STR:"plotFillColor",UNDERSCORE:"_",gaugeFillColorStr:"gaugeFillColor",gaugeBorderColorStr:"gaugeBorderColor",NORMAL:"normal",BOLD:"bold",POINTER:"pointer",DEFAULT:"default",POSITION_MIDDLE:"middle",POSITION_START:"start",POSITION_TOP:"top",POSITION_BOTTOM:"bottom",POSITION_END:"end"},
stubFN:function(){},falseFN:function(){return!1},stableSort:function(a,c){var e=a.length,d;for(d=0;d<e;d++)a[d].ssI=d;a.sort(function(a,e){var d=c(a,e);return 0===d?a.ssI-e.ssI:d});for(d=0;d<e;d++)delete a[d].ssI},hasSVG:E,CREDIT_REGEX:g,isIE:t,lineHeightFactor:1.2,getLinkAction:function(a,e){var d=function(a){return a};return function(h){var f=a.chart||a.map||{},I=U(f.unescapelinks,1),f=U(f.clickurloverridesplotlinks,0),k=c(this.link,"");h=h.config&&h.config.link||"";var g=f?l(h,k):l(k,h),M=g,J,
w,m,n,u,C,p,H,q,Ea;void 0!==g&&(I&&(g=z.decodeURIComponent?z.decodeURIComponent(g):z.unescape(g)),g=g.replace(/^\s+/,"").replace(/\s+$/,""),-1!==g.search(/^[a-z]*\s*[\-\:]\s*/i)&&(u=g.split(/\s*[\-\:]\s*/)[0].toLowerCase(),Ea=u.length),setTimeout(function(){var c;switch(u){case "j":wa(g);break;case "javascript":ia(g.replace(/^javascript\s*\:/i,""));break;case "n":g.replace(/^n\s*\-/i,"n-");z.open(d(g.slice(2),I));break;case "f":g=g.replace(/^f\s*\-/i,"f-");J=g.indexOf("-",2);-1!==J?(w=g.substr(2,
J-2))&&z.frames[w]?z.frames[w].location=d(g.slice(J+1),I):z.open(d(g.slice(J+1),I),w):z.open(d(g.slice(2),I));break;case "p":g=g.replace(/p\s*\-/i,"p-");J=g.indexOf("-",2);m=g.indexOf(",",2);-1===J&&(J=1);n=d(g.slice(J+1),I);(c=z.open(n,g.substr(2,m-2),g.substr(m+1,J-m-1)))&&c.focus();break;case "newchart":case "newmap":":"===g.charAt(Ea)&&(J=g.indexOf("-",Ea+1),q=g.substring(Ea+1,J),Ea=J);J=g.indexOf("-",Ea+1);C=g.substring(Ea+1,J).toLowerCase();switch(C){case "xmlurl":case "jsonurl":H=g.substring(J+
1,g.length);break;case "xml":case "json":c=p=g.substring(J+1,g.length);var l={chart:{}},h;c=c.toLowerCase();if(a.linkeddata)for(h=0;h<a.linkeddata.length;h+=1)a.linkeddata[h].id.toLowerCase()===c&&(l=a.linkeddata[h].linkedchart||a.linkeddata[h].linkedmap);H=l;C="json"}b.raiseEvent("linkedChartInvoked",{alias:q,linkType:C.toUpperCase(),data:H},e);break;default:z.location.href=g}b.raiseEvent("linkClicked",{linkProvided:M,linkInvoked:g,linkAction:u&&u.toLowerCase()},e)},0))}},graphics:{parseAlpha:da,
convertColor:qa,getDarkColor:La,getLightColor:ea,mapSymbolName:function(a,c){var e="circle";a=la(a);3<=a&&(e=(c?"spoke_":"poly_")+a);return e},getColumnColor:function(a,c,e,d,l,I,b,h,f){var k,g;k=a.split(",");g=c.split(",");I=I.split(",");b=b.split(",");a=a.replace(/\s/g,"").replace(/\,$/,"");f?h={FCcolor:{color:k[0],alpha:g[0]}}:l?(a=k[0],g=g[0],h={FCcolor:{color:La(a,75)+","+ea(a,10)+","+La(a,90)+","+ea(a,55)+","+La(a,80),alpha:g+","+g+","+g+","+g+","+g,ratio:"0,11,14,57,18",angle:h?"90":"0"}},
I=[La(a,70)]):(c=da(c,k.length),h={FCcolor:{color:a,alpha:c,ratio:e,angle:h?-d:d}});return[h,{FCcolor:{color:I[0],alpha:b[0]}}]},getPointColor:function(a,c){var e,d;a=xa(a);c=aa(c);e=ea(a,70);d=La(a,50);return{FCcolor:{gradientUnits:"objectBoundingBox",cx:.4,cy:.4,r:"100%",color:e+","+d,alpha:c+","+c,ratio:void 0,radialGradient:!0}}},getAngle:function(a,c,e){a=180*Math.atan(c/a)/Math.PI;2==e?a=180-a:3==e?a+=180:4==e&&(a=360-a);return a},parseColor:pa,getValidColor:function(a){return D.test(pa(a))&&
a},HSBtoRGB:function(a){var c=a[0],e=0,d=0,l=0,I=[],I=a[1]/100;a=a[2]/100;var b=c/60-Math.floor(c/60),h=a*(1-I),f=a*(1-b*I),I=a*(1-(1-b)*I);switch(Math.floor(c/60)%6){case 0:e=a;d=I;l=h;break;case 1:e=f;d=a;l=h;break;case 2:e=h;d=a;l=I;break;case 3:e=h;d=f;l=a;break;case 4:e=I;d=h;l=a;break;case 5:e=a,d=h,l=f}return I=[p(255*e),p(255*d),p(255*l)]},RGBtoHSB:function(a){var c=a[0],e=a[1];a=a[2];var d=Math.max(Math.max(c,e),a),l=Math.min(Math.min(c,e),a),I=0,b=0;d==l?I=0:d==c?I=(60*(e-a)/(d-l)+360)%
360:d==e?I=60*(a-c)/(d-l)+120:d==a&&(I=60*(c-e)/(d-l)+240);b=0===d?0:(d-l)/d;return[p(I),p(100*b),p(d/255*100)]},RGBtoHex:function(a){return("000000"+(a[0]<<16|a[1]<<8|a[2]).toString(16)).slice(-6)},rawRGBtoHEX:function(a){a=a.match(/[\d+]+/g).splice(0,3);return("000000"+(a[0]<<16|a[1]<<8|a[2]).toString(16)).slice(-6)},HEXtoRGB:za,getCubePathOutline:function(a){var c=a[2]||0,e=a[4]||0,d=a[5]||0;return["M",a[0]||0,a[1]||0,"l",e,-d,c,0,0,a[3]||0,-e,d,-c,0,"Z"]}},appliedCSS:["fontFamily","fontSize",
"fontWeight","fontStyle"],setImageDisplayMode:function(a,c,e,d,l,I,b,h){var f=d/100*h.width;d=d/100*h.height;h={};var k,g=I-2*l;k=b-2*l;var M=function(a,c,e,d,I,b){var h={};switch(a){case "top":h.y=l;break;case "bottom":h.y=b-d-l;break;case "middle":h.y=(b-d)/2}switch(c){case "left":h.x=l;break;case "right":h.x=I-e-l;break;case "middle":h.x=(I-e)/2}return h};switch(a){case "center":h.width=f;h.height=d;h.y=b/2-d/2;h.x=I/2-f/2;break;case "stretch":h.width=I-2*l;h.height=b-2*l;h.y=l;h.x=l;break;case "tile":h.width=
f;h.height=d;h.tileInfo={};h.tileInfo.xCount=a=Math.ceil(g/f);h.tileInfo.yCount=k=Math.ceil(k/d);c=M(c,e,f*a,d*k,I,b);h.y=c.y;h.x=c.x;break;case "fit":a=f/d>g/k?g/f:k/d;h.width=f*a;h.height=d*a;c=M(c,e,h.width,h.height,I,b);h.y=c.y;h.x=c.x;break;case "fill":a=f/d>g/k?k/d:g/f;h.width=f*a;h.height=d*a;c=M(c,e,h.width,h.height,I,b);h.y=c.y;h.x=c.x;break;default:c=M(c,e,f,d,I,b),h.width=f,h.height=d,h.y=c.y,h.x=c.x}return h},setLineHeight:ha,parsexAxisStyles:sa,supportedStyle:{font:"font",fontFamily:"font-family",
"font-family":"font-family",fontWeight:"font-weight","font-weight":"font-weight",fontSize:"font-size","font-size":"font-size",lineHeight:"line-height","line-height":"line-height",textDecoration:"text-decoration","text-decoration":"text-decoration",color:"color",whiteSpace:"white-space","white-space":"white-space",padding:"padding",margin:"margin",background:"background",backgroundColor:"background-color","background-color":"background-color",backgroundImage:"background-image","background-image":"background-image",
backgroundPosition:"background-position","background-position":"background-position",backgroundPositionLeft:"background-position-left","background-position-left":"background-position-left",backgroundPositionTop:"background-position-top","background-position-top":"background-position-top",backgroundRepeat:"background-repeat","background-repeat":"background-repeat",border:"border",borderColor:"border-color","border-color":"border-color",borderStyle:"border-style","border-style":"border-style",borderThickness:"border-thickness",
"border-thickness":"border-thickness",borderTop:"border-top","border-top":"border-top",borderTopColor:"border-top-color","border-top-color":"border-top-color",borderTopStyle:"border-top-style","border-top-style":"border-top-style",borderTopThickness:"border-top-thickness","border-top-thickness":"border-top-thickness",borderRight:"border-right","border-right":"border-right",borderRightColor:"border-right-color","border-right-color":"border-right-color",borderRightStyle:"border-right-style","border-right-style":"border-right-style",
borderRightThickness:"border-right-thickness","border-right-thickness":"border-right-thickness",borderBottom:"border-bottom","border-bottom":"border-bottom",borderBottomColor:"border-bottom-color","border-bottom-color":"border-bottom-color",borderBottomStyle:"border-bottom-style","border-bottom-style":"border-bottom-style",borderBottomThickness:"border-bottom-thickness","border-bottom-thickness":"border-bottom-thickness",borderLeft:"border-left","border-left":"border-left",borderLeftColor:"border-left-color",
"border-left-color":"border-left-color",borderLeftStyle:"border-left-style","border-left-Style":"border-left-style",borderLeftThickness:"border-left-thickness","border-left-thickness":"border-left-thickness"},getAxisLimits:N,createTrendLine:Ba,getDashStyle:Ja,axisLabelAdder:fa,chartAPI:Da,createDialog:Ia,isCanvasElemSupported:Na,componentDispose:Ta,componentConfigurer:function(a){var c,e,d=[],l,I,b,h={};a=a||this;c=a.components;for(b in c)if(e=c[b],e instanceof Array)for(I=e.length,l=0;l<I;l+=1)d.push(e[l]);
else d.push(e);d.sort(bb);I=d.length;for(l=0;l<I;l+=1)e=d[l],c=e.customConfigFn,null!==c&&(c&&a[c]?h[c]||(a[c](),h[c]=!0):e.configure&&e.configure())},getSvgDataurl:$a,removeCrossDomainImages:Ua,getBrowserDetails:Sa,dataurlToBlob:Oa,downloadCharts:function(a,c,e,d,l){c?Pa(a,c,e):ab(d,l)},browserDetails:Wa,drawSvgOnCanvas:function(a,c,e,d,l,I,b){"ie"==Wa.name?(a=Ua(a),new W(a,c,e,d,l,I,function(){b()})):$a(a,function(a){var h,f;h=c.getContext("2d");f=new Y;f.src=a;f.onload=function(){h.drawImage(f,
e,d,l,I);b()}})},executeJS:wa,pseudoEval:ia,priorityList:{render:1,animation:2,entitydraw:2,label:3,tracker:4,kdTree:4,postRender:5}});z.getComputedStyle||(z.getComputedStyle=function(a){this.el=a;this.getPropertyValue=function(c){var e=/(\-([a-z]){1})/g;"float"==c&&(c="styleFloat");e.test(c)&&(c=c.replace(e,function(a,c,e){return e.toUpperCase()}));return a.currentStyle[c]?a.currentStyle[c]:null};return this})}]);N.register("module",["private","modules.renderer.js-schedular",function(){var b=[],
z={},G=[],v={},F=0,E=this.window,t=this.hcLib.schedular={},a=E.requestAnimationFrame||E.webkitRequestAnimationFrame||E.mozRequestAnimationFrame||E.oRequestAnimationFrame||E.msRequestAnimationFrame||function(a){setTimeout(a,16)},Q=function(){for(var r,t=!1;!t;)(r=b[0])?(b.splice(0,1),--G[r.priority],0<b.length&&a(Q),v[r.jobID]&&!r.executed&&(t=!0,r.scope?r.job.apply(r.scope,r.args):r.job(),r.callback&&"function"===typeof r.callback&&r.callback(),r.executed=!0,delete v[r.jobID])):t=!0};t.addJob=function(r,
t,z,L,D,B){var m,p=0;D=D?L-1:L;"function"===typeof r&&(m="JOB"+ ++F+(L||1),r={job:r,scope:t,args:z,priority:L,callback:B,jobID:m});for(t=0;t<=D;t++)p+=G[t]||0;b.splice(p,0,r);v[m]=r;G[L]=(G[L]||0)+1;1===b.length&&a(Q);return m};t.removeJob=function(a){v[a]&&delete v[a]};t.pauseExecution=function(a){if(v[a])z[v[a]]=v[a],delete v[a];else return!1};t.resumeExecution=function(a){var b;if(b=z[a])t.addJob(b),delete z[a];else return!1}}]);N.register("module",["private","modules.renderer.js-mousetracker",
function(){var b=this.hcLib,z=b.addEvent,G=b.removeEvent,v=b.parseConfiguration,F={},E=b.hasTouch;N.register("component",["tracker","mouse",{pIndex:1,init:function(b){this.eventsList="mousedown touchstart mouseup touchend mousemove touchmove".split(" ");this.linkedItems={chart:b}},configure:function(){this.__setDefaultConfig();v(F,this.config,this.linkedItems.chart.config);this._addEvents()},_mouseEvtHandler:function(b){b.data.chart._mouseEvtHandler(b)},_getMouseEvents:function(b,a,v){var r=this._lastDatasetIndex,
z=this._lastPointIndex,E={fireOut:!1,events:[]};switch(b.type){case "click":E.events.push("click");break;case "touchmove":this.touchMove=!0;case "mousemove":r===a&&z===v?E.events.push("mousemove"):(E.events.push("mouseover"),E.fireOut=!0);break;case "touchstart":this.touchMove=!1,this.touchStart=!0;case "mousedown":if(r!==a||z!==v)E.fireOut=!0,E.events.push("mouseover");E.events.push("mousedown");break;case "touchend":this.touchStart&&!this.touchMove&&(E.events.push("click"),this.touchStart=this.touchMove=
!1);case "mouseup":E.events.push("mouseup");break;case "mouseout":if(r!==a||z!==v)E.fireOut=!0,E.events.push("mouseover")}return E},_addEvents:function(){var b=this.linkedItems.chart,a=b.linkedItems.container,v=this.eventsList;b.config.enableMouseOutEvent&&v.push("mouseout");!E&&v.push("click");this._removeListners();z(a,v.join(" "),this._mouseEvtHandler,{chart:b,mouseTracker:this})},_removeListners:function(){var b=this.linkedItems.chart.linkedItems.container,a=this.eventsList,v,r=a.length;for(v=
0;v<r;v+=1)G(b,a[v],this._mouseEvtHandler)},dispose:function(){this._removeListners()}},void 0,{stickytracking:void 0}])}]);N&&N.register("module",["private","vendor.redraphael",function(){var b=this.hcLib,z=this.window,G=z.Raphael,v;(function(z){(function(b,t){var a=/[\.\/]/,v=function(){},r=function(a,b){return a-b},z,G,L={n:{}},D=function(a,b){a=String(a);var p=G,q=Array.prototype.slice.call(arguments,2),A=D.listeners(a),n=0,k,g=[],f={},S=[],C=z;z=a;for(var t=G=0,R=A.length;t<R;t++)"zIndex"in A[t]&&
(g.push(A[t].zIndex),0>A[t].zIndex&&(f[A[t].zIndex]=A[t]));for(g.sort(r);0>g[n];)if(k=f[g[n++]],S.push(k.apply(b,q)),G)return G=p,S;for(t=0;t<R;t++)if(k=A[t],"zIndex"in k)if(k.zIndex==g[n]){S.push(k.apply(b,q));if(G)break;do if(n++,(k=f[g[n]])&&S.push(k.apply(b,q)),G)break;while(k)}else f[k.zIndex]=k;else if(S.push(k.apply(b,q)),G)break;G=p;z=C;return S.length?S:null};D._events=L;D.listeners=function(b){b=b.split(a);var m=L,p,q,A,n,k,g,f,r=[m],C=[];A=0;for(n=b.length;A<n;A++){f=[];k=0;for(g=r.length;k<
g;k++)for(m=r[k].n,p=[m[b[A]],m["*"]],q=2;q--;)if(m=p[q])f.push(m),C=C.concat(m.f||[]);r=f}return C};D.on=function(b,m){b=String(b);if("function"!=typeof m)return function(){};for(var p=b.split(a),q=L,A=0,n=p.length;A<n;A++)q=q.n,q=q.hasOwnProperty(p[A])&&q[p[A]]||(q[p[A]]={n:{}});q.f=q.f||[];A=0;for(n=q.f.length;A<n;A++)if(q.f[A]==m)return v;q.f.push(m);return function(a){+a==+a&&(m.zIndex=+a)}};D.f=function(a){var b=[].slice.call(arguments,1);return function(){D.apply(null,[a,null].concat(b).concat([].slice.call(arguments,
0)))}};D.stop=function(){G=1};D.nt=function(a){return a?(new RegExp("(?:\\.|\\/|^)"+a+"(?:\\.|\\/|$)")).test(z):z};D.nts=function(){return z.split(a)};D.off=D.unbind=function(b,m){if(b){var p=b.split(a),q,A,n,k,g,f,r=[L];k=0;for(g=p.length;k<g;k++)for(f=0;f<r.length;f+=n.length-2){n=[f,1];q=r[f].n;if("*"!=p[k])q[p[k]]&&n.push(q[p[k]]);else for(A in q)q.hasOwnProperty(A)&&n.push(q[A]);r.splice.apply(r,n)}k=0;for(g=r.length;k<g;k++)for(q=r[k];q.n;){if(m){if(q.f){f=0;for(p=q.f.length;f<p;f++)if(q.f[f]==
m){q.f.splice(f,1);break}!q.f.length&&delete q.f}for(A in q.n)if(q.n.hasOwnProperty(A)&&q.n[A].f){n=q.n[A].f;f=0;for(p=n.length;f<p;f++)if(n[f]==m){n.splice(f,1);break}!n.length&&delete q.n[A].f}}else for(A in delete q.f,q.n)q.n.hasOwnProperty(A)&&q.n[A].f&&delete q.n[A].f;q=q.n}}else D._events=L={n:{}}};D.once=function(a,b){var p=function(){D.unbind(a,p);return b.apply(this,arguments)};return D.on(a,p)};D.version="0.4.2";D.toString=function(){return"You are running Eve 0.4.2"};"undefined"!=typeof module&&
module.exports?module.exports=D:b.eve=D})(this,!0);"undefined"===typeof z&&"object"===typeof window&&(z=window);(function(b,t,a){t(b,"object"===typeof module&&"undefined"!==typeof module.exports?module.exports:b.eve)})(z,function(b,t){function a(c){var e,d;void 0===a._url&&(a._url="");if(a.is(c,"function"))return n?c():t.on("raphael.DOMload",c);if(a.is(c,f))return a._engine.create[k](a,c.splice(0,3+a.is(c[0],g))).add(c);e=Array.prototype.slice.call(arguments,0);return a.is(e[e.length-1],"function")?
(d=e.pop(),n?d.call(a._engine.create[k](a,e)):t.on("raphael.DOMload",function(){d.call(a._engine.create[k](a,e))})):a._engine.create[k](a,arguments)}function G(){return this.hex}function r(a,c){for(var e=[],d=0,l=a.length;l-2*!c>d;d+=2){var b=[{x:+a[d-2],y:+a[d-1]},{x:+a[d],y:+a[d+1]},{x:+a[d+2],y:+a[d+3]},{x:+a[d+4],y:+a[d+5]}];c?d?l-4==d?b[3]={x:+a[0],y:+a[1]}:l-2==d&&(b[2]={x:+a[0],y:+a[1]},b[3]={x:+a[2],y:+a[3]}):b[0]={x:+a[l-2],y:+a[l-1]}:l-4==d?b[3]=b[2]:d||(b[0]={x:+a[d],y:+a[d+1]});e.push(["C",
(-b[0].x+6*b[1].x+b[2].x)/6,(-b[0].y+6*b[1].y+b[2].y)/6,(b[1].x+6*b[2].x-b[3].x)/6,(b[1].y+6*b[2].y-b[3].y)/6,b[2].x,b[2].y])}return e}function P(a,c,e,d,l,b,I,h,f){null==f&&(f=1);f=(1<f?1:0>f?0:f)/2;for(var k=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],g=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],M=0,J=0;12>J;J++)var w=f*k[J]+f,m=w*(w*(-3*a+9*e-9*l+3*I)+6*a-12*e+6*l)-3*a+3*e,w=w*(w*(-3*c+9*d-9*b+3*h)+6*c-12*d+6*b)-3*c+3*d,M=M+g[J]*
aa(m*m+w*w);return f*M}function T(a,c,e,d,l,b,I,h,f){if(!(0>f||P(a,c,e,d,l,b,I,h)<f)){var k=.5,g=1-k,M;for(M=P(a,c,e,d,l,b,I,h,g);.01<U(M-f);)k/=2,g+=(M<f?1:-1)*k,M=P(a,c,e,d,l,b,I,h,g);return g}}function L(c,e,d){c=a._path2curve(c);e=a._path2curve(e);for(var l,b,I,h,f,k,g,M,J,w,m=d?0:[],ra=0,n=c.length;ra<n;ra++)if(J=c[ra],"M"==J[0])l=f=J[1],b=k=J[2];else{"C"==J[0]?(J=[l,b].concat(J.slice(1)),l=J[6],b=J[7]):(J=[l,b,l,b,f,k,f,k],l=f,b=k);for(var u=0,ta=e.length;u<ta;u++)if(w=e[u],"M"==w[0])I=g=w[1],
h=M=w[2];else{"C"==w[0]?(w=[I,h].concat(w.slice(1)),I=w[6],h=w[7]):(w=[I,h,I,h,g,M,g,M],I=g,h=M);var C;var p=J,H=w;C=d;var q=a.bezierBBox(p),Ea=a.bezierBBox(H);if(a.isBBoxIntersect(q,Ea)){for(var q=P.apply(0,p),Ea=P.apply(0,H),q=ka(~~(q/5),1),Ea=ka(~~(Ea/5),1),Va=[],K=[],A={},Ra=C?0:[],O=0;O<q+1;O++){var V=a.findDotsAtSegment.apply(a,p.concat(O/q));Va.push({x:V.x,y:V.y,t:O/q})}for(O=0;O<Ea+1;O++)V=a.findDotsAtSegment.apply(a,H.concat(O/Ea)),K.push({x:V.x,y:V.y,t:O/Ea});for(O=0;O<q;O++)for(p=0;p<Ea;p++){var r=
Va[O],B=Va[O+1],H=K[p],V=K[p+1],Ka=.001>U(B.x-r.x)?"y":"x",X=.001>U(V.x-H.x)?"y":"x",W;W=r.x;var R=r.y,S=B.x,t=B.y,D=H.x,v=H.y,Y=V.x,gb=V.y;if(ka(W,S)<ca(D,Y)||ca(W,S)>ka(D,Y)||ka(R,t)<ca(v,gb)||ca(R,t)>ka(v,gb))W=void 0;else{var L=(W*t-R*S)*(D-Y)-(W-S)*(D*gb-v*Y),va=(W*t-R*S)*(v-gb)-(R-t)*(D*gb-v*Y),z=(W-S)*(v-gb)-(R-t)*(D-Y);if(z){var L=L/z,va=va/z,z=+L.toFixed(2),la=+va.toFixed(2);W=z<+ca(W,S).toFixed(2)||z>+ka(W,S).toFixed(2)||z<+ca(D,Y).toFixed(2)||z>+ka(D,Y).toFixed(2)||la<+ca(R,t).toFixed(2)||
la>+ka(R,t).toFixed(2)||la<+ca(v,gb).toFixed(2)||la>+ka(v,gb).toFixed(2)?void 0:{x:L,y:va}}else W=void 0}W&&A[W.x.toFixed(4)]!=W.y.toFixed(4)&&(A[W.x.toFixed(4)]=W.y.toFixed(4),r=r.t+U((W[Ka]-r[Ka])/(B[Ka]-r[Ka]))*(B.t-r.t),H=H.t+U((W[X]-H[X])/(V[X]-H[X]))*(V.t-H.t),0<=r&&1.001>=r&&0<=H&&1.001>=H&&(C?Ra++:Ra.push({x:W.x,y:W.y,t1:ca(r,1),t2:ca(H,1)})))}C=Ra}else C=C?0:[];if(d)m+=C;else{q=0;for(Ea=C.length;q<Ea;q++)C[q].segment1=ra,C[q].segment2=u,C[q].bez1=J,C[q].bez2=w;m=m.concat(C)}}}return m}function D(a,
c,e,d,l,b){null!=a?(this.a=+a,this.b=+c,this.c=+e,this.d=+d,this.e=+l,this.f=+b):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}function B(){return this.x+" "+this.y+" "+this.width+" × "+this.height}function m(a,c,e,d,l,b){function I(a,c){var e,d,l,b;l=a;for(d=0;8>d;d++){b=((k*l+f)*l+h)*l-a;if(U(b)<c)return l;e=(3*k*l+2*f)*l+h;if(1E-6>U(e))break;l-=b/e}e=0;d=1;l=a;if(l<e)return e;if(l>d)return d;for(;e<d;){b=((k*l+f)*l+h)*l;if(U(b-a)<c)break;a>b?e=l:d=l;l=(d-e)/2+e}return l}var h=3*c,f=3*(d-
c)-h,k=1-h-f,g=3*e,M=3*(l-e)-g,J=1-g-M;return function(a,c){var e=I(a,c);return((J*e+M)*e+g)*e}(a,1/(200*b))}function p(a,c){var e=[],d={};this.ms=c;this.times=1;if(a){for(var l in a)a.hasOwnProperty(l)&&(d[Ea(l)]=a[l],e.push(Ea(l)));e.sort(N)}this.anim=d;this.top=e[e.length-1];this.percents=e}function q(c,e,d,l,b,I,h){d=Ea(d);var f,k,M,w,ra,n,u,ta=c.ms,C={},p={},H={};if(l)for(q=0,Va=cb.length;q<Va;q++){if(n=cb[q],n.el.id==e.id&&n.anim==c){n.percent!=d?(delete n.el.e,delete n.el,cb.splice(q,1),M=
1):k=n;e.attr(n.totalOrigin);break}}else l=+p;for(var q=0,Va=c.percents.length;q<Va;q++)if(c.percents[q]==d||c.percents[q]>l*c.top){d=c.percents[q];ra=c.percents[q-1]||0;ta=ta/c.top*(d-ra);w=c.percents[q+1];f=c.anim[d];break}else l&&e.attr(c.anim[c.percents[q]]);if(f){if(k)k.initstatus=l,k.start=new Date-k.ms*l;else{for(var K in f)if(f.hasOwnProperty(K))if(sa.hasOwnProperty(K)||e.ca[K]){C[K]=e.attr(K);null==C[K]&&(C[K]=ha[K]);p[K]=f[K];n=!1;switch(sa[K]){case g:((u=p[K]-C[K])||isNaN(u))&&(n=!0);H[K]=
u/ta;break;case "colour":C[K]=a.getRGB(C[K]);q=a.getRGB(p[K]);u={};u.r=q.r-C[K].r;u.g=q.g-C[K].g;u.b=q.b-C[K].b;(u.r||u.g||u.b)&&(n=!0);H[K]={r:u.r/ta,g:u.g/ta,b:u.b/ta};break;case "path":var O;if((C[K].join?C[K].join():C[K])===(p[K].join?p[K].join():p[K])){n=!1;break}u=nb(C[K],p[K]);O=u[1];n=!0;C[K]=u[0];H[K]=[];q=0;for(Va=C[K].length;q<Va;q++){H[K][q]=[0];for(var A=1,Ra=C[K][q].length;A<Ra;A++)u=O[q][A]-C[K][q][A],H[K][q][A]=u/ta}break;case "transform":u=e._;q=fb(u[K],p[K]);n=!0;if(q)for(C[K]=q.from,
p[K]=q.to,H[K]=[],H[K].real=!0,q=0,Va=C[K].length;q<Va;q++)for(H[K][q]=[C[K][q][0]],A=1,Ra=C[K][q].length;A<Ra;A++)H[K][q][A]=(p[K][q][A]-C[K][q][A])/ta;else q=e.matrix||new D,u={_:{transform:u.transform},getBBox:function(){return e.getBBox(1)}},C[K]=[q.a,q.b,q.c,q.d,q.e,q.f],eb(u,p[K]),p[K]=u._.transform,H[K]=[(u.matrix.a-q.a)/ta,(u.matrix.b-q.b)/ta,(u.matrix.c-q.c)/ta,(u.matrix.d-q.d)/ta,(u.matrix.e-q.e)/ta,(u.matrix.f-q.f)/ta];break;case "csv":Va=J(f[K]).split(ia);O=J(C[K]).split(ia);if("clip-rect"==
K)for(C[K]=O,H[K]=[],q=O.length;q--;)((u=Va[q]-C[K][q])||isNaN(u))&&(n=!0),H[K][q]=u/ta;p[K]=Va;break;default:for(Va=[].concat(f[K]),O=[].concat(C[K]),H[K]=[],q=e.ca[K].length;q--;)((u=(Va[q]||0)-(O[q]||0))||isNaN(u))&&(n=!0),H[K][q]=u/ta}n||(delete C[K],delete p[K],delete f[K],delete H[K])}else if(a._availableAttrs.hasOwnProperty(K)||"text"===K||e.ca[K])e.attr(K,f[K]),delete f[K];n=f.easing;K=a.easing_formulas[n];if(!K)if((K=J(n).match(da))&&5==K.length){var V=K;K=function(a){return m(a,+V[1],+V[2],
+V[3],+V[4],ta)}}else K=Fa;n=f.start||c.start||+new Date;e.e=n={anim:c,percent:d,timestamp:n,start:n+(c.del||0),status:0,initstatus:l||0,stop:!1,ms:ta,easing:K,from:C,diff:H,to:p,el:e,callback:f.callback,prev:ra,next:w,repeat:I||c.times,origin:e.attr(),totalOrigin:b,parentEl:h};cb.push(n);if(l&&!k&&!M&&(n.stop=!0,n.start=new Date-ta*l,1==cb.length))return Jb();M&&(n.start=new Date-n.ms*l);1==cb.length&&(Eb||Lb())(Jb)}!1!==a.stopEvent&&t("raphael.anim.start."+e.id,e,c)}}function A(a){for(var c=0;c<
cb.length;c++)cb[c].el.paper==a&&cb.splice(c--,1)}a.upgrade="1.0.0";a.version="2.1.0";a.eve=t;v=a;var n,k="apply",g="number",f="array",S=Array.prototype.slice,C=Array.prototype.splice,Y=Array.prototype.shift,R=function(){return function(){}.hasOwnProperty("prototype")}(),u={doc:b.document,win:b},X=Object.prototype.hasOwnProperty.call(u.win,"Raphael"),O=u.win.Raphael,W=u.doc,H=u.win,w=a.supportsTouch="createTouch"in W,K=a.supportsOnlyTouch=w&&!(H.navigator.maxTouchPoints||H.navigator.msMaxTouchPoints),
h=function(){};a.ca=a.customAttributes=h.prototype;var V=function(){this.ca=this.customAttributes=new h;this._CustomAttributes=function(){};this._CustomAttributes.prototype=this.ca;this._elementsById={};this.id=a._oid++;t("raphael.new",this)},e=a.fn=V.prototype=a.prototype,d={circle:1,rect:1,path:1,ellipse:1,text:1,image:1,group:1},c="click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel dragstart dragmove dragend".split(" "),l=a._touchMap={mousedown:"touchstart",
mousemove:"touchmove",mouseup:"touchend"},M=a._dragEventMap={dragstart:"mousedown",dragmove:"mousemove",dragend:"mouseup"},J=String,Ea=H.parseFloat,Ka=H.parseInt,va=Math,ka=va.max,ca=va.min,U=va.abs,la=va.pow,Ga=va.cos,xa=va.sin,aa=va.sqrt,Z=va.round,ja=va.PI,ma=ja/180,oa=180/ja,Aa=J.prototype.toLowerCase,ga=J.prototype.toUpperCase,wa=Object.prototype.toString,ia=/[, ]+/,ua=/\{(\d+)\}/g;a._ISURL=/^url\(['"]?([^\)]+?)['"]?\)$/i;var Ca=/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i,
da=/^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,qa=/[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,ba=/,?([achlmqrstvxz]),?/gi,na=/([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,
pa=/([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,La=/(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/ig;
a._radial_gradient=/^x?r(?:\(([^\)]*?)\))?/;var ea={NaN:1,Infinity:1,"-Infinity":1},za={hs:1,rg:1},ha=a._availableAttrs={"arrow-end":"none","arrow-start":"none",blur:0,"clip-rect":"0 0 1e9 1e9","clip-path":"",cursor:"default",cx:0,cy:0,fill:"#fff","fill-opacity":1,font:'10px "Arial"',"font-family":'"Arial"',"font-size":"10","font-style":"normal","font-weight":400,gradient:0,height:0,href:"about:blank","letter-spacing":0,"line-height":12,"vertical-align":"middle",opacity:1,path:"M0,0",r:0,rx:0,ry:0,
src:"",stroke:"#000","stroke-dasharray":"","stroke-linecap":"butt","stroke-linejoin":"butt","stroke-miterlimit":0,"stroke-opacity":1,"stroke-width":1,target:"_blank","text-anchor":"middle",visibility:"",title:"",transform:"",rotation:0,width:0,x:0,y:0},sa=a._availableAnimAttrs={blur:g,"clip-rect":"csv","clip-path":"path",cx:g,cy:g,fill:"colour","fill-opacity":g,"font-size":g,height:g,opacity:g,path:"path",r:g,rx:g,ry:g,stroke:"colour","stroke-opacity":g,"stroke-width":g,transform:"transform",width:g,
x:g,y:g},fa={},N=function(a,c){return Ea(a)-Ea(c)},Ia=function(){},Fa=function(a){return a},Ba=a._rectPath=function(a,c,e,d,l){return l?[["M",a+l,c],["l",e-2*l,0],["a",l,l,0,0,1,l,l],["l",0,d-2*l],["a",l,l,0,0,1,-l,l],["l",2*l-e,0],["a",l,l,0,0,1,-l,-l],["l",0,2*l-d],["a",l,l,0,0,1,l,-l],["z"]]:[["M",a,c],["l",e,0],["l",0,d],["l",-e,0],["z"]]},Ja=function(a,c,e,d){null==d&&(d=e);return[["M",a,c],["m",0,-d],["a",e,d,0,1,1,0,2*d],["a",e,d,0,1,1,0,-2*d],["z"]]},Ha=a._getPath={group:function(){return!1},
path:function(a){return a.attr("path")},circle:function(a){a=a.attrs;return Ja(a.cx,a.cy,a.r)},ellipse:function(a){a=a.attrs;return Ja(a.cx,a.cy,a.rx,a.ry)},rect:function(a){a=a.attrs;return Ba(a.x,a.y,a.width,a.height,a.r)},image:function(a){a=a.attrs;return Ba(a.x,a.y,a.width,a.height)},text:function(a){a=a._getBBox();return Ba(a.x,a.y,a.width,a.height)}},Da=a.mapPath=function(a,c){if(!c)return a;var e,d,l,b,I,h,f;a=nb(a);l=0;for(I=a.length;l<I;l++)for(f=a[l],b=1,h=f.length;b<h;b+=2)e=c.x(f[b],
f[b+1]),d=c.y(f[b],f[b+1]),f[b]=e,f[b+1]=d;return a};a.pick=function(){for(var a,c=0,e=arguments.length;c<e;c+=1)if((a=arguments[c])||!1===a||0===a)return a};var Ma=a._lastArgIfGroup=function(c,e){var d=c.length-1,l=c[d];if(l&&l.constructor===a.el.constructor&&"group"===l.type)return e&&(c[d]=void 0,delete c[d],C.call(c,d,1)),l},Na=a._serializeArgs=function(c){var e=c[0],d,l;if(a.is(e,"object")&&!a.is(e,"array")&&"group"!==e.type)for(d=e,e.path&&(e=e.path)&&!a.is(e,"string")&&a.is(e[0],f),e=1,l=arguments.length;e<
l;e+=2)d[arguments[e]]||(d[arguments[e]]=arguments[e+1]);else for(d={},e=1,l=arguments.length;e<l;e+=2)d[arguments[e]]=c[(e-1)/2]||arguments[e+1];return d},Oa=a.merge=function(a,c,e,d,l){var b,I,h,f;l?(d.push(a),l.push(c)):(d=[a],l=[c]);if(c instanceof Array)for(b=0;b<c.length;b+=1){try{I=a[b],h=c[b]}catch(k){continue}if("object"!==typeof h)e&&void 0===h||(a[b]=h);else{if(null===I||"object"!==typeof I)I=a[b]=h instanceof Array?[]:{};f=checkCyclicRef(h,l);-1!==f?I=a[b]=d[f]:Oa(I,h,e,d,l)}}else for(b in c){try{I=
a[b],h=c[b]}catch(k){continue}if(null!==h&&"object"===typeof h)if(f=wa.call(h),"[object Object]"===f){if(null===I||"object"!==typeof I)I=a[b]={};f=checkCyclicRef(h,l);-1!==f?I=a[b]=d[f]:Oa(I,h,e,d,l)}else"[object Array]"===f?(null!==I&&I instanceof Array||(I=a[b]=[]),f=checkCyclicRef(h,l),-1!==f?I=a[b]=d[f]:Oa(I,h,e,d,l)):a[b]=h;else a[b]=h}return a};a.extend=function(a,c,e){if("object"!==typeof a&&"object"!==typeof c)return null;if("object"!==typeof c||null===c)return a;"object"!==typeof a&&(a=c instanceof
Array?[]:{});Oa(a,c,e);return a};var Sa=a.is=function(a,c){c=Aa.call(c);return"finite"==c?!ea.hasOwnProperty(+a):c==f?a instanceof Array:"object"!==c||void 0!==a&&null!==a?"null"==c&&null===a||c==typeof a&&null!==a||"object"==c&&a===Object(a)||"array"==c&&Array.isArray&&Array.isArray(a)||wa.call(a).slice(8,-1).toLowerCase()==c:!1};a.createUUID=function(a,c){return function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(a,c).toUpperCase()}}(/[xy]/g,function(a){var c=16*va.random()|0;return("x"==
a?c:c&3|8).toString(16)});a.getElementID=function(a){return"rr-"+a};var Ua=a.clone=R?function(a){if(Object(a)!==a)return a;var c=new a.constructor,e;for(e in a)"prototype"!==e&&a.hasOwnProperty(e)&&(c[e]=Ua(a[e]));return c}:function(a){if(Object(a)!==a)return a;var c=new a.constructor,e;for(e in a)a.hasOwnProperty(e)&&(c[e]=Ua(a[e]));return c};a._g=u;a.type=H.ENABLE_RED_CANVAS&&(H.CanvasRenderingContext2D||W.createElement("canvas").getContext)?"CANVAS":H.SVGAngle||W.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure",
"1.1")?"SVG":"VML";if("VML"==a.type){var Pa=W.createElement("div"),ab;Pa.innerHTML='<v:shape adj="1"/>';ab=Pa.firstChild;ab.style.behavior="url(#default#VML)";if(!ab||"object"!=typeof ab.adj)return a.type="";Pa=null}a.svg=!((a.vml="VML"==a.type)||(a.canvas="CANVAS"==a.type));a._Paper=V;a._id=0;a._oid=0;a.angle=function(c,e,d,l,b,I){return null==b?(c-=d,e-=l,c||e?(va.atan2(-e,-c)*oa+540)%360:0):a.angle(c,e,b,I)-a.angle(d,l,b,I)};a.rad=function(a){return a%360*ma};a.deg=function(a){return a*oa%360};
a.snapTo=function(a,c,e){var d;Sa(e,"finite")||(e=10);if(Sa(a,f))for(d=a.length;d--;){if(U(a[d]-c)<=e)return a[d]}else{a=+a;d=c%a;if(d<e)return c-d;if(d>a-e)return c-d+a}return c};a.setWindow=function(c){t("raphael.setWindow",a,u.win,c);H=u.win=c;W=u.doc=u.win.document;a._engine.initWin&&a._engine.initWin(u.win)};var Xa=function(c){if(a.vml){var e=/^\s+|\s+$/g,d;try{var l=new ActiveXObject("htmlfile");l.write("<body>");l.close();d=l.body}catch(b){d=createPopup().document.body}var I=d.createTextRange();
Xa=Za(function(a){try{d.style.color=J(a).replace(e,"");var c=I.queryCommandValue("ForeColor");return"#"+("000000"+((c&255)<<16|c&65280|(c&16711680)>>>16).toString(16)).slice(-6)}catch(l){return"none"}})}else{var h=u.doc.createElement("i");h.title="Raphaël Colour Picker";h.style.display="none";u.doc.body.appendChild(h);Xa=Za(function(a){h.style.color=a;return u.doc.defaultView.getComputedStyle(h,"").getPropertyValue("color")})}return Xa(c)},$a=function(){return"hsb("+[this.h,this.s,this.b]+")"},Ta=
function(){return"hsl("+[this.h,this.s,this.l]+")"},bb=function(){return this.hex},Qa=function(c,e,d){null==e&&Sa(c,"object")&&"r"in c&&"g"in c&&"b"in c&&(d=c.b,e=c.g,c=c.r);null==e&&Sa(c,"string")&&(d=a.getRGB(c),c=d.r,e=d.g,d=d.b);if(1<c||1<e||1<d)c/=255,e/=255,d/=255;return[c,e,d]},Wa=function(c,e,d,l){var b={r:c*=255,g:e*=255,b:d*=255,hex:a.rgb(c,e,d),toString:bb};Sa(l,"finite")&&(b.opacity=l);return b};a.color=function(c){var e;a.is(c,"object")&&"h"in c&&"s"in c&&"b"in c?(e=a.hsb2rgb(c),c.r=
e.r,c.g=e.g,c.b=e.b,c.hex=e.hex):a.is(c,"object")&&"h"in c&&"s"in c&&"l"in c?(e=a.hsl2rgb(c),c.r=e.r,c.g=e.g,c.b=e.b,c.hex=e.hex):(a.is(c,"string")&&(c=a.getRGB(c)),a.is(c,"object")&&"r"in c&&"g"in c&&"b"in c?(e=a.rgb2hsl(c),c.h=e.h,c.s=e.s,c.l=e.l,e=a.rgb2hsb(c),c.v=e.b):(c={hex:"none"},c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1));c.toString=bb;return c};a.hsb2rgb=function(a,c,e,d){this.is(a,"object")&&"h"in a&&"s"in a&&"b"in a&&(e=a.b,c=a.s,a=a.h,d=a.o);var l,b,I;a=360*a%360/60;I=e*c;c=I*(1-U(a%2-1));e=l=b=
e-I;a=~~a;e+=[I,c,0,0,c,I][a];l+=[c,I,I,c,0,0][a];b+=[0,0,c,I,I,c][a];return Wa(e,l,b,d)};a.hsl2rgb=function(a,c,e,d){this.is(a,"object")&&"h"in a&&"s"in a&&"l"in a&&(e=a.l,c=a.s,a=a.h);if(1<a||1<c||1<e)a/=360,c/=100,e/=100;var l,b,I;a=360*a%360/60;I=2*c*(.5>e?e:1-e);c=I*(1-U(a%2-1));e=l=b=e-I/2;a=~~a;e+=[I,c,0,0,c,I][a];l+=[c,I,I,c,0,0][a];b+=[0,0,c,I,I,c][a];return Wa(e,l,b,d)};a.rgb2hsb=function(a,c,e){e=Qa(a,c,e);a=e[0];c=e[1];e=e[2];var d,l;d=ka(a,c,e);l=d-ca(a,c,e);a=((0==l?null:d==a?(c-e)/
l:d==c?(e-a)/l+2:(a-c)/l+4)+360)%6*60/360;return{h:a,s:0==l?0:l/d,b:d,toString:$a}};a.rgb2hsl=function(a,c,e){e=Qa(a,c,e);a=e[0];c=e[1];e=e[2];var d,l,b;d=ka(a,c,e);l=ca(a,c,e);b=d-l;a=((0==b?null:d==a?(c-e)/b:d==c?(e-a)/b+2:(a-c)/b+4)+360)%6*60/360;d=(d+l)/2;return{h:a,s:0==b?0:.5>d?b/(2*d):b/(2-2*d),l:d,toString:Ta}};a._path2string=function(){return this.join(",").replace(ba,"$1")};var Za=a._cacher=function(a,c,e){function d(){var l=S.call(arguments,0),b=l.join("␀"),I=d.cache=d.cache||{},h=d.count=
d.count||[];if(I.hasOwnProperty(b)){a:for(var l=h,h=b,f=0,g=l.length;f<g;f++)if(l[f]===h){l.push(l.splice(f,1)[0]);break a}return e?e(I[b]):I[b]}1E3<=h.length&&delete I[h.shift()];h.push(b);I[b]=a[k](c,l);return e?e(I[b]):I[b]}return d};a._preload=function(a,c){var e=W.createElement("img");e.style.cssText="position:absolute;left:-9999em;top:-9999em";e.onload=function(){c.call(this);this.onload=null;W.body.removeChild(this)};e.onerror=function(){W.body.removeChild(this)};W.body.appendChild(e);e.src=
a};a.getRGB=Za(function(c){var e,d,l,b,I;c&&Sa(c,"object")&&"opacity"in c&&(e=c.opacity);if(!c||(c=J(c)).indexOf("-")+1)return{r:-1,g:-1,b:-1,hex:"none",error:1,toString:G};if("none"==c)return{r:-1,g:-1,b:-1,hex:"none",toString:G};!za.hasOwnProperty(c.toLowerCase().substring(0,2))&&"#"!==c.charAt()&&(c=Xa(c));if(c=c.match(Ca)){c[2]&&(b=Ka(c[2].substring(5),16),l=Ka(c[2].substring(3,5),16),d=Ka(c[2].substring(1,3),16));c[3]&&(b=Ka((I=c[3].charAt(3))+I,16),l=Ka((I=c[3].charAt(2))+I,16),d=Ka((I=c[3].charAt(1))+
I,16));c[4]&&(I=c[4].split(qa),d=Ea(I[0]),"%"==I[0].slice(-1)&&(d*=2.55),l=Ea(I[1]),"%"==I[1].slice(-1)&&(l*=2.55),b=Ea(I[2]),"%"==I[2].slice(-1)&&(b*=2.55),"rgba"==c[1].toLowerCase().slice(0,4)&&(e=Ea(I[3])),I[3]&&"%"==I[3].slice(-1)&&(e/=100));if(c[5])return I=c[5].split(qa),d=Ea(I[0]),"%"==I[0].slice(-1)&&(d*=2.55),l=Ea(I[1]),"%"==I[1].slice(-1)&&(l*=2.55),b=Ea(I[2]),"%"==I[2].slice(-1)&&(b*=2.55),"deg"!=I[0].slice(-3)&&"°"!=I[0].slice(-1)||(d/=360),"hsba"==c[1].toLowerCase().slice(0,4)&&(e=Ea(I[3])),
I[3]&&"%"==I[3].slice(-1)&&(e/=100),a.hsb2rgb(d,l,b,e);if(c[6])return I=c[6].split(qa),d=Ea(I[0]),"%"==I[0].slice(-1)&&(d*=2.55),l=Ea(I[1]),"%"==I[1].slice(-1)&&(l*=2.55),b=Ea(I[2]),"%"==I[2].slice(-1)&&(b*=2.55),"deg"!=I[0].slice(-3)&&"°"!=I[0].slice(-1)||(d/=360),"hsla"==c[1].toLowerCase().slice(0,4)&&(e=Ea(I[3])),I[3]&&"%"==I[3].slice(-1)&&(e/=100),a.hsl2rgb(d,l,b,e);c={r:d,g:l,b:b,toString:G};c.hex="#"+(16777216|b|l<<8|d<<16).toString(16).slice(1);a.is(e,"finite")&&(c.opacity=e);return c}return{r:-1,
g:-1,b:-1,hex:"none",error:1,toString:G}},a);a.tintshade=Za(function(c,e){var d=a.getRGB(c),l;l=255;0>e&&(e*=-1,l=0);1<e&&(e=1);l=0===e?d:{r:l-(l-d.r)*e,g:l-(l-d.g)*e,b:l-(l-d.b)*e,toString:G};l.hex=a.rgb(l.r,l.g,l.b);d.error&&(l.error=d.error);"opacity"in d?(l.rgba="rgba("+[l.r,l.g,l.b,d.opacity].join()+")",l.opacity=d.opacity):l.rgba="rgb("+[l.r,l.g,l.b].join()+")";return l},a);a.hsb=Za(function(c,e,d){return a.hsb2rgb(c,e,d).hex});a.hsl=Za(function(c,e,d){return a.hsl2rgb(c,e,d).hex});a.rgb=Za(function(a,
c,e){return"#"+(16777216|e|c<<8|a<<16).toString(16).slice(1)});a.getColor=function(a){a=this.getColor.start=this.getColor.start||{h:0,s:1,b:a||.75};var c=this.hsb2rgb(a.h,a.s,a.b);a.h+=.075;1<a.h&&(a.h=0,a.s-=.2,0>=a.s&&(this.getColor.start={h:0,s:1,b:a.b}));return c.hex};a.getColor.reset=function(){delete this.start};a.parsePathString=function(c){if(!c)return null;var e=ta(c);if(e.arr)return Va(e.arr);var d={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},l=[];a.is(c,f)&&a.is(c[0],f)&&(l=Va(c));l.length||
J(c).replace(na,function(a,c,e){var b=[];a=c.toLowerCase();e.replace(La,function(a,c){c&&b.push(+c)});"m"==a&&2<b.length&&(l.push([c].concat(b.splice(0,2))),a="l",c="m"==c?"l":"L");if("r"==a)l.push([c].concat(b));else for(;b.length>=d[a]&&(l.push([c].concat(b.splice(0,d[a]))),d[a]););});l.toString=a._path2string;e.arr=Va(l);return l};a.parseTransformString=Za(function(c){if(!c)return null;var e=[];a.is(c,f)&&a.is(c[0],f)&&(e=Va(c));e.length||J(c).replace(pa,function(a,c,d){var l=[];Aa.call(c);d.replace(La,
function(a,c){c&&l.push(+c)});e.push([c].concat(l))});e.toString=a._path2string;return e});var ta=function(a){var c=ta.ps=ta.ps||{};c[a]?c[a].sleep=100:c[a]={sleep:100};setTimeout(function(){for(var e in c)c.hasOwnProperty(e)&&e!=a&&(c[e].sleep--,!c[e].sleep&&delete c[e])});return c[a]};a.findDotsAtSegment=function(a,c,e,d,l,b,I,h,f){var k=1-f,g=la(k,3),M=la(k,2),J=f*f,w=J*f,u=g*a+3*M*f*e+3*k*f*f*l+w*I,g=g*c+3*M*f*d+3*k*f*f*b+w*h,M=a+2*f*(e-a)+J*(l-2*e+a),w=c+2*f*(d-c)+J*(b-2*d+c),m=e+2*f*(l-e)+J*
(I-2*l+e),J=d+2*f*(b-d)+J*(h-2*b+d);a=k*a+f*e;c=k*c+f*d;l=k*l+f*I;b=k*b+f*h;h=90-180*va.atan2(M-m,w-J)/ja;(M>m||w<J)&&(h+=180);return{x:u,y:g,m:{x:M,y:w},n:{x:m,y:J},start:{x:a,y:c},end:{x:l,y:b},alpha:h}};a.bezierBBox=function(c,e,d,l,b,I,h,f){a.is(c,"array")||(c=[c,e,d,l,b,I,h,f]);c=db.apply(null,c);return{x:c.min.x,y:c.min.y,x2:c.max.x,y2:c.max.y,width:c.max.x-c.min.x,height:c.max.y-c.min.y}};a.isPointInsideBBox=function(a,c,e){return c>=a.x&&c<=a.x2&&e>=a.y&&e<=a.y2};a.isBBoxIntersect=function(c,
e){var d=a.isPointInsideBBox;return d(e,c.x,c.y)||d(e,c.x2,c.y)||d(e,c.x,c.y2)||d(e,c.x2,c.y2)||d(c,e.x,e.y)||d(c,e.x2,e.y)||d(c,e.x,e.y2)||d(c,e.x2,e.y2)||(c.x<e.x2&&c.x>e.x||e.x<c.x2&&e.x>c.x)&&(c.y<e.y2&&c.y>e.y||e.y<c.y2&&e.y>c.y)};a.pathIntersection=function(a,c){return L(a,c)};a.pathIntersectionNumber=function(a,c){return L(a,c,1)};a.isPointInsidePath=function(c,e,d){var l=a.pathBBox(c);return a.isPointInsideBBox(l,e,d)&&(1==L(c,[["M",e,d],["H",l.x2+10]],1)%2||1==L(c,[["M",e,d],["V",l.y2+10]],
1)%2)};a._removedFactory=function(a){return function(){t("raphael.log",null,"Raphaël: you are calling to method “"+a+"” of removed object",a)}};var ra=a.pathBBox=function(a){var c=ta(a);if(!a)return{x:0,y:0,width:0,height:0,x2:0,y2:0};a=nb(a);for(var e=0,d=0,l=[],b=[],I,h=0,f=a.length;h<f;h++)I=a[h],"M"==I[0]?(e=I[1],d=I[2],l.push(e),b.push(d)):(e=db(e,d,I[1],I[2],I[3],I[4],I[5],I[6]),l=l.concat(e.min.x,e.max.x),b=b.concat(e.min.y,e.max.y),e=I[5],d=I[6]);a=ca[k](0,l);I=ca[k](0,b);l=ka[k](0,l);b=ka[k](0,
b);b={x:a,y:I,x2:l,y2:b,width:l-a,height:b-I};c.bbox=Ua(b);return b},Va=function(c){c=Ua(c);c.toString=a._path2string;return c},Ra=a._pathToRelative=function(c){var e=ta(c);if(e.rel)return Va(e.rel);a.is(c,f)&&a.is(c&&c[0],f)||(c=a.parsePathString(c));var d=[],l=0,b=0,I=0,h=0,k=0;"M"==c[0][0]&&(l=c[0][1],b=c[0][2],I=l,h=b,k++,d.push(["M",l,b]));for(var g=c.length;k<g;k++){var M=d[k]=[],J=c[k];if(J[0]!=Aa.call(J[0]))switch(M[0]=Aa.call(J[0]),M[0]){case "a":M[1]=J[1];M[2]=J[2];M[3]=J[3];M[4]=J[4];M[5]=
J[5];M[6]=+(J[6]-l).toFixed(3);M[7]=+(J[7]-b).toFixed(3);break;case "v":M[1]=+(J[1]-b).toFixed(3);break;case "m":I=J[1],h=J[2];default:for(var w=1,m=J.length;w<m;w++)M[w]=+(J[w]-(w%2?l:b)).toFixed(3)}else for(d[k]=[],"m"==J[0]&&(I=J[1]+l,h=J[2]+b),M=0,w=J.length;M<w;M++)d[k][M]=J[M];J=d[k].length;switch(d[k][0]){case "z":l=I;b=h;break;case "h":l+=+d[k][J-1];break;case "v":b+=+d[k][J-1];break;default:l+=+d[k][J-2],b+=+d[k][J-1]}}d.toString=a._path2string;e.rel=Va(d);return d},I=a._pathToAbsolute=function(c){var e=
ta(c),d;if(e.abs)return Va(e.abs);a.is(c,f)&&a.is(c&&c[0],f)||(c=a.parsePathString(c));if(!c||!c.length)return d=["M",0,0],d.toString=a._path2string,d;var l=0,b=0,I=0,h=0,k=0;d=[];"M"==c[0][0]&&(l=+c[0][1],b=+c[0][2],I=l,h=b,k++,d[0]=["M",l,b]);for(var g=3==c.length&&"M"==c[0][0]&&"R"==c[1][0].toUpperCase()&&"Z"==c[2][0].toUpperCase(),M,J=k,w=c.length;J<w;J++){d.push(k=[]);M=c[J];if(M[0]!=ga.call(M[0]))switch(k[0]=ga.call(M[0]),k[0]){case "A":k[1]=M[1];k[2]=M[2];k[3]=M[3];k[4]=M[4];k[5]=M[5];k[6]=
+(M[6]+l);k[7]=+(M[7]+b);break;case "V":k[1]=+M[1]+b;break;case "H":k[1]=+M[1]+l;break;case "R":for(var m=[l,b].concat(M.slice(1)),u=2,n=m.length;u<n;u++)m[u]=+m[u]+l,m[++u]=+m[u]+b;d.pop();d=d.concat(r(m,g));break;case "M":I=+M[1]+l,h=+M[2]+b;default:for(u=1,n=M.length;u<n;u++)k[u]=+M[u]+(u%2?l:b)}else if("R"==M[0])m=[l,b].concat(M.slice(1)),d.pop(),d=d.concat(r(m,g)),k=["R"].concat(M.slice(-2));else for(m=0,u=M.length;m<u;m++)k[m]=M[m];switch(k[0]){case "Z":l=I;b=h;break;case "H":l=k[1];break;case "V":b=
k[1];break;case "M":I=k[k.length-2],h=k[k.length-1];default:l=k[k.length-2],b=k[k.length-1]}}d.toString=a._path2string;e.abs=Va(d);return d},gb=function(a,c,e,d){return[a,c,e,d,e,d]},Sb=function(a,c,e,d,l,b){var I=1/3,h=2/3;return[I*a+h*e,I*c+h*d,I*l+h*e,I*b+h*d,l,b]},yb=function(a,c,e,d,l,b,I,h,f,k){var g=120*ja/180,M=ma*(+l||0),J=[],w,m=Za(function(a,c,e){var d=a*Ga(e)-c*xa(e);a=a*xa(e)+c*Ga(e);return{x:d,y:a}});if(k)ra=k[0],w=k[1],b=k[2],u=k[3];else{w=m(a,c,-M);a=w.x;c=w.y;w=m(h,f,-M);h=w.x;f=
w.y;Ga(ma*l);xa(ma*l);w=(a-h)/2;ra=(c-f)/2;u=w*w/(e*e)+ra*ra/(d*d);1<u&&(u=aa(u),e*=u,d*=u);var u=e*e,n=d*d,u=(b==I?-1:1)*aa(U((u*n-u*ra*ra-n*w*w)/(u*ra*ra+n*w*w)));b=u*e*ra/d+(a+h)/2;var u=u*-d*w/e+(c+f)/2,ra=va.asin(((c-u)/d).toFixed(9));w=va.asin(((f-u)/d).toFixed(9));ra=a<b?ja-ra:ra;w=h<b?ja-w:w;0>ra&&(ra=2*ja+ra);0>w&&(w=2*ja+w);I&&ra>w&&(ra-=2*ja);!I&&w>ra&&(w-=2*ja)}if(U(w-ra)>g){var J=w,n=h,ta=f;w=ra+g*(I&&w>ra?1:-1);h=b+e*Ga(w);f=u+d*xa(w);J=yb(h,f,e,d,l,0,I,n,ta,[w,J,b,u])}b=w-ra;l=Ga(ra);
g=xa(ra);I=Ga(w);w=xa(w);b=va.tan(b/4);e=4/3*e*b;b*=4/3*d;d=[a,c];a=[a+e*g,c-b*l];c=[h+e*w,f-b*I];h=[h,f];a[0]=2*d[0]-a[0];a[1]=2*d[1]-a[1];if(k)return[a,c,h].concat(J);J=[a,c,h].concat(J).join().split(",");k=[];h=0;for(f=J.length;h<f;h++)k[h]=h%2?m(J[h-1],J[h],M).y:m(J[h],J[h+1],M).x;return k},zb=function(a,c,e,d,l,b,I,h,f){var k=1-f;return{x:la(k,3)*a+3*la(k,2)*f*e+3*k*f*f*l+la(f,3)*I,y:la(k,3)*c+3*la(k,2)*f*d+3*k*f*f*b+la(f,3)*h}},db=Za(function(a,c,e,d,l,b,I,h){var f=l-2*e+a-(I-2*l+e),g=2*(e-
a)-2*(l-e),M=a-e,J=(-g+aa(g*g-4*f*M))/2/f,f=(-g-aa(g*g-4*f*M))/2/f,w=[c,h],u=[a,I];"1e12"<U(J)&&(J=.5);"1e12"<U(f)&&(f=.5);0<J&&1>J&&(J=zb(a,c,e,d,l,b,I,h,J),u.push(J.x),w.push(J.y));0<f&&1>f&&(J=zb(a,c,e,d,l,b,I,h,f),u.push(J.x),w.push(J.y));f=b-2*d+c-(h-2*b+d);g=2*(d-c)-2*(b-d);M=c-d;J=(-g+aa(g*g-4*f*M))/2/f;f=(-g-aa(g*g-4*f*M))/2/f;"1e12"<U(J)&&(J=.5);"1e12"<U(f)&&(f=.5);0<J&&1>J&&(J=zb(a,c,e,d,l,b,I,h,J),u.push(J.x),w.push(J.y));0<f&&1>f&&(J=zb(a,c,e,d,l,b,I,h,f),u.push(J.x),w.push(J.y));return{min:{x:ca[k](0,
u),y:ca[k](0,w)},max:{x:ka[k](0,u),y:ka[k](0,w)}}}),nb=a._path2curve=Za(function(a,c){var e=!c&&ta(a);if(!c&&e.curve)return Va(e.curve);var d=I(a),l=c&&I(c),b={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},h={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},f=function(a,c){var e,d;if(!a)return["C",c.x,c.y,c.x,c.y,c.x,c.y];a[0]in{T:1,Q:1}||(c.qx=c.qy=null);switch(a[0]){case "M":c.X=a[1];c.Y=a[2];break;case "A":a=["C"].concat(yb[k](0,[c.x,c.y].concat(a.slice(1))));break;case "S":e=c.x+(c.x-(c.bx||c.x));d=c.y+
(c.y-(c.by||c.y));a=["C",e,d].concat(a.slice(1));break;case "T":c.qx=c.x+(c.x-(c.qx||c.x));c.qy=c.y+(c.y-(c.qy||c.y));a=["C"].concat(Sb(c.x,c.y,c.qx,c.qy,a[1],a[2]));break;case "Q":c.qx=a[1];c.qy=a[2];a=["C"].concat(Sb(c.x,c.y,a[1],a[2],a[3],a[4]));break;case "L":a=["C"].concat(gb(c.x,c.y,a[1],a[2]));break;case "H":a=["C"].concat(gb(c.x,c.y,a[1],c.y));break;case "V":a=["C"].concat(gb(c.x,c.y,c.x,a[1]));break;case "Z":a=["C"].concat(gb(c.x,c.y,c.X,c.Y))}return a},g=function(a,c){if(7<a[c].length){a[c].shift();
for(var e=a[c];e.length;)a.splice(c++,0,["C"].concat(e.splice(0,6)));a.splice(c,1);w=ka(d.length,l&&l.length||0)}},M=function(a,c,e,b,I){a&&c&&"M"==a[I][0]&&"M"!=c[I][0]&&(c.splice(I,0,["M",b.x,b.y]),e.bx=0,e.by=0,e.x=a[I][1],e.y=a[I][2],w=ka(d.length,l&&l.length||0))},J=0,w=ka(d.length,l&&l.length||0);for(;J<w;J++){d[J]=f(d[J],b);g(d,J);l&&(l[J]=f(l[J],h));l&&g(l,J);M(d,l,b,h,J);M(l,d,h,b,J);var u=d[J],m=l&&l[J],ra=u.length,n=l&&m.length;b.x=u[ra-2];b.y=u[ra-1];b.bx=Ea(u[ra-4])||b.x;b.by=Ea(u[ra-
3])||b.y;h.bx=l&&(Ea(m[n-4])||h.x);h.by=l&&(Ea(m[n-3])||h.y);h.x=l&&m[n-2];h.y=l&&m[n-1]}l||(e.curve=Va(d));return l?[d,l]:d},null,Va);a._parseDots=Za(function(c){for(var e=[],d=0,l=c.length;d<l;d++){var b={},I=c[d].match(/^([^:]*):?([\d\.]*)/);b.color=a.getRGB(I[1]);if(b.color.error)return null;b.opacity=b.color.opacity;b.color=b.color.hex;I[2]&&(b.offset=I[2]+"%");e.push(b)}d=1;for(l=e.length-1;d<l;d++)if(!e[d].offset){c=Ea(e[d-1].offset||0);I=0;for(b=d+1;b<l;b++)if(e[b].offset){I=e[b].offset;break}I||
(I=100,b=l);I=Ea(I);for(I=(I-c)/(b-d+1);d<b;d++)c+=I,e[d].offset=c+"%"}return e});var Ab=a._tear=function(a,c){a==c.top&&(c.top=a.prev);a==c.bottom&&(c.bottom=a.next);a.next&&(a.next.prev=a.prev);a.prev&&(a.prev.next=a.next)};a._tofront=function(a,c){if(c.top===a)return!1;Ab(a,c);a.next=null;a.prev=c.top;c.top.next=a;c.top=a;return!0};a._toback=function(a,c){if(c.bottom===a)return!1;Ab(a,c);a.next=c.bottom;a.prev=null;c.bottom.prev=a;c.bottom=a;return!0};a._insertafter=function(a,c,e,d){Ab(a,e);a.parent=
d;c===d.top&&(d.top=a);c.next&&(c.next.prev=a);a.next=c.next;a.prev=c;c.next=a};a._insertbefore=function(a,c,e,d){Ab(a,e);a.parent=d;c===d.bottom&&(d.bottom=a);c.prev&&(c.prev.next=a);a.prev=c.prev;c.prev=a;a.next=c};var ib=a.toMatrix=function(a,c){var e=ra(a),d={_:{transform:""},getBBox:function(){return e}};eb(d,c);return d.matrix};a.transformPath=function(a,c){return Da(a,ib(a,c))};var eb=a._extractTransform=function(c,e){if(null==e)return c._.transform;e=J(e).replace(/\.{3}|\u2026/g,c._.transform||
"");var d=a.parseTransformString(e),l=0,b=0,I=0,h=1,f=1,k=c._,I=new D;k.transform=d||[];if(d)for(var b=0,g=d.length;b<g;b++){var M=d[b],w=M.length,u=J(M[0]).toLowerCase(),m=M[0]!=u,ra=m?I.invert():0;"t"==u&&3==w?m?(w=ra.x(0,0),u=ra.y(0,0),m=ra.x(M[1],M[2]),ra=ra.y(M[1],M[2]),I.translate(m-w,ra-u)):I.translate(M[1],M[2]):"r"==u?2==w?(ra=k.bb||(k.bb=c.getBBox(1)),I.rotate(M[1],ra.x+ra.width/2,ra.y+ra.height/2),l+=M[1]):4==w&&(m?(m=ra.x(M[2],M[3]),ra=ra.y(M[2],M[3]),I.rotate(M[1],m,ra)):I.rotate(M[1],
M[2],M[3]),l+=M[1]):"s"==u?2==w||3==w?(ra=k.bb||(k.bb=c.getBBox(1)),I.scale(M[1],M[w-1],ra.x+ra.width/2,ra.y+ra.height/2),h*=M[1],f*=M[w-1]):5==w&&(m?(m=ra.x(M[3],M[4]),ra=ra.y(M[3],M[4]),I.scale(M[1],M[2],m,ra)):I.scale(M[1],M[2],M[3],M[4]),h*=M[1],f*=M[2]):"m"==u&&7==w&&I.add(M[1],M[2],M[3],M[4],M[5],M[6]);k.dirtyT=1;c.matrix=I}c.matrix=I;k.sx=h;k.sy=f;k.deg=l;k.dx=b=I.e;k.dy=I=I.f;1==h&&1==f&&!l&&k.bbox?(k.bbox.x+=+b,k.bbox.y+=+I):k.dirtyT=1},Bb=function(a){var c=a[0];switch(c.toLowerCase()){case "t":return[c,
0,0];case "m":return[c,1,0,0,1,0,0];case "r":return 4==a.length?[c,0,a[2],a[3]]:[c,0];case "s":return 5==a.length?[c,1,1,a[3],a[4]]:3==a.length?[c,1,1]:[c,1]}},fb=a._equaliseTransform=function(c,e){e=J(e).replace(/\.{3}|\u2026/g,c);c=a.parseTransformString(c)||[];e=a.parseTransformString(e)||[];for(var d=ka(c.length,e.length),l=[],b=[],I=0,h,f,k,g;I<d;I++){k=c[I]||Bb(e[I]);g=e[I]||Bb(k);if(k[0]!=g[0]||"r"==k[0].toLowerCase()&&(k[2]!=g[2]||k[3]!=g[3])||"s"==k[0].toLowerCase()&&(k[3]!=g[3]||k[4]!=g[4]))return;
l[I]=[];b[I]=[];h=0;for(f=ka(k.length,g.length);h<f;h++)h in k&&(l[I][h]=k[h]),h in g&&(b[I][h]=g[h])}return{from:l,to:b}};a._getContainer=function(c,e,d,l){var b;b=null!=l||a.is(c,"object")?c:u.doc.getElementById(c);if(null!=b)return b.tagName?null==e?{container:b,width:b.style.pixelWidth||b.offsetWidth,height:b.style.pixelHeight||b.offsetHeight}:{container:b,width:e,height:d}:{container:1,x:c,y:e,width:d,height:l}};a.pathToRelative=Ra;a._engine={};a.path2curve=nb;a.matrix=function(a,c,e,d,l,b){return new D(a,
c,e,d,l,b)};(function(c){function e(a){return a[0]*a[0]+a[1]*a[1]}function d(a){var c=aa(e(a));a[0]&&(a[0]/=c);a[1]&&(a[1]/=c)}c.add=function(a,c,e,d,l,b){var I=[[],[],[]],h=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]];c=[[a,e,l],[c,d,b],[0,0,1]];a&&a instanceof D&&(c=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1]]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(d=l=0;3>d;d++)l+=h[a][d]*c[d][e];I[a][e]=l}this.a=I[0][0];this.b=I[1][0];this.c=I[0][1];this.d=I[1][1];this.e=I[0][2];this.f=I[1][2]};c.invert=function(){var a=
this.a*this.d-this.b*this.c;return new D(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};c.clone=function(){return new D(this.a,this.b,this.c,this.d,this.e,this.f)};c.translate=function(a,c){this.add(1,0,0,1,a,c)};c.scale=function(a,c,e,d){null==c&&(c=a);(e||d)&&this.add(1,0,0,1,e,d);this.add(a,0,0,c,0,0);(e||d)&&this.add(1,0,0,1,-e,-d)};c.rotate=function(c,e,d){c=a.rad(c);e=e||0;d=d||0;var l=+Ga(c).toFixed(9);c=+xa(c).toFixed(9);this.add(l,
c,-c,l,e,d);this.add(1,0,0,1,-e,-d)};c.x=function(a,c){return a*this.a+c*this.c+this.e};c.y=function(a,c){return a*this.b+c*this.d+this.f};c.get=function(a){return+this[J.fromCharCode(97+a)].toFixed(4)};c.toString=function(){return a.svg?"matrix("+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+")":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()};c.toMatrixString=function(){return"matrix("+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+
")"};c.toFilter=function(){return"progid:DXImageTransform.Microsoft.Matrix(M11="+this.get(0)+", M12="+this.get(2)+", M21="+this.get(1)+", M22="+this.get(3)+", Dx="+this.get(4)+", Dy="+this.get(5)+", sizingmethod='auto expand')"};c.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};c.split=function(){var c={};c.dx=this.e;c.dy=this.f;var l=[[this.a,this.c],[this.b,this.d]];c.scalex=aa(e(l[0]));d(l[0]);c.shear=l[0][0]*l[1][0]+l[0][1]*l[1][1];l[1]=[l[1][0]-l[0][0]*c.shear,l[1][1]-l[0][1]*
c.shear];c.scaley=aa(e(l[1]));d(l[1]);c.shear/=c.scaley;var b=-l[0][1],l=l[1][1];0>l?(c.rotate=a.deg(va.acos(l)),0>b&&(c.rotate=360-c.rotate)):c.rotate=a.deg(va.asin(b));c.isSimple=!+c.shear.toFixed(9)&&(c.scalex.toFixed(9)==c.scaley.toFixed(9)||!c.rotate);c.isSuperSimple=!+c.shear.toFixed(9)&&c.scalex.toFixed(9)==c.scaley.toFixed(9)&&!c.rotate;c.noRotation=!+c.shear.toFixed(9)&&!c.rotate;return c};c.toTransformString=function(a){a=a||this.split();return a.isSimple?(a.scalex=+a.scalex.toFixed(4),
a.scaley=+a.scaley.toFixed(4),a.rotate=+a.rotate.toFixed(4),(a.dx||a.dy?"t"+[a.dx,a.dy]:"")+(1!=a.scalex||1!=a.scaley?"s"+[a.scalex,a.scaley,0,0]:"")+(a.rotate?"r"+[a.rotate,0,0]:"")):"m"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}})(D.prototype);var tb=H.navigator,ob=tb.userAgent.match(/Version\/(.*?)\s/)||tb.userAgent.match(/Chrome\/(\d+)/);"Apple Computer, Inc."==tb.vendor&&(ob&&4>ob[1]||"iP"==tb.platform.slice(0,2))||"Google Inc."==tb.vendor&&ob&&8>ob[1]?e.safari=
function(){var a=this.rect(-99,-99,this.width+99,this.height+99).attr({stroke:"none"});setTimeout(function(){a.remove()});return!0}:e.safari=Ia;for(var Cb=function(){this.returnValue=!1},Db=function(){return this.originalEvent.preventDefault()},Ob=function(){this.cancelBubble=!0},wb=function(){return this.originalEvent.stopPropagation()},Gb=a.addEvent=function(){if(u.doc.addEventListener)return function(a,c,e,d){var b=K&&l[c]||c,I;l[M[c]]&&(b=l[M[c]]);I=function(b){var I=u.doc.documentElement.scrollTop||
u.doc.body.scrollTop,h=u.doc.documentElement.scrollLeft||u.doc.body.scrollLeft,f;if(w&&l.hasOwnProperty(K?c:M[c]))for(var k=0,g=b.targetTouches&&b.targetTouches.length;k<g;k++)if(f=b.targetTouches[k].target,f==a||"tspan"==f.nodeName&&f.parentNode==a){f=b;b=b.targetTouches[k];b.originalEvent=f;b.preventDefault=Db;b.stopPropagation=wb;break}return e.call(d,b,b.clientX+h,b.clientY+I)};a.addEventListener(b,I,!1);return function(){a.removeEventListener(b,I,!1);return!0}};if(u.doc.attachEvent)return function(a,
c,e,d){var l=function(a){a=a||u.win.event;var c=a.clientX+(u.doc.documentElement.scrollLeft||u.doc.body.scrollLeft),l=a.clientY+(u.doc.documentElement.scrollTop||u.doc.body.scrollTop);a.preventDefault=a.preventDefault||Cb;a.stopPropagation=a.stopPropagation||Ob;return e.call(d,a,c,l)};a.attachEvent("on"+c,l);return function(){a.detachEvent("on"+c,l);return!0}}}(),lb=[],jb=function(c){for(var e=c.clientX,d=c.clientY,l=u.doc.documentElement.scrollTop||u.doc.body.scrollTop,b=u.doc.documentElement.scrollLeft||
u.doc.body.scrollLeft,I,h=lb.length;h--;){I=lb[h];if(w&&"touchmove"===c.type)for(var f=c.touches.length,k;f--;){if(k=c.touches[f],k.identifier==I.el._drag.id){e=k.clientX;d=k.clientY;(c.originalEvent?c.originalEvent:c).preventDefault();break}}else c.preventDefault();if(!I.el.removed){var f=a._engine.getNode(I.el),g=f.nextSibling,M=f.parentNode,J=f.style.display;u.win.opera&&M.removeChild(f);f.style.display="none";k=I.el.paper.getElementByPoint(e,d);f.style.display=J;u.win.opera&&(g?M.insertBefore(f,
g):M.appendChild(f));k&&t("raphael.drag.over."+I.el.id,I.el,k);e+=b;d+=l;t("raphael.drag.move."+I.el.id,I.move_scope||I.el,e-I.el._drag.x,d-I.el._drag.y,e,d,c)}}},qb=function(c){a.undragmove(jb).undragend(qb);a.unmousemove(jb).unmouseup(qb);for(var e=lb.length,d;e--;)d=lb[e],d.el._drag={},t("raphael.drag.end."+d.el.id,d.end_scope||d.start_scope||d.move_scope||d.el,c);lb=[]},Ya=a.el={},xb=c.length;xb--;)(function(c){a[c]=Ya[c]=function(e,d){a.is(e,"function")&&(this.events=this.events||[],this.events.push({name:c,
f:e,unbind:Gb(this.shape||this.node||u.doc,c,e,d||this)}));return this};a["un"+c]=Ya["un"+c]=function(a){for(var e=this.events||[],d=e.length;d--;)if(e[d].name==c&&e[d].f==a){e[d].unbind();e.splice(d,1);!e.length&&delete this.events;break}return this}})(c[xb]);Ya.data=function(c,e){var d=fa[this.id]=fa[this.id]||{};if(1==arguments.length){if(a.is(c,"object")){for(var l in c)c.hasOwnProperty(l)&&this.data(l,c[l]);return this}t("raphael.data.get."+this.id,this,d[c],c);return d[c]}d[c]=e;t("raphael.data.set."+
this.id,this,e,c);return this};Ya.removeData=function(a){null==a?delete fa[this.id]:fa[this.id]&&delete fa[this.id][a];return this};Ya.getData=function(){return Ua(fa[this.id]||{})};var ub=[],vb=function(){this.untrack=Gb(u.doc,"mouseup",pb,this)},pb=function(){this.untrack();this.untrack=null;return this.fn&&this.fn.apply(this.scope||this.el,arguments)};Ya.mouseup=function(c,e,d){if(!d)return a.mouseup.apply(this,arguments);ub.push(d={el:this,fn:c,scope:e});d.unbind=Gb(this.shape||this.node||u.doc,
"mousedown",vb,d);return this};Ya.unmouseup=function(c){for(var e=ub.length,d;e--;)ub[e].el===this&&ub[e].fn===c&&(d=ub[e],d.unbind(),d.untrack&&d.untrack(),ub.splice(e,1));return d?this:a.unmouseup.apply(this,arguments)};Ya.hover=function(a,c,e,d){return this.mouseover(a,e).mouseout(c,d||e)};Ya.unhover=function(a,c){return this.unmouseover(a).unmouseout(c)};var rb=[];Ya.drag=function(c,e,d,l,b,I){function h(f){var k=u.doc.documentElement.scrollTop||u.doc.body.scrollTop,g=u.doc.documentElement.scrollLeft||
u.doc.body.scrollLeft;this._drag.x=f.clientX+g;this._drag.y=f.clientY+k;this._drag.id=f.identifier;w&&!K&&!lb.length&&a.dragmove(jb).dragend(qb);!lb.length&&a.mousemove(jb).mouseup(qb);lb.push({el:this,move_scope:l,start_scope:b,end_scope:I});e&&t.on("raphael.drag.start."+this.id,e);c&&t.on("raphael.drag.move."+this.id,c);d&&t.on("raphael.drag.end."+this.id,d);t("raphael.drag.start."+this.id,b||l||this,f.clientX+g,f.clientY+k,f)}this._drag={};rb.push({el:this,start:h});w&&!K&&this.dragstart(h);this.mousedown(h);
return this};Ya.onDragOver=function(a){a?t.on("raphael.drag.over."+this.id,a):t.unbind("raphael.drag.over."+this.id)};Ya.undrag=function(){for(var c=rb.length;c--;)rb[c].el==this&&(this.unmousedown(rb[c].start),rb.splice(c,1),t.unbind("raphael.drag.*."+this.id));!rb.length&&a.unmousemove(jb).unmouseup(qb);delete this._drag};Ya.follow=function(c,e,d){if(c.removed||c.constructor!==a.el.constructor)return this;c.followers.push({el:this,stalk:d={before:"insertBefore",after:"insertAfter"}[d],cb:e});d&&
this[d](c);return this};Ya.unfollow=function(c){if(c.removed||c.constructor!==a.el.constructor)return this;for(var e=0,d=c.followers.length;e<d;e++)if(c.followers[e].el===this){c.followers.splice(e,1);break}return this};e.hide=function(){this.canvas.style.visibility="hidden";return this};e.show=function(){this.canvas.style.visibility="";return this};e.group=function(){var c=arguments,e=Ma(c,!0),c=a._engine.group(this,c[0],e);return this.__set__&&this.__set__.push(c),this._elementsById[c.id]=c};e.circle=
function(){var c=arguments,e=Ma(c,!0),c=Na(c,"cx",0,"cy",0,"r",0,"fill","none","stroke","#000"),e=a._engine.circle(this,c,e);return this.__set__&&this.__set__.push(e),this._elementsById[e.id]=e};e.rect=function(){var c=arguments,e=Ma(c,!0),c=Na(c,"x",0,"y",0,"width",0,"height",0,"r",0,"fill","none","stroke","#000"),e=a._engine.rect(this,c,e);return this.__set__&&this.__set__.push(e),this._elementsById[e.id]=e};e.ellipse=function(){var c=arguments,e=Ma(c,!0),c=Na(c,"x",0,"y",0,"rx",0,"ry",0,"fill",
"none","stroke","#000"),e=a._engine.ellipse(this,c,e);return this.__set__&&this.__set__.push(e),this._elementsById[e.id]=e};e.path=function(){var c=arguments,e=Ma(c,!0),d=this.config,c=Na(c,"path","","fill","none","stroke","#000","stroke-linecap",d&&d["stroke-linecap"]||"butt"),e=a._engine.path(this,c,e);return this.__set__&&this.__set__.push(e),this._elementsById[e.id]=e};e.image=function(){var c=arguments,e=Ma(c,!0),c=Na(c,"src","","x",0,"y",0,"width",0,"height",0);out=a._engine.image(this,c,e);
return this.__set__&&this.__set__.push(out),this._elementsById[out.id]=out};e.text=function(){var c=arguments,e=Ma(c,!0),d=Na(c,"x",0,"y",0,"text","","stroke","none","fill","#000","text-anchor","middle","vertical-align","middle"),c=a._engine.text(this,d,e,c[1]);return this.__set__&&this.__set__.push(c),this._elementsById[c.id]=c};e.set=function(c){!a.is(c,"array")&&(c=C.call(arguments,0,arguments.length));var e=new Mb(c);this.__set__&&this.__set__.push(e);return e};e.setConfig=function(a,c){void 0!==
a&&void 0!==c&&(this.config=this.config||{},this.config[a]=c);return this.config};e.setStart=function(a){this.__set__=a||this.set()};e.setFinish=function(a){a=this.__set__;delete this.__set__;return a};e.setSize=function(c,e){return a._engine.setSize.call(this,c,e)};e.setDimension=function(a,c){"object"===typeof a?this.setSize(a.width,a.height):this.setSize(a,c)};e.attr=function(c){if(null==c)return{width:this.width,height:this.height};if(a.is(c,"string"))return this[c];this.setDimension(c);return this};
e.status=function(a,c){return Ya.status.call(this,a,c)};e.animateWith=function(a,c,e,d,l,b){return Ya.animateWith.call(this,a,c,e,d,l,b)};e.animate=function(a,c,e,d){return Ya.animate.call(this,a,c,e,d)};e.setViewBox=function(c,e,d,l,b){return a._engine.setViewBox.call(this,c,e,d,l,b)};e.top=e.bottom=null;e.raphael=a;e.getElementByPoint=function(a,c){var e,d,l=this.canvas,b=u.doc.elementFromPoint(a,c);if(u.win.opera&&"svg"==b.tagName){d=l.getBoundingClientRect();e=l.ownerDocument;var I=e.body,h=e.documentElement;
e=d.top+(u.win.pageYOffset||h.scrollTop||I.scrollTop)-(h.clientTop||I.clientTop||0);d=d.left+(u.win.pageXOffset||h.scrollLeft||I.scrollLeft)-(h.clientLeft||I.clientLeft||0);I=l.createSVGRect();I.x=a-d;I.y=c-e;I.width=I.height=1;e=l.getIntersectionList(I,null);e.length&&(b=e[e.length-1])}if(!b)return null;for(;b.parentNode&&b!=l.parentNode&&!b.raphael;)b=b.parentNode;b==this.canvas.parentNode&&(b=l);return b=b&&b.raphael?this.getById(b.raphaelid):null};e.getElementsByBBox=function(c){var e=this.set();
this.forEach(function(d){a.isBBoxIntersect(d.getBBox(),c)&&e.push(d)});return e};e.getById=function(a){return this._elementsById[a]||null};e.forEach=function(a,c){for(var e=this.bottom;e&&!1!==a.call(c,e);)e=e.next;return this};e.getElementsByPoint=function(a,c){var e=this.set();this.forEach(function(d){d.isPointInside(a,c)&&e.push(d)});return e};Ya.isPointInside=function(c,e){var d=this.realPath=this.realPath||Ha[this.type](this),l;return a.isPointInsidePath((l=this.attr("transform"))&&l.length&&
a.transformPath(d,l)||d,c,e)};Ya.getBBox=function(a){if(this.removed)return{};var c=this._;if(a){if(c.dirty||!c.bboxwt)this.realPath=Ha[this.type](this),c.bboxwt=ra(this.realPath),c.bboxwt.toString=B,c.dirty=0;return c.bboxwt}if(c.dirty||c.dirtyT||!c.bbox){if(c.dirty||!this.realPath)c.bboxwt=0,this.realPath=Ha[this.type](this);c.bbox=ra(Da(this.realPath,this.matrix));c.bbox.toString=B;c.dirty=c.dirtyT=0}return c.bbox};Ya.clone=function(){if(this.removed)return null;var a=this.paper[this.type]().attr(this.attr());
this.__set__&&this.__set__.push(a);return a};Ya.glow=function(a){if("text"==this.type)return null;a=a||{};var c=(a.width||10)+(+this.attr("stroke-width")||1),e=a.fill||!1,d=a.opacity||.5,l=a.offsetx||0,b=a.offsety||0;a=a.color||"#000";for(var I=c/2,h=this.paper,f=h.set(),k=this.realPath||Ha[this.type](this),k=this.matrix?Da(k,this.matrix):k,g=1;g<I+1;g++)f.push(h.path(k).attr({stroke:a,fill:e?a:"none","stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(c/I*g).toFixed(3),opacity:+(d/
I).toFixed(3)}));return f.insertBefore(this).translate(l,b)};var mb=function(c,e,d,l,b,I,h,f,k){return null==k?P(c,e,d,l,b,I,h,f):a.findDotsAtSegment(c,e,d,l,b,I,h,f,T(c,e,d,l,b,I,h,f,k))},Kb=function(c,e){return function(d,l,b){d=nb(d);for(var I,h,f,k,g="",M={},J=0,w=0,u=d.length;w<u;w++){f=d[w];if("M"==f[0])I=+f[1],h=+f[2];else{k=mb(I,h,f[1],f[2],f[3],f[4],f[5],f[6]);if(J+k>l){if(e&&!M.start){I=mb(I,h,f[1],f[2],f[3],f[4],f[5],f[6],l-J);g+=["C"+I.start.x,I.start.y,I.m.x,I.m.y,I.x,I.y];if(b)return g;
M.start=g;g=["M"+I.x,I.y+"C"+I.n.x,I.n.y,I.end.x,I.end.y,f[5],f[6]].join();J+=k;I=+f[5];h=+f[6];continue}if(!c&&!e)return I=mb(I,h,f[1],f[2],f[3],f[4],f[5],f[6],l-J),{x:I.x,y:I.y,alpha:I.alpha}}J+=k;I=+f[5];h=+f[6]}g+=f.shift()+f}M.end=g;I=c?J:e?M:a.findDotsAtSegment(I,h,f[0],f[1],f[2],f[3],f[4],f[5],1);I.alpha&&(I={x:I.x,y:I.y,alpha:I.alpha});return I}},Fb=Kb(1),Tb=Kb(),Hb=Kb(0,1);a.getTotalLength=Fb;a.getPointAtLength=Tb;a.getSubpath=function(a,c,e){if(1E-6>this.getTotalLength(a)-e)return Hb(a,
c).end;a=Hb(a,e,1);return c?Hb(a,c).end:a};Ya.getTotalLength=function(){if("path"==this.type)return this.node.getTotalLength?this.node.getTotalLength():Fb(this.attrs.path)};Ya.getPointAtLength=function(a){if("path"==this.type)return Tb(this.attrs.path,a)};Ya.getSubpath=function(c,e){if("path"==this.type)return a.getSubpath(this.attrs.path,c,e)};var hb=a.easing_formulas={linear:function(a){return a},"<":function(a){return la(a,1.7)},">":function(a){return la(a,.48)},"<>":function(a){var c=.48-a/1.04,
e=aa(.1734+c*c);a=e-c;a=la(U(a),1/3)*(0>a?-1:1);c=-e-c;c=la(U(c),1/3)*(0>c?-1:1);a=a+c+.5;return 3*(1-a)*a*a+a*a*a},backIn:function(a){return a*a*(2.70158*a-1.70158)},backOut:function(a){--a;return a*a*(2.70158*a+1.70158)+1},elastic:function(a){return a==!!a?a:la(2,-10*a)*xa(2*(a-.075)*ja/.3)+1},bounce:function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+.9375):(a-=2.625/2.75,a=7.5625*a*a+.984375);return a}};hb.easeIn=hb["ease-in"]=hb["<"];
hb.easeOut=hb["ease-out"]=hb[">"];hb.easeInOut=hb["ease-in-out"]=hb["<>"];hb["back-in"]=hb.backIn;hb["back-out"]=hb.backOut;var cb=[],Eb,Lb=function(){return Eb=a.requestAnimFrame||b.webkitRequestAnimationFrame||b.mozRequestAnimationFrame||b.oRequestAnimationFrame||b.msRequestAnimationFrame||function(a){setTimeout(a,16)}},Jb=function(){for(var c=+new Date,e=0;e<cb.length;e++){var d=cb[e];if(!(d.el.removed||d.paused||d.parentEl&&d.parentEl.e&&d.parentEl.e.paused)){var l=c-d.start,b=d.ms,I=d.easing,
h=d.from,f=d.diff,k=d.to,M=d.el,J={},w,u={},m=!1!==a.stopEvent,ra;d.initstatus?(l=(d.initstatus*d.anim.top-d.prev)/(d.percent-d.prev)*b,d.status=d.initstatus,delete d.initstatus,d.stop&&(delete d.el,cb.splice(e--,1))):d.status=(d.prev+l/b*(d.percent-d.prev))/d.anim.top;if(!(0>l))if(l<b){var n=I(l/b),ta;for(ta in h)if(h.hasOwnProperty(ta)){switch(sa[ta]){case g:w=+h[ta]+n*b*f[ta];break;case "colour":w="rgb("+[Ib(Z(h[ta].r+n*b*f[ta].r)),Ib(Z(h[ta].g+n*b*f[ta].g)),Ib(Z(h[ta].b+n*b*f[ta].b))].join()+
")";break;case "path":w=[];l=0;for(I=h[ta].length;l<I;l++){w[l]=[h[ta][l][0]];k=1;for(u=h[ta][l].length;k<u;k++)w[l][k]=(+h[ta][l][k]+n*b*f[ta][l][k]).toFixed(4);w[l]=w[l].join(" ")}w=w.join(" ");break;case "transform":if(f[ta].real)for(w=[],l=0,I=h[ta].length;l<I;l++)for(w[l]=[h[ta][l][0]],k=1,u=h[ta][l].length;k<u;k++)w[l][k]=h[ta][l][k]+n*b*f[ta][l][k];else w=function(a){return+h[ta][a]+n*b*f[ta][a]},w=[["m",w(0),w(1),w(2),w(3),w(4),w(5)]];break;case "csv":if("clip-rect"==ta)for(w=[],l=4;l--;)w[l]=
+h[ta][l]+n*b*f[ta][l];break;default:for(I=[].concat(h[ta]),w=[],l=M.ca[ta].length;l--;)w[l]=+I[l]+n*b*f[ta][l]}J[ta]=w}M.attr(J);m&&function(a,c,e){setTimeout(function(){t("raphael.anim.frame."+a,c,e)})}(M.id,M,d.anim)}else{(function(c,e,d){setTimeout(function(){m&&t("raphael.anim.frame."+e.id,e,d);m&&t("raphael.anim.finish."+e.id,e,d);a.is(c,"function")&&c.call(e)})})(d.callback,M,d.anim);M.attr(k);delete d.el;cb.splice(e--,1);if(1<d.repeat&&!d.next){for(ra in k)k.hasOwnProperty(ra)&&(u[ra]=d.totalOrigin[ra]);
d.el.attr(u);q(d.anim,d.el,d.anim.percents[0],null,d.totalOrigin,d.repeat-1)}d.next&&!d.stop&&q(d.anim,d.el,d.next,null,d.totalOrigin,d.repeat)}}}a.svg&&M&&M.paper&&M.paper.safari();cb.length&&(Eb||Lb())(Jb)},Ib=function(a){return 255<a?255:0>a?0:a};Ya.animateWith=function(c,e,d,l,b,I){var h=this;if(h.removed)return I&&I.call(h),h;if(0==l)return setTimeout(function(){a.is(I,"function")&&I.call(h)},0),h.attr(d);d=d instanceof p?d:a.animation(d,l,b,I);q(d,h,d.percents[0],null,h.attr(),void 0,c);d=0;
for(l=cb.length;d<l;d++)if(cb[d].anim==e&&cb[d].el==c){cb[l-1].start=cb[d].start;break}return h};Ya.onAnimation=function(a){a?t.on("raphael.anim.frame."+this.id,a):t.unbind("raphael.anim.frame."+this.id);return this};p.prototype.delay=function(a){var c=new p(this.anim,this.ms);c.times=this.times;c.del=+a||0;return c};p.prototype.repeat=function(a){var c=new p(this.anim,this.ms);c.del=this.del;c.times=va.floor(ka(a,0))||1;return c};a.animation=function(c,e,d,l,b){if(c instanceof p)return c;if(a.is(d,
"function")||!d)l=l||d||null,d=null;void 0===a.stopEvent&&(a.stopEvent=b);c=Object(c);e=+e||0;b={};var I,h;for(h in c)c.hasOwnProperty(h)&&Ea(h)!=h&&Ea(h)+"%"!=h&&(I=!0,b[h]=c[h]);return I?(d&&(b.easing=d),l&&(b.callback=l),new p({100:b},e)):new p(c,e)};Ya.animate=function(c,e,d,l){if(this.removed)return l&&l.call(this),this;c=c instanceof p?c:a.animation(c,e,d,l);q(c,this,c.percents[0],null,this.attr());return this};Ya.setTime=function(a,c){a&&null!=c&&this.status(a,ca(c,a.ms)/a.ms);return this};
Ya.status=function(a,c){var e=[],d=0,l,b;if(null!=c)return q(a,this,-1,ca(c,1)),this;for(l=cb.length;d<l;d++)if(b=cb[d],b.el.id==this.id&&(!a||b.anim==a)){if(a)return b.status;e.push({anim:b.anim,status:b.status})}return a?0:e};Ya.pause=function(a,c){var e=+new Date,d,l;for(l=0;l<cb.length;l++)d=cb[l],!(d.el.id===this.id||c&&d.parentEl&&d.parentEl.e.el&&d.parentEl.e.el.id===this.id)||a&&d.anim!=a||!1===t("raphael.anim.pause."+this.id,this,d.anim)||(d.paused=!0,d.pauseStart=e);return this};Ya.resume=
function(a,c){var e=+new Date,d,l;for(l=0;l<cb.length;l++)d=cb[l],!(d.el.id===this.id||c&&d.parentEl&&d.parentEl.e.el&&d.parentEl.e.el.id===this.id)||a&&d.anim!=a||!1===t("raphael.anim.resume."+this.id,this,d.anim)||(delete d.paused,d.el.status(d.anim,d.status),d.pauseEnd=e,d.start+=(d.parentEl&&d.parentEl.e.pauseEnd||d.pauseEnd)-(d.parentEl&&d.parentEl.e.pauseStart||d.pauseStart)||0);return this};Ya.stop=function(a,c,e){var d;if(c)for(d=cb.length-1;0<=d;d--)c=cb[d],!(c.el.id===this.id||c.parentEl&&
c.parentEl.id===this.id)||a&&cb[d].anim!=a||(ele=c.el,e&&ele.attr(c.to),c.callback&&c.callback.call(ele),delete ele.e,delete c.el,cb.splice(d,1));else for(d=0;d<cb.length;d++)c=cb[d],c.el.id!==this.id||a&&c.anim!==a||!1!==t("raphael.anim.stop."+this.id,this,c.anim)&&cb.splice(d--,1);return this};t.on("raphael.remove",A);t.on("raphael.clear",A);Ya.toString=function(){return"Raphaël’s object"};Ya.toFront=function(){if(this.removed)return this;var c=a._engine.getNode(this),e=this.parent,d=this.followers,
l;a._tofront(this,e)&&e.canvas.appendChild(c);c=0;for(e=d.length;c<e;c++)(l=d[c]).stalk&&l.el[l.stalk](this);return this};Ya.toBack=function(){if(this.removed)return this;var c=a._engine.getNode(this),e=this.parent,d=this.followers,l;a._toback(this,e)&&e.canvas.insertBefore(c,e.canvas.firstChild);c=0;for(e=d.length;c<e;c++)(l=d[c]).stalk&&l.el[l.stalk](this);return this};Ya.insertAfter=function(c){if(this.removed)return this;var e=a._engine.getNode(this),d=a._engine.getLastNode(c),l=c.parent.canvas,
b=this.followers,I;d.nextSibling?l.insertBefore(e,d.nextSibling):l.appendChild(e);a._insertafter(this,c,this.parent,c.parent);e=0;for(d=b.length;e<d;e++)(I=b[e]).stalk&&I.el[I.stalk](c);return this};Ya.insertBefore=function(c){if(this.removed)return this;var e=a._engine.getNode(this),d=a._engine.getNode(c),l=this.followers,b;c.parent.canvas.insertBefore(e,d);a._insertbefore(this,c,this.parent,c.parent);this.parent=c.parent;e=0;for(d=l.length;e<d;e++)(b=l[e]).stalk&&b.el[b.stalk](c);return this};Ya.appendChild=
function(c){if(this.removed||"group"!==this.type)return this;var e=this.followers,d,l,b;if(c.parent===this)return c.toFront(),this;l=a._engine.getNode(c);a._tear(c,c.parent);this.canvas.appendChild(l);c.parent=this;!this.bottom&&(this.bottom=c);c.prev=this.top;c.next=null;this.top&&(this.top.next=c);this.top=c;l=0;for(b=e.length;l<b;l++)(d=e[l]).stalk&&d.el[d.stalk](c);return this};Ya.removeChild=function(c){if(this.removed||"group"!==this.type||c.parent!==this)return this;var e=a._engine.getNode(c),
d=this.paper;a._tear(c,this);d.canvas.appendChild(e);this.parent=d;!d.bottom&&(d.bottom=this);(this.prev=d.top)&&(d.top.next=this);d.top=this;this.next=null;return this};var Mb=function(a){this.items=[];this.length=0;this.type="set";if(a)for(var c=0,e=a.length;c<e;c++)!a[c]||a[c].constructor!=Ya.constructor&&a[c].constructor!=Mb||(this[this.items.length]=this.items[this.items.length]=a[c],this.length++)},kb=Mb.prototype;kb.push=function(){for(var a,c,e=0,d=arguments.length;e<d;e++)!(a=arguments[e])||
a.constructor!=Ya.constructor&&a.constructor!=Mb||(c=this.items.length,this[c]=this.items[c]=a,this.length++);return this};kb.pop=function(){this.length&&delete this[this.length--];return this.items.pop()};kb.forEach=function(a,c){for(var e=0,d=this.items.length;e<d&&!1!==a.call(c,this.items[e],e);e++);return this};for(var Pb in Ya)Ya.hasOwnProperty(Pb)&&(kb[Pb]=function(a){return function(){var c=arguments;return this.forEach(function(e){e[a][k](e,c)})}}(Pb));kb.attr=function(c,e){if(c&&a.is(c,f)&&
a.is(c[0],"object"))for(var d=0,l=c.length;d<l;d++)this.items[d].attr(c[d]);else for(d=0,l=this.items.length;d<l;d++)this.items[d].attr(c,e);return this};kb.clear=function(){for(;this.length;)this.pop()};kb.splice=function(a,c,e){a=0>a?ka(this.length+a,0):a;c=ka(0,ca(this.length-a,isNaN(c)&&this.length||c));var d=[],l=[],b=[],I;for(I=2;I<arguments.length;I++)b.push(arguments[I]);for(I=0;I<c;I++)l.push(this[a+I]);for(;I<this.length-a;I++)d.push(this[a+I]);var h=b.length;for(I=0;I<h+d.length;I++)this.items[a+
I]=this[a+I]=I<h?b[I]:d[I-h];for(I=this.items.length=this.length-=c-h;this[I];)delete this[I++];return new Mb(l)};kb.exclude=function(a){for(var c=0,e=this.length;c<e;c++)if(this[c]==a)return this.splice(c,1),!0};kb.animate=function(c,e,d,l){!a.is(d,"function")&&d||(l=d||null);var b=this.items.length,I=b,h=this,f;if(!b)return this;l&&(f=function(){!--b&&l.call(h)});d=a.is(d,"string")?d:f;e=a.animation(c,e,d,f);for(c=this.items[--I].animate(e);I--;)this.items[I]&&!this.items[I].removed&&this.items[I].animateWith(c,
e,e);return this};kb.insertAfter=function(a){for(var c=this.items.length;c--;)this.items[c].insertAfter(a);return this};kb.getBBox=function(){for(var a=[],c=[],e=[],d=[],l=this.items.length;l--;)if(!this.items[l].removed){var b=this.items[l].getBBox();a.push(b.x);c.push(b.y);e.push(b.x+b.width);d.push(b.y+b.height)}a=ca[k](0,a);c=ca[k](0,c);e=ka[k](0,e);d=ka[k](0,d);return{x:a,y:c,x2:e,y2:d,width:e-a,height:d-c}};kb.clone=function(a){a=new Mb;for(var c=0,e=this.items.length;c<e;c++)a.push(this.items[c].clone());
return a};kb.toString=function(){return"Raphaël‘s set"};kb.glow=function(a){var c=this.paper.set();this.forEach(function(e,d){var l=e.glow(a);null!=l&&l.forEach(function(a,e){c.push(a)})});return c};a.registerFont=function(a){if(!a.face)return a;this.fonts=this.fonts||{};var c={w:a.w,face:{},glyphs:{}},e=a.face["font-family"],d;for(d in a.face)a.face.hasOwnProperty(d)&&(c.face[d]=a.face[d]);this.fonts[e]?this.fonts[e].push(c):this.fonts[e]=[c];if(!a.svg){c.face["units-per-em"]=Ka(a.face["units-per-em"],
10);for(var l in a.glyphs)if(a.glyphs.hasOwnProperty(l)&&(e=a.glyphs[l],c.glyphs[l]={w:e.w,k:{},d:e.d&&"M"+e.d.replace(/[mlcxtrv]/g,function(a){return{l:"L",c:"C",x:"z",t:"m",r:"l",v:"c"}[a]||"M"})+"z"},e.k))for(var b in e.k)e.hasOwnProperty(b)&&(c.glyphs[l].k[b]=e.k[b])}return a};e.getFont=function(c,e,d,l){l=l||"normal";d=d||"normal";e=+e||{normal:400,bold:700,lighter:300,bolder:800}[e]||400;if(a.fonts){var b=a.fonts[c];if(!b){c=new RegExp("(^|\\s)"+c.replace(/[^\w\d\s+!~.:_-]/g,"")+"(\\s|$)","i");
for(var I in a.fonts)if(a.fonts.hasOwnProperty(I)&&c.test(I)){b=a.fonts[I];break}}var h;if(b)for(I=0,c=b.length;I<c&&(h=b[I],h.face["font-weight"]!=e||h.face["font-style"]!=d&&h.face["font-style"]||h.face["font-stretch"]!=l);I++);return h}};e.print=function(c,e,d,l,b,I,h){I=I||"middle";h=ka(ca(h||0,1),-1);var f=J(d).split(""),k=0,g=0,M="";a.is(l,d)&&(l=this.getFont(l));if(l){d=(b||16)/l.face["units-per-em"];var w=l.face.bbox.split(ia);b=+w[0];var u=w[3]-w[1],m=0;I=+w[1]+("baseline"==I?u+ +l.face.descent:
u/2);for(var w=0,ra=f.length;w<ra;w++){if("\n"==f[w])g=ta=k=0,m+=u;else var n=g&&l.glyphs[f[w-1]]||{},ta=l.glyphs[f[w]],k=k+(g?(n.w||l.w)+(n.k&&n.k[f[w]]||0)+l.w*h:0),g=1;ta&&ta.d&&(M+=a.transformPath(ta.d,["t",k*d,m*d,"s",d,d,b,I,"t",(c-b)/d,(e-I)/d]))}}return this.path(M).attr({fill:"#000",stroke:"none"})};e.add=function(c){if(a.is(c,"array"))for(var e=this.set(),l=0,b=c.length,I;l<b;l++)I=c[l]||{},d.hasOwnProperty(I.type)&&e.push(this[I.type]().attr(I));return e};a.format=function(c,e){var d=a.is(e,
f)?[0].concat(e):arguments;c&&a.is(c,"string")&&d.length-1&&(c=c.replace(ua,function(a,c){return null==d[++c]?"":d[c]}));return c||""};a.fullfill=function(){var a=/\{([^\}]+)\}/g,c=/(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,e=function(a,e,d){var l=d;e.replace(c,function(a,c,e,d,b){c=c||d;l&&(c in l&&(l=l[c]),"function"==typeof l&&b&&(l=l()))});return l=(null==l||l==d?a:l)+""};return function(c,d){return String(c).replace(a,function(a,c){return e(a,c,d)})}}();a.ninja=function(){X?u.win.Raphael=
O:delete u.win.Raphael;return a};var Rb=a.vml&&.5||0;a.crispBound=Za(function(a,c,e,d,l){var b={},I;a=a||0;c=c||0;e=e||0;d=d||0;l=l||0;I=l%2/2+Rb;b.x=Z(a+I)-I;b.y=Z(c+I)-I;b.width=Z(a+e+I)-I-b.x;b.height=Z(c+d+I)-I-b.y;b["stroke-width"]=l;0===b.width&&0!==e&&(b.width=1);0===b.height&&0!==d&&(b.height=1);return b},a);Ya.crisp=function(){var c=this.attrs,e,d=this.attr(["x","y","width","height","stroke-width"]),d=a.crispBound(d.x,d.y,d.width,d.height,d["stroke-width"]);for(e in d)c[e]===d[e]&&delete d[e];
return this.attr(d)};a.st=kb;a.define=function(c,e,d,l,b,I){var h;if(a.is(c,f))for(I=0,h=c.length;I<h;I++)a.define(c[I]);else if(a.is(c,"object"))a.define(c.name,c[c.name],c.ca,c.fn,c.e,c.data);else if(c&&!a.fn[c])return a.fn[c]=function(){var I=arguments,h=e.apply(this,I),f;if(l&&a.is(l,"object"))for(f in l)h[f]=l[f];if(b&&a.is(b,"object"))for(f in b)h[f]&&h[f](b[f]);if(d){if(a.is(d,"function"))h.ca[c]=d;else for(f in d)h.ca[f]=d[f];h.ca[c]&&(a._lastArgIfGroup(I,!0),I.length&&h.attr(c,S.call(I)))}return h},
d&&(a.fn[c].ca=d),l&&(a.fn[c].fn=l),b&&(a.fn[c].e=b),I&&(a.fn[c].data=I),a.fn[c]};(function(c,e,d){function l(){/in/.test(c.readyState)?setTimeout(l,9):a.eve("raphael.DOMload")}null==c.readyState&&c.addEventListener&&(c.addEventListener(e,d=function(){c.removeEventListener(e,d,!1);c.readyState="complete"},!1),c.readyState="loading");l()})(W,"DOMContentLoaded");t.on("raphael.DOMload",function(){n=!0});"undefined"===typeof z&&"object"===typeof window&&(z=window);(function(){function c(a){for(var e=
{},d=a,l=e;d;)d.node&&d.node.style&&"none"===d.node.style.display&&(d.show(),l._doHide=!0),d=d.parent,l.parent={},l=l.parent;return function(){for(var c=a,d=e;c;)d._doHide&&c.hide(),c=c.parent,d=d.parent}}if(a.svg){var e=String,d=parseFloat,l=parseInt,b=Math,I=b.max,h=b.abs,f=b.pow,k=b.sqrt,g=/[, ]+/,M=!(!/AppleWebKit/.test(a._g.win.navigator.userAgent)||/Chrome/.test(a._g.win.navigator.userAgent)&&!(29>a._g.win.navigator.appVersion.match(/Chrome\/(\d+)\./)[1])),J=a.eve,w={block:"M5,0 0,2.5 5,5z",
classic:"M5,0 0,2.5 5,5 3.5,3 3.5,2z",diamond:"M2.5,0 5,2.5 2.5,5 0,2.5z",open:"M6,1 1,3.5 6,6",oval:"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"},u={};a.toString=function(){return"Your browser supports SVG.\nYou are running Raphaël "+this.version};a._url="";var m=function(a,c){var e=a.gradient;if(e){if(e===c)return;e.refCount--;e.refCount||e.parentNode.removeChild(e);delete a.gradient}c&&(a.gradient=c,c.refCount++)},ra=a._createNode=function(c,d){if(d){"string"==typeof c&&(c=ra(c));for(var l in d)d.hasOwnProperty(l)&&
("xlink:"==l.substring(0,6)?c.setAttributeNS("http://www.w3.org/1999/xlink",l.substring(6),e(d[l])):c.setAttribute(l,e(d[l])))}else c=a._g.doc.createElementNS("http://www.w3.org/2000/svg",c);return c},n={userSpaceOnUse:"userSpaceOnUse",objectBoundingBox:"objectBoundingBox"},ta={pad:"pad",redlect:"reflect",repeat:"repeat"},C=function(c,l){if(!c.paper||!c.paper.defs)return 0;var g="linear",M=c.paper,J=a.getElementID((M.id+"-"+l).replace(/[\(\)\s%:,\xb0#]/g,"_")),w=.5,u=.5,C,q,p,H,K,Ea=c.node,Va=Ea.style,
A=a._g.doc.getElementById(J);if(!A){l=e(l).replace(a._radial_gradient,function(a,c){g="radial";c=c&&c.split(",")||[];H=c[5];K=c[6];var e=c[0],l=c[1],b=c[2],I=c[3],h=c[4],M=e&&l,J;b&&(C=/\%/.test(b)?b:d(b));if(H===n.userSpaceOnUse)return M&&(w=e,u=l),I&&h&&(q=I,p=h,M||(w=q,u=p)),"";M&&(w=d(e),u=d(l),e=2*(.5<u)-1,.25<(J=f(w-.5,2))+f(u-.5,2)&&.25>J&&(u=k(.25-J)*e+.5)&&.5!==u&&(u=u.toFixed(5)-1E-5*e));I&&h&&(q=d(I),p=d(h),e=2*(.5<p)-1,.25<(J=f(q-.5,2))+f(p-.5,2)&&.25>J&&(p=k(.25-J)*e+.5)&&.5!==p&&(p=
p.toFixed(5)-1E-5*e),M||(w=q,u=p));return""});l=l.split(/\s*\-\s*/);if("linear"==g){var A=l.shift(),O=A.match(/\((.*)\)/),Ra,O=O&&O[1]&&O[1].split(/\s*\,\s*/),A=-d(A);if(isNaN(A))return null;O&&O.length?(O[0]in n?(H=O.shift(),O[0]in ta&&(K=O.shift())):(O[4]&&(H=O[4]),O[5]&&(K=O[5])),Ra=[O[0]||"0%",O[1]||"0%",O[2]||"100%",O[3]||"0%"]):(Ra=[0,0,b.cos(a.rad(A)),b.sin(a.rad(A))],A=1/(I(h(Ra[2]),h(Ra[3]))||1),Ra[2]*=A,Ra[3]*=A,0>Ra[2]&&(Ra[0]=-Ra[2],Ra[2]=0),0>Ra[3]&&(Ra[1]=-Ra[3],Ra[3]=0))}O=a._parseDots(l);
if(!O)return null;A=ra(g+"Gradient",{id:J});A.refCount=0;H in n&&A.setAttribute("gradientUnits",e(H));K in ta&&A.setAttribute("spreadMethod",e(K));"radial"===g?(void 0!==C&&A.setAttribute("r",e(C)),void 0!==q&&void 0!==p&&(A.setAttribute("cx",e(q)),A.setAttribute("cy",e(p))),A.setAttribute("fx",e(w)),A.setAttribute("fy",e(u))):ra(A,{x1:Ra[0],y1:Ra[1],x2:Ra[2],y2:Ra[3]});Ra=0;for(var V=O.length;Ra<V;Ra++)A.appendChild(ra("stop",{offset:O[Ra].offset?O[Ra].offset:Ra?"100%":"0%","stop-color":O[Ra].color||
"#fff","stop-opacity":void 0===O[Ra].opacity?1:O[Ra].opacity}));M.defs.appendChild(A)}m(c,A);ra(Ea,{fill:"url('"+a._url+"#"+J+"')",opacity:1,"fill-opacity":1});Va.fill="";Va.opacity=1;return Va.fillOpacity=1},q=function(a){var c=a.getBBox(1);ra(a.pattern,{patternTransform:a.matrix.invert()+" translate("+c.x+","+c.y+")"})},p=function(c,d,l){if("path"==c.type){for(var b=e(d).toLowerCase().split("-"),I=c.paper,h=l?"end":"start",f=c.node,k=c.attrs,g=k["stroke-width"],M=b.length,J="classic",m,n,ta=3,C=
3,q=5;M--;)switch(b[M]){case "block":case "classic":case "oval":case "diamond":case "open":case "none":J=b[M];break;case "wide":C=5;break;case "narrow":C=2;break;case "long":ta=5;break;case "short":ta=2}"open"==J?(ta+=2,C+=2,q+=2,m=1,n=l?4:1,b={fill:"none",stroke:k.stroke}):(n=m=ta/2,b={fill:k.stroke,stroke:"none"});c._.arrows?l?(c._.arrows.endPath&&u[c._.arrows.endPath]--,c._.arrows.endMarker&&u[c._.arrows.endMarker]--):(c._.arrows.startPath&&u[c._.arrows.startPath]--,c._.arrows.startMarker&&u[c._.arrows.startMarker]--):
c._.arrows={};if("none"!=J){var M="raphael-marker-"+J,p="raphael-marker-"+h+J+ta+C+"-obj"+c.id;a._g.doc.getElementById(M)?u[M]++:(I.defs.appendChild(ra(ra("path"),{"stroke-linecap":"round",d:w[J],id:M})),u[M]=1);var H=a._g.doc.getElementById(p);H?(u[p]++,ta=H.getElementsByTagName("use")[0]):(H=ra(ra("marker"),{id:p,markerHeight:C,markerWidth:ta,orient:"auto",refX:n,refY:C/2}),ta=ra(ra("use"),{"xlink:href":"#"+M,transform:(l?"rotate(180 "+ta/2+" "+C/2+") ":"")+"scale("+ta/q+","+C/q+")","stroke-width":(1/
((ta/q+C/q)/2)).toFixed(4)}),H.appendChild(ta),I.defs.appendChild(H),u[p]=1);ra(ta,b);I=m*("diamond"!=J&&"oval"!=J);l?(l=c._.arrows.startdx*g||0,g=a.getTotalLength(k.path)-I*g):(l=I*g,g=a.getTotalLength(k.path)-(c._.arrows.enddx*g||0));b={};b["marker-"+h]="url('"+a._url+"#"+p+"')";if(g||l)b.d=a.getSubpath(k.path,l,g);ra(f,b);c._.arrows[h+"Path"]=M;c._.arrows[h+"Marker"]=p;c._.arrows[h+"dx"]=I;c._.arrows[h+"Type"]=J;c._.arrows[h+"String"]=d}else l?(l=c._.arrows.startdx*g||0,g=a.getTotalLength(k.path)-
l):(l=0,g=a.getTotalLength(k.path)-(c._.arrows.enddx*g||0)),c._.arrows[h+"Path"]&&ra(f,{d:a.getSubpath(k.path,l,g)}),delete c._.arrows[h+"Path"],delete c._.arrows[h+"Marker"],delete c._.arrows[h+"dx"],delete c._.arrows[h+"Type"],delete c._.arrows[h+"String"];for(b in u)u.hasOwnProperty(b)&&!u[b]&&(c=a._g.doc.getElementById(b))&&c.parentNode.removeChild(c)}},H={"":["none"],none:["none"],"-":[3,1],".":[1,1],"-.":[3,1,1,1],"-..":[3,1,1,1,1,1],". ":[1,3],"- ":[4,3],"--":[8,3],"- .":[4,3,1,3],"--.":[8,
3,1,3],"--..":[8,3,1,3,1,3]},K=function(c,d,l){var b=H[e(d).toLowerCase()],I,h,f;if(d=b||void 0!==d&&[].concat(d)){I=c.attrs["stroke-width"]||1;l={round:I,square:I,butt:0}[l["stroke-linecap"]||c.attrs["stroke-linecap"]]||0;h=d.length;f=b?I:1;if("none"==d[0])b=d;else for(b=[];h--;)b[h]=d[h]*f+(h%2?1:-1)*l,0>=b[h]&&(b[h]=.01+(1>=I?l:0)),isNaN(b[h])&&(b[h]=0);a.is(d,"array")&&ra(c.node,{"stroke-dasharray":b.join(",")})}},Ea=function(a,c){for(var e in c)J("raphael.attr."+e+"."+a.id,a,c[e],e),a.ca[e]&&
a.attr(e,c[e])},Va=a._setFillAndStroke=function(c,d){if(c.paper.canvas){var b=c.node,f=c.attrs,k=c.paper,J=b.style,w=J.visibility;d&&d.text&&d.text.replace&&(d.text=d.text.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&<br\/>lt;|&l<br\/>t;|&lt<br\/>;/g,"<<br/>").replace(/&<br\/>gt;|&g<br\/>t;|&gt<br\/>;/g,"><br/>"));J.visibility="hidden";for(var u in d)if(d.hasOwnProperty(u)&&a._availableAttrs.hasOwnProperty(u)){var n=d[u];f[u]=n;switch(u){case "blur":c.blur(n);break;case "href":case "title":case "target":var ta=
b.parentNode;if("a"!=ta.tagName.toLowerCase()){if(""==n)break;var H=ra("a");H.raphael=!0;H.raphaelid=b.raphaelid;ta.insertBefore(H,b);H.appendChild(b);ta=H}"target"==u?ta.setAttributeNS("http://www.w3.org/1999/xlink","show","blank"==n?"new":n):ta.setAttributeNS("http://www.w3.org/1999/xlink",u,n);b.titleNode=ta;break;case "cursor":J.cursor=n;break;case "transform":c.transform(n);break;case "rotation":a.is(n,"array")?c.rotate.apply(c,n):c.rotate(n);break;case "arrow-start":p(c,n);break;case "arrow-end":p(c,
n,1);break;case "clip-path":var Ea=!0;case "clip-rect":ta=!Ea&&e(n).split(g);c._.clipispath=!!Ea;if(Ea||4==ta.length){c.clip&&c.clip.parentNode.parentNode.removeChild(c.clip.parentNode);var H=ra("clipPath"),Va=ra(Ea?"path":"rect");H.id=a.getElementID(a.createUUID());ra(Va,Ea?{d:n?f["clip-path"]=a._pathToAbsolute(n):a._availableAttrs.path,fill:"none"}:{x:ta[0],y:ta[1],width:ta[2],height:ta[3],transform:c.matrix.invert()});H.appendChild(Va);k.defs.appendChild(H);ra(b,{"clip-path":"url('"+a._url+"#"+
H.id+"')"});c.clip=Va}!n&&(n=b.getAttribute("clip-path"))&&((n=a._g.doc.getElementById(n.replace(/(^url\(#|\)$)/g,"")))&&n.parentNode.removeChild(n),ra(b,{"clip-path":""}),11===document.documentMode&&b.removeAttribute("clip-path"),delete c.clip);break;case "path":"path"==c.type&&(ra(b,{d:n?f.path=a._pathToAbsolute(n):a._availableAttrs.path}),c._.dirty=1,c._.arrows&&("startString"in c._.arrows&&p(c,c._.arrows.startString),"endString"in c._.arrows&&p(c,c._.arrows.endString,1)));break;case "width":if(b.setAttribute(u,
n),c._.dirty=1,f.fx)u="x",n=f.x;else break;case "x":f.fx&&(n=-f.x-(f.width||0));case "rx":if("rx"==u&&"rect"==c.type)break;case "cx":b.setAttribute(u,n);c.pattern&&q(c);c._.dirty=1;break;case "height":if(b.setAttribute(u,n),c._.dirty=1,f.fy)u="y",n=f.y;else break;case "y":f.fy&&(n=-f.y-(f.height||0));case "ry":if("ry"==u&&"rect"==c.type)break;case "cy":b.setAttribute(u,n);c.pattern&&q(c);c._.dirty=1;break;case "r":"rect"==c.type?ra(b,{rx:n,ry:n}):b.setAttribute(u,n);c._.dirty=1;break;case "src":"image"==
c.type&&b.setAttributeNS("http://www.w3.org/1999/xlink","href",n);break;case "stroke-width":if(1!=c._.sx||1!=c._.sy)n/=I(h(c._.sx),h(c._.sy))||1;k._vbSize&&(n*=k._vbSize);M&&0===n&&(n=1E-6);b.setAttribute(u,n);f["stroke-dasharray"]&&K(c,f["stroke-dasharray"],d);c._.arrows&&("startString"in c._.arrows&&p(c,c._.arrows.startString),"endString"in c._.arrows&&p(c,c._.arrows.endString,1));break;case "stroke-dasharray":K(c,n,d);break;case "fill":var A=e(n).match(a._ISURL);if(A){var H=ra("pattern"),Ra=ra("image");
H.id=a.getElementID(a.createUUID());ra(H,{x:0,y:0,patternUnits:"userSpaceOnUse",height:1,width:1});ra(Ra,{x:0,y:0,"xlink:href":A[1]});H.appendChild(Ra);(function(c){a._preload(A[1],function(){var a=this.offsetWidth,e=this.offsetHeight;ra(c,{width:a,height:e});ra(Ra,{width:a,height:e});k.safari()})})(H);k.defs.appendChild(H);J.fill="url('"+a._url+"#"+H.id+"')";ra(b,{fill:J.fill});c.pattern=H;c.pattern&&q(c);break}ta=a.getRGB(n);if(!ta.error)delete d.gradient,delete f.gradient,!a.is(f.opacity,"undefined")&&
a.is(d.opacity,"undefined")&&ra(b,{opacity:f.opacity}),!a.is(f["fill-opacity"],"undefined")&&a.is(d["fill-opacity"],"undefined")&&ra(b,{"fill-opacity":f["fill-opacity"]}),c.gradient&&m(c);else if(("circle"==c.type||"ellipse"==c.type||"r"!=e(n).charAt())&&C(c,n)){if("opacity"in f||"fill-opacity"in f)if(ta=a._g.doc.getElementById(b.getAttribute("fill").replace(/^url\(#|\)$/g,"")))ta=ta.getElementsByTagName("stop"),ra(ta[ta.length-1],{"stop-opacity":("opacity"in f?f.opacity:1)*("fill-opacity"in f?f["fill-opacity"]:
1)});f.gradient=n;f.fill="none";J.fill="";break}ta.hasOwnProperty("opacity")?(ra(b,{"fill-opacity":J.fillOpacity=1<ta.opacity?ta.opacity/100:ta.opacity}),c._.fillOpacityDirty=!0):c._.fillOpacityDirty&&a.is(f["fill-opacity"],"undefined")&&a.is(d["fill-opacity"],"undefined")&&(b.removeAttribute("fill-opacity"),J.fillOpacity="",delete c._.fillOpacityDirty);case "stroke":ta=a.getRGB(n);b.setAttribute(u,ta.hex);J[u]=ta.hex;"stroke"==u&&(ta.hasOwnProperty("opacity")?(ra(b,{"stroke-opacity":J.strokeOpacity=
1<ta.opacity?ta.opacity/100:ta.opacity}),c._.strokeOpacityDirty=!0):c._.strokeOpacityDirty&&a.is(f["stroke-opacity"],"undefined")&&a.is(d["stroke-opacity"],"undefined")&&(b.removeAttribute("stroke-opacity"),J.strokeOpacity="",delete c._.strokeOpacityDirty),c._.arrows&&("startString"in c._.arrows&&p(c,c._.arrows.startString),"endString"in c._.arrows&&p(c,c._.arrows.endString,1)));break;case "gradient":"circle"!=c.type&&"ellipse"!=c.type&&"r"==e(n).charAt()||C(c,n);break;case "line-height":case "vertical-align":break;
case "visibility":"hidden"===n?c.hide():c.show();break;case "opacity":f.gradient&&!f.hasOwnProperty("stroke-opacity")&&ra(b,{"stroke-opacity":1<n?n/100:n});case "fill-opacity":if(f.gradient){if(ta=a._g.doc.getElementById(b.getAttribute("fill").replace(/^url\(#|\)$/g,"")))ta=ta.getElementsByTagName("stop"),ra(ta[ta.length-1],{"stop-opacity":n});break}default:"font-size"==u&&(n=l(n,10)+"px"),ta=u.replace(/(\-.)/g,function(c){return c.substring(1).toUpperCase()}),J[ta]=n,c._.dirty=1,b.setAttribute(u,
n)}}"text"===c.type&&!d["_do-not-tune"]&&O(c,d);J.visibility=w}},A=a._updateFollowers=function(){var c,a,e,d=arguments,l=Y.call(d),b=Y.call(d);c=0;for(a=l.followers.length;c<a;c++)e=l.followers[c].el,e[b].apply(e,d)},O=function(c,l){if("text"==c.type&&(l.hasOwnProperty("text")||l.hasOwnProperty("font")||l.hasOwnProperty("font-size")||l.hasOwnProperty("x")||l.hasOwnProperty("y")||l.hasOwnProperty("line-height")||l.hasOwnProperty("vertical-align"))){var I=c.attrs,h=c.node,f=h.firstChild&&a._g.doc.defaultView.getComputedStyle(h.firstChild,
""),k=f?d(a._g.doc.defaultView.getComputedStyle(h.firstChild,"").getPropertyValue("font-size")):10,g=d(l["line-height"]||I["line-height"])||1.2*k,M=I.hasOwnProperty("vertical-align")?I["vertical-align"]:"middle",J=(l.direction||(f?f.getPropertyValue("direction"):"initial")).toLowerCase(),w=!!document.documentMode;isNaN(g)&&(g=1.2*k);a.is(l.text,"array")&&(l.text=l.text.join("<br>"));M="top"===M?-.5:"bottom"===M?.5:0;if(l.hasOwnProperty("text")&&(l.text!==I.text||c._textdirty)){for(I.text=l.text;h.firstChild;)h.removeChild(h.firstChild);
for(var u=e(l.text).split(/\n|<br\s*?\/?>/ig),k=[],n=0,ta=u.length;n<ta;n++)f=ra("tspan"),n?ra(f,{dy:g,x:I.x}):ra(f,{dy:g*u.length*M,x:I.x}),u[n]||(f.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),u[n]=" "),f.appendChild(a._g.doc.createTextNode(u[n])),h.appendChild(f),k[n]=f,!w&&"rtl"===J&&n<ta-1&&(f=ra("tspan"),ra(f,{visibility:"hidden","font-size":"0px"}),f.appendChild(a._g.doc.createTextNode("i")),h.appendChild(f));c._textdirty=!1}else for(k=h.getElementsByTagName("tspan"),
n=w=0,ta=k.length;n<ta;n++)if(f=k[n],J=f.attributes[0],!J||"visibility"!==J.name&&"visibility"!==J.nodeName||"hidden"!==J.value&&"hidden"!==J.nodeValue)n?ra(f,{dy:g,x:I.x}):(J=k[1]&&k[1].attributes[0],!J||"visibility"!==J.name&&"visibility"!==J.nodeName||"hidden"!==J.value&&"hidden"!==J.nodeValue||(w=b.floor(.5*k.length)),ra(k[0],{dy:g*(k.length-w)*M,x:I.x}));ra(h,{x:I.x,y:I.y});c._.dirty=1;h=c._getBBox();g=I.y-(h.y+h.height/2);if(h.isCalculated)switch(I["vertical-align"]){case "top":g=.75*h.height;
break;case "bottom":g=-(.25*h.height);break;default:g=I.y-(h.y+.25*h.height)}g&&a.is(g,"finite")&&k[0]&&ra(k[0],{dy:g})}},Ra=function(c,e,d){d=d||e;d.canvas&&d.canvas.appendChild(c);this.node=this[0]=c;c.raphael=!0;c.raphaelid=this.id=a._oid++;this.matrix=a.matrix();this.realPath=null;this.attrs=this.attrs||{};this.followers=this.followers||[];this.paper=e;this.ca=this.customAttributes=this.customAttributes||new e._CustomAttributes;this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1};this.parent=
d;!d.bottom&&(d.bottom=this);(this.prev=d.top)&&(d.top.next=this);d.top=this;this.next=null},V=a.el;Ra.prototype=V;V.constructor=Ra;a._engine.getNode=function(c){c=c.node||c[0].node;return c.titleNode||c};a._engine.getLastNode=function(c){c=c.node||c[c.length-1].node;return c.titleNode||c};V.rotate=function(c,a,l){if(this.removed)return this;A(this,"rotate",c,a,l);c=e(c).split(g);c.length-1&&(a=d(c[1]),l=d(c[2]));c=d(c[0]);null==l&&(a=l);if(null==a||null==l)l=this.getBBox(1),a=l.x+l.width/2,l=l.y+
l.height/2;this.transform(this._.transform.concat([["r",c,a,l]]));return this};V.scale=function(c,a,l,b){var I;if(this.removed)return this;A(this,"scale",c,a,l,b);c=e(c).split(g);c.length-1&&(a=d(c[1]),l=d(c[2]),b=d(c[3]));c=d(c[0]);null==a&&(a=c);null==b&&(l=b);if(null==l||null==b)I=this.getBBox(1);l=null==l?I.x+I.width/2:l;b=null==b?I.y+I.height/2:b;this.transform(this._.transform.concat([["s",c,a,l,b]]));return this};V.translate=function(c,a){if(this.removed)return this;A(this,"translate",c,a);
c=e(c).split(g);c.length-1&&(a=d(c[1]));c=d(c[0])||0;this.transform(this._.transform.concat([["t",c,+a||0]]));return this};V.transform=function(c){var e=this._;if(null==c)return e.transform;a._extractTransform(this,c);this.clip&&!e.clipispath&&ra(this.clip,{transform:this.matrix.invert()});this.pattern&&q(this);this.node&&ra(this.node,{transform:this.matrix});if(1!=e.sx||1!=e.sy)c=this.attrs.hasOwnProperty("stroke-width")?this.attrs["stroke-width"]:1,this.attr({"stroke-width":c});return this};V.hide=
function(){A(this,"hide");!this.removed&&this.paper.safari(this.node.style.display="none");return this};V.show=function(){A(this,"show");!this.removed&&this.paper.safari(this.node.style.display="");return this};V.remove=function(){if(!this.removed&&this.parent.canvas){var c=a._engine.getNode(this),e=this.paper,d=e.defs;e.__set__&&e.__set__.exclude(this);J.unbind("raphael.*.*."+this.id);for(this.gradient&&d&&m(this);d=this.followers.pop();)d.el.remove();for(;d=this.bottom;)d.remove();this._drag&&this.undrag();
if(this.events)for(;d=this.events.pop();)d.unbind();this.parent.canvas.removeChild(c);this.removeData();delete e._elementsById[this.id];a._tear(this,this.parent);for(d in this)this[d]="function"===typeof this[d]?a._removedFactory(d):null;this.removed=!0}};V._getBBox=function(){var a,e=this.node,d={},l=this.attrs,b,I,h="text"===this.type,f=!!document.documentMode;f&&h?a=c(this):"none"===e.style.display&&(this.show(),I=!0);try{d=e.getBBox(),h&&(void 0===d.x&&(d.isCalculated=!0,b=l["text-anchor"],d.x=
(l.x||0)-d.width*("start"===b?0:"middle"===b?.5:1)),void 0===d.y&&(d.isCalculated=!0,b=l["vertical-align"],d.y=(l.y||0)-d.height*("bottom"===b?1:"middle"===b?.5:0)))}catch(k){}finally{d=d||{}}f&&h?a&&a():I&&this.hide();return d};V.attr=function(c,e){if(this.removed)return this;if(null==c){var d={},l;for(l in this.attrs)this.attrs.hasOwnProperty(l)&&(d[l]=this.attrs[l]);d.gradient&&"none"==d.fill&&(d.fill=d.gradient)&&delete d.gradient;d.transform=this._.transform;d.visibility="none"===this.node.style.display?
"hidden":"visible";return d}if(null==e&&a.is(c,"string")){if("fill"==c&&"none"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if("transform"==c)return this._.transform;if("visibility"==c)return"none"===this.node.style.display?"hidden":"visible";var d=c.split(g),b={},I=0;for(l=d.length;I<l;I++)c=d[I],c in this.attrs?b[c]=this.attrs[c]:a.is(this.ca[c],"function")?b[c]=this.ca[c].def:b[c]=a._availableAttrs[c];return l-1?b:b[d[0]]}if(null==e&&a.is(c,"array")){b={};I=0;for(l=c.length;I<
l;I++)b[c[I]]=this.attr(c[I]);return b}null!=e?(d={},d[c]=e):null!=c&&a.is(c,"object")&&(d=c);if(!1!==a.stopEvent)for(I in d)J("raphael.attr."+I+"."+this.id,this,d[I],I);var h={};for(I in this.ca)if(this.ca[I]&&d.hasOwnProperty(I)&&a.is(this.ca[I],"function")&&!this.ca["_invoked"+I]){this.ca["_invoked"+I]=!0;l=this.ca[I].apply(this,[].concat(d[I]));delete this.ca["_invoked"+I];for(b in l)l.hasOwnProperty(b)&&(d[b]=l[b]);this.attrs[I]=d[I];!1===l&&(h[I]=d[I],delete d[I])}Va(this,d);var f,I=0;for(l=
this.followers.length;I<l;I++)f=this.followers[I],f.cb&&!f.cb.call(f.el,d,this)||f.el.attr(d);for(b in h)d[b]=h[b];return this};V.blur=function(c){if(0!==+c){var e=ra("filter"),d=ra("feGaussianBlur");this.attrs.blur=c;e.id=a.getElementID(a.createUUID());ra(d,{stdDeviation:+c||1.5});e.appendChild(d);this.paper.defs.appendChild(e);this._blur=e;ra(this.node,{filter:"url('"+a._url+"#"+e.id+"')"})}else this._blur&&(this._blur.parentNode.removeChild(this._blur),delete this._blur,delete this.attrs.blur),
this.node.removeAttribute("filter")};V.on=function(c,e){if(this.removed)return this;var d=e;a.supportsTouch&&(c=a._touchMap[c]||"click"===c&&"touchstart"||c,d=function(c){c.preventDefault();e()});this.node["on"+c]=d;return this};a._engine.path=function(c,a,e){var d=ra("path");c=new Ra(d,c,e);c.type="path";Va(c,a);Ea(c,a);return c};a._engine.group=function(c,a,e){var d=ra("g");c=new Ra(d,c,e);c.type="group";c.canvas=c.node;c.top=c.bottom=null;c._id=a||"";a&&d.setAttribute("class","raphael-group-"+
c.id+"-"+a);return c};a._engine.circle=function(c,a,e){var d=ra("circle");c=new Ra(d,c,e);c.type="circle";Va(c,a);Ea(c,a);return c};a._engine.rect=function(c,a,e){var d=ra("rect");c=new Ra(d,c,e);c.type="rect";a.rx=a.ry=a.r;Va(c,a);Ea(c,a);return c};a._engine.ellipse=function(c,a,e){var d=ra("ellipse");c=new Ra(d,c,e);c.type="ellipse";Va(c,a);Ea(c,a);return c};a._engine.image=function(c,a,e){var d=ra("image");c=new Ra(d,c,e);c.type="image";d.setAttribute("preserveAspectRatio","none");Va(c,a);Ea(c,
a);return c};a._engine.text=function(c,a,e,d){var l=ra("text");c=new Ra(l,c,e);c.type="text";c._textdirty=!0;d&&c.css&&c.css(d,void 0,!0);Va(c,a);Ea(c,a);return c};a._engine.setSize=function(c,a){this.width=c||this.width;this.height=a||this.height;this.canvas.setAttribute("width",this.width);this.canvas.setAttribute("height",this.height);this._viewBox&&this.setViewBox.apply(this,this._viewBox);return this};a._engine.create=function(){var c=a._getContainer.apply(0,arguments),e=c&&c.container,d=c.x,
l=c.y,b=c.width,c=c.height;if(!e)throw Error("SVG container not found.");var I=ra("svg"),h;h="overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-moz-user-select:-moz-none;-khtml-user-select:none;-ms-user-select:none;user-select:none;-o-user-select:none;cursor:default;vertical-align:middle;";var f,d=d||0,l=l||0,b=b||512,c=c||342;ra(I,{height:c,version:1.1,width:b,xmlns:"http://www.w3.org/2000/svg"});1==e?(I.style.cssText=h+"position:absolute;left:"+d+"px;top:"+l+"px",
a._g.doc.body.appendChild(I),f=1):(I.style.cssText=h+"position:relative",e.firstChild?e.insertBefore(I,e.firstChild):e.appendChild(I));e=new a._Paper;e.width=b;e.height=c;e.canvas=I;ra(I,{id:"raphael-paper-"+e.id});e.clear();e._left=e._top=0;f&&(e.renderfix=function(){});e.renderfix();return e};a._engine.setViewBox=function(c,a,e,d,l){J("raphael.setViewBox",this,this._viewBox,[c,a,e,d,l]);var b=I(e/this.width,d/this.height),h=this.top,f=l?"meet":"xMinYMin",k;null==c?(this._vbSize&&(b=1),delete this._vbSize,
k="0 0 "+this.width+" "+this.height):(this._vbSize=b,k=c+" "+a+" "+e+" "+d);for(ra(this.canvas,{viewBox:k,preserveAspectRatio:f});b&&h;)f="stroke-width"in h.attrs?h.attrs["stroke-width"]:1,h.attr({"stroke-width":f}),h._.dirty=1,h._.dirtyT=1,h=h.prev;this._viewBox=[c,a,e,d,!!l];return this};a.prototype.renderfix=function(){var c=this.canvas,a=c.style,e;try{e=c.getScreenCTM()||c.createSVGMatrix()}catch(d){e=c.createSVGMatrix()}c=-e.e%1;e=-e.f%1;if(c||e)c&&(this._left=(this._left+c)%1,a.left=this._left+
"px"),e&&(this._top=(this._top+e)%1,a.top=this._top+"px")};a.prototype._desc=function(c){var e=this.desc;if(e)for(;e.firstChild;)e.removeChild(e.firstChild);else this.desc=e=ra("desc"),this.canvas.appendChild(e);e.appendChild(a._g.doc.createTextNode(a.is(c,"string")?c:"Created with Red Raphaël "+a.version))};a.prototype.clear=function(){var c;for(J("raphael.clear",this);c=this.bottom;)c.remove();for(c=this.canvas;c.firstChild;)c.removeChild(c.firstChild);this.bottom=this.top=null;c.appendChild(this.desc=
ra("desc"));c.appendChild(this.defs=ra("defs"))};a.prototype.remove=function(){var c;for(J("raphael.remove",this);c=this.bottom;)c.remove();this.defs&&this.defs.parentNode.removeChild(this.defs);this.desc&&this.desc.parentNode.removeChild(this.desc);this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(c in this)this[c]="function"==typeof this[c]?a._removedFactory(c):null;this.removed=!0};var r=a.st,B;for(B in V)V.hasOwnProperty(B)&&!r.hasOwnProperty(B)&&(r[B]=function(c){return function(){var a=
arguments;return this.forEach(function(e){e[c].apply(e,a)})}}(B))}})();"undefined"===typeof z&&"object"===typeof window&&(z=window);(function(){if(a.vml){var c=String,e=parseFloat,d=Math,l=d.round,b=d.max,I=d.min,h=d.sqrt,f=d.abs,k=/[, ]+/,g=a.eve,M={M:"m",L:"l",C:"c",Z:"x",m:"t",l:"r",c:"v",z:"x"},J=/([clmz]),?([^clmz]*)/gi,w=/ progid:\S+Blur\([^\)]+\)/g,u=/-?[^,\s-]+/g,ra={path:1,rect:1,image:1},n={circle:1,ellipse:1},ta=function(e){var d=/[ahqstv]/ig,b=a._pathToAbsolute;c(e).match(d)&&(b=a._path2curve);
d=/[clmz]/g;if(b==a._pathToAbsolute&&!c(e).match(d))return(e=c(e).replace(J,function(c,a,e){var d=[],b="m"==a.toLowerCase(),I=M[a];e.replace(u,function(c){b&&2==d.length&&(I+=d+M["m"==a?"l":"L"],d=[]);d.push(l(21600*c))});return I+d}))||"m0,0";var d=b(e),I;e=[];for(var h=0,f=d.length;h<f;h++){b=d[h];I=d[h][0].toLowerCase();"z"==I&&(I="x");for(var k=1,g=b.length;k<g;k++)I+=l(21600*b[k])+(k!=g-1?",":"");e.push(I)}return e.length?e.join(" "):"m0,0"},m=function(c,e,d){var l=a.matrix();l.rotate(-c,.5,
.5);return{dx:l.x(e,d),dy:l.y(e,d)}},C=function(c,a,e,d,l,b){var I=c._,h=c.matrix,k=I.fillpos;c=c.node;var g=c.style,M=1,J="",w=21600/a,u=21600/e;g.visibility="hidden";if(a&&e){c.coordsize=f(w)+" "+f(u);g.rotation=b*(0>a*e?-1:1);b&&(l=m(b,d,l),d=l.dx,l=l.dy);0>a&&(J+="x");0>e&&(J+=" y")&&(M=-1);g.flip=J;c.coordorigin=d*-w+" "+l*-u;if(k||I.fillsize)if(d=(d=c.getElementsByTagName("fill"))&&d[0])c.removeChild(d),k&&(l=m(b,h.x(k[0],k[1]),h.y(k[0],k[1])),d.position=l.dx*M+" "+l.dy*M),I.fillsize&&(d.size=
I.fillsize[0]*f(a)+" "+I.fillsize[1]*f(e)),c.appendChild(d);g.visibility="visible"}};a._url="";a.toString=function(){return"Your browser doesn’t support SVG. Falling down to VML.\nYou are running Raphaël "+this.version};var q=function(a,e,d){e=c(e).toLowerCase().split("-");d=d?"end":"start";for(var l=e.length,b="classic",I="medium",h="medium";l--;)switch(e[l]){case "block":case "classic":case "oval":case "diamond":case "open":case "none":b=e[l];break;case "wide":case "narrow":h=e[l];break;case "long":case "short":I=
e[l]}a=a.node.getElementsByTagName("stroke")[0];a[d+"arrow"]=b;a[d+"arrowlength"]=I;a[d+"arrowwidth"]=h},H=function(c,a){for(var e in a)g("raphael.attr."+e+"."+c.id,c,a[e],e),c.ca[e]&&c.attr(e,a[e])},p=a._setFillAndStroke=function(d,h){if(d.paper.canvas){d.attrs=d.attrs||{};var f=d.node,g=d.attrs,M=f.style,J=ra[d.type]&&(h.x!=g.x||h.y!=g.y||h.width!=g.width||h.height!=g.height||h.cx!=g.cx||h.cy!=g.cy||h.rx!=g.rx||h.ry!=g.ry||h.r!=g.r),w=n[d.type]&&(g.cx!=h.cx||g.cy!=h.cy||g.r!=h.r||g.rx!=h.rx||g.ry!=
h.ry),u="group"===d.type,m;for(m in h)h.hasOwnProperty(m)&&(g[m]=h[m]);J&&(g.path=a._getPath[d.type](d),d._.dirty=1);h.href&&(f.href=h.href);h.title&&(f.title=h.title);h.target&&(f.target=h.target);h.cursor&&(M.cursor=h.cursor);"blur"in h&&d.blur(h.blur);if(h.path&&"path"==d.type||J)f.path=ta(~c(g.path).toLowerCase().indexOf("r")?a._pathToAbsolute(g.path):g.path),"image"==d.type&&(d._.fillpos=[g.x,g.y],d._.fillsize=[g.width,g.height],C(d,1,1,0,0,0));"transform"in h&&d.transform(h.transform);"rotation"in
h&&(M=h.rotation,a.is(M,"array")?d.rotate.apply(d,M):d.rotate(M));"visibility"in h&&("hidden"===h.visibility?d.hide():d.show());w&&(M=+g.cx,w=+g.cy,J=+g.rx||+g.r||0,m=+g.ry||+g.r||0,f.path=a.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x",l(21600*(M-J)),l(21600*(w-m)),l(21600*(M+J)),l(21600*(w+m)),l(21600*M)));"clip-rect"in h&&(M=c(h["clip-rect"]).split(k),4==M.length&&(M[0]=+M[0],M[1]=+M[1],M[2]=+M[2]+M[0],M[3]=+M[3]+M[1],J=u?f:f.clipRect||a._g.doc.createElement("div"),w=J.style,u?(d.clip=M.slice(),
J=d.matrix.offset(),J=[e(J[0]),e(J[1])],M[0]-=J[0],M[1]-=J[1],M[2]-=J[0],M[3]-=J[1],w.width="1px",w.height="1px"):f.clipRect||(w.top="0",w.left="0",w.width=d.paper.width+"px",w.height=d.paper.height+"px",f.parentNode.insertBefore(J,f),J.appendChild(f),J.raphael=!0,J.raphaelid=f.raphaelid,f.clipRect=J),w.position="absolute",w.clip=a.format("rect({1}px {2}px {3}px {0}px)",M)),h["clip-rect"]||(u&&d.clip?(f.style.clip="rect(0px 10800px 10800px 0px)",delete d.clip):f.clipRect&&(f.clipRect.style.clip="rect(0px 10800px 10800px 0px)")));
if(d.textpath||u)u=u?f.style:d.textpath.style,h.font&&(u.font=h.font),h["font-family"]&&(u.fontFamily='"'+h["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g,"")+'"'),h["font-size"]&&(u.fontSize=h["font-size"]),h["font-weight"]&&(u.fontWeight=h["font-weight"]),h["font-style"]&&(u.fontStyle=h["font-style"]);"arrow-start"in h&&q(d,h["arrow-start"]);"arrow-end"in h&&q(d,h["arrow-end"],1);if(null!=h.opacity||null!=h["stroke-width"]||null!=h.fill||null!=h.src||null!=h.stroke||null!=h["stroke-width"]||
null!=h["stroke-opacity"]||null!=h["fill-opacity"]||null!=h["stroke-dasharray"]||null!=h["stroke-miterlimit"]||null!=h["stroke-linejoin"]||null!=h["stroke-linecap"]){u=f.getElementsByTagName("fill");M=-1;u=u&&u[0];!u&&(u=A("fill"));"image"==d.type&&h.src&&(u.src=h.src);h.fill&&(u.on=!0);if(null==u.on||"none"==h.fill||null===h.fill)u.on=!1;u.on&&h.fill&&((w=c(h.fill).match(a._ISURL))?(u.parentNode==f&&f.removeChild(u),u.rotate=!0,u.src=w[1],u.type="tile",J=d.getBBox(1),u.position=J.x+" "+J.y,d._.fillpos=
[J.x,J.y],a._preload(w[1],function(){d._.fillsize=[this.offsetWidth,this.offsetHeight]})):(w=a.getRGB(h.fill),u.color=w.hex,u.src="",u.type="solid",w.error&&(d.type in{circle:1,ellipse:1}||"r"!=c(h.fill).charAt())&&Ea(d,h.fill,u)?(g.fill="none",g.gradient=h.fill,u.rotate=!1):"opacity"in w&&!("fill-opacity"in h)&&(M=w.opacity)));if(-1!==M||"fill-opacity"in h||"opacity"in h)w=((+g["fill-opacity"]+1||2)-1)*((+g.opacity+1||2)-1)*((+M+1||2)-1),w=I(b(w,0),1),u.opacity=w,u.src&&(u.color="none");f.appendChild(u);
u=f.getElementsByTagName("stroke")&&f.getElementsByTagName("stroke")[0];M=!1;!u&&(M=u=A("stroke"));if(h.stroke&&"none"!=h.stroke||h["stroke-width"]||null!=h["stroke-opacity"]||h["stroke-dasharray"]||h["stroke-miterlimit"]||h["stroke-linejoin"]||h["stroke-linecap"])u.on=!0;"none"!=h.stroke&&null!==h.stroke&&null!=u.on&&0!=h.stroke&&0!=h["stroke-width"]||(u.on=!1);w=a.getRGB("stroke"in h?h.stroke:g.stroke);u.on&&h.stroke&&(u.color=w.hex);w=((+g["stroke-opacity"]+1||2)-1)*((+g.opacity+1||2)-1)*((+w.opacity+
1||2)-1);J=.75*(e(h["stroke-width"])||1);w=I(b(w,0),1);null==h["stroke-width"]&&(J=g["stroke-width"]);h["stroke-width"]&&(u.weight=J);J&&1>J&&(w*=J)&&(u.weight=1);u.opacity=w;h["stroke-linejoin"]&&(u.joinstyle=h["stroke-linejoin"])||M&&(M.joinstyle="miter");u.miterlimit=h["stroke-miterlimit"]||8;h["stroke-linecap"]&&(u.endcap="butt"==h["stroke-linecap"]?"flat":"square"==h["stroke-linecap"]?"square":"round");h["stroke-dasharray"]&&(w={"-":"shortdash",".":"shortdot","-.":"shortdashdot","-..":"shortdashdotdot",
". ":"dot","- ":"dash","--":"longdash","- .":"dashdot","--.":"longdashdot","--..":"longdashdotdot"},u.dashstyle=w.hasOwnProperty(h["stroke-dasharray"])?w[h["stroke-dasharray"]]:h["stroke-dasharray"].join&&h["stroke-dasharray"].join(" ")||"");M&&f.appendChild(u)}if("text"==d.type){d.paper.canvas.style.display="";f=d.paper.span;u=g.font&&g.font.match(/\d+(?:\.\d*)?(?=px)/);w=g["line-height"]&&(g["line-height"]+"").match(/\d+(?:\.\d*)?(?=px)/);M=f.style;g.font&&(M.font=g.font);g["font-family"]&&(M.fontFamily=
g["font-family"]);g["font-weight"]&&(M.fontWeight=g["font-weight"]);g["font-style"]&&(M.fontStyle=g["font-style"]);u=e(g["font-size"]||u&&u[0])||10;M.fontSize=100*u+"px";w=e(g["line-height"]||w&&w[0])||12;g["line-height"]&&(M.lineHeight=100*w+"px");a.is(h.text,"array")&&(h.text=d.textpath.string=h.text.join("\n").replace(/<br\s*?\/?>/ig,"\n"));d.textpath.string&&(f.innerHTML=c(d.textpath.string).replace(/</g,"&#60;").replace(/&/g,"&#38;").replace(/\n/g,"<br>"));f=f.getBoundingClientRect();d.W=g.w=
(f.right-f.left)/100;d.H=g.h=(f.bottom-f.top)/100;d.X=g.x;d.Y=g.y;switch(g["vertical-align"]){case "top":d.bby=d.H/2;break;case "bottom":d.bby=-d.H/2;break;default:d.bby=0}("x"in h||"y"in h||void 0!==d.bby)&&(d.path.v=a.format("m{0},{1}l{2},{1}",l(21600*g.x),l(21600*(g.y+(d.bby||0))),l(21600*g.x)+1));f="x y text font font-family font-weight font-style font-size line-height".split(" ");u=0;for(M=f.length;u<M;u++)if(f[u]in h){d._.dirty=1;break}switch(g["text-anchor"]){case "start":d.textpath.style["v-text-align"]=
"left";d.bbx=d.W/2;break;case "end":d.textpath.style["v-text-align"]="right";d.bbx=-d.W/2;break;default:d.textpath.style["v-text-align"]="center",d.bbx=0}d.textpath.style["v-text-kern"]=!0}}},K=a._updateFollowers=function(){var c,a,e,d=arguments,l=Y.call(d),b=Y.call(d);c=0;for(a=l.followers.length;c<a;c++)e=l.followers[c].el,e[b].apply(e,d)},Ea=function(d,l,b){d.attrs=d.attrs||{};var I=Math.pow,f="linear",k=".5 .5";d.attrs.gradient=l;l=c(l).replace(a._radial_gradient,function(c,a){f="radial";a=a&&
a.split(",")||[];var d=a[3],l=a[4];d&&l&&(d=e(d),l=e(l),.25<I(d-.5,2)+I(l-.5,2)&&(l=h(.25-I(d-.5,2))*(2*(.5<l)-1)+.5),k=d+" "+l);return""});l=l.split(/\s*\-\s*/);if("linear"==f){var g=l.shift(),g=-e(g);if(isNaN(g))return null}l=a._parseDots(l);if(!l)return null;d=d.shape||d.node;if(l.length){b.parentNode==d&&d.removeChild(b);b.on=!0;b.method="none";b.color=l[0].color;b.color2=l[l.length-1].color;for(var M=[],J=1,w=void 0===l[0].opacity?1:l[0].opacity,u=0,ra=l.length;u<ra;u++)l[u].offset&&M.push(l[u].offset+
" "+l[u].color),void 0!==l[u].opacity&&(J=l[u].opacity);b.colors=M.length?M.join():"0% "+b.color;b.opacity=J;b["o:opacity2"]=w;"radial"==f?(b.type="gradientTitle",b.focus="100%",b.focussize="0 0",b.focusposition=k,b.angle=0):(b.type="gradient",b.angle=(270-g)%360);d.appendChild(b)}return 1},Va=function(c,e,d){d=d||e;var l;d.canvas&&d.canvas.appendChild(c);l=A("skew");l.on=!0;c.appendChild(l);this.skew=l;this.node=this[0]=c;c.raphael=!0;c.raphaelid=this.id=a._oid++;this.Y=this.X=0;this.attrs=this.attrs||
{};this.followers=this.followers||[];this.paper=e;this.ca=this.customAttributes=this.customAttributes||new e._CustomAttributes;this.matrix=a.matrix();this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1};this.parent=d;!d.bottom&&(d.bottom=this);(this.prev=d.top)&&(d.top.next=this);d.top=this;this.next=null},d=a.el;Va.prototype=d;d.constructor=Va;d.transform=function(e){if(null==e)return this._.transform;var d=this.paper._viewBoxShift,l=d?"s"+[d.scale,d.scale]+"-1-1t"+[d.dx,d.dy]:"",b;d&&
(b=e=c(e).replace(/\.{3}|\u2026/g,this._.transform||""));a._extractTransform(this,l+e);var d=this.matrix.clone(),I=this.skew;e=this.node;var l=~c(this.attrs.fill).indexOf("-"),h=!c(this.attrs.fill).indexOf("url(");d.translate(-.5,-.5);h||l||"image"==this.type?(I.matrix="1 0 0 1",I.offset="0 0",I=d.split(),l&&I.noRotation||!I.isSimple?(e.style.filter=d.toFilter(),d=this.getBBox(),l=this.getBBox(1),h=d.x2&&l.x2&&"x2"||"x",I=d.y2&&l.y2&&"y2"||"y",h=d[h]-l[h],d=d[I]-l[I],e.coordorigin=-21600*h+" "+-21600*
d,C(this,1,1,h,d,0)):(e.style.filter="",C(this,I.scalex,I.scaley,I.dx,I.dy,I.rotate))):(e.style.filter="",I.matrix=c(d),I.offset=d.offset());b&&(this._.transform=b);return this};d.rotate=function(a,d,l){if(this.removed)return this;K(this,"rotate",a,d,l);if(null!=a){a=c(a).split(k);a.length-1&&(d=e(a[1]),l=e(a[2]));a=e(a[0]);null==l&&(d=l);if(null==d||null==l)l=this.getBBox(1),d=l.x+l.width/2,l=l.y+l.height/2;this._.dirtyT=1;this.transform(this._.transform.concat([["r",a,d,l]]));return this}};d.translate=
function(a,d){if(this.removed)return this;K(this,"translate",a,d);a=c(a).split(k);a.length-1&&(d=e(a[1]));a=e(a[0])||0;d=+d||0;this._.bbox&&(this._.bbox.x+=a,this._.bbox.y+=d);this.transform(this._.transform.concat([["t",a,d]]));return this};d.scale=function(a,d,l,b){if(this.removed)return this;K(this,"scale",a,d,l,b);a=c(a).split(k);a.length-1&&(d=e(a[1]),l=e(a[2]),b=e(a[3]),isNaN(l)&&(l=null),isNaN(b)&&(b=null));a=e(a[0]);null==d&&(d=a);null==b&&(l=b);if(null==l||null==b)var I=this.getBBox(1);l=
null==l?I.x+I.width/2:l;b=null==b?I.y+I.height/2:b;this.transform(this._.transform.concat([["s",a,d,l,b]]));this._.dirtyT=1;return this};d.hide=function(c){K(this,"hide",c);!this.removed&&(this.node.style.display="none");return this};d.show=function(c){K(this,"show",c);!this.removed&&(this.node.style.display="");return this};d._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y+(this.bby||0)-this.H/2,width:this.W,height:this.H}};d.remove=function(){if(!this.removed&&
this.parent.canvas){var c=a._engine.getNode(this),e=this.paper,d=this.shape;e.__set__&&e.__set__.exclude(this);g.unbind("raphael.*.*."+this.id);d&&d.parentNode.removeChild(d);for(c.parentNode&&c.parentNode.removeChild(c);c=this.followers.pop();)c.el.remove();for(;c=this.bottom;)c.remove();this._drag&&this.undrag();if(this.events)for(;c=this.events.pop();)c.unbind();this.removeData();delete e._elementsById[this.id];a._tear(this,this.parent);for(c in this)this[c]="function"===typeof this[c]?a._removedFactory(c):
null;this.removed=!0}};d.attr=function(c,e){if(this.removed)return this;if(null==c){var d={},l;for(l in this.attrs)this.attrs.hasOwnProperty(l)&&(d[l]=this.attrs[l]);d.gradient&&"none"==d.fill&&(d.fill=d.gradient)&&delete d.gradient;d.transform=this._.transform;d.visibility="none"===this.node.style.display?"hidden":"visible";return d}if(null==e&&a.is(c,"string")){if("fill"==c&&"none"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if("visibility"==c)return"none"===this.node.style.display?
"hidden":"visible";var d=c.split(k),b={},I=0;for(l=d.length;I<l;I++)c=d[I],c in this.attrs?b[c]=this.attrs[c]:a.is(this.ca[c],"function")?b[c]=this.ca[c].def:b[c]=a._availableAttrs[c];return l-1?b:b[d[0]]}if(this.attrs&&null==e&&a.is(c,"array")){b={};I=0;for(l=c.length;I<l;I++)b[c[I]]=this.attr(c[I]);return b}null!=e&&(d={},d[c]=e);null==e&&a.is(c,"object")&&(d=c);if(!1!==a.stopEvent)for(I in d)g("raphael.attr."+I+"."+this.id,this,d[I],I);if(d){var h={};for(I in this.ca)if(this.ca[I]&&d.hasOwnProperty(I)&&
a.is(this.ca[I],"function")&&!this.ca["_invoked"+I]){this.ca["_invoked"+I]=!0;l=this.ca[I].apply(this,[].concat(d[I]));delete this.ca["_invoked"+I];for(b in l)l.hasOwnProperty(b)&&(d[b]=l[b]);this.attrs[I]=d[I];!1===l&&(h[I]=d[I],delete d[I])}"text"in d&&"text"==this.type&&(a.is(d.text,"array")&&(d.text=d.text.join("\n")),this.textpath.string=d.text.replace(/<br\s*?\/?>/ig,"\n"));p(this,d);var f,I=0;for(l=this.followers.length;I<l;I++)f=this.followers[I],f.cb&&!f.cb.call(f.el,d,this)||f.el.attr(d);
for(b in h)d[b]=h[b]}return this};d.blur=function(c){var e=this.node.runtimeStyle,d=e.filter,d=d.replace(w,"");0!==+c?(this.attrs.blur=c,e.filter=d+"  progid:DXImageTransform.Microsoft.Blur(pixelradius="+(+c||1.5)+")",e.margin=a.format("-{0}px 0 0 -{0}px",l(+c||1.5))):(e.filter=d,e.margin=0,delete this.attrs.blur);return this};d.on=function(c,e){if(this.removed)return this;this.node["on"+c]=function(){var c=a._g.win.event;c.target=c.srcElement;e(c)};return this};a._engine.getNode=function(c){c=c.node||
c[0].node;return c.clipRect||c};a._engine.getLastNode=function(c){c=c.node||c[c.length-1].node;return c.clipRect||c};a._engine.group=function(c,e,d){var l=a._g.doc.createElement("div"),b=new Va(l,c,d);l.style.cssText="position:absolute;left:0;top:0;width:1px;height:1px";b._id=e||"";e&&(l.className="raphael-group-"+b.id+"-"+e);(d||c).canvas.appendChild(l);b.type="group";b.canvas=b.node;b.transform=a._engine.group.transform;b.top=null;b.bottom=null;return b};a._engine.group.transform=function(d){if(null==
d)return this._.transform;var l=this.node.style,b=this.clip,I=this.paper._viewBoxShift,h=I?"s"+[I.scale,I.scale]+"-1-1t"+[I.dx,I.dy]:"";I&&(d=c(d).replace(/\.{3}|\u2026/g,this._.transform||""));a._extractTransform(this,h+d);d=this.matrix;h=d.offset();I=e(h[0])||0;h=e(h[1])||0;l.left=I+"px";l.top=h+"px";l.zoom=(this._.tzoom=d.get(0))+"";b&&(l.clip=a.format("rect({1}px {2}px {3}px {0}px)",[b[0]-I,b[1]-h,b[2]-I,b[3]-h]));return this};a._engine.path=function(c,a,e){var d=A("shape");d.style.cssText="position:absolute;left:0;top:0;width:1px;height:1px";
d.coordsize="21600 21600";d.coordorigin=c.coordorigin;c=new Va(d,c,e);c.type=a.type||"path";c.path=[];c.Path="";a.type&&delete a.type;p(c,a);H(c,a);return c};a._engine.rect=function(c,e,d){var l=a._rectPath(e.x,e.y,e.w,e.h,e.r);e.path=l;e.type="rect";c=c.path(e,d);e=c.attrs;c.X=e.x;c.Y=e.y;c.W=e.width;c.H=e.height;e.path=l;return c};a._engine.ellipse=function(c,a,e){a.type="ellipse";c=c.path(a,e);a=c.attrs;c.X=a.x-a.rx;c.Y=a.y-a.ry;c.W=2*a.rx;c.H=2*a.ry;return c};a._engine.circle=function(c,a,e){a.type=
"circle";c=c.path(a,e);a=c.attrs;c.X=a.x-a.r;c.Y=a.y-a.r;c.W=c.H=2*a.r;return c};a._engine.image=function(c,e,d){var l=a._rectPath(e.x,e.y,e.w,e.h);e.path=l;e.type="image";e.stroke="none";c=c.path(e,d);d=c.attrs;var l=c.node,b=l.getElementsByTagName("fill")[0];d.src=e.src;c.X=d.x=e.x;c.Y=d.y=e.y;c.W=d.width=e.w;c.H=d.height=e.h;b.parentNode==l&&l.removeChild(b);b.rotate=!0;b.src=d.src;b.type="tile";c._.fillpos=[d.x,d.y];c._.fillsize=[d.w,d.h];l.appendChild(b);C(c,1,1,0,0,0);return c};a._engine.text=
function(e,d,b,I){var h=A("shape"),f=A("path"),k=A("textpath");x=d.x||0;y=d.y||0;text=d.text;f.v=a.format("m{0},{1}l{2},{1}",l(21600*d.x),l(21600*d.y),l(21600*d.x)+1);f.textpathok=!0;k.string=c(d.text).replace(/<br\s*?\/?>/ig,"\n");k.on=!0;h.style.cssText="position:absolute;left:0;top:0;width:1px;height:1px";h.coordsize="21600 21600";h.coordorigin="0 0";e=new Va(h,e,b);e.shape=h;e.path=f;e.textpath=k;e.type="text";e.attrs.text=c(d.text||"");e.attrs.x=d.x;e.attrs.y=d.y;e.attrs.w=1;e.attrs.h=1;I&&e.css&&
e.css(I,void 0,!0);p(e,d);H(e,d);h.appendChild(k);h.appendChild(f);return e};a._engine.setSize=function(c,e){var d=this.canvas.style;this.width=c;this.height=e;c==+c&&(c+="px");e==+e&&(e+="px");c&&(d.width=c);e&&(d.height=e);d.clip="rect(0 "+d.width+" "+d.height+" 0)";this._viewBox&&a._engine.setViewBox.apply(this,this._viewBox);return this};a._engine.setViewBox=function(c,a,e,d,l){g("raphael.setViewBox",this,this._viewBox,[c,a,e,d,l]);var I=this.width,h=this.height,f=1/b(e/I,d/h),k,M;l&&(k=h/d,M=
I/e,e*k<I&&(c-=(I-e*k)/2/k),d*M<h&&(a-=(h-d*M)/2/M));this._viewBox=[c,a,e,d,!!l];this._viewBoxShift={dx:-c,dy:-a,scale:f};this.forEach(function(c){c.transform("...")});return this};var A;a._engine.initWin=function(e){var d=e.document;d.createStyleSheet().addRule(".rvml","behavior:url(#default#VML)");try{!d.namespaces.rvml&&d.namespaces.add("rvml","urn:schemas-microsoft-com:vml"),A=a._createNode=function(a,e){var l=d.createElement("<rvml:"+a+' class="rvml">'),b;for(b in e)l[b]=c(e[b]);return l}}catch(l){A=
a._createNode=function(a,e){var l=d.createElement("<"+a+' xmlns="urn:schemas-microsoft.com:vml" class="rvml">'),b;for(b in e)l[b]=c(e[b]);return l}}};a._engine.initWin(a._g.win);a._engine.create=function(){var c=a._getContainer.apply(0,arguments),e=c.container,d=c.height,l=c.width,b=c.x,c=c.y;if(!e)throw Error("VML container not found.");var I=new a._Paper,h=I.canvas=a._g.doc.createElement("div"),f=h.style,b=b||0,c=c||0,l=l||512,d=d||342;I.width=l;I.height=d;l==+l&&(l+="px");d==+d&&(d+="px");I.coordsize=
"21600000 21600000";I.coordorigin="0 0";h.id="raphael-paper-"+I.id;I.span=a._g.doc.createElement("span");I.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;";h.appendChild(I.span);f.cssText=a.format("top:0;left:0;width:{0};height:{1};display:inline-block;cursor:default;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden",l,d);1==e?(a._g.doc.body.appendChild(h),f.left=b+"px",f.top=c+"px",f.position="absolute"):e.firstChild?e.insertBefore(h,e.firstChild):
e.appendChild(h);I.renderfix=function(){};return I};a.prototype.clear=function(){var c;for(g("raphael.clear",this);c=this.bottom;)c.remove();this.canvas.innerHTML="";this.span=a._g.doc.createElement("span");this.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";this.canvas.appendChild(this.span);this.bottom=this.top=null};a.prototype.remove=function(){var c;for(g("raphael.remove",this);c=this.bottom;)c.remove();this.canvas.parentNode.removeChild(this.canvas);
for(c in this)this[c]="function"==typeof this[c]?a._removedFactory(c):null;return!0};var Ra=a.st,O;for(O in d)d.hasOwnProperty(O)&&!Ra.hasOwnProperty(O)&&(Ra[O]=function(c){return function(){var a=arguments;return this.forEach(function(e){e[c].apply(e,a)})}}(O))}})();X&&(u.win.Raphael=a);return a},!0);b.Raphael=v;b.Raphael.desc="";G&&G!==v?z.Raphael=G:z.Raphael===v&&(z.Raphael=void 0)})(z||window)}]);N.register("module",["private","fusioncharts.redraphael.helper",function(){var b=this.hcLib,z=b.Raphael,
G={};z.fn._elementFromEvent=function(b){if(!b||this.removed)return null;var z=b.srcElement||b.target||(b=b.originalEvent)&&(b.srcElement||b.target)||G;"tspan"===z.nodeName&&(z=z.parentNode);return this.getById(z.raphaelid)};z.requestAnimFrame=b.schedular.addJob&&function(v){b.schedular.addJob(v,void 0,void 0,b.priorityList.animation)}}]);N.register("module",["private","fusioncharts.redraphael.css",function(){var b=this.hcLib,z=b.Raphael,G=z.eve,v=z._g,F=z.fn,E=z.el,t=/[, ]+/,a=/\B([A-Z]{1})/g,Q,r;
Q=function(a){this.styleSheet="";this.rules={};this.ns=a||""};r=Q.prototype;r.getSheet=function(){var a=this.node;this.styleSheet=r.getStyleSheet("fusioncharts-raphael-stylesheet");this.styleSheet||(a=this.node=v.doc.createElement("style"),a.setAttribute("id",z.format("raphael-stylesheet-{0}",z._oid++)),a.setAttribute("type","text/css"),a.setAttribute("title","fusioncharts-raphael-stylesheet"),(v.doc.head||v.doc.getElementsByTagName("head")[0]).appendChild(this.node),this.styleSheet=r.getStyleSheet("fusioncharts-raphael-stylesheet"));
return this.styleSheet};r.getStyleSheet=function(a){for(var b=v.doc.styleSheets,r=b.length,t;r--;)if(t=b[r],t.title===a)return t};r.applyCSSRule=function(a,b){var r=this.styleSheet,t;if(!r)if(a&&b)r=this.getSheet();else return;t=(r.rules||r.cssRules||{}).length||0;r.insertRule?r.insertRule(a+"{"+b+"}",t):r.addRule&&r.addRule(a,b,t)};r.removeCSS=function(a){var b=this.styleSheet,r=b.rules||b.cssRules||{},t=r.length||0,B;for(a=a||this.ns;t--;)B=r[t],(new RegExp(a)).test(B.selectorText)&&(b.removeRule?
b.removeRule(t):b.deleteRule(t))};r.destroy=function(){this.removeCSS();delete this.node;delete this.styleSheet;delete this.ns;delete this.rules};r.clear=function(){this.removeCSS();this.rules={}};r.add=function(b,r,t){var D,B="",m=this.rules[b]||(this.rules[b]={}),p=t?"":"\t";t=t?":":": ";for(D in r)(m[D]=r[D])&&(B+=p+D.replace(a,"-$1").toLowerCase()+t+m[D]+";");this.applyCSSRule(b,B)};r.render=function(){this.setCssText()};r.setCssText=function(b){var r=b?"":"\t";b=b?":":": ";var t="",D="",B,m;
for(B in this.rules){t="";D=B.replace(/(^|\,)/g,"$1"+this.ns+" ");B=this.rules[B];for(m in B)B[m]&&(t+=r+m.replace(a,"-$1").toLowerCase()+b+B[m]+";");this.applyCSSRule(D,t)}};G.on("raphael.new",function(){this._stylesheet=this._stylesheet||new Q;this.cssNamespace("")});G.on("raphael.remove",function(){this._stylesheet&&this._stylesheet.destroy();delete this._stylesheet});F.cssNamespace=function(a){arguments.length&&(this._stylesheet.ns=z.format("{0}#raphael-paper-{1}",a&&a+" "||"",this.id));return this._stylesheet.ns};
F.cssAddRule=function(a,b){if(1===arguments.length&&"object"===typeof a){for(var r in a)this.cssAddRule(r,a[r]);return this}return this._stylesheet.add(a,b),this};F.cssRender=function(){return z.svg&&this._stylesheet.render(),this};F.cssClear=function(){return this._stylesheet.clear(),this};z.ca["class"]=function(a){var b=this.node,r=this.paper,t="."+a,r=r._stylesheet&&r._stylesheet.rules,B=this.parent,m=this.attrs,p={},q;if(z.svg)a=a||"",b.setAttribute("class","group"===this.type&&this._id?"raphael-group-"+
this.id+"-"+this._id+" "+a:a);else if(z.vml&&(b.className="group"===this.type?a&&this._id+" "+a||this._id:"rvml "+a,t&&r)){a=r[t];for(q in a)"color"===q&&"text"===this.type&&(q="fill"),!m[q]&&(p[q]=a[q]);for(;B&&B.attr;){if(a=B.attr("class"))for(q in t="."+a+" "+t,a=r[t],a)"color"===q&&"text"===this.type&&(q="fill"),m[q]||p[q]||(p[q]=a[q]);B=B.parent}this.css(p)}};E.css=function(a,b,r){var D,B;if(this.removed)return this;this.styles||(this.styles={});if(null==b&&z.is(a,"string")){r=a.split(t);D={};
B=0;for(b=r.length;B<b;B++)a=r[B],a in this.styles&&(D[a]=this.styles[a]);return b-1?D:D[r[0]]}if(null==b&&z.is(a,"array")){D={};B=0;for(b=a.length;B<b;B++)D[a[B]]=this.styles(a[B]);return D}null!=b?(D={},D[a]=b):null!=a&&z.is(a,"object")&&(D=a);a={};for(B in D)b=B.replace(/\B([A-Z]{1})/g,"-$1").toLowerCase(),z._availableAttrs.hasOwnProperty(b)||"color"===b?("color"===b&&"text"===this.type&&(b="fill"),a[b]=D[B],a.dirty=!0):(G("raphael.css."+b+"."+this.id,this,D[B],b),this.node.style[b]=D[B],this.styles[b]=
D[B]);B=0;for(b=this.followers.length;B<b;B++)this.followers[B].el.attr(D);a.hasOwnProperty("dirty")&&(delete a.dirty,r&&(a["_do-not-tune"]=!0),this.attr(a));return this};E.removeCSS=function(a){var r,t,D;!a&&(a=b.appliedCSS);if(this.removed)return this;z.is(a,"string")&&(a=a.split(","));if(z.is(a,"array"))for(D=a.length,t=0;t<D;t++)r=a[t].replace(/\B([A-Z]{1})/g,"-$1").toLowerCase(),this.node.removeAttribute(r),this.node.style[r]="";return this}}]);N.register("module",["private","modules.renderer.js-raphaelexport",
function(){var b=this.hcLib,z=b.Raphael,G=b.pluckNumber,v=b.pluck,F=z._availableAttrs,E=/^matrix\(|\)$/g,t=/\,/g,a=/\n|<br\s*?\/?>/ig,Q=/[^\d\.]/ig,r=/[\%\(\)\s,\xb0#]/g,P=/group/ig,T=/&/g,L=/"/g,D=/'/g,B=/</g,m=/>/g,p=0;(function(b){var A=Math,n=parseFloat,k=A.max,g=A.abs,f=A.pow,S=String,C=/[, ]+/,Y=[{reg:/xmlns\=\"http\:\/\/www.w3.org\/2000\/svg\"/ig,repStr:""},{reg:/^.*<svg /,repStr:'<svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" '},{reg:/\/svg>.*$/,repStr:"/svg>"},
{reg:/<desc\>[^<]*<\/desc\>/,repStr:""},{reg:/zIndex="[^"]+"/g,repStr:""},{reg:/url\((\\?[\'\"])[^#]+#/g,repStr:"url($1#"},{reg:/ href=/g,repStr:" xlink:href="},{reg:/(id|class|width|height)=([^" >]+)/g,repStr:'$1="$2"'},{reg:/:(path|rect)/g,repStr:"$1"},{reg:/<ima?ge? ([^\>]+?[^\/])\>/gi,repStr:"<image $1 />"},{reg:/<\/ima?ge?\>/g,repStr:""},{reg:/style="([^"]+)"/g,repStr:function(a){return a.toLowerCase()}}],R={blur:function(){},transform:function(){},src:function(a,b){b.attrSTR+=' xlink:href="'+
b.attrs.src+'"'},path:function(a,f){var k=f.attrs.path,k=b._pathToAbsolute(k||"");f.attrSTR+=' d="'+(k.toString&&k.toString()||"").replace(t," ")+'"'},gradient:function(a,u,w){var m=a.attrs.gradient,h="linear",C,e,d,c=.5,l=.5,M=e="",J="",p,O,B,X;C=m.replace(r,"_");if(!w[C]){m=S(m).replace(b._radial_gradient,function(a,e){var d,b,k,g,M,J,w;e=e&&e.split(",")||[];h="radial";d=e[0];b=e[1];k=e[2];g=e[3];M=e[4];X=e[5];w=d&&b;k&&(B=/\%/.test(k)?k:n(k));if("userSpaceOnUse"===X)return w&&(c=d,l=b),g&&M&&(p=
g,O=M,w||(c=p,l=O)),"";w&&(c=n(d),l=n(b),d=2*(.5<l)-1,.25<(J=f(c-.5,2))+f(l-.5,2)&&.25>J&&(l=A.sqrt(.25-J)*d+.5)&&.5!==l&&(l=l.toFixed(5)-1E-5*d));g&&M&&(p=n(g),O=n(M),d=2*(.5<O)-1,.25<(J=f(p-.5,2))+f(O-.5,2)&&.25>J&&(O=A.sqrt(.25-J)*d+.5)&&.5!==O&&(O=O.toFixed(5)-1E-5*d),w||(c=p,l=O));return""});m=m.split(/\s*\-\s*/);if("linear"===h){e=m.shift();e=-n(e);if(isNaN(e))return null;d=[0,0,A.cos(b.rad(e)),A.sin(b.rad(e))];e=1/(k(g(d[2]),g(d[3]))||1);d[2]*=e;d[3]*=e;0>d[2]&&(d[0]=-d[2],d[2]=0);0>d[3]&&
(d[1]=-d[3],d[3]=0)}m=b._parseDots(m);if(!m)return null;"radial"===h?(e='<radialGradient fx = "'+c+'" fy = "'+l+'" cy = "'+O+'" cx = "'+p+'" r = "'+B+'" gradientUnits = "'+X+'" id = "'+C+'">',M="</radialGradient>"):(e='<linearGradient x1 = "'+d[0]+'" y1 = "'+d[1]+'" x2 = "'+d[2]+'" y2 = "'+d[3]+'" gradientTransform ="matrix('+a.matrix.invert()+')" id = "'+C+'">',M="</linearGradient>");a=0;for(d=m.length;a<d;a++)J+='<stop offset="'+(m[a].offset?m[a].offset:a?"100%":"0%")+'" stop-color="'+(m[a].color||
"#fff")+'" stop-opacity="'+(void 0===m[a].opacity?1:m[a].opacity)+'" />';w[C]=!0;w.str+=e+J+M}u.attrSTR+=" fill=\"url('#"+C+"')\""},fill:function(a,f){var k=f.attrs,g=k.fill,h;a.attrs.gradient||(g=b.color(g),h=g.opacity,"text"===a.type?f.styleSTR+="fill:"+g+"; stroke-opacity:0; ":(f.attrSTR+=' fill="'+g+'"',k["fill-opacity"]||!h&&0!==h||(f.attrSTR+=' fill-opacity="'+h+'"')))},stroke:function(a,f){var k=f.attrs,g,h;g=b.color(k.stroke);h=g.opacity;"text"!==a.type&&(f.attrSTR+=' stroke="'+g+'"',k["stroke-opacity"]||
!h&&0!==h||(f.attrSTR+=' stroke-opacity="'+h+'"'))},"clip-rect":function(a,b,f){var k=S(b.attrs["clip-rect"]),h=k.split(C),k=k.replace(r,"_")+"__"+p++;4===h.length&&(f[k]||(f[k]=!0,f.str+='<clipPath id="'+k+'"><rect x="'+h[0]+'" y="'+h[1]+'" width="'+h[2]+'" height="'+h[3]+'" transform="matrix('+a.matrix.invert().toMatrixString().replace(E,"")+')"/></clipPath>'),b.attrSTR+=' clip-path="url(#'+k+')"')},cursor:function(a,b){var f=b.attrs.cursor;f&&(b.styleSTR+="cursor:"+f+"; ")},font:function(a,b){b.styleSTR+=
"font:"+b.attrs.font.replace(/\"/ig," ")+"; "},"font-size":function(a,b){var f=v(b.attrs["font-size"],"10");f&&f.replace&&(f=f.replace(Q,""));b.styleSTR+="font-size:"+f+"px; "},"font-weight":function(a,b){b.styleSTR+="font-weight:"+b.attrs["font-weight"]+"; "},"font-family":function(a,b){b.styleSTR+="font-family:"+b.attrs["font-family"]+"; "},"line-height":function(){},"clip-path":function(){},visibility:function(){},"vertical-align":function(){},"text-anchor":function(a,b){var f=b.attrs["text-anchor"]||
"middle";"text"===a.type&&(b.attrSTR+=' text-anchor="'+f+'"')},title:function(){},text:function(b,f){var k=f.attrs,g=k.text,h=v(k["font-size"],k.font,"10"),u=v(k["line-height"]),e,d,c;h&&h.replace&&(h=h.replace(Q,""));h=G(h);u&&u.replace&&(u=u.replace(Q,""));u=G(u,h&&1.2*h);e=h?.85*h:.75*u;h=k.x;d=v(k["vertical-align"],"middle").toLowerCase();g=S(g).split(a);c=g.length;k=0;for(e="top"===d?e:"bottom"===d?e-u*c:e-u*c*.5;k<c;k++)f.textSTR+="<tspan ",d=(g[k]||"").replace(T,"&amp;").replace(L,"&quot;").replace(D,
"&#39;").replace(B,"&lt;").replace(m,"&gt;"),f.textSTR=k?f.textSTR+('dy="'+u+'" x="'+h+'" '):f.textSTR+('dy="'+e+'"'),f.textSTR+=">"+d+"</tspan>"}},u=function(a,b){var f="",k={attrSTR:"",styleSTR:"",textSTR:"",attrs:a.attr()},h=a.isShadow,g="",e="",d,c,l=k.attrs;if("none"===a.node.style.display||h)a.next&&(f+=u(a.next,b));else{for(d in l)if("gradient"!==d&&(void 0!==F[d]||R[d])&&void 0!==l[d])if(R[d])R[d](a,k,b);else k.attrSTR+=" "+d+'="'+l[d]+'"';a.attrs.gradient&&R.gradient(a,k,b);"rect"===a.type&&
l.r&&(k.attrSTR+=' rx="'+l.r+'" ry="'+l.r+'"');for(c in a.styles)k.styleSTR+=c+":"+a.styles[c]+"; ";"image"===a.type&&(k.attrSTR+=' preserveAspectRatio="none"');if("text"===a.type&&!l["text-anchor"])R["text-anchor"](a,k);a.bottom&&(g=u(a.bottom,b));a.next&&(e=u(a.next,b));h=a.type;h.match(P)&&(h="g");f+="<"+h+' transform="matrix('+a.matrix.toMatrixString().replace(E,"")+')" style="'+k.styleSTR+'"'+k.attrSTR+">"+k.textSTR+g+"</"+h+">"+e}return f},X=function(a){a=JSON.stringify(a);a=a.replace(/([a-z]+)([A-Z]+)([a-z]+)/g,
function(a,b,f,h){return b+"-"+f.toLowerCase()+h});a=a.replace(/\"\,\"/g,'";"');a=a.replace(/\"/g," ");return a=a=a.replace(/\{|\}/g,"")},O=function(a,b){var f,k,h,g,e,d=function(c){return c=c.match(/style\s*=/)?c.replace(/(style\s*=")([^"]+)/g,function(c,a,e){return a+h+e}):c.replace(/class\s*="[^"]*"/i,function(c){return c+' style="'+h+'" '})};for(f in b)if(b.hasOwnProperty(f))for(e in k=/\s+/,k=f.split(k),h=X(b[f]),k)k.hasOwnProperty(e)&&(g=k[e].trim().replace(".",""),g=new RegExp("<[^>]+("+g+
")[^>]+","g"),a=a.replace(g,d));return a};b.fn.toSVG=function(a){var f="",k={str:""},g=0,h=Y.length,n="";if(b.svg){if(this.canvas&&this.canvas.parentNode){for(f=this.canvas.parentNode.innerHTML;g<h;g+=1)k=Y[g],f=f.replace(k.reg,k.repStr);this._stylesheet&&this._stylesheet.rules&&(f=O(f,this._stylesheet.rules))}a||(f=f.replace(/<image[^\>]*\>/gi,function(a){return a.match(/href=\"data\:image/i)?a:""}))}else f='<svg style="overflow: hidden; position: relative;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="'+
this.width+'" version="1.1" height="'+this.height+'">',this.bottom&&(n=u(this.bottom,k)),f+="<defs>"+k.str+"</defs>"+n+"</svg>",a||(f=f.replace(/<image[^\>]*\>[^\>]*\>/gi,function(a){return a.match(/href=\"data\:image/i)?a:""}));return f}})(z)}]);N.register("module",["private","modules.renderer.js-raphaelshadow",function(){var b=this.window,z=Math.sqrt,G=b.parseFloat,v=b.parseInt,b=b.SVGFilterElement||b.SVGFEColorMatrixElement&&2===b.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_SATURATE,F=this.hcLib.Raphael,
E={"drop-shadow":"drop-shadow",stroke:"stroke",fill:"fill","stroke-width":"stroke-width","stroke-opacity":"stroke-opacity","stroke-linecap":"stroke-linecap","stroke-linejoin":"stroke-linejoin","shape-rendering":"shape-rendering",transform:"transform"},t=F._createNode,a;F.svg?(b&&(F.el.dropshadow=function(a,b,v,E){var L=this.node,D=this._.shadowFilter,B=this.paper.cacheShadows||(this.paper.cacheShadows={}),m="drop-shadow"+[a,b,v,E].join(" "),p;if("none"===a){if(D){--D.use;this.node.removeAttribute("filter");
if(!D.use){m=D.hash;for(p in D)a=D[p],a.parentNode&&a.parentNode.removeChild(a),delete D[p];delete B[m]}delete this._.shadowFilter}}else D&&B[m]===D||(D=this.paper.defs.appendChild(t("filter",{id:F.getElementID(F.createUUID()),width:"200%",height:"200%"})),E=F.color(E),E.error&&(E=F.color("rgba(0,0,0,1)")),p=F.pick(E.opacity,1),this._.shadowFilter=B[m]={use:1,filter:D,hash:m,offset:D.appendChild(t("feOffset",{result:"offOut","in":"SourceGraphic",dx:G(a),dy:G(b)})),matrix:D.appendChild(t("feColorMatrix",
{result:"matrixOut","in":"offOut",type:"matrix",values:"0 0 0 0 "+E.r/255+" 0 0 0 0 "+E.g/255+" 0 0 0 0 "+E.b/255+" 0 0 0 "+p+" 0"})),blur:D.appendChild(t("feGaussianBlur",{result:"blurOut","in":"matrixOut",stdDeviation:z(G(v))})),blend:D.appendChild(t("feComposite",{"in":"SourceGraphic",in2:"blurOut",operator:"over"}))},L.setAttribute("filter",'url("'+F._url+"#"+D.id+'")'));return this}),a=function(a,b){var t=this.__shadowscale,v={},z,D;for(D in a)switch(E[D]&&(v[D]=a[D],delete a[D]),D){case "transform":z=
b.matrix.clone();z.translate(this.__shadowx,this.__shadowy);this.transform(z.toTransformString());break;case "stroke-width":a[D]=((v[D]||1)+6-2*this.__shadowlevel)*t}this.attr(a);for(D in v)a[D]=v[D]},F.ca["drop-shadow"]=function(b,r,t,z,L,D){t=this._.shadows||(this._.shadows=[]);var B,m,p,q,A;if(!this.__shadowblocked)if("none"===b)for(;m=t.pop();)m.remove();else for(z=F.color(z),z.error&&(z=F.color("rgba(0,0,0,1)")),L instanceof Array?(B=L[0],L=L[1]):B=L,B=1/F.pick(B,1),L=1/F.pick(L,1),b=F.pick(b,
1)*B,r=F.pick(r,1)*B,B=.05*F.pick(z.opacity,1),p=v(this.attr("stroke-width")||1,10)+6,q=this.matrix.clone(),q.translate(b,r),A=1;3>=A;A++)m=(t[A-1]||this.clone().follow(this,a,!D&&"before")).attr({stroke:z.hex,"stroke-opacity":B*A,"stroke-width":(p-2*A)*L,transform:q.toTransformString(),"stroke-linecap":"round","stroke-linejoin":"round",fill:"none"}),m.__shadowlevel=A,m.__shadowscale=L,m.__shadowx=b,m.__shadowy=r,D&&D.appendChild(m),t.push(m);return!1},F.el.shadow=function(a,b,t,v){var z;t&&t.constructor===
F.el.constructor&&(v=t,t=void 0);"object"===typeof a&&(b&&b.constructor===F.el.constructor&&(v=b),b=a.opacity,t=a.scalefactor,z=!!a.useFilter,a=void 0===a.apply?!!b:a.apply);void 0===b&&(b=1);if(this.dropshadow){if(z)return a&&this.dropshadow(1,1,3,"rgb(64,64,64)")||this.dropshadow("none"),this;this._.shadowFilter&&this.dropshadow("none")}return this.attr("drop-shadow",a?[1,1,3,"rgba(64,64,64,"+b+")",t,v]:"none")}):F.vml?(F.ca["drop-shadow"]=function(a,b,t,v,z,D){var B=this._.shadow,m,p;if(this.isShadow)return!1;
"none"===a?B&&(this._.shadow=B.remove()):(B||(B=this._.shadow=this.clone(),D&&D.appendChild(B.follow(this))||B.follow(this,void 0,"before"),B.attr({fill:"none","fill-opacity":.5,"stroke-opacity":1}).isShadow=!0,0>=B.attr("stroke-width")&&B.attr("stroke-width",1)),D=B.node.runtimeStyle,m=D.filter.replace(/ progid:\S+Blur\([^\)]+\)/g,""),v=F.color(v),v.error&&(v=F.color("rgba(0,0,0,1)")),p=F.pick(v.opacity,1)/5,z=1/F.pick(z,1),a=F.pick(a,1)*z,b=F.pick(b,1)*z,B.translate(a,b),D.filter=m+" progid:DXImageTransform.Microsoft.Blur(pixelRadius="+
G(.4*t)+" makeShadow=True Color="+v.hex+' shadowOpacity="'+p+'");');return!1},F.el.shadow=function(a,b,t,v){t&&t.constructor===F.el.constructor&&(v=t,t=void 0);"object"===typeof a&&(b&&"group"===b.type&&(v=b),b=a.opacity,t=a.scalefactor,a=void 0===a.apply?!!b:a.apply);void 0===b&&(b=1);return this.attr("drop-shadow",a||!b?[1,1,5,"rgba(64,64,64,"+b+")",t,v]:"none")}):F.canvas&&(F.el.shadow=function(){return this})}]);N.register("module",["private","modules.renderer.js-raphaelshapes",function(){var b=
this.window,z="createTouch"in b.document,G=/msie/i.test(b.navigator.userAgent)&&!b.opera,v=Math,F=v.cos,E=v.sin,t=v.abs,a=v.pow,Q=v.atan2,r=v.tan,P=v.acos,T=v.min,L=v.round,D=v.PI,B=v.sqrt,m=2*D,p=b.parseInt,q=b.parseFloat,A=String,n=Array.prototype.slice,k=a(2,-24),g="rgba(192,192,192,"+(G?.002:1E-6)+")",f=this.hcLib.Raphael,S=f.eve,C=f._createNode,Y=f._setFillAndStroke,R=f.el.constructor,u={speed:"optimizeSpeed",crisp:"crispEdges",precision:"geometricPrecision"},X={enabled:!1,"false":!1,0:!1,disabled:!0,
"true":!0,1:!0},O={Q:"L",Z:"X",q:"l",z:"x",",":" "},W=/,?([achlmqrstvxz]),?/gi,H=/\s*\,\s*/g,w,K=function(){return this.join(",").replace(W,w)},h,V,e=f._cacher(function(c,e,d,b){return B(a(d-c,2)+a(b-e,2))}),d=f._cacher(function(c,a,d,b,h){var f=d-c,k=b-a;d=e(c,a,d,b);return{x:c+f/d*h,y:a+k/d*h}});if(f.svg)S.on("raphael.attr.shape-rendering",function(c,a){var e=this.node;this.attrs[a]=c=u[c]||c||"auto";e.setAttribute(a,c);e.style.shapeRendering=c});else if(f.vml)S.on("raphael.attr.shape-rendering",
function(c){this.node.style.antialias="crisp"!==c});f.define&&f.define([{name:"polypath",polypath:function(){return this.path(void 0,f._lastArgIfGroup(arguments))},ca:{polypath:function(c,a,e,d,b,h){var k,g,u;k=[];c=p(c,10)||0;a=q(a)||0;e=q(e)||0;d=q(d)||0;b=null===b||isNaN(b)?.5*D:f.rad(b);h=null===h||isNaN(h)?0:q(h);g=b;if(2<c)switch(b=2*D/c,h){case 0:for(h=0;h<c;h++)k.push("L",a+d*F(-g),e+d*E(-g)),g+=b;k[0]="M";k.push("Z");break;case 1:for(h=0;h<c;h++)k.push("M",a,e,"L",a+d*F(-g),e+d*E(-g)),g+=
b;break;default:b*=.5;u=d*F(b)*(1-h);for(h=0;h<c;h++)k.push("L",a+d*F(-g),e+d*E(-g)),g+=b,k.push("L",a+u*F(-g),e+u*E(-g)),g+=b;k[0]="M";k.push("Z")}else 0===d?k.push("M",a,e,"L",a,e,"Z"):k.push("M",a-d,e,"A",d,d,0,0,0,a+d,e,"A",d,d,0,0,0,a-d,e,"Z");return{path:k}},r:function(c){var a=this.attrs.polypath;a[3]=c;this.attr("polypath",a);return!1}}},{name:"ringpath",ringpath:function(){return this.path(void 0,f._lastArgIfGroup(arguments))},ca:function(c,a,e,d,b,h){var f=h%m-b%m,g=h-b,u,w,n,C,p,q;this._.ringangle=
.5*(b+h);t(g)<k?(u=F(b),g=E(b),e=["M",c+e*u,a+e*g,"L",c+d*u,a+d*g,"Z"]):(t(g)>k&&+(t(g)%m<k||m-t(g)%m<k)?(e=["M",c-e,a,"A",e,e,0,0,0,c+e,a,"A",e,e,0,0,0,c-e,a],0!==d&&(e=e.concat(["M",c-d,a,"A",d,d,0,0,1,c+d,a,"A",d,d,0,0,1,c-d,a]))):(u=F(b),g=E(b),w=F(h),h=E(h),f%=m,0>f&&(f+=m),f=f<D?0:1,n=c+e*u,p=a+e*g,C=c+e*w,q=a+e*h,w=c+d*w,h=a+d*h,.01>t(n-C)&&.01>t(p-q)&&(n=c+e*F(b+1.745329E-4),p=a+e*E(b+1.745329E-4)),e=["M",n,p,"A",e,e,0,f,1,C,q,"L",w,h],0!==d&&(u=c+d*u,g=a+d*g,.01>t(w-u)&&.01>t(h-g)&&(u=c+
d*F(b+1.745329E-4),g=a+d*E(b+1.745329E-4)),e.push("A",d,d,0,f,0,u,g))),e.push("Z"));return{path:e}}},{name:"cubepath",cubepath:function(){var c={"stroke-linejoin":"round","shape-rendering":"precision",stroke:"none"},a=arguments,e=a.length-1,d=a[e],b,h;d&&d.constructor===f.el.constructor?a[e]=void 0:d=void 0;e=this.path(c,d);b=this.path(c,d);c=this.path(c,d);c._.cubetop=e.follow(c,void 0,"before");c._.cubeside=b.follow(c,void 0,"before");for(h in f.fn.cubepath.ca)c.ca[h]=f.fn.cubepath.ca[h];return c.attr("cubepath",
[a[0],a[1],a[2],a[3],a[4],a[5]])},fn:{_getBBox2:function(){var c=this._.cubeside.getBBox(),a=this._.cubetop.getBBox(),e=this.getBBox();return{x:e.x+a.height,y:e.y-c.width,width:e.width,height:e.height}}},ca:{cubepath:function(c,a,e,d,b,h){var f=this._.cubetop,k=this._.cubeside;c=c||0;a=a||0;e=e||0;d=d||0;b=b||0;h=h||0;this.attr("path",["M",c+e,a,"l",0,d,-e,0,0,-d,"z"]);f.attr("path",["M",c,a,"l",1,1,e-1,0,0,-1,b,-h,-e,0,"z"]);k.attr("path",["M",c+e-1,a+1,"l",0,d-1,1,0,b,-h,0,-d,-b,h]);return!1},"stroke-linejoin":function(){return{"stroke-linejoin":"round"}},
"drop-shadow":function(c,a,e,d){var b=this._.cubetop,h=this._.cubeside;this.dropshadow&&(b.dropshadow(c,-a,e,d),h.dropshadow(c,-a,e,d));return!1},fill:function(c,a){var e=this._.cubetop,d=this._.cubeside,b=this.attr("cubepath")||[0,0,0,0,0,0],h=b[2],k=b[4],b=b[5],g;c=f.color(c);a?(this.attr("fill",c),e.attr("fill",f.tintshade(c,-.78).rgba),d.attr("fill",f.tintshade(c,-.65).rgba)):(g="opacity"in c?"rgba("+[c.r,c.g,c.b,c.opacity]+")":"rgb("+[c.r,c.g,c.b]+")",this.attr("fill",[270,f.tintshade(g,.55).rgba,
f.tintshade(g,-.65).rgba].join("-")),d.attr("fill",[270,f.tintshade(g,-.75).rgba,f.tintshade(g,-.35).rgba].join("-")),e.attr("fill",[45+f.deg(Q(b,k+h)),f.tintshade(g,-.78).rgba,f.tintshade(g,.22).rgba].join("-")));return!1}}},{name:"arcpath",arcpath:function(){return this.path(void 0,f._lastArgIfGroup(arguments))},ca:function(c,a,e,d){var b=(d-90)/180*Math.PI;return{path:["M",c,a-e,"A",e,e,0,180<d?1:0,1,c+e*Math.cos(b),a+e*Math.sin(b)]}}},{name:"scroller",scroller:function(c,a,e,d,b,h,k){var g=this.group("scroller",
k),u=g.attrs,w=g._.scroller={};b=b&&"horizontal"||"vertical";var n,m={},C,p,H;w.track=this.rect(g).mousedown(function(c){var a=u["scroll-position"];c="horizontal"===u["scroll-orientation"]?c.layerX||c.x:c.layerY||c.y;c=(c-w.anchorOffset)/w.trackLength;n=f.animation({"scroll-position":c},2E3*t(a-c),"easeIn");g.animate(n);S("raphael.scroll.start."+g.id,g,a)}).mouseup(w._mouseupTrack=function(){this.stop(n);S("raphael.scroll.end."+this.id,this,u["scroll-position"])},g,!0);w.anchor=this.rect(g).drag(function(){m["scroll-position"]=
C+arguments[p]/w.trackLength;g.animate(m,0)},function(c,a,e){p="horizontal"===u["scroll-orientation"]?0:1;S("raphael.scroll.start."+g.id,g,C=u["scroll-position"]);e.stopPropagation()},function(){S("raphael.scroll.end."+g.id,g,C=u["scroll-position"])});for(H in f.fn.scroller.fn)g[H]=f.fn.scroller.fn[H];for(H in f.fn.scroller.ca)g.ca[H]=f.fn.scroller.ca[H];u["scroll-orientation"]=b;u["stroke-width"]=1;g.ca["scroll-repaint"]=g.ca["scroll-repaint-"+b];!f.is(h,"object")&&(h={});return g.attr({ishot:!0,
"scroll-display-buttons":h.showButtons&&"arrow"||"none","scroll-display-style":h.displayStyleFlat&&"flat"||"3d","scroll-ratio":q(h.scrollRatio)||1,"scroll-position":q(h.scrollPosition)||0,"scroll-repaint":[c,a,e,d]})},fn:{scroll:function(c,a){var e=this._.scroller;a=a||this;e.callback=function(){return c.apply(a,arguments)};return this},remove:function(){var c=this._.scroller,a;this.attr("scroll-display-buttons","none");c.track.unmouseup(c._mouseupTrack);for(a in c)c[a]&&c[a].remove&&c[a].remove(),
c[a]=null;delete this._.scroller;f.el.remove.apply(this,arguments)}},ca:{"stroke-width":function(){return!1},"drop-shadow":function(c,a,e,d,b,h){this._.scroller.track.attr("drop-shadow",[c,a,e,d,b,h]);return!1},"scroll-display-style":function(c){var a=this.attrs,e=a["scroll-display-style"],d=a.fill;c={flat:"flat","3d":"3d",transparent:"transparent"}[c]||e;d&&c!==e&&(a["scroll-display-style"]=c,this.attr("fill",d));return{"scroll-display-style":c}},"scroll-display-buttons":function(c){var a=this,e=
a.paper,d=a._.scroller,b=a.attrs,h=b["scroll-display-buttons"],k=b["scroll-repaint"],g,u;void 0===h&&(h="none");c={none:"none",arrow:"arrow"}[c]||h;c!==h&&(b["scroll-display-buttons"]=c,"none"===c&&d.start?(d.arrowstart.remove(),delete d.arrowstart,d.arrowend.remove(),delete d.arrowend,d.start.unmouseup(d._mouseupStart),d.start.remove(),delete d.start,d.end.unmouseup(d._mouseupEnd),d.end.remove(),delete d.end):(d.arrowstart=e.polypath(a),d.arrowend=e.polypath(a),d.start=e.rect(a).mousedown(function(){var c;
0!==(c=b["scroll-position"])&&(a.animate({"scroll-position":c-.1},100).animate(g=f.animation({"scroll-position":0},4500*c,"easeIn")),S("raphael.scroll.start."+a.id,a,c))}).mouseup(d._mouseupStart=function(){a.stop(g);S("raphael.scroll.end."+a.id,a,b["scroll-position"])},a,!0),d.end=e.rect(a).mousedown(function(){var c;1!==(c=b["scroll-position"])&&(a.animate({"scroll-position":c+.1},100).animate(u=f.animation({"scroll-position":1},4500*(1-c),"easeIn")),S("raphael.scroll.start."+a.id,a,c))}).mouseup(d._mouseupEnd=
function(){a.stop(u);S("raphael.scroll.end."+a.id,a,b["scroll-position"])},a,!0),b.fill&&a.attr("fill",b.fill)),k&&a.attr("scroll-repaint",k));return{"scroll-display-buttons":c}},"scroll-orientation":function(c){var a=this.attrs,e=a["scroll-repaint"],d=a["scroll-orientation"];c={horizontal:"horizontal",vertical:"vertical"}[c]||d;d!==c&&(this.ca["scroll-repaint"]=this.ca["scroll-repaint-"+c],e&&(e[2]+=e[3],e[3]=e[2]-e[3],e[2]-=e[3],this.attr("scroll-repaint",e)),a.fill&&this.attr("fill",a.fill));return{"scroll-orientation":c}},
"scroll-ratio":function(c){var a=this.attrs,e=a["scroll-ratio"],d=a["scroll-repaint"];c=1<c?1:.01>c?.01:q(c);d&&c!==e&&(a["scroll-ratio"]=c,this.attr("scroll-repaint",d));return{"scroll-ratio":c}},"scroll-position":function(c,a){var e=this.attrs,d="horizontal"===e["scroll-orientation"],b=e["scroll-repaint"],h=e["scroll-position"],f=this._.scroller,k=f.anchor;c=1<c?1:0>c?0:q(c);isNaN(c)&&(c=h);b&&(h!==c||a)&&(h=f.start&&f.start.attr(d&&"width"||"height")||0,d&&k.attr("x",b[0]+h+(b[2]-2*h-k.attr("width"))*
c+.5)||k.attr("y",b[1]+h+(b[3]-2*h-k.attr("height"))*c+.5),!a&&1>e["scroll-ratio"]&&(S("raphael.scroll.change."+this.id,this,c),f.callback&&f.callback(c)));return{"scroll-position":c}},r:function(c){var a=this._.scroller;a.track.attr("r",c);a.anchor.attr("r","none"===this.attrs["scroll-display-buttons"]&&c||0);return!1},"scroll-repaint-horizontal":function(c,a,e,d){var b=this.attrs,h=this._.scroller,f=b["scroll-ratio"],k=b["scroll-position"],g=0,u=e*f,b="none"===b["scroll-display-buttons"];e&&--e;
c&&(c+=.5);d&&--d;a&&(a+=.5);h.track.attr({width:e,height:d,y:a,x:c}).crisp();b||(g=T(d,.5*e),u-=2*g*f,h.start.attr({width:g,height:d,x:c,y:a}),h.arrowstart.attr("polypath",[3,c+.5*g,a+.5*d,.25*g,180]),h.end.attr({width:g,height:d,x:c+e-g,y:a}),h.arrowend.attr("polypath",[3,c+e-.5*g,a+.5*g,.25*g,0]));h.trackLength=e-2*g-u;h.trackOffset=c+g+.5;h.anchorOffset=h.trackOffset+.5*(u-1);h.anchor.attr({height:d,width:u-1,y:a,x:h.trackOffset+h.trackLength*k}).crisp()},"scroll-repaint-vertical":function(c,
a,e,d){var b=this.attrs,h=this._.scroller,f=b["scroll-ratio"],k=b["scroll-position"],g=0,u=d*f,b="none"===b["scroll-display-buttons"];e&&--e;c&&(c+=.5);d&&--d;a&&(a+=.5);h.track.attr({width:e,height:d,y:a,x:c}).crisp();b||(g=T(e,.5*d),u-=2*g*f,h.start.attr({width:e,height:g,x:c,y:a}),h.arrowstart.attr("polypath",[3,c+.5*e,a+.5*g,.25*g,90]),h.end.attr({width:e,height:g,x:c,y:a+d-g}),h.arrowend.attr("polypath",[3,c+.5*e,a+d-.5*g,.25*g,-90]));h.trackLength=d-2*g-u;h.trackOffset=a+g+.5;h.anchorOffset=
h.trackOffset+.5*(u-1);h.anchor.attr({height:0>u-1?0:u-1,width:e,y:h.trackOffset+h.trackLength*k,x:c}).crisp()},fill:function(c){var a=this.attrs,e=this._.scroller,d=a["scroll-repaint"],b="flat"===a["scroll-display-style"],h="horizontal"===a["scroll-orientation"],k={stroke:"none"},u;z&&d&&3<(u=16-d[h&&3||2])&&(k.stroke=g,k["stroke-width"]=u);c=f.color(c);c.error&&(c=f.color("#000000"));c="opacity"in c?"rgba("+[c.r,c.g,c.b,c.opacity]+")":"rgb("+[c.r,c.g,c.b]+")";k.fill=b&&c||[90*h,f.tintshade(c,.15).rgba,
c].join("-");k.stroke=f.tintshade(c,-.75).rgba;e.track.attr(k);k.fill=b&&f.tintshade(c,-.6).rgba||[270*h,f.tintshade(c,.3).rgba+":40",f.tintshade(c,-.7).rgba].join("-");k.stroke=f.tintshade(c,-.6).rgba;e.anchor.attr(k);k.stroke="none";"none"!==a["scroll-display-buttons"]&&(k.fill=g,e.start.attr(k),e.end.attr(k),k.fill=f.tintshade(c,-.4).rgba,e.arrowstart.attr(k),e.arrowend.attr(k));return!1}}},{name:"button",button:function(c,a,e,d,b,h){h=this.group("button",h);var k;h._.button={bound:this.rect(h),
tracker:this.rect(h).attr({fill:g,stroke:g,cursor:"pointer"}).data("compositeButton",h)};!f.is(b,"object")&&(b={});for(k in f.fn.button.fn)h[k]=f.fn.button.fn[k];for(k in f.fn.button.ca)h.ca[k]=f.fn.button.ca[k];return h.attr({ishot:!0,"button-padding":[b.horizontalPadding,b.verticalPadding],"button-label":e,"button-symbol":d,"button-disabled":b.disabled||"false","button-symbol-position":b.symbolPosition,"button-symbol-padding":b.symbolPadding}).attr("button-repaint",[c,a,b.width,b.height,b.r])},
data:{hoverin:function(){var c=this._.button,a=c.hoverbackIn,e=this._hover||{};e.fill||e.stroke||e["stroke-width"]||e.cursor?(e.fill&&this.bottom.attr("fill",e.fill)&&c.symbol.attr("fill",e.fill),e.stroke&&this.bottom.attr("stroke",e.stroke)&&c.symbol.attr("stroke",e.stroke),e["stroke-width"]&&this.bottom.attr("stroke-width",e["stroke-width"])&&c.symbol.attr("stroke-width",e["stroke-width"]),e.cursor&&c.tracker.attr("cursor",e.cursor),a&&a()):a&&!1===a(arguments)||this.attr("fill","hover");this.hovered=
!0},hoverout:function(){var c=this._.button,a=c.hoverbackOut,e=this._normal||{};e.fill||e.stroke||e["stroke-width"]||e.cursor?(e.fill&&this.bottom.attr("fill",e.fill)&&c.symbol.attr("fill",e.fill),e.stroke&&this.bottom.attr("stroke",e.stroke)&&c.symbol.attr("stroke",e.stroke),e["stroke-width"]&&this.bottom.attr("stroke-width",e["stroke-width"])&&c.symbol.attr("stroke-width",e["stroke-width"]),e.cursor&&c.tracker.attr("cursor",e.cursor),a&&a()):a&&!1===a(arguments)||this.attr("fill",(this.pressed||
this.active)&&"active"||"normal");this.hovered=!1},mousedown:function(){var c=this._.button,a=this._pressed||{};a.fill||a.stroke||a["stroke-width"]||a.cursor?(a.fill&&this.bottom.attr("fill",a.fill)&&c.symbol.attr("fill",a.fill),a.stroke&&this.bottom.attr("stroke",a.stroke)&&c.symbol.attr("stroke",a.stroke),a["stroke-width"]&&this.bottom.attr("stroke-width",a["stroke-width"])&&c.symbol.attr("stroke-width",a["stroke-width"]),a.cursor&&c.tracker.attr("cursor",a.cursor)):this.attr("fill","active");this.pressed=
!0},mouseup:function(){var a=this._.button,e=a.callback,d=this._normal||{};d.fill||d.stroke||d["stroke-width"]||d.cursor?(d.fill&&this.bottom.attr("fill",d.fill)&&a.symbol.attr("fill",d.fill),d.stroke&&this.bottom.attr("stroke",d.stroke)&&a.symbol.attr("stroke",d.stroke),d["stroke-width"]&&this.bottom.attr("stroke-width",d["stroke-width"])&&a.symbol.attr("stroke-width",d["stroke-width"]),d.cursor&&a.tracker.attr("cursor",d.cursor)):this.attr("fill",this.hovered&&"hover"||this.active&&"active"||"normal");
this.pressed=!1;e&&e(arguments)},mousemove:function(){var a=this._.button.mousemove;a&&a(arguments)}},fn:{tooltip:function(){f.el.tooltip&&f.el.tooltip.apply(this._.button.tracker,arguments);return this},buttonclick:function(a,e){var d=this._.button;e=e||this;d.callback=function(){return a.apply(e,arguments)};return this},labelcss:function(){var a=this._.button,e=a.label;a.cssArg=arguments;e&&e.css.apply(e,arguments);return this.attr("button-repaint",this.attrs["button-repaint"])},buttonhover:function(a,
e,d,b,h,f){var k=this._.button;d=d||this;b=b||this;f=f||this;h&&(k.mousemove=function(){return h.apply(f,arguments)});k.hoverbackIn=function(){return a.apply(d,arguments)};k.hoverbackOut=function(){return e.apply(b,arguments)};return this},remove:function(){var a=this._.button,e;this.attr("button-disabled","true");for(e in a)a[e]&&a[e].remove&&a[e].remove(),a[e]=null;delete this._.button;f.el.remove.apply(this,arguments)}},ca:{"button-active":function(a){this.attr("fill",(this.active=!!a)?"active":
this.hovered&&"hover"||"normal")},"button-disabled":function(a){var e=this._.button,d=e.tracker,b=this.attrs["button-disabled"],h=this.paper.button.data,f=this._disabled||{};a=X[a];b=X[b];if(void 0!==a&&a!==b)switch(a){case !0:f.fill||f.stroke||f["stroke-width"]||f.cursor?(f.fill&&this.bottom.attr("fill",f.fill)&&e.symbol.attr("fill",f.fill),f.stroke&&this.bottom.attr("stroke",f.stroke)&&e.symbol.attr("stroke",f.stroke),f["stroke-width"]&&this.bottom.attr("stroke-width",f["stroke-width"]&&e.symbol.attr("fill",
f.fill)),f.cursor&&e.tracker.attr("cursor",f.cursor)):d.attr("fill","rgba(204,204,205,.5)");d.unmousedown(h.mousedown).unmouseup(h.mouseup).unhover(h.hoverin,h.hoverout).unmousemove(h.mousemove);break;case !1:d.attr("fill",g).mousedown(h.mousedown,this).mouseup(h.mouseup,this,!0).hover(h.hoverin,h.hoverout,this,this).mousemove(h.mousemove,this)}},"button-label":function(a){var e=this._.button,d=this.attrs,b=e.label,h=e.cssArg,f=this.attrs["button-repaint"];a=A(a||"");"none"===a?b&&(e.label=b.remove()):
a&&(!b&&(b=e.label=this.paper.text(this).insertBefore(e.tracker)),b.attr({text:a,"text-anchor":"middle","vertical-align":"middle"}),h&&h.length&&b.css.apply(b,h));f&&d["button-label"]!==a&&this.attr("button-repaint",f)},"button-symbol":function(a){var e=this._.button,d=e.symbol,b=this.attrs["button-repaint"];a=A(a||"");"none"===a?(d&&(e.symbol=d.remove()),delete e.symbol):a&&!d&&(e.symbol=this.paper.symbol(this).insertAfter(e.bound));b&&this.attr("button-repaint",b)},"button-symbol-position":function(a){return{"button-symbol-position":{top:"top",
right:"right",bottom:"bottom",left:"left",none:"none"}[A(a).toLowerCase()]||"none"}},"button-symbol-padding":function(a){return{"button-symbol-padding":q(a)}},"button-padding":function(a,e){return{"button-padding":[null==a&&(a=5)||q(a),null==e&&a||q(e)]}},"button-repaint":function(a,e,d,b,h){var k=this._.button,g=k.bound,u=k.label,w=k.symbol,n=this.attrs,m=n["button-padding"],C=m[0],p=m[1],q,H;void 0===a&&(a=0);void 0===e&&(e=0);if(void 0===d||void 0===b)q=u&&u.getBBox()||{width:0,height:0},void 0===
d&&(d=2*C+q.width),void 0===b&&(b=2*p+q.height);g=f.crispBound(a,e,d,b,g.attr("stroke-width"));g.r=f.pick(h,L(.1*T(b,d)));a=g.x;e=g.y;d=g.width;b=g.height;u&&u.attr({x:a+d/2,y:e+b/2});if(w){!f.is(H=n["button-symbol-padding"],"finite")&&(H=.2*b);h=b-p;q=.5*h;switch(n["button-symbol-position"]+(u&&"+"||"-")){case "right+":a=a+(d+(2*q+p))-q-C;e+=.5*b;u.attr("transform",["t",-(h+H),0]);break;case "left+":a=a+C+q;e+=.5*b;u.attr("transform",["t",h+H,0]);break;case "top+":a+=.5*d;e=e+m[1]+q;u.attr("transform",
["t",0,h+H]);break;case "bottom+":a+=.5*d;e=e+(b+(2*q+H))-p-q;u.attr("transform",["t",0,-(h+H)]);break;default:a+=.5*d,e+=.5*b}w.attr("symbol",[n["button-symbol"],a,e,q])}k.bound.attr(g);k.tracker.attr(g)},fill:function(a,e,d,b,h){var k=this._.button,g=k.bound,u=k.symbol,w=k.label,n={normal:k.gradient,active:k.gradientActive,hover:k.gradientHover}[a];n||(h||(a=f.getRGB(a),a.error&&(a=f.color("#cccccc")),a="opacity"in a?"rgba("+[a.r,a.g,a.b,a.opacity]+")":"rgb("+[a.r,a.g,a.b]+")"),k.gradient=h?a:[90,
f.tintshade(a,-.8).rgba+":0",f.tintshade(a,.8).rgba+":100"].join("-"),k.gradientActive=[270,f.tintshade(a,-.8).rgba+":0",f.tintshade(a,.8).rgba+":100"].join("-"),b=f.getRGB(b),b.error&&(b=a)||(b="opacity"in b?"rgba("+[b.r,b.g,b.b,b.opacity]+")":"rgb("+[b.r,b.g,b.b]+")"),k.gradientHover=h?b:[90,f.tintshade(b,-.9).rgba+":0",f.tintshade(b,.7).rgba+":100"].join("-"),d=d||f.tintshade(a,.2).rgba,e=e||f.tintshade(a,-.2).rgba,k.symbolFill=d,k.labelFill=e,n=(this.pressed||this.active)&&k.gradientActive||this.hovered&&
k.gradienthover||k.gradient);g.attr("fill",n);u&&u.attr("fill",k.symbolFill);w&&w.attr("fill",k.labelFill);return!1},stroke:function(a,e){var d=this._.button,b=d.symbol;a=f.color(a);a.error&&(a=f.color("#999999"));d.bound.attr("stroke",a);b&&b.attr("stroke",e||a);return!1},"stroke-width":function(a,e){var d=this._.button,b=d.symbol;d.bound.attr("stroke-width",a);d.tracker.attr("stroke-width",a);b&&b.attr("stroke-width",e);return!1},config:function(a){a.hover&&(this._hover={fill:a.hover.fill,stroke:a.hover.stroke,
"stroke-width":a.hover["stroke-width"],cursor:a.hover.cursor});a.disabled&&(this._disabled={fill:a.disabled.fill,stroke:a.disabled.stroke,"stroke-width":a.disabled["stroke-width"],cursor:a.disabled.cursor});a.pressed&&(this._pressed={fill:a.pressed.fill,stroke:a.pressed.stroke,"stroke-width":a.pressed["stroke-width"],cursor:a.pressed.cursor});a.normal&&(this._normal={fill:a.normal.fill,stroke:a.normal.stroke,"stroke-width":a.normal["stroke-width"],cursor:a.normal.cursor});a.symbol&&(a.symbol={stroke:a.normal.stroke,
"stroke-width":a.normal["stroke-width"]})}}},{name:"trianglepath",trianglepath:function(){var a=arguments,e=f._lastArgIfGroup(a);return this.path(e).attr("trianglepath",[a[0],a[1],a[2],a[3],a[4],a[5],a[6]||0,a[7]||0,a[8]||0])},fn:{sides:function(){var a=this._args;return[e(a[0],a[1],a[2],a[3]),e(a[2],a[3],a[4],a[5]),e(a[4],a[5],a[0],a[1])]},enclosedAngles:function(){var c=this._sides;return[P((a(c[0],2)+a(c[2],2)-a(c[1],2))/(2*c[0]*c[2])),P((a(c[0],2)+a(c[1],2)-a(c[2],2))/(2*c[0]*c[1])),P((a(c[2],
2)+a(c[1],2)-a(c[0],2))/(2*c[2]*c[1]))]},semiperimeter:function(){var a=this._sides||this.sides();return(a[0]+a[1]+a[2])/2}},ca:{trianglepath:function(a,e,b,h,f,k,g,u,w){if(g||u||w){this._args=arguments;this._sides=this.sides();var n=this.enclosedAngles(),m;m=this.semiperimeter();m=B(m*(m-this._sides[0])*(m-this._sides[1])*(m-this._sides[2]))/m;n=[T(g,m)/r(n[0]/2),T(u,m)/r(n[1]/2),T(w,m)/r(n[2]/2)];n=[d(a,e,f,k,n[0]),d(a,e,b,h,n[0]),d(b,h,a,e,n[1]),d(b,h,f,k,n[1]),d(f,k,b,h,n[2]),d(f,k,a,e,n[2])];
this.attr({path:["M",n[0].x,n[0].y,"Q",a,e,n[1].x,n[1].y,"L",n[2].x,n[2].y,"Q",b,h,n[3].x,n[3].y,"L",n[4].x,n[4].y,"Q",f,k,n[5].x,n[5].y,"L",n[0].x,n[0].y]})}else this.attr({path:["M",a,e,"L",b,h,f,k,"Z"]})}}}]);f.ca["text-bound"]=function(a,e,d,b,h,k){var g=this.paper,u=this._.textbound;if("text"===this.type){if(!(e&&"none"!==e||a&&"none"!==a))return this._.textbound=u&&u.unfollow(this).remove(),!1;this.attrs["text-bound"]=arguments;d&&f.is(d,"finite")||(d=0);h&&f.is(h,"finite")||(h=0);!u&&(u=this._.textbound=
g.rect(0,0,0,0,this.group).follow(this,f.ca["text-bound"].reposition,"before"));u.attr({stroke:e,"stroke-width":d,fill:a,"shape-rendering":1===d&&"crisp"||"",r:h});k&&u.attr("stroke-dasharray",k);f.ca["text-bound"].reposition.call(u,this.attr(),this);return!1}};f.ca["text-bound"].reposition=function(a,e){var d={},b,h,k,g,u;a.hasOwnProperty("visibility")&&this.attr("visibility",a.visibility);if(a.hasOwnProperty("text-bound")||a.hasOwnProperty("x")||a.hasOwnProperty("y")||a.hasOwnProperty("text")||
a.hasOwnProperty("text-anchor")||a.hasOwnProperty("text-align")||a.hasOwnProperty("font-size")||a.hasOwnProperty("line-height")||a.hasOwnProperty("vertical-align")||a.hasOwnProperty("transform")||a.hasOwnProperty("rotation"))b=e.attrs["text-bound"],h=A(b&&b[3]||"0").split(H),b=q(h[0])||0,h=f.pick(q(h[1]),b),k=e.getBBox(),g=k.width,u=k.height,isNaN(g)||(d.x=k.x-b,d.y=k.y-h,d.width=g+2*b,d.height=u+2*h),this.attr(d)};f.fn.symbol=function(){var a=arguments,e=a.length-1,d=a[e];d&&d.constructor===f.el.constructor?
a[e]=void 0:d=void 0;e=this.path(void 0,d);e.ca.symbol=f.fn.symbol.ca.symbol;return a.length===!!d+0?e:e.attr("symbol",a)};f.fn.getSuggestiveRotation=function(){var a,e,d;a=arguments[0];1===arguments.length?(e=a.angle,d=a.x,a=a.y):(e=a,d=arguments[1],a=arguments[2]);return"r"+(e||0)+","+d+","+a};f.fn.symbol.cache={"":f._cacher(function(a,e,d,b){return 3<arguments.length?["M",a,e,"h",d,"v",b,"h",-d,"v",-b,"z"]:["M",a-d,e-d,"h",d*=2,"v",d,"h",-d,"v",-d,"z"]})};f.fn.symbol.ca={symbol:function(a){var e=
f.is(a,"object")&&1===arguments.length&&!f.is(a,"function")?a:arguments,d;e===a&&(a=e[0]);e=(d=f.is(a,"function")&&a||f.fn.symbol.cache[a]||f.fn.symbol.cache[""])&&d.apply(f,n.call(e,1));f.is(e,"array")||f.is(e,"string")?this.attr("path",e):e&&this.attr(e)}};f.addSymbol=function(a,e){var d=f.is(e,"function")&&(d={},d[a]=e,d)||a,b=f.fn.symbol.cache,h=[],k;for(k in d)e=d[k],b[k]=f.is(e,"function")&&f._cacher(e,f)||(h.push(k),e);for(;k=h.pop();)b[k]=b[b[k]]};f.svg?(w="$1",h=function(a){a?"string"===
typeof a?a=a.replace(W,w):a.toString=K:a="M0,0";this.node.setAttribute("d",a.toString())},f._engine.litepath=function(a,e,d,b){a=C("path");(b||e).canvas.appendChild(a);e=new R(a,e,b);e.type="litepath";e.id=a.raphaelid=f._oid++;a.raphael=!0;Y(e,{fill:"none",stroke:"#000"});return e},f._getPath.litepath=function(a){return f.parsePathString(a.node.getAttribute("d"))}):f.vml&&(w=function(a,e){return O[e]||e},V=function(){this._transform.apply(this,arguments);this._.bcoord&&(this.node.coordsize=this._.bcoord);
return this},h=function(a){a?"string"===typeof a?a=a.replace(W,w):a.toString=K:a="M0,0";this.node.path=a;return this},f._engine.litepath=function(a,e,d,b){a=C("shape");var h=a.style,k=new R(a,e,b);h.cssText="position:absolute;left:0;top:0;width:21600px;height:21600px;";d=q(d);isNaN(d)?a.coordsize="21600 21600":(k._.bzoom=d,h.width="1px",h.height="1px",a.coordsize=k._.bcoord=d+" "+d);a.coordorigin=e.coordorigin;k.type="litepath";k.id=a.raphaelid=f._oid++;a.raphael=!0;k._transform=k.transform;k.transform=
V;f._setFillAndStroke(k,{fill:"none",stroke:"#000"});(b||e).canvas.appendChild(a);e=C("skew");e.on=!0;a.appendChild(e);k.skew=e;return k},f._getPath.litepath=function(a){return f.parsePathString(a.node.path||"")});f.fn.litepath=function(a,e,d){e&&e.constructor===R&&(d=e,e=void 0);a&&a.constructor===R&&(d=a,a="");e=f._engine.litepath(a,this,e,d);e.ca.litepath=h;a&&e.attr("litepath",f.is(a,"array")?[a]:a);return this.__set__&&this.__set__.push(e),this._elementsById[e.id]=e}}]);N.register("module",["private",
"modules.renderer.js-htmlrenderer",function(){var b=this.hcLib,z=b.Raphael,G=b.dem,v=this.window,F=v.document,E=/msie/i.test(v.navigator.userAgent)&&!v.opera,t="VML"===z.type,a=b.hasTouch,Q={cursor:"cursor"},r={x:"left",y:"top",strokeWidth:"borderThickness","stroke-width":"borderThickness",width:"width",height:"height"},P={fill:"backgroundColor",stroke:"borderColor",color:"color"},T={left:0,top:0,padding:0,border:"none",margin:0,outline:"none","-webkit-apperance":"none",position:"absolute",zIndex:20},
L,D=function(a,b,q,A){a=F.createElement(a);for(var n in b)r[n]?a.style[n]=b[n]:a.setAttribute(n,b[n]);for(n in q)a.style[n]=q[n];A&&A.appendChild&&A.appendChild(a);return a},B;B=function(a,b,q){b&&b instanceof B&&(b=b.element);(this.element=D(a,q,T,b)).ishot="true";this.nodeName=a.toLowerCase();this.added=!!b};B.prototype={attr:function(a){var b=this.element,q={},A,n,k,g,f,B,C;if("object"!==typeof a){if(!(q=this[a])){if("string"===typeof a)b&&b.getAttribute&&(g=b.getAttribute(a));else if(void 0!==
a&&null!==a&&"object"===typeof a)for(k in a)b.setAttribute(k,a[k]);q=g}return q}for(A in a){k=a[A];if(Q[A]){switch(A){case "cursor":"pointer"===k&&t&&(k="hand")}b.style[Q[A]]=k;n=!0}else if(r[A])b.style[r[A]]=k+"px",n=!0;else if(P[A])b.style[P[A]]=k&&k.replace(/^#?([a-f0-9]+)/ig,"#$1")||"none",n=!0;else if(/^visibility$/i.test(A))n="hidden"===k,b.style.display=n?"none":"",this.hidden=n,n=!0;else if(/^opacity$/i.test(A))b.style.opacity=k,E&&(n=100*Number(k),b.style.filter="progid:DXImageTransform.Microsoft.Alpha(Opacity="+
n+")"),n=!0;else if(/^innerhtml$/i.test(A)){if(t&&"select"==b.nodeName.toLowerCase()){for(n=k.match(/<option\s?[\s\S]*?(\/>|><\/option>|>[\s\S]*?<\/option>)/ig);b.firstChild;)b.removeChild(b.firstChild);f=0;for(B=n.length;f<B;f+=1)g=n[f],C=F.createElement("option"),/<option\s([\s\S]*[\'\"])\s*?(\/>|>[\s\S]*<\/option>)/ig.test(g)&&(C.value=g.replace(/<option\s([\s\S]*[\'\"])\s*?(\/>|>[\s\S]*<\/option>)/ig,"$1").replace(/[\s\S]*value\s*\=\s*[\'\"]([\s\S]*)[\'\"]/,"$1")),C.text=g.replace(/<option\s*[\s\S]*[\'\"]?\s*?[\/>|\>]([\s\S]*)<\/option>/ig,
"$1 "),b.options.add(C)}else"input"!==b.nodeName.toLowerCase()&&void 0!==k&&(b.innerHTML=k||"");n=!0}else/^text$/i.test(A)?("input"!==b.nodeName.toLowerCase()&&(b.innerHTML="",void 0!==k&&b.appendChild(F.createTextNode(k))),n=!0):/^type$/i.test(A)&&E&&this.added&&(n=!0);n&&(q[A]=k,delete a[A],n=!1)}for(A in a)b.setAttribute(A,a[A]);for(A in q)this[A]=a[A]=q[A],delete q[A];return this},val:function(a){var b=this.element,q=void 0===a;return"input"===this.nodeName&&"checkbox"===b.getAttribute("type")?
q?this.checked()?1:0:this.checked(a):q?b.value:(b.value=a,this)},checked:function(a){var b=this.element;return void 0===a?b.checked:(a?b.setAttribute("checked","checked"):b.removeAttribute("checked"),this)},css:function(a,b){var q=this.element.style,A;if("object"===typeof a)for(A in a)q[A]=a[A];else A&&void 0!==b&&(q[A]=b);return this},translate:function(a,b){var q=this.element;void 0!==a&&(q.style.left=a+"px");void 0!==b&&(q.style.top=b+"px");return this},add:function(a,b){var q=this.element,A=a.element;
b?A.insertBefore(q,A.firstChild):A.appendChild(q);this.added=!0;return this},hide:function(){this.element.style.display="none";return this},show:function(){this.element.style.display="";return this},focus:function(){"function"===typeof this.element.focus?this.element.focus():b.dem.fire(this.element,"focus")},destroy:function(){var a=this.element||{};a.onclick=a.onmouseout=a.onmouseover=a.onmousemove=a.onblur=a.onfocus=null;L||(L=D("div"));a&&L.appendChild(a);L.innerHTML="";delete this.element;return null},
on:t?function(a,b){this.element["on"+a]=function(){var a=v.event;a.target=a.srcElement;b(a)};return this}:function(b,p){var q=p;a&&"click"===b&&(b="touchstart",q=function(a){a.preventDefault();p()});this.element["on"+b]=q;return this},bind:function(a,b,q){G.listen(this.element,a,b,q);return this},unbind:function(a,b){G.unlisten(this.element,a,b);return this},trigger:function(a,b){G.fire(this.element,a,b);return this},fadeIn:function(a,p){var q="fast"===a?400:1E3;this.show();this.attr({opacity:0});
b.danimate.animate(this.element,{opacity:1},q,"linear",p)},animate:function(a,p,q,A){b.danimate.animate(this.element,a,p,q,A)}};B.prototype.constructor=B;z.fn.html=function(a,b,q,A){var n={},k;b&&"type"in b&&(n.type=b.type,delete b.type);a=(new B(a,A,n)).css(q).attr(b);for(k in n)b[k]=n[k];return a}}]);N.register("module",["private","modules.renderer.js-raphaeltooltip",function(){var b=this,z=b.window,G=z.document,v=G.body||G.getElementsByTagName("body")[0],F=b.hcLib,E=F.Raphael,t=E.eve,a=F.createElement,
Q=F.addEvent,r=F.removeEvent,P=F.getPosition,T=F.hasTouch,L=F.getTouchEvent,D=Math,B=D.ceil,m=D.floor,p={},q=z.screen.availHeight,A=z.screen.availWidth,n={E:1,moz:1,webkit:1,o:1,ms:1},k={borderRadius:"borderRadius",boxShadow:"boxShadow"},g=/\-([a-z])/ig,f=function(a,b){return b.toUpperCase()},S=function(a){var b=C.forbiddenStyle,m,q,p;for(m in a)q=g.test(m)?m.replace(g,f):m,void 0!==a[m]&&!b[q]&&(this[q]=a[m]),E.vml&&/color/ig.test(q)&&(this[q]=E.getRGB(this[q]).toString());for(m in k)if(this[m])for(p in n)this[p+
m]=this[m]},C=F.toolTip={elementId:"fusioncharts-tooltip-element",element:null,lastTarget:null,currentTarget:null,currentPaper:null,pointeroffset:12,prevented:!1,defaultStyle:F.extend2(S.prototype,{backgroundColor:"#ffffee",borderColor:"#000000",borderWidth:"1px",color:"#000000",fontSize:"10px",lineHeight:"12px",padding:"3px",borderStyle:"solid"}),defaultContainerStyle:{position:"absolute",textAlign:"left",margin:"0",zIndex:"99999",pointer:"default",display:"block"},forbiddenStyle:{}},Y=function(f,
k){var g=f.element,n=f.textElement,m=f.style,w=f.defaultContainerStyle,q=f.forbiddenStyle,h,g=f.element=a("span");(G.body||G.getElementsByTagName("body")[0]).appendChild(g);g.setAttribute("id",C.elementId);m=f.containerStyle=g.style;n=f.textElement=a("span");g.appendChild(n);f.style=E.vml?n.runtimeStyle:n.style;f.style.overflow="hidden";f.style.display="block";f.hidden=!1;C.hide.call(f);for(h in w)!q[h]&&(m[h]=w[h]);f.scatted=!0;k&&(t.on("raphael.drag.start.*",function(){C.scatted&&(C.waitingScat=
!0)}),t.on("raphael.drag.move.*",function(){C.waitingScat&&(C.block(),C.waitingScat=!1)}),t.on("raphael.drag.end.*",function(){C.waitingScat=!1;C.scatted&&C.unblock(!0)}),t.on("raphael.remove",function(){if(C.currentPaper===this||C.currentTarget&&C.currentTarget.paper===this)C.hide(),C.currentTarget=C.currentPaper=null}),b.addEventListener("LinkedChartInvoked",function(a){C.currentPaper===a.sender.apiInstance.components.paper&&C.hide()}),b.addEventListener("realTimeUpdateComplete",function(a){C.currentPaper===
a.sender.apiInstance.components.paper&&C.hide()}));return f},R=function(a){!0===C._oobready?C._oobready=!1:(r(v,"touchstart",R),!C.hidden&&C.currentTarget&&(a=a.srcElement||a.target||p,a.raphael&&C.currentTarget.paper.getById(a.raphaelid)===C.currentTarget||C.hide()))};E.svg&&(C.defaultContainerStyle.pointerEvents="none",C.defaultStyle.borderRadius="0",C.defaultStyle.boxShadow="none");E.vml&&(C.forbiddenStyle.borderRadius=!0,C.forbiddenStyle.boxShadow=!0,C.defaultStyle.filter="");C.setup=function(){C.element||
Y(C,!0)};C.restyle=function(a){var b=this.style,f;for(f in a)b[f]=a[f]};C.onelement=function(a){if(!a.__tipProcessed){var b=this.paper,f="group"===this.type?b&&b._elementFromEvent(a):this,k=b.__tipStyle;f&&k&&f.__tipNeeded&&((a.originalEvent||a).FusionChartsPreventEvent&&C.preventTooltip(),C.hiding&&(C.hiding=clearTimeout(C.hiding)),C.setStyle(b),C.lastTarget=C.currentTarget,C.currentTarget=f,(C.scatted=f.__tipScatted)&&C.unblock(!0),C.onredraw.call(this,a),a.__tipProcessed=!0,T&&(C._oobready=!0,
Q(v||(v=G.body||G.getElementsByTagName("body")[0]),"touchstart",R)))}};C.setStyle=function(a){C.currentPaper!==a&&(a.__tipCp=a.canvas&&P(a.canvas.parentNode,!0)||{},C.restyle.call(this,a.__tipStyle),C.currentPaper=a)};C.onredraw=function(a){a.__tipProcessed||(a.__tipProcessed=!0,(this.paper&&this.paper._elementFromEvent(a))===C.currentTarget&&(C.setPosition(a),C.redraw()))};C.setPosition=function(a,b,f){a=L(a);this.x=b||m(a.pageX||a.clientX+G.body.scrollLeft+G.documentElement.scrollLeft||0);this.y=
f||m(a.pageY||a.clientY+G.body.scrollTop+G.documentElement.scrollTop||0)};C.onhide=function(a){a.__tipProcessed||(a.__tipProcessed=!0,(this.paper&&this.paper._elementFromEvent(a))===C.currentTarget&&(C.hiding=setTimeout(C.hide,200)))};C.redraw=function(){var a,b;!C.prevented&&!C.blocked&&C.currentTarget&&C.currentTarget.__tipNeeded&&(a=C.currentTarget,b=a.paper,a=a.__tipText,C.draw.call(this,a,b))};C.customDraw=function(a,b,f,k,g,w){var n,h=C.callee&&C.callee===w;(n=C[w])||C.currentPaper===b||(C.hidden||
h?C.callee=w:n=C[w]=Y({elementId:"fusioncharts-tooltip-element",pointeroffset:12,defaultStyle:C.defaultStyle,defaultContainerStyle:C.defaultContainerStyle,forbiddenStyle:{}}));!n&&(n=C);C.setStyle.call(n,b,C.hidden&&w);C.setPosition.call(n,f,k,g);C.draw.call(n,a,b,h)};C.draw=function(a,b,f){var k=void 0!==f?this:C,g=k.textElement,w=k.containerStyle,n=k.style,h=k.pointeroffset,m=b.__tipCp,e=k.x,d=k.y,c,l=b.width,M=b.height;b=b.__tipConstrain;if(100>l||100>M)b=!1;k.hidden&&(k.containerStyle.top="-999em",
C.show.call(k));f&&a===k.text||(k.text=a,w.width=w.height="",g.innerHTML=a,n.whiteSpace="nowrap",f=B(n.pixelWidth||g.offsetWidth||0),a=B(n.pixelHeight||g.offsetHeight||0),(k.textWidthOverflow=e+f>m.left+l)?(f=l-2*h>f?w.width:l-2*h||0,w.width=f&&f+"px"||"",n.whiteSpace="normal"):w.width="",(k.textHeightOverflow=a>M)?(w.height=(M||0)-2*h+"px",n.whiteSpace="normal"):w.height="");f=B(n.pixelWidth||g.offsetWidth||0);a=B(n.pixelHeight||g.offsetHeight||0);b?(k.textWidthOverflow?e=e-f<m.left?m.left:e-f:!k.isFixed&&
(c=e+h+f-(m.left+l-h))&&0<c?e-=c:e+h+f>m.left+l-h&&(e=e-f-h),k.textHeightOverflow?d=m.top:!k.isFixed&&(c=d+h+a-(m.top+M-h))&&0<c?d-=c:d+h+a>m.top+M-h&&(d=d-a-1.5*h)):(A<e+h+f&&(e=e-f-h),q<d+h+a&&(d=d-a-1.5*h));w.left=(e+h||0)+"px";w.top=(d+h||0)+"px";k.hidden&&C.show.call(k)};C.inform=function(a){(C[a]||C).isFixed=!0};C.hide=function(a){a=C[a]||C;a.hiding&&(a.hiding=clearTimeout(a.hiding));a.containerStyle.display="none";a.hidden=!0;a.prevented=!1};C.show=function(){this.blocked||(this.hiding&&(this.hiding=
clearTimeout(this.hiding)),this.containerStyle.display="inline",this.hidden=!1)};C.preventTooltip=function(){C.prevented=!0};C.block=function(){this.blocked=!0;this.containerStyle.display="none"};C.unblock=function(a){this.blocked=!1;a&&(this.containerStyle.display=this.hidden&&"none"||"inline")};E.fn.tooltip=function(a,b,f){b&&(b=.4*(void 0===b.opacity?1:b.opacity),E.svg?a.boxShadow="1px 1px 3px rgba(64,64,64,"+b+")":a.filter='progid:DXImageTransform.Microsoft.Shadow(Strength=2, Direction=135, Color="#404040", shadowOpacity="'+
b/2+'")');this.__tipStyle=new S(a);this.__tipCp=this.canvas&&P(this.canvas.parentNode,!0)||{};this.__tipConstrain=!!f;C.style&&C.restyle(this.__tipStyle);C.containerStyle&&C.hide();return this};E.el.trackTooltip=function(a){var b=!!this.__tiptracking;if(void 0===a||(a=!!a)===b)return this;a?T?this.touchstart(C.onelement):(this.mouseover(C.onelement),this.mousemove(C.onredraw),this.mouseout(C.onhide)):T?this.untouchstart(C.onelement):(this.unmouseover(C.onelement),this.unmousemove(C.onredraw),this.unmouseout(C.onhide));
this.__tiptracking=a;return this};E.el.tooltip=function(a,b,f,k,g){C.setup();E.el.tooltip=function(a,b,h,f,e){b=!1===a||void 0===a||""===a;this.__tipScatted=void 0===f?this.__tipScatted:!f;void 0===this.__tipScatted&&(this.__tipScatted=!0);null!==e&&(this.__tip_blocked=e);b^!this.__tipText&&(this.__tipNeeded=!b);this.__tipText=a;if(C.currentTarget===this&&a!==C.text&&!C.hidden)C[b?"hide":"redraw"]();return this};return E.el.tooltip.call(this,a,b,f,k,g)};b.core._setTooltipZIndex=function(a){a=parseInt(a,
10);C&&!isNaN(a)&&(C.defaultContainerStyle.zIndex=a,C.containerStyle&&(C.containerStyle.zIndex=a))}}]);N.register("module",["private","modules.renderer.js-smartlabel",function(){var b=this.hcLib,z=b.isIE,G=b.hasSVG,v=Math,F=v.max,E=v.round,v=this.window,t=/ HtmlUnit/.test(v.navigator.userAgent),a=v.document,Q=/ AppleWebKit\//.test(v.navigator.userAgent),r=!!a.createElement("canvas").getContext,P=(v=!(!r||!a.createElement("canvas").getContext("2d")))&&v.measureText,T=/<br\/>/ig,L=/&lt;|&gt;/g,D=[],
B={" ":"&nbsp;"},v=function(){function m(a,b,e){if(!a||!a.length)return 0;var d=e.getWidthFunction(),c=0,l=0,l=d(a),f=l/a.length;e=b;c=Math.ceil(b/f);if(l<b)return a.length-1;c>a.length&&(e=b-l,c=a.length);for(;0<e;)if(e=b-d(a.substr(0,c)),l=Math.floor(e/f))c+=l;else return c;for(;0>e;)if(e=b-d(a.substr(0,c)),l=Math.floor(e/f))c+=l;else break;return c}function p(b,f){f=5<f?f:5;this.maxContainers=20>f?f:20;this.last=this.first=null;this.containers={};this.length=0;this.rootNode=b;if(X){var e=a.createElementNS("http://www.w3.org/2000/svg",
"svg");e.setAttributeNS("http://www.w3.org/2000/svg","xlink","http://www.w3.org/1999/xlink");e.setAttributeNS("http://www.w3.org/2000/svg","height","0");e.setAttributeNS("http://www.w3.org/2000/svg","width","0");this.svgRoot=e;this.rootNode.appendChild(e)}}function q(b,f,e){if("undefined"!==typeof b&&"object"!==typeof b){this.id=b;var d;"string"===typeof f&&(f=a.getElementById(f));a:{if(f&&(f.offsetWidth||f.offsetHeight)){if(f.appendChild){f.appendChild(f=a.createElement("div"));f.className="fusioncharts-smartlabel-container";
f.setAttribute("aria-hidden","true");f.setAttribute("role","presentation");b=f;break a}}else if((b=a.getElementsByTagName("body")[0])&&b.appendChild){f=a.createElement("div");f.className="fusioncharts-smartlabel-container";f.setAttribute("aria-hidden","true");f.setAttribute("role","presentation");b.appendChild(f);b=f;break a}b=void 0}b=this.parentContainer=b;b.innerHTML="WgI";if(t||!z&&!b.offsetHeight&&!b.offsetWidth)X=!0;b.innerHTML="";for(d in k)b.style[d]=k[d];this.containerManager=new p(b,10);
this.showNoEllipses=!e;this.init=!0;this.style={};this.setStyle()}}var A=b.supportedStyle,n={fontWeight:1,"font-weight":1,fontStyle:1,"font-style":1,fontSize:1,"font-size":1,fontFamily:1,"font-family":1},k={position:"absolute",top:"-9999em",whiteSpace:"nowrap",padding:"0px",width:"1px",height:"1px",overflow:"hidden"},g=Q?0:4.5,f=0,S=/\b_SmartLabel\b/,C=/\b_SmartLabelBR\b/,v=/(<[^<\>]+?\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,R=RegExp("\\<span[^\\>]+?_SmartLabel[^\\>]{0,}\\>(.*?)\\<\\/span\\>","ig"),u=/<[^>][^<]*[^>]+>/i,
X=!1,O=0,W=0,H,w,K;a.getElementsByClassName?(H="getElementsByClassName",w="_SmartLabel",K=!0):(H="getElementsByTagName",w="span",K=!1);p.prototype={get:function(a){var b=this.containers,e=this.length,d=this.maxContainers,c,l="",f="",f=this.getCanvasFont(a);for(c in A)void 0!==a[c]&&(l+=A[c]+":"+a[c]+";");if(!l)return!1;if(b[l])l=b[l],this.first!==l&&(l.prev&&(l.prev.next=l.next),l.next&&(l.next.prev=l.prev),l.next=this.first,l.next.prev=l,this.last===l&&(this.last=l.prev),l.prev=null,this.first=l);
else{if(e>=d)for(a=e-d+1;a--;)this.removeContainer(this.last);l=this.addContainer(l,f)}return l},getCanvasFont:function(a){var b,e=[];if(!r||!P)return!1;for(b in n)void 0!==a[b]&&e.push(a[b]);return e.join(" ")},setMax:function(a){var b=this.length;a=5<a?a:5;a=20>a?a:20;if(a<b){for(b-=a;b--;)this.removeContainer(this.last);this.length=a}this.maxContainers=a},addContainer:function(b,f){var e,d;this.containers[b]=d={next:null,prev:null,node:null,ellipsesWidth:0,lineHeight:0,dotWidth:0,avgCharWidth:4,
keyStr:b,canvasStr:f,charCache:{}};d.next=this.first;d.next&&(d.next.prev=d);this.first=d;this.last||(this.last=d);this.length+=1;e=d.node=a.createElement("div");this.rootNode.appendChild(e);z&&!G?e.style.setAttribute("cssText",b):e.setAttribute("style",b);e.setAttribute("aria-hidden","true");e.setAttribute("role","presentation");e.style.display="inline-block";e.innerHTML="WgI";d.lineHeight=e.offsetHeight;d.avgCharWidth=e.offsetWidth/3;X?(e=d.svgText=a.createElementNS("http://www.w3.org/2000/svg",
"text"),e.setAttribute("style",b),this.svgRoot.appendChild(e),e.textContent="WgI",d.lineHeight=e.getBBox().height,d.avgCharWidth=(e.getBBox().width-g)/3,e.textContent="...",d.ellipsesWidth=e.getBBox().width-g,e.textContent=".",d.dotWidth=e.getBBox().width-g):f?(e=d.canvas=a.createElement("canvas"),e.style.height=e.style.width="0px",this.rootNode.appendChild(e),d.context=e=e.getContext("2d"),e.font=f,d.ellipsesWidth=e.measureText("...").width,d.dotWidth=e.measureText(".").width):(e.innerHTML="...",
d.ellipsesWidth=e.offsetWidth,e.innerHTML=".",d.dotWidth=e.offsetWidth,e.innerHTML="");return d},removeContainer:function(a){var b=a.keyStr;b&&this.length&&a&&(--this.length,a.prev&&(a.prev.next=a.next),a.next&&(a.next.prev=a.prev),this.first===a&&(this.first=a.next),this.last===a&&(this.last=a.prev),a.node.parentNode.removeChild(a.node),a.canvas&&a.canvas.parentNode.removeChild(a.canvas),delete this.containers[b])},dispose:function(){var a,b=this.containers;this.maxContainers=null;for(a in b)this.removeContainer(b[a]);
this.rootNode.parentNode.removeChild(this.rootNode);this.last=this.first=this.rootNode=null}};p.prototype.constructor=p;q.prototype={dispose:function(){this.init&&(this.containerManager&&this.containerManager.dispose&&this.containerManager.dispose(),delete this.container,delete this.context,delete this.cache,delete this.containerManager,delete this.containerObj,delete this.id,delete this.style,delete this.parentContainer,delete this.showNoEllipses)},useEllipsesOnOverflow:function(a){this.init&&(this.showNoEllipses=
!a)},getWidthFunction:function(){var a=this.context,b=this.container,e=this.containerObj.svgText;return e?function(a){var c;e.textContent=a;a=e.getBBox();c=a.width-g;1>c&&(c=a.width);return c}:a?function(e){e=e&&e.split?e.split(T):D;for(var c=0,b=e.length,f=0,c=0;c<b;c+=1)f=F(a.measureText(e[c]||"").width,f);return f}:function(a){b.innerHTML=a;return b.offsetWidth}},getSmartText:function(b,k,e,d){if(!this.init)return!1;if(void 0===b||null===b)b="";var c={text:b,maxWidth:k,maxHeight:e,width:null,height:null,
oriTextWidth:null,oriTextHeight:null,oriText:b,isTruncated:!1},l=!1,g,n,q=0,p,A,r,B,t,D=-1,z=B=-1;n=this.container;var E=this.context,G=0;t=0;var Z,P,ma;ma=[];var oa=0,Q=this.showNoEllipses?"":"...";r=this.lineHeight;var ga,G=[],D=g=-1;ga=function(a){a=a.replace(/^\s\s*/,"");for(var c=/\s/,e=a.length;c.test(a.charAt(--e)););return a.slice(0,e+1)};B=-1;P=this.getWidthFunction();e===r&&(e*=1.2);if(n){if(!X){(l=u.test(b))?(n.innerHTML=b,c.oriTextWidth=B=n.offsetWidth,c.oriTextHeight=t=n.offsetHeight):
(A=b.replace(L,function(a){return"&lt;"===a?"<":">"}),A=this.getOriSizeImprove(A,!0),c.oriTextWidth=B=A.width,c.oriTextHeight=t=A.height);if(t<=e&&B<=k)return c.width=c.oriTextWidth=B,c.height=c.oriTextHeight=t,c;if(r>e)return c.text="",c.width=c.oriTextWidth=0,c.height=c.oriTextHeight=0,c}b=ga(b).replace(/(\s+)/g," ");r=this.showNoEllipses?k:k-f;if(l){q=b.replace(v,"$2");b=b.replace(v,'$1<span class="_SmartLabel">$2</span>');b=b.replace(/(<br\s*\/*\>)/g,'<span class="_SmartLabel _SmartLabelBR">$1</span>');
n.innerHTML=b;oa=n[H](w);E=0;for(P=oa.length;E<P;E+=1)if(b=oa[E],K||S.test(b.className))ga=b.innerHTML,""!==ga&&(" "===ga?D=G.length:"-"===ga&&(g=G.length),G.push({spaceIdx:D,dashIdx:g,elem:b}),ma.push(ga));oa=0;g=G.length;O=G[0].elem.offsetWidth;if(O>k)return c.text="",c.width=c.oriTextWidth=c.height=c.oriTextHeight=0,c;O>r&&!this.showNoEllipses&&(r=k-2*W,r>O?Q="..":(r=k-W,r>O?Q=".":(r=0,Q="")));ma=G[0].elem.offsetLeft;E=G[0].elem.offsetTop;if(d)for(;oa<g;oa+=1)b=G[oa].elem,P=b.offsetLeft-ma+b.offsetWidth,
P>r&&(Z||(Z=oa),n.offsetWidth>k&&(p=oa,oa=g));else for(;oa<g;oa+=1)b=G[oa].elem,ga=b.offsetHeight+(b.offsetTop-E),P=b.offsetLeft-ma+b.offsetWidth,d=null,P>r?(Z||(Z=oa),P>k&&(B=G[oa].spaceIdx,D=G[oa].dashIdx,B>z?(G[B].elem.innerHTML="<br/>",z=B):D>z?(G[D].elem.innerHTML=D===oa?"<br/>-":"-<br/>",z=D):b.parentNode.insertBefore(d=a.createElement("br"),b),b.offsetHeight+b.offsetTop>e?(d?d.parentNode.removeChild(d):z===D?G[D].elem.innerHTML="-":G[B].elem.innerHTML=" ",p=oa,oa=g):Z=null)):ga>e&&(p=oa,oa=
g);if(p<g){c.isTruncated=!0;Z=Z?Z:p;for(oa=g-1;oa>=Z;--oa)b=G[oa].elem,b.parentNode.removeChild(b);for(;0<=oa;--oa)b=G[oa].elem,C.test(b.className)?b.parentNode.removeChild(b):oa=0}c.text=n.innerHTML.replace(R,"$1").replace(/\&amp\;/g,"&");c.isTruncated&&(c.text+=Q,c.tooltext=q)}else{ma=b.split("");g=ma.length;n="";p=[];Z=ma[0];this.cache[Z]?O=this.cache[Z].width:(O=P(Z),this.cache[Z]={width:O});if(r>O)p=b.substr(0,m(b,r,this)).split(""),oa=p.length;else{if(O>k)return c.text="",c.width=c.oriTextWidth=
c.height=c.oriTextHeight=0,c;Q&&(r=k-2*W,r>O?Q="..":(r=k-W,r>O?Q=".":(r=0,Q="")))}G=P(p.join(""));t=this.lineHeight;if(d){for(;oa<g;oa+=1)if(Z=p[oa]=ma[oa],this.cache[Z]?O=this.cache[Z].width:(A&&(O=A.detailObj[Z])||(O=P(Z)),this.cache[Z]={width:O}),G+=O,G>r&&(n||(n=p.slice(0,-1).join("")),G>k))return c.text=ga(n)+Q,c.tooltext=c.oriText,c.width=P(c.text),c.height=this.lineHeight,c;c.text=p.join("");c.width=G;c.height=this.lineHeight}else{for(;oa<g;oa+=1)if(Z=p[oa]=ma[oa]," "!==Z||E||(Z="&nbsp;"),
this.cache[Z]?O=this.cache[Z].width:(A&&(O=A.detailObj[Z])||(O=P(Z)),this.cache[Z]={width:O}),G+=O,G>r&&(n||(n=p.slice(0,-1).join("")),G>k)){B=b.substr(0,p.length).lastIndexOf(" ");D=b.substr(0,p.length).lastIndexOf("-");B>z?(G=P(p.slice(z+1,B).join("")),p.splice(B,1,"<br/>"),z=B,d=B+1):D>z?(D===p.length-1?(G=P(p.slice(z+1,B).join("")),p.splice(D,1,"<br/>-")):(G=P(p.slice(z+1,B).join("")),p.splice(D,1,"-<br/>")),z=D,d=D+1):(p.splice(p.length-1,1,"<br/>"+ma[oa]),B=p.length-2,G=P(p.slice(z+1,B+1).join("")),
z=B,d=oa);t+=this.lineHeight;if(t>e)return c.text=ga(n)+Q,c.tooltext=c.oriText,c.width=k,c.height=t-this.lineHeight,c;q=F(q,G);n=null;Z=m(b.substr(d),r,this);G=P(b.substr(d,Z||1));p.length<d+Z&&(p=p.concat(b.substr(p.length,d+Z-p.length).split("")),oa=p.length-1)}q=F(q,G);c.text=p.join("");c.width=q;c.height=t}return c}c.height=n.offsetHeight;c.width=n.offsetWidth}else c.error=Error("Body Tag Missing!");return c},setStyle:function(a){if(!this.init)return!1;if(a!==this.style||this.styleNotSet){a||
(a=this.style);var b=a,e=b.fontSize=b.fontSize||"12px";b.lineHeight=b.lineHeight||b["line-height"]||1.2*parseInt(e,10)+"px";this.style=a;(this.containerObj=a=this.containerManager.get(a))?(this.container=a.node,this.context=a.context,this.cache=a.charCache,this.lineHeight=a.lineHeight,f=a.ellipsesWidth,W=a.dotWidth,this.styleNotSet=!1):this.styleNotSet=!0}},getTextSize:function(a,b,e){if(!this.init)return!1;var d={text:a,width:null,height:null,oriTextWidth:null,oriTextHeight:null,isTruncated:!1},
c=this.container;c&&(c.innerHTML=a,d.oriTextWidth=c.offsetWidth,d.oriTextHeight=c.offsetHeight,d.width=Math.min(d.oriTextWidth,b),d.height=Math.min(d.oriTextHeight,e),d.width<d.oriTextWidth||d.height<d.oriTextHeight)&&(d.isTruncated=!0);return d},getOriSize:function(a){if(!this.init)return!1;var b={text:a,width:null,height:null},e=this.container,d=this.getWidthFunction(),c=0;if(X){a=a.split(/(<br\s*\/*\>)/g);e=a.length;for(b.height=this.lineHeight*e;e--;)c=F(c,d(a[e]));b.width=c}else e&&(e.innerHTML=
a,b.width=e.offsetWidth,b.height=e.offsetHeight);return b},getOriSizeImprove:function(a,b){if(!this.init)return!1;var e,d,c,l=0,f=0,k={},g,n;if(!b)return this.calCharDimWithCache(a);e=a.split("");g=0;for(n=e.length;g<n;g++)d=e[g],c=this.calCharDimWithCache(d,!0,e.length),f=F(f,c.height),l+=c.width,k[d]=c.width;return{width:E(l),height:f,detailObj:k}},calCharDimWithCache:function(a,b,e){if(!this.init)return!1;var d=this.container,c=this.style||{},l=this.advancedCache||(this.advancedCache={}),f=this.advancedCacheKey||
(this.advancedCacheKey=[]),k=a+(c.fontSize||"")+(c.fontFamily||"")+(c.fontWeight||"")+(c.fontStyle||""),c=a+"init"+(c.fontSize||"")+(c.fontFamily||"")+(c.fontWeight||"")+(c.fontStyle||""),g;B[a]&&(a=B[a]);b?void 0===(b=l[c])&&(d.innerHTML=a.repeat?a.repeat(e):Array(e+1).join(a),b=d.offsetWidth,d.innerHTML=a,g=d.offsetWidth,b=l[c]=(b-e*g)/(e+1),f.push(c),500<f.length&&delete l[f.shift()]):b=0;if(e=l[k])return l=e.split(","),{width:parseFloat(l[0],10),height:parseFloat(l[1],10)};d.innerHTML=a;a={height:d.offsetHeight,
width:d.offsetWidth+b};l[k]=a.width+","+a.height;f.push(k);500<f.length&&delete l[f.shift()];return a}};return q.prototype.constructor=q}();b.SmartLabelManager=v}]);N.register("module",["private","modules.renderer.js-numberformatter",function(){var b=this,z=b.hcLib,G=z.pluckNumber,v=z.extend2,F=z.getValidValue,E=z.pluck,t=z.getFirstValue,a=Math.abs,Q=Math.pow,r=Math.round,P=function(a){return a&&a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},T={},L=function(a){var b=[],p;for(p in a)b.push(p+"_"+a[p]);
b.sort();return b.join(",")},D=function(a){var b={},p;for(p in a)b[p.toLowerCase()]=a[p];return b};z.NumberFormatter=function(){function b(a,g,f){var n;if(0>=g)return r(a)+"";if(isNaN(g))return a+="",12<a.length&&-1!=a.indexOf(".")&&(g=12-a.split(".")[0].length,n=Q(10,g),a=r(a*n)/n+""),a;n=Q(10,g);a=r(a*n)/n+"";if(1==f)for(-1==a.indexOf(".")&&(a+=".0"),f=a.split("."),g-=f[1].length,f=1;f<=g;f++)a+="0";return a}function m(a,b,f,n,m){var q=Number(a),p="",u=!1,A="",O="",r=A=0;if(isNaN(q))return"";if(1E15<
q)return q.toExponential(m?1:14);A=0;r=a.length;-1!=a.indexOf(".")&&(p=a.substring(a.indexOf(".")+1,a.length),r=a.indexOf("."));0>q&&(u=!0,A=1);A=a.substring(A,r);a=A.length;m=n.length-1;q=n[m];if(a<q)O=A;else for(;a>=q;)O=(a-q?f:"")+A.substr(a-q,q)+O,a-=q,q=0>=--m?n[0]:n[m],a<q&&(O=A.substring(a,0)+O);""!=p&&(O=O+b+p);!0===u&&(O="-"+O);return O}var p,q={formatnumber:"1",formatnumberscale:"1",forcenumberscale:"0",defaultnumberscale:"",numberscaleunit:["K","M"],numberscalevalue:[1E3,1E3],numberprefix:"",
numbersuffix:"",decimals:"",forcedecimals:"0",yaxisvaluedecimals:"2",decimalseparator:".",thousandseparator:",",thousandseparatorposition:[3],indecimalseparator:"",inthousandseparator:"",sformatnumber:"1",sformatnumberscale:"0",sforcenumberscale:"0",sdefaultnumberscale:"",snumberscaleunit:["K","M"],snumberscalevalue:[1E3,1E3],snumberprefix:"",snumbersuffix:"",sdecimals:"2",sforcedecimals:"0",syaxisvaluedecimals:"2",xFormatNumber:"0",xFormatNumberScale:"0",xforcenumberscale:"0",xDefaultNumberScale:"",
xNumberScaleUnit:["K","M"],xNumberScaleValue:[1E3,1E3],xNumberPrefix:"",xNumberSuffix:""},A={mscombidy2d:{formatnumberscale:"1"}},n=function(a,b){var f=a.name,n=this.csConf=v({},q);(f=A[f])&&v(n,f);this.linkedItems={iapi:a};this.configure(b)};n.prototype={configure:function(a){var b=this.linkedItems.iapi,f=b.jsonData;a=a||f.chart;var f=b.name,n=this.csConf,m,p,A,u,r,O,B,H,w,K,h,V,e,d,c,l,M,J,Ea,D;this.csConf=n;this.useScaleRecursively=b.useScaleRecursively;F(a.numberscaleunit)&&(m=a.numberscaleunit.split(","));
if(p=F(a.snumberscaleunit,a.numberscaleunit))p=p.split(",");if(A=F(a.xnumberscaleunit,a.numberscaleunit))A=A.split(",");if(u=F(a.ticknumberscaleunit,a.numberscaleunit))u=u.split(",");if(r=F(a.ynumberscaleunit,a.numberscaleunit))r=r.split(",");F(a.numberscalevalue)&&(O=a.numberscalevalue.split(","));if(h=F(a.snumberscalevalue,a.numberscalevalue))h=h.split(",");if(B=F(a.xnumberscalevalue,a.numberscalevalue))B=B.split(",");if(H=F(a.ticknumberscalevalue,a.numberscalevalue))H=H.split(",");if(w=F(a.ynumberscalevalue,
a.numberscalevalue))w=w.split(",");if(F(a.thousandseparatorposition))for(K=a.thousandseparatorposition.split(","),V=K.length,d=q.thousandseparatorposition[0];V--;)e=parseInt(K[V],10),0>=e&&(e=d),d=K[V]=e;b||(b={});V=G(a.scalerecursively,0);e=G(a.sscalerecursively,V);d=G(a.xscalerecursively,V);c=G(a.maxscalerecursion,-1);l=G(a.smaxscalerecursion,c);M=G(a.xmaxscalerecursion,c);J=F(a.scaleseparator," ");Ea=F(a.sscaleseparator,J);D=F(a.xscaleseparator,J);c||(c=-1);this.baseConf=K={cacheStore:[],formatnumber:E(a.formatnumber,
b.formatnumber,n.formatnumber),formatnumberscale:E(a.formatnumberscale,b.formatnumberscale,n.formatnumberscale),forcenumberscale:E(a.forcenumberscale,b.forcenumberscale,n.forcenumberscale),defaultnumberscale:t(a.defaultnumberscale,b.defaultnumberscale,n.defaultnumberscale),numberscaleunit:E(m,b.numberscaleunit,n.numberscaleunit).concat(),numberscalevalue:E(O,b.numberscalevalue,n.numberscalevalue).concat(),numberprefix:t(a.numberprefix,b.numberprefix,n.numberprefix),numbersuffix:t(a.numbersuffix,b.numbersuffix,
n.numbersuffix),decimalprecision:parseInt("auto"===a.decimals?n.decimalprecision:E(a.decimals,a.decimalprecision,b.decimals,n.decimals,b.decimalprecision,n.decimalprecision),10),forcedecimals:E(a.forcedecimals,b.forcedecimals,n.forcedecimals),decimalseparator:E(a.decimalseparator,b.decimalseparator,n.decimalseparator),thousandseparator:E(a.thousandseparator,b.thousandseparator,n.thousandseparator),thousandseparatorposition:E(K,b.thousandseparatorposition,n.thousandseparatorposition),indecimalseparator:t(a.indecimalseparator,
b.indecimalseparator,n.indecimalseparator),inthousandseparator:t(a.inthousandseparator,b.inthousandseparator,n.inthousandseparator),scalerecursively:V,maxscalerecursion:c,scaleseparator:J};F(K.inthousandseparator)&&(this.baseConf._REGinthousandseparator=new RegExp(P(K.inthousandseparator),"g"));F(K.indecimalseparator)&&(this.baseConf._REGindecimalseparator=new RegExp(P(K.indecimalseparator)));this.Y=[];m={cacheStore:[],formatnumber:K.formatnumber,formatnumberscale:K.formatnumberscale,forcenumberscale:K.forcenumberscale,
defaultnumberscale:K.defaultnumberscale,numberscaleunit:K.numberscaleunit.concat(),numberscalevalue:K.numberscalevalue.concat(),numberprefix:K.numberprefix,numbersuffix:K.numbersuffix,decimalprecision:K.decimalprecision,forcedecimals:K.forcedecimals,decimalseparator:K.decimalseparator,thousandseparator:K.thousandseparator,thousandseparatorposition:K.thousandseparatorposition,indecimalseparator:K.indecimalseparator,inthousandseparator:K.inthousandseparator,scalerecursively:V,maxscalerecursion:c,scaleseparator:J};
b.useScaleRecursively&&(m.numberscalevalue&&m.numberscalevalue.length)==(m.numberscaleunit&&m.numberscaleunit.length)||(m.scalerecursively=V=0);O={cacheStore:[],formatnumber:m.formatnumber,formatnumberscale:m.formatnumberscale,forcenumberscale:m.forcenumberscale,defaultnumberscale:m.defaultnumberscale,numberscaleunit:m.numberscaleunit.concat(),numberscalevalue:m.numberscalevalue.concat(),numberprefix:m.numberprefix,numbersuffix:m.numbersuffix,decimalprecision:parseInt(E(a.yaxisvaluedecimals,m.decimalprecision,
2),10),forcedecimals:E(a.forceyaxisvaluedecimals,m.forcedecimals),decimalseparator:m.decimalseparator,thousandseparator:m.thousandseparator,thousandseparatorposition:m.thousandseparatorposition.concat(),indecimalseparator:m.indecimalseparator,inthousandseparator:m.inthousandseparator,scalerecursively:V,maxscalerecursion:c,scaleseparator:J};h={cacheStore:[],formatnumber:E(a.sformatnumber,b.sformatnumber,q.sformatnumber),formatnumberscale:E(a.sformatnumberscale,b.sformatnumberscale,q.sformatnumberscale),
forcenumberscale:E(a.sforcenumberscale,b.sforcenumberscale,q.sforcenumberscale),defaultnumberscale:t(a.sdefaultnumberscale,b.sdefaultnumberscale,m.defaultnumberscale),numberscaleunit:E(p,b.snumberscaleunit,q.snumberscaleunit).concat(),numberscalevalue:E(h,b.snumberscalevalue,q.snumberscalevalue).concat(),numberprefix:t(a.snumberprefix,b.snumberprefix,q.snumberprefix),numbersuffix:t(a.snumbersuffix,b.snumbersuffix,q.snumbersuffix),decimalprecision:parseInt(E(a.syaxisvaluedecimals,a.sdecimals,a.decimals,
b.sdecimals,q.sdecimals),10),forcedecimals:E(a.forcesyaxisvaluedecimals,a.sforcedecimals,a.forcedecimals,b.sforcedecimals,q.sforcedecimals),decimalseparator:E(a.decimalseparator,b.decimalseparator,q.decimalseparator),thousandseparator:E(a.thousandseparator,b.thousandseparator,q.thousandseparator),thousandseparatorposition:m.thousandseparatorposition.concat(),indecimalseparator:E(a.indecimalseparator,b.indecimalseparator,q.indecimalseparator),inthousandseparator:E(a.inthousandseparator,b.inthousandseparator,
q.inthousandseparator),scalerecursively:e,maxscalerecursion:l,scaleseparator:Ea};p=v({},h);p.decimalprecision=parseInt(E(a.sdecimals,a.decimals,a.syaxisvaluedecimals,b.sdecimals,q.sdecimals),10);p.forcedecimals=E(a.sforcedecimals,a.forcedecimals,a.forcesyaxisvaluedecimals,b.sforcedecimals,q.sforcedecimals);p.cacheStore=[];b.useScaleRecursively&&(h.numberscalevalue&&h.numberscalevalue.length)==(h.numberscaleunit&&h.numberscaleunit.length)||(h.scalerecursively=e=0);/^(bubble|scatter|selectscatter|zoomscatter)$/.test(f)&&
(O.formatnumber=E(a.yformatnumber,O.formatnumber),O.formatnumberscale=E(a.yformatnumberscale,O.formatnumberscale),O.forcenumberscale=E(a.yforcenumberscale,O.forcenumberscale),O.defaultnumberscale=t(a.ydefaultnumberscale,O.defaultnumberscale),O.numberscaleunit=E(r,O.numberscaleunit),O.numberscalevalue=E(w,O.numberscalevalue),O.numberprefix=E(a.ynumberprefix,O.numberprefix),O.numbersuffix=E(a.ynumbersuffix,O.numbersuffix),m.formatnumber=E(a.yformatnumber,m.formatnumber),m.formatnumberscale=E(a.yformatnumberscale,
m.formatnumberscale),m.forcenumberscale=E(a.yforcenumberscale,m.forcenumberscale),m.defaultnumberscale=t(a.ydefaultnumberscale,m.defaultnumberscale),m.numberscaleunit=E(a.ynumberscaleunit,m.numberscaleunit.concat()),m.numberscalevalue=E(a.ynumberscalevalue,m.numberscalevalue.concat()),m.numberprefix=E(a.ynumberprefix,m.numberprefix),m.numbersuffix=E(a.ynumbersuffix,m.numbersuffix));/^(pie2d|pie3d|doughnut2d|doughnut3d|marimekko|pareto2d|pareto3d)$/.test(f)&&(m.decimalprecision=E(a.decimals,"2"));
V&&(m.numberscalevalue.push(1),m.numberscaleunit.unshift(m.defaultnumberscale),O.numberscalevalue.push(1),O.numberscaleunit.unshift(O.defaultnumberscale));e&&(h.numberscalevalue.push(1),h.numberscaleunit.unshift(h.defaultnumberscale),p.numberscalevalue.push(1),p.numberscaleunit.unshift(p.defaultnumberscale));this.Y[0]={yAxisLabelConf:O,dataLabelConf:m};this.Y[1]={yAxisLabelConf:h,dataLabelConf:p};this.paramLabels=m;this.param1=O;this.param2=h;this.paramLabels2=p;this.paramX={cacheStore:[],formatnumber:E(a.xformatnumber,
K.formatnumber),formatnumberscale:E(a.xformatnumberscale,K.formatnumberscale),forcenumberscale:E(a.xforcenumberscale,K.forcenumberscale),defaultnumberscale:t(a.xdefaultnumberscale,K.defaultnumberscale),numberscaleunit:E(A,K.numberscaleunit.concat()),numberscalevalue:E(B,K.numberscalevalue.concat()),numberprefix:E(a.xnumberprefix,K.numberprefix),numbersuffix:E(a.xnumbersuffix,K.numbersuffix),decimalprecision:parseInt(E(a.xaxisvaluedecimals,a.xaxisvaluesdecimals,K.decimalprecision,2),10),forcedecimals:E(a.forcexaxisvaluedecimals,
0),decimalseparator:K.decimalseparator,thousandseparator:K.thousandseparator,thousandseparatorposition:K.thousandseparatorposition.concat(),indecimalseparator:K.indecimalseparator,inthousandseparator:K.inthousandseparator,scalerecursively:d,maxscalerecursion:M,scaleseparator:D};this.paramLegend=v(v({},K),{cacheStore:[],decimalprecision:parseInt(G(a.legendvaluedecimals,K.decimalprecision,2),10),forcedecimals:G(a.legendvalueforcedecimals,K.forcedecimals,0),formatnumberscale:E(a.legendvalueformatnumberscale,
K.formatnumberscale),forcenumberscale:E(a.legendvalueforcenumberscale,K.forcenumberscale),formatnumber:E(a.legendvalueformatnumber,K.formatnumber)});V&&(this.paramLegend.numberscalevalue.push(1),this.paramLegend.numberscaleunit.unshift(this.paramLegend.defaultnumberscale));b.useScaleRecursively&&(this.paramX.numberscalevalue&&this.paramX.numberscalevalue.length)==(this.paramX.numberscaleunit&&this.paramX.numberscaleunit.length)||(this.paramX.scalerecursively=d=0);d&&(this.paramX.numberscalevalue.push(1),
this.paramX.numberscaleunit.unshift(this.paramX.defaultnumberscale));this.paramScale={cacheStore:[],formatnumber:E(a.tickformatnumber,K.formatnumber),formatnumberscale:E(a.tickformatnumberscale,K.formatnumberscale),forcenumberscale:E(a.tickforcenumberscale,K.forcenumberscale),defaultnumberscale:t(a.tickdefaultnumberscale,K.defaultnumberscale),numberscaleunit:E(u,K.numberscaleunit.concat()),numberscalevalue:E(H,K.numberscalevalue.concat()),numberprefix:E(a.ticknumberprefix,K.numberprefix),numbersuffix:E(a.ticknumbersuffix,
K.numbersuffix),decimalprecision:parseInt(E(a.tickvaluedecimals,K.decimalprecision,"2"),10),forcedecimals:E(a.forcetickvaluedecimals,K.forcedecimals,0),decimalseparator:K.decimalseparator,thousandseparator:K.thousandseparator,thousandseparatorposition:K.thousandseparatorposition.concat(),indecimalseparator:K.indecimalseparator,inthousandseparator:K.inthousandseparator,scalerecursively:V,maxscalerecursion:c,scaleseparator:J};V&&(this.paramScale.numberscalevalue.push(1),this.paramScale.numberscaleunit.unshift(this.paramScale.defaultnumberscale));
this.timeConf={inputDateFormat:E(a.inputdateformat,a.dateformat,"mm/dd/yyyy"),outputDateFormat:E(a.outputdateformat,a.inputdateformat,a.dateformat,"mm/dd/yyyy"),days:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),months:"January February March April May June July August September October November December".split(" "),daySuffix:" st nd rd th th th th th th th th th th th th th th th th th st nd rd th th th th th th th st".split(" ")};this.cleaneValueCacheStore={};this.percentStrCacheStore=
{}},cleaneValueCacheStore:{},percentStrCacheStore:{},dispose:function(){this.Y&&delete this.Y;this.cleaneValueCacheStore&&delete this.cleaneValueCacheStore;this.percentStrCacheStore&&delete this.percentStrCacheStore;this.paramLabels&&delete this.paramLabels;this.param1&&delete this.param1;this.param2&&delete this.param2;this.paramLabels2&&delete this.paramLabels2;this.csConf&&delete this.csConf;this.iapi&&delete this.iapi;this.baseConf&&delete this.baseConf;this.timeConf&&delete this.timeConf;this.paramX&&
delete this.paramX;this.paramScale&&delete this.paramScale},parseMLAxisConf:function(b,g){var f=this.baseConf,n=this.csConf,m=G(b.scalerecursively,f.scalerecursively),p=G(b.maxscalerecursion,f.maxscalerecursion),A=F(b.scaleseparator,f.scaleseparator),u,r,O,B,H,w;g=G(g,this.Y.length);F(b.numberscaleunit)&&(u=b.numberscaleunit.split(","));F(b.numberscalevalue)&&(r=b.numberscalevalue.split(","));p||(p=-1);if(F(b.thousandseparatorposition))for(O=b.thousandseparatorposition.split(","),B=O.length,w=q.thousandseparatorposition[0];B--;)(H=
G(a(O[B])))?w=H:H=w,O[B]=H;f={cacheStore:[],formatnumber:E(b.formatnumber,f.formatnumber),formatnumberscale:E(b.formatnumberscale,f.formatnumberscale),forcenumberscale:E(b.forcenumberscale,f.forcenumberscale),defaultnumberscale:t(b.defaultnumberscale,f.defaultnumberscale),numberscaleunit:E(u,f.numberscaleunit).concat(),numberscalevalue:E(r,f.numberscalevalue).concat(),numberprefix:t(b.numberprefix,f.numberprefix),numbersuffix:t(b.numbersuffix,f.numbersuffix),forcedecimals:E(b.forcedecimals,f.forcedecimals),
decimalprecision:parseInt("auto"===b.decimals?n.decimalprecision:E(b.decimals,f.decimalprecision),10),decimalseparator:E(b.decimalseparator,f.decimalseparator),thousandseparator:E(b.thousandseparator,f.thousandseparator),thousandseparatorposition:E(O,f.thousandseparatorposition),indecimalseparator:t(b.indecimalseparator,f.indecimalseparator),inthousandseparator:t(b.inthousandseparator,f.inthousandseparator),scalerecursively:m,maxscalerecursion:p,scaleseparator:A};this.useScaleRecursively&&(f.numberscalevalue&&
f.numberscalevalue.length)==(f.numberscaleunit&&f.numberscaleunit.length)||(f.scalerecursively=m=0);p={cacheStore:[],formatnumber:f.formatnumber,formatnumberscale:f.formatnumberscale,forcenumberscale:f.forcenumberscale,defaultnumberscale:f.defaultnumberscale,numberscaleunit:f.numberscaleunit.concat(),numberscalevalue:f.numberscalevalue.concat(),numberprefix:f.numberprefix,numbersuffix:f.numbersuffix,decimalprecision:parseInt(E(b.yaxisvaluedecimals,f.decimalprecision,2),10),forcedecimals:E(b.forceyaxisvaluedecimals,
f.forcedecimals),decimalseparator:f.decimalseparator,thousandseparator:f.thousandseparator,thousandseparatorposition:f.thousandseparatorposition.concat(),indecimalseparator:f.indecimalseparator,inthousandseparator:f.inthousandseparator,scalerecursively:m,maxscalerecursion:p,scaleseparator:A};m&&(f.numberscalevalue.push(1),f.numberscaleunit.unshift(f.defaultnumberscale),p.numberscalevalue.push(1),p.numberscaleunit.unshift(p.defaultnumberscale));this.Y[g]={dataLabelConf:f,yAxisLabelConf:p}},percentValue:function(a){var g=
this.percentStrCacheStore[a];void 0===g&&(g=isNaN(this.paramLabels.decimalprecision)?"2":this.paramLabels.decimalprecision,g=this.percentStrCacheStore[a]=m(b(a,g,this.paramLabels.forcedecimals),this.paramLabels.decimalseparator,this.paramLabels.thousandseparator,this.paramLabels.thousandseparatorposition)+"%");return g},getCleanValue:function(b,g){var f=this.cleaneValueCacheStore[b];if(void 0===f||g){var n=this.baseConf,f=b+"";n._REGinthousandseparator&&(f=f.replace(n._REGinthousandseparator,""));
n._REGindecimalseparator&&(f=f.replace(n._REGindecimalseparator,"."));f=parseFloat(f);f=isFinite(f)?f:NaN;this.cleaneValueCacheStore[b]=f=isNaN(f)?null:g?a(f):f}return f},dataLabels:function(a,b){var f=this.Y[b]||(b?this.Y[1]:this.Y[0]),n,f=f&&f.dataLabelConf||this.baseConf;n=f.cacheStore[a];void 0===n&&(n=f.cacheStore[a]=p(a,f));return n},yAxis:function(a,b){var f=this.Y[b]||(b?this.Y[1]:this.Y[0]),n,f=f&&f.yAxisLabelConf||this.baseConf;n=f.cacheStore[a];void 0===n&&(n=f.cacheStore[a]=p(a,f,!0));
return n},xAxis:function(a){var b=this.paramX.cacheStore[a];void 0===b&&(b=this.paramX.cacheStore[a]=p(a,this.paramX,!0));return b},sYAxis:function(a){var b=this.Y[1],f,b=b&&b.yAxisLabelConf||this.baseConf;f=b.cacheStore[a];void 0===f&&(f=b.cacheStore[a]=p(a,b));return f},scale:function(a){var b=this.paramScale.cacheStore[a];void 0===b&&(b=this.paramScale.cacheStore[a]=p(a,this.paramScale));return b},getCleanTime:function(a){var b;this.timeConf.inputDateFormat&&Date.parseExact&&(b=Date.parseExact(a,
this.timeConf.inputDateFormat));return b&&b.getTime()},legendValue:function(a){var b=this.paramLegend.cacheStore[a];void 0===b&&(b=this.paramLegend.cacheStore[a]=p(a,this.paramLegend));return b},legendPercentValue:function(a){var g=this.percentStrCacheStore[a],f=this.paramLegend;void 0===g&&(g=isNaN(f.decimalprecision)?"2":f.decimalprecision,g=this.percentStrCacheStore[a]=m(b(a,g,f.forcedecimals),f.decimalseparator,f.thousandseparator,f.thousandseparatorposition)+"%");return g},getDateValue:function(a){var b,
f,n;a&&!/\//.test(this.timeConf.inputDateFormat)&&(a=a.replace(new RegExp(this.timeConf.inputDateFormat.replace(/[a-z]/ig,"").slice(0,1),"g"),"/"));a=/^dd/.test(this.timeConf.inputDateFormat)&&a&&a.replace(/(\d{1,2})\/(\d{1,2})\/(\d{2,4})/,"$2/$1/$3")||a;b=new Date(a);f=b.getTime();!f&&a&&/\:/.test(a)&&(a=a.split(":"),f=G(a[0],0),n=G(a[1],0),a=G(a[2],0),f=23<f?24===f&&0===n&&0===a?f:23:f,n=59<n?59:n,a=59<a?59:a,b=new Date,b.setHours(f),b.setMinutes(n),b.setSeconds(a),f=b.getTime());return{ms:f,date:b}},
getFormattedDate:function(a,b){var f="object"===typeof a&&a||new Date(a),n=this.timeConf,m=E(b,n.outputDateFormat),q=f.getFullYear(),p=f.getMonth(),u=f.getDate(),A=f.getDay(),r=f.getMinutes(),B=f.getSeconds(),f=f.getHours(),r=9<r?""+r:"0"+r,B=9<B?""+B:"0"+B,f=9<f?""+f:"0"+f;m.match(/dnl/)&&(m=m.replace(/dnl/ig,n.days[A]));m.match(/dns/)&&(m=m.replace(/dns/ig,n.days[A]&&n.days[A].substr(0,3)));m.match(/dd/)&&(m=m.replace(/dd/ig,u));m.match(/mnl/)&&(m=m.replace(/mnl/ig,n.months[p]));m.match(/mns/)&&
(m=m.replace(/mns/ig,n.months[p]&&n.months[p].substr(0,3)));m.match(/mm/)&&(m=m.replace(/mm/ig,p+1));m.match(/yyyy/)&&(m=m.replace(/yyyy/ig,q));m.match(/yy/)&&(m=m.replace(/yy/ig,(q%1E3%100+"").replace(/^(\d)$/,"0$1")));m.match(/hh12/)&&(m=m.replace(/hh12/ig,f%12||12));m.match(/hh/)&&(m=m.replace(/hh/ig,f));m.match(/mn/)&&(m=m.replace(/mn/ig,r));m.match(/ss/)&&(m=m.replace(/ss/ig,B));m.match(/ampm/)&&(m=m.replace(/ampm/ig,12>f?"AM":"PM"));m.match(/ds/)&&(m=m.replace(/ds/ig,n.daySuffix[u]));return m}};
n.prototype.constructor=n;p=function(a,g,f){if(null!==a){a=Number(a);var n=a+"",q,p,A,u,r;q=1==g.formatnumberscale?g.defaultnumberscale:"";r=(r=n.split(".")[1])?r.length:g.forcedecimals?"2":"";if(1==g.formatnumberscale){n=a;p=g.defaultnumberscale;a=g.numberscalevalue;q=g.numberscaleunit;var O=g.scalerecursively;A=g.forcenumberscale;u={};var t=p,H=0,w=[],K=[],h;A=G(A)||0;if(O){t=G(a[0])||1E3;for(H=0;H<a.length;H++)if(O=G(a[H])||1E3,Math.abs(Number(n))>=O&&H<a.length-1)h=n%O,n=(n-h)/O,0===H&&0!==h&&
""===q[H]&&A?(w.push(h/t),K.push(q[1]||"")):0!==h&&(1===H&&""===p&&A?(O=h+(w.length?w.pop():0),K.pop(),w.push(O)):w.push(h),K.push(q[H]));else{0===H&&""===p&&A?(n=Number(n)/t,w.push(n),K.push(q[1]||"")):(1===H&&""===p&&A?(O=n+(w.length?w.pop():0),K.pop(),w.push(O)):w.push(n),K.push(q[H]));break}w.reverse();K.reverse();u.value=w;u.scale=K}else{if(a.length===q.length)for(H=0;H<a.length;H++)if(O=G(a[H])||1E3,Math.abs(Number(n))>=O)t=q[H]||"",n=Number(n)/O;else{0===H&&""===p&&A&&(t=q[0]||"",n=Number(n)/
O);break}u.value=n;u.scale=t}p=u;a=n=p.value;q=p.scale}if(g.scalerecursively&&0!==g.formatnumberscale&&"0"!==g.formatnumberscale){f=p.value;p=p.scale;a=-1==g.maxscalerecursion?f.length:Math.min(f.length,g.maxscalerecursion);if(1==g.formatnumber)for(n="",u=0;u<a;u++)q=0===u?f[u]:Math.abs(f[u]),A=q+"",u==a-1&&(A=b(q,E(g.decimalprecision,r),g.forcedecimals)),n=n+m(A,g.decimalseparator,g.thousandseparator,g.thousandseparatorposition)+p[u]+(u<a-1?g.scaleseparator:"");else for(n="",u=0;u<a;u++)n=n+(0===
u?f[u]:Math.abs(f[u])+"")+p[u]+(u<a-1?g.scaleseparator:"");n=(g.numberprefix||"")+n+(g.numbersuffix||"")}else 1==g.formatnumber&&(n=b(a,E(g.decimalprecision,r),g.forcedecimals),n=m(n,g.decimalseparator,g.thousandseparator,g.thousandseparatorposition,f)),n=(g.numberprefix||"")+n+q+(g.numbersuffix||"");return n}};return n}();b.extend(b.core,{formatNumber:function(a,b,p){b=b&&D(b)||{};var q=L(b),A;T[q]?A=T[q]:T[q]=A=new z.NumberFormatter(b,{useScaleRecursively:!0});return A.dataLabels(a,p)}},!1);b.extend(b.core,
{formatNumber:function(a,m,p,q){p=p&&D(p)||{};var A=this.jsVars.instanceAPI||{},n=A.numberFormatter,k;""===L(p)?n?k=n:(n=this.getChartData(b.dataFormats.JSON,!0),n=n.data||{},n=n.chart||{},p=L(n),T[p]?k=T[p]:T[p]=k=new z.NumberFormatter(n,A)):(n=this.getChartData(b.dataFormats.JSON,!0),n=n.data||{},n=n.chart||{},n=v(v({},n),p),p=L(n),T[p]?k=T[p]:T[p]=k=new z.NumberFormatter(n,A));switch((m&&m.toLowerCase?m:"").toLowerCase()){case "yaxisvalues":a=k.yAxis(a,q);break;case "xaxisvalues":a=k.xAxis(a);
break;case "scale":a=k.scale(a);break;default:a=k.dataLabels(a,q)}return a}},!0)}]);N.register("module",["private","modules.renderer.js-dom",function(){var b=this.hcLib,z=this.window,G=z.document,v=b.extend2,F="ontouchstart"in z;(function(b){var t=function(){var a={},b;a.pointerdrag={start:["mousedown"],end:["mouseup"],onStart:["mousemove"],postHandlers:{},preHandlers:{}};a.pointerhover={start:["mouseover"],end:["mouseout"]};a.click={start:["click"]};a.escape={start:["keydown"],preHandlers:{start:function(a){a=
a||z.event;return a.keyCode&&27===a.keyCode?!0:!1}}};F&&(b=a.pointerdrag,b.start.push("touchstart"),b.end.push("touchend"),b.onStart.push("touchmove"),b.postHandlers.onStart=function(a){a.preventDefault?a.preventDefault():a.returnValue=!1});return a}(),a;a=v({},t);b.dem=new function(){var b={},r={},t=G.addEventListener?function(a,b,q){a.addEventListener(b,q,!1)}:function(a,b,q){a.attachEvent("on"+b,q)},E=G.removeEventListener?function(a,b,q){a.removeEventListener(b,q,!1)}:function(a,b,q){a.detachEvent("on"+
b,q)},L=function(b,p,q){var A=[],n,k,g;g=a[p];q.start=function(a){a=a||z.event;for(var k=g.onStart,n=g.end,p=[],A=[],u=k&&k.length||0;u--;)p.push(D(b,k[u],q,"onStart"));for(u=n&&n.length||0;u--;)A.push(D(b,n[u],q,"end"));q.startUn=q.startUn?q.startUn.concat(p):p;q.endUn=q.endUn?q.endUn.concat(A):A;q.state="start";q.closure(a)};q.onStart=function(a){a=a||z.event;q.state="on";if(q.gDef&&q.gDef.preHandlers&&"function"===typeof q.gDef.preHandlers.onStart)q.gDef.preHandlers.onStart(a);q.closure(a);if(q.gDef&&
q.gDef.postHandlers&&"function"===typeof q.gDef.postHandlers.onStart)q.gDef.postHandlers.onStart(a)};q.end=function(a){a=a||z.event;for(var b=q.startUn,g=q.endUn,k=b&&b.length||0;k--;)b[k]();delete q.startUn;q.startUn=[];for(k=g&&g.length||0;k--;)g[k]();delete q.endUn;q.endUn=[];q.state="end";q.closure(a)};if(g)for(p=g.start,k=p.length;k--;)(n=p[k])&&A.push(D(b,n,q,"start"));return A},D=function(a,b,q,A){A=A||"closure";t(a,b,q[A]);return function(){E(a,b,q[A])}},B=function(a){return function(b){b=
b||z.event;a.handler.call(a.context||a.elem,{data:a.data,type:a.type,state:a.state,isGesture:a.isGesture,target:b.target||b.srcElement,originalEvent:b})}};return{listen:function(m,p,q,A,n){var k=this;p="string"===typeof p?p.split(" "):p;var g=p.length,f=[],t=function(a,b,g){f.push(function(){k.unlisten(a,b,g)})},C,v,R,u,X;if(m.ownerDocument&&m.ownerDocument===G)for(;g--;)v=p[g],u=!!a[v],X="function"===typeof q?q:q[g],R={handler:X,elem:m,type:v,isGesture:u,gDef:u?a[v]:null,data:A,context:n,start:[],
end:[],links:{prev:null,next:null}},R.closure=B(R),u?((C=r[v])||(C=r[v]=[]),C.push(R),L(m,v,R)):((C=b[v])||(C=b[v]=[]),C.push(R),D(m,v,R)),t(m,v,X);else for(;g--;)v=p[g],X="function"===typeof q?q:q[g],R={handler:X,elem:m,type:v,isGesture:u,data:A,context:n,start:[],end:[],links:{prev:null,next:null}},R.closure=B(R),(C=b[v])||(C=b[v]=[]),C.push(R),D(m,v,R),t(m,v,X);return{unlisten:function(){for(var a=f.length;a--;)f[a]();f.length=0;f=null}}},unlisten:function(m,p,q){var A,n=!1,k,g;if(a[p])for(k=(A=
r[p])&&A.length||0;k--;){if(g=A[k],g.handler===q&&g.elem===m){var n=m,f=void 0,B=void 0,C=void 0,f=void 0;if(f=a[p])for(f=f.start,C=f.length;C--;)(B=f[C])&&E(n,B,g.start);A.splice(k,1);n=!0}}else for(k=(A=b[p])&&A.length||0;k--;)g=A[k],g.handler===q&&g.elem===m&&(E(m,p,g.closure),A.splice(k,1),n=!0);return n},fire:function(a,p,q,A){var n;if(a.ownerDocument&&a.ownerDocument===G)G.createEvent?(n=G.createEvent("HTMLEvents"),n.initEvent(p,!0,!0),q&&(q.originalEvent?q.originalEvent=n:v(n,q)),"function"===
typeof a[p]&&a[p].call(a),a.dispatchEvent(n)):(n=G.createEventObject(),n.eventType=p,q&&(q.originalEvent?q.originalEvent=n:v(n,q)),"function"===typeof a[p]&&a[p].call(a),a.fireEvent("on"+p,n)),A&&!n.returnValue&&A(n);else for(A=(p=b[p])&&p.length||0;A--;)n=p[A],n.elem===a&&n.closure(q)}}}})(b||z);(function(b){function t(a,b){var r="";G.defaultView&&G.defaultView.getComputedStyle?r=G.defaultView.getComputedStyle(a,"").getPropertyValue(b):a.currentStyle&&(b=b.replace(/\-(\w)/g,function(a,b){return b.toUpperCase()}),
r=a.currentStyle[b]);r=parseInt(r,10);return isNaN(r)?0:r}function a(a,b,t,B,m,p,q,A){var n=b/40,k=r[p||"linear"](B-t,n),g=0,f,v,C=z.requestAnimationFrame||z.webkitRequestAnimationFrame||z.mozRequestAnimationFrame||z.oRequestAnimationFrame||z.msRequestAnimationFrame||function(a){setTimeout(a,40)},Y=function(p){var u;u=!1;p?(f||(f=p),v=p-f,p=Math.abs(t-B),u=(u=0>t-B?!1:!0)?Math.max(t-p/b*v,B)+A:Math.min(t+p/b*v,B)+A,a.style[m]=u,P&&"opacity"===m&&(u=100*Number(u),a.style.filter="progid:DXImageTransform.Microsoft.Alpha(Opacity="+
u+")"),v<b?C(Y):q&&q()):g<n?(u=k[g],a.style[m]=t+u+A,P&&"opacity"===m&&(u=100*Number(u),a.style.filter="progid:DXImageTransform.Microsoft.Alpha(Opacity="+u+")"),g+=1,setTimeout(Y,40)):q&&q()};A=A||"";C(Y)}var F={width:{suffix:"px"},height:{suffix:"px"},opacity:!0,top:{suffix:"px"},left:{suffix:"px"}},r={linear:function(a,b){for(var r=[],B=a/b,m=0;m<b;m+=1)r[m]=B*(m+1);return r}},P=/msie/i.test(z.navigator.userAgent)&&!z.opera;b.danimate=v({animate:function(b,r,D,B,m){B={};var p={},q=function(){n+=
1;n===A&&"function"===typeof m&&m()},A=0,n=0,k,g;if(40>D){for(g in r)b.style[g]=r[g];m&&m()}else for(g in r)k=null,"x"===g?(k=g,g="left"):"y"===g&&(k=g,g="top"),F[g]&&(A+=1,B[g]=r[k||g],p[g]=t(b,g),k="object"===typeof F[g]&&F[g].suffix,a(b,D,p[g],B[g],g,"linear",q,k))}},{})})(b||z)}]);N.register("module",["private","modules.renderer.js-colormanager",function(){var b=this.hcLib,z=b.pluckNumber,G=b.graphics.getDarkColor,v=b.graphics.getLightColor,F="AFD8F8 F6BD0F 8BBA00 FF8E46 008E8E D64646 8E468E 588526 B3AA00 008ED6 9D080D A186BE CC6600 FDC689 ABA000 F26D7D FFF200 0054A6 F7941C CC3300 006600 663300 6DCFF6".split(" "),
E="8BBA00 F6BD0F FF654F AFD8F8 FDB398 CDC309 B1D0D2 FAD1B9 B8A79E D7CEA5 C4B3CE E9D3BE EFE9AD CEA7A2 B2D9BA".split(" "),t=b.defaultPaletteOptions={paletteColors:[F,F,F,F,F],bgColor:["CBCBCB,E9E9E9","CFD4BE,F3F5DD","C5DADD,EDFBFE","A86402,FDC16D","FF7CA0,FFD1DD"],bgAngle:[270,270,270,270,270],bgRatio:["0,100","0,100","0,100","0,100","0,100"],bgAlpha:["50,50","60,50","40,20","20,10","30,30"],canvasBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],canvasBgAngle:[0,0,0,0,0],canvasBgAlpha:["100",
"100","100","100","100"],canvasBgRatio:["","","","",""],canvasBorderColor:["545454","545454","415D6F","845001","68001B"],canvasBorderAlpha:[100,100,100,90,100],showShadow:[0,1,1,1,1],divLineColor:["717170","7B7D6D","92CDD6","965B01","68001B"],divLineAlpha:[40,45,65,40,30],altHGridColor:["EEEEEE","D8DCC5","99C4CD","DEC49C","FEC1D0"],altHGridAlpha:[50,35,10,20,15],altVGridColor:["767575","D8DCC5","99C4CD","DEC49C","FEC1D0"],altVGridAlpha:[10,20,10,15,10],anchorBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF",
"FFFFFF"],toolTipBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],toolTipBorderColor:["545454","545454","415D6F","845001","68001B"],baseFontColor:["555555","60634E","025B6A","A15E01","68001B"],borderColor:["767575","545454","415D6F","845001","68001B"],borderAlpha:[50,50,50,50,50],legendBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],legendBorderColor:["545454","545454","415D6F","845001","D55979"],plotGradientColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],plotBorderColor:["333333",
"8A8A8A","FFFFFF","FFFFFF","FFFFFF"],plotFillColor:["767575","D8DCC5","99C4CD","DEC49C","FEC1D0"],bgColor3D:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],bgAlpha3D:["100","100","100","100","100"],bgAngle3D:[90,90,90,90,90],bgRatio3D:["","","","",""],canvasBgColor3D:["DDE3D5","D8D8D7","EEDFCA","CFD2D8","FEE8E0"],canvasBaseColor3D:["ACBB99","BCBCBD","C8A06C","96A4AF","FAC7BC"],divLineColor3D:["ACBB99","A4A4A4","BE9B6B","7C8995","D49B8B"],divLineAlpha3D:[100,100,100,100,100],legendBgColor3D:["F0F3ED",
"F3F3F3","F7F0E8","EEF0F2","FEF8F5"],legendBorderColor3D:["C6CFB8","C8C8C8","DFC29C","CFD5DA","FAD1C7"],toolTipbgColor3D:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],toolTipBorderColor3D:["49563A","666666","49351D","576373","681C09"],baseFontColor3D:["49563A","4A4A4A","49351D","48505A","681C09"],anchorBgColor3D:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"]},F=b.colorManager=function(a){this.linkedItems={iapi:a};this.configure()};F.prototype={configure:function(){var a=this.linkedItems.iapi,E=a.jsonData.chart||
{},r=b.extend2({},t),F=a.defaultPaletteOptions||{},T;r||(r={});for(T in F)r[T]=F[T];r=this.paletteOptions=r;F=this.themeEnabled=E.palettethemecolor;this.paletteIndex=(0<E.palette&&6>E.palette?E.palette:z(a.paletteIndex,1))-1;this.iterator=0;this.paletteColors=r.paletteColors[this.themeEnabled?0:this.paletteIndex];T=E.palettecolors;void 0!==T&&null!==T&&""!==E.palettecolors&&(this.paletteColors=E.palettecolors.split(/\s*\,\s*/));this.paletteLen=this.paletteColors.length;this.useFlatColors=z(E.useflatdataplotcolor,
a.useFlatColor,0);F&&(this.paletteIndex=5,r.bgColor[5]=v(F,35)+","+v(F,10),r.bgAngle[5]=270,r.bgRatio[5]="0,100",r.bgAlpha[5]="50,50",r.canvasBgColor[5]="FFFFFF",r.canvasBgAngle[5]=0,r.canvasBgAlpha[5]="100",r.canvasBgRatio[5]="",r.canvasBorderColor[5]=G(F,80),r.canvasBorderAlpha[5]=100,r.showShadow[5]=1,r.divLineColor[5]=G(F,20),r.divLineAlpha[5]=40,r.altHGridColor[5]=v(F,20),r.altHGridAlpha[5]=15,r.altVGridColor[5]=v(F,80),r.altVGridAlpha[5]=10,r.anchorBgColor[5]="FFFFFF",r.toolTipBgColor[5]="FFFFFF",
r.toolTipBorderColor[5]=G(F,80),r.baseFontColor[5]=F.split&&F.split(",")[0],r.borderColor[5]=G(F,60),r.borderAlpha[5]=50,r.legendBgColor[5]="FFFFFF",r.legendBorderColor[5]=G(F,80),r.plotGradientColor[5]="FFFFFF",r.plotBorderColor[5]=G(F,85),r.plotFillColor[5]=G(F,85),r.bgColor3D[5]="FFFFFF",r.bgAlpha3D[5]="100",r.bgAngle3D[5]=90,r.bgRatio3D[5]="",r.canvasBgColor3D[5]=v(F,20),r.canvasBaseColor3D[5]=v(F,40),r.divLineColor3D[5]=G(F,20),r.divLineAlpha3D[5]=40,r.legendBgColor3D[5]="FFFFFF",r.legendBorderColor3D[5]=
G(F,80),r.toolTipbgColor3D[5]="FFFFFF",r.toolTipBorderColor3D[5]=G(F,80),r.baseFontColor3D[5]=F.split&&F.split(",")[0],r.anchorBgColor3D[5]="FFFFFF",r.tickColor&&(r.tickColor[5]=G(F,90)),r.trendDarkColor&&(r.trendDarkColor[5]=G(F,90)),r.trendLightColor&&(r.trendLightColor[5]=v(F,r.TrendLightShadeOffset)),r.msgLogColor&&(r.msgLogColor[5]=v(F,80)),r.dialColor&&(r.dialColor[5]=G(F,95)+",FFFFFF,"+G(F,95)),r.dialBorderColor&&(r.dialBorderColor[5]=G(F,95)+",FFFFFF,"+G(F,95)),r.pivotColor&&(r.pivotColor[5]=
v(F,95)+",FFFFFF,"+v(F,95)),r.pivotBorderColor&&(r.pivotBorderColor[5]=G(F,95)+",FFFFFF,"+G(F,95)),r.pointerBorderColor&&(r.pointerBorderColor[5]=G(F,75)),r.pointerBgColor&&(r.pointerBgColor[5]=G(F,75)),r.thmBorderColor&&(r.thmBorderColor[5]=G(F,90)),r.thmFillColor&&(r.thmFillColor[5]=v(F,55)),r.gaugeBorderColor&&(r.gaugeBorderColor[5]=G(F,90)),r.gaugeFillColor&&(r.gaugeFillColor[5]=v(F,55)),r.cylFillColor&&(r.cylFillColor[5]=v(F,55)),r.periodColor&&(r.periodColor[5]=v(F,10)),r.winColor&&(r.winColor[5]=
"666666"),r.lossColor&&(r.lossColor[5]="CC0000"),r.drawColor&&(r.drawColor[5]="666666"),r.scorelessColor&&(r.scorelessColor[5]="FF0000"),r.gridColor&&(r.gridColor[5]=v(F,30)),r.categoryBgColor&&(r.categoryBgColor[5]=v(F,10)),r.dataTableBgColor&&(r.dataTableBgColor[5]=v(F,10)),r.gridResizeBarColor&&(r.gridResizeBarColor[5]=G(F,90)),r.scrollBarColor&&(r.scrollBarColor[5]=v(F,50)))},getColor:function(a){return this.paletteOptions[a][this.paletteIndex]},getPlotColor:function(a){var b=this.paletteColors;
a=this.useFlatColors?this.getColor("plotFillColor"):b[a%this.paletteLen];a||(this.iterator===this.paletteLen&&(this.iterator=0),a=b[this.iterator],this.iterator+=1);return a},parseColorMix:function(a,b){var r=[],t,z,L,D,B,m,p,q,A,n;b=b.replace(/\s/g,"");b=b.toLowerCase();if(""===b||null===b||void 0===b)r=[a];else for(z=b.split(","),L=a.split(","),D=Math.max(z.length,L.length,1),B=z[0],m=L[0],A=/[\{\}]/ig,n=0;n<D;n++)p=(z[n]||B).replace(A,""),q=L[n]||m,"color"==p?r.push(q):"light"==p.substr(0,5)?(t=
p.indexOf("-"),t=-1==t?1:p.substr(t+1,p.length-t),t=100-t,r.push(v(q,t))):"dark"==p.substr(0,4)?(t=p.indexOf("-"),t=-1==t?1:p.substr(t+1,p.length-t),t=100-t,r.push(G(q,t))):r.push(p);return r},parseAlphaList:function(a,b){var r=a.split(","),t=[],v,L=100,D;for(D=0;D<b;D++)v=z(r[D]),void 0!==v&&null!==v&&(L=v),t[D]=L;return t.join()},parseRatioList:function(a,b){var r=a.split(","),t=[],v=0,z,D;for(D=0;D<b;D++)z=r[D],z=isNaN(z)||void 0===z?0:Math.abs(Number(z)),z=100<z?100:z,t[D]=z,v+=z;v=100<v?100:
v;if(r.length<b)for(D=r.length;D<b;D++)t[D]=(100-v)/(b-r.length);t[-1]=0;return t.join()}};F.prototype.constructor=F;b.defaultGaugePaletteOptions={paletteColors:[E,E,E,E,E],bgColor:["CBCBCB,E9E9E9","CFD4BE,F3F5DD","C5DADD,EDFBFE","A86402,FDC16D","FF7CA0,FFD1DD"],bgAngle:[270,270,270,270,270],bgRatio:["0,100","0,100","0,100","0,100","0,100"],bgAlpha:["50,50","60,50","40,20","20,10","30,30"],toolTipBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],toolTipBorderColor:["545454","545454","415D6F",
"845001","68001B"],baseFontColor:["555555","60634E","025B6A","A15E01","68001B"],tickColor:["333333","60634E","025B6A","A15E01","68001B"],trendDarkColor:["333333","60634E","025B6A","A15E01","68001B"],trendLightColor:["f1f1f1","F3F5DD","EDFBFE","FFF5E8","FFD1DD"],pointerBorderColor:["545454","60634E","415D6F","845001","68001B"],pointerBgColor:["545454","60634E","415D6F","845001","68001B"],canvasBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],canvasBgAngle:[0,0,0,0,0],canvasBgAlpha:["100","100",
"100","100","100"],canvasBgRatio:["","","","",""],canvasBorderColor:["545454","545454","415D6F","845001","68001B"],canvasBorderAlpha:[100,100,100,90,100],altHGridColor:["EEEEEE","D8DCC5","99C4CD","DEC49C","FEC1D0"],altHGridAlpha:[50,35,10,20,15],altVGridColor:["767575","D8DCC5","99C4CD","DEC49C","FEC1D0"],altVGridAlpha:[10,20,10,15,10],borderColor:["767575","545454","415D6F","845001","68001B"],borderAlpha:[50,50,50,50,50],legendBgColor:["ffffff","ffffff","ffffff","ffffff","ffffff"],legendBorderColor:["545454",
"545454","415D6F","845001","D55979"],plotFillColor:["767575","D8DCC5","99C4CD","DEC49C","FEC1D0"],plotBorderColor:["999999","8A8A8A","6BA9B6","C1934D","FC819F"],msgLogColor:["717170","7B7D6D","92CDD6","965B01","68001B"],TrendLightShadeOffset:30}}]);N.register("module",["private","modules.renderer.js-annotations",function(){var b=this,z=b.core,G=b.hcLib,v=b.window,F=/msie/i.test(v.navigator.userAgent)&&!v.opera,E=G.addEvent,t=G.removeEvent,a=G.hasTouch,Q=v.Number,r=a?6:5,P="rgba(192,192,192,"+(F?.002:
1E-6)+")",F=Math,T=F.min,L=F.max,D=F.sin,B=F.cos,m=F.PI,p=m/180,q=F.abs,A=b.extend,n=G.pluck,k=G.pluckNumber,g=G.graphics.convertColor,f=G.getValidValue,S=G.parseUnsafeString,C=G.setImageDisplayMode,Y=G.graphics.parseColor,R=G.setLineHeight,u=G.getMouseCoordinate,X={style:{}},O=G.toRaphaelColor,W=function(a,c){return{start:-a,end:-c,angle:a-c}},H=function(a,c){var e=0;switch(a){case "startx":e=c.x;break;case "starty":e=c.y;break;case "x":case "middlex":case "centerx":e=c.x+c.width/2;break;case "y":case "middley":case "centery":e=
c.y+c.height/2;break;case "endx":e=c.x+c.width;break;case "endy":e=c.y+c.height;break;default:e=0}return e},w=function(a,c,e,b,h){var f,g,k=0,n=0;g=void 0===c||null===c?1:c;var w;if(!a||!a.toString)return{value:e,hasDynamicMacros:!1};a=a.toString();a=a.toLowerCase().replace(/\s/g,"");if(e=a.match(/^[\+\-]?\d+(\.\d+)?|[\+\-]\d+(\.\d+)?/g)){for(c=0;c<e.length;c+=1)k+=Number(e[c])||0;k*=g}if(e=a.match(/^[\+\-]?(\$[a-z0-9\.]+)|[\+\-](\$[a-z0-9\.]+)/g))for(c=0;c<e.length;c+=1){f=e[c];var u=b,m=h,q=f.split("."),
p=void 0,C=void 0,A=0;for(g=void 0;p=q.shift();)switch(typeof(C=u[p])){case "object":u=C[p];break;case "function":C=C(q,m),"-"===f.charAt()&&(C*=-1),g=!0;default:A+=Q(C)||0,q.length=0}f=A;g&&(w=!0);n+=f}if(e=a.match(/^[\+\-]?\$\d+(\.\d+)?|[\+\-]\$\d+(\.\d+)?/g))for(c=0;c<e.length;c+=1)n=n+Number(e[c].replace("$",""))||0;return{value:k+n,hasDynamicMacros:w}},K=function(a,c,e){if(!c.removed){c=c.data("annotation");var h=c.getRenderer(),f=u(h.linkedItems.container,e),g=f.annotationOptions=c.options,
k=f.groupOptions=c.group.options;f._shape=c;"id"in g&&(f.annotationId=g.id);"id"in k&&(f.groupId=k.id);b.raiseEvent(a,f,h.chartInstance,e)}},h,V,e;V=function(a,c,b,h,f,g){this.options=a;this.attrs={};this.css={};this.bounds={};this.shared=c;this.snaps=b||{};this.annotations=f;this.items=c=[];this._idstore=h;a.id&&(this._id=a.id,h[a.id]=this);if(a=a.items)for(h=0,b=a.length;h<b;h+=1)c.push(new e(a[h],this)),c[h].chart=g};A(V.prototype,{scaleImageX:1,scaleImageY:1,scaleText:1,scaleValue:1,scaleValueComplement:1,
scaleX:1,scaleY:1});V.prototype.setup=function(){var a=this.options,c=this.shared,e=this.getRenderer();e&&(this.isBelow=0!==k(a.showbelow,a.showbelowchart,c.showbelow),this.useTracker=!this.isBelow&&e.graphics.trackerGroup&&this.shared.useTracker,this.raiseOwnEvents=c.interactionevents)};V.prototype.scale=function(){var a=this.options,c=this.shared,e=this.bounds,b=this.snaps,h=this.getRenderer(),f=c.rootxscale,g=c.rootyscale,u=e.xs=k(a.xscale,c.xscale,100)/100,m=e.ys=k(a.yscale,c.yscale,100)/100,
q,p,C;q=(q=this.annotations)&&q.resetScale;h&&(q&&(this.scaleText=1),this.scaleText*=m,this.scaleImageX*=u,this.scaleImageY*=m,0!==k(a.autoscale,c.autoscale)&&(u=k(a.origw,c.origw),m=k(a.origh,c.origh),u=h.config.width/u,m=h.config.height/m,h=0!==k(a.constrainedscale,c.constrainedscale),q=u<m?u:m,p=h?q:u,C=h?q:m,this.scaleValue=V.prototype.scaleValue*q,this.scaleValueComplement=V.prototype.scaleValueComplement*(h?q:u<m?m:u),this.scaleX=V.prototype.scaleX*p,this.scaleY=V.prototype.scaleX*C,e.xs*=p,
e.ys*=C,f*=p,g*=C,"1"==n(a.scaletext,c.scaletext)&&(this.scaleText=V.prototype.scaleText*C),"1"==n(a.scaleimages,c.scaleimages)&&(this.scaleImageX=V.prototype.scaleImageX*p,this.scaleImageY=V.prototype.scaleImageY*C)),e.x=w(n(a.x,a.xpos),f,0,b,this.isBelow).value+k(a.grpxshift,c.grpxshift,0),e.y=w(n(a.y,a.ypos),g,0,b,this.isBelow).value+k(a.grpyshift,c.grpyshift,0),this.xshift=k(a.xshift,c.xshift,0),this.yshift=k(a.yshift,c.yshift,0))};V.prototype.draw=function(){var a=this.getRenderer(),c=this.options,
e=this.bounds,b=this.items,h=a&&a.graphics,f,g=this.wrapper,n,u=[],w,m,q=this.chart,p=q&&q.config||{},q=p.annRenderDelay,p=p.resize,C=function(){w=0;for(m=u.length;w<m;w++)n=u[w],n.draw()},A=(f=this.annotations)&&f.resetScale;if(a){a.annotationRelativeLayer&&"axis"===a.annotationRelativeLayer?(f=h.axisTopGroup||h.datasetGroup,h=h.axisBottomGroup||h.datasetGroup):f=h=h.datasetGroup;g||(this.wrapper=g=a.components.paper.group("annotations"),f&&h&&(this.isBelow?g.insertBefore(h):g.insertAfter(a.graphics.datalabelsGroup||
f)));A&&this.wrapper.attr({transform:""});this.wrapper.attr({x:0,y:0,visibility:k(c.visible,1)?"":"hidden"}).translate(e.x,e.y);w=0;for(m=b.length;w<m;w+=1)n=b[w],n.scale(!0),n.queueDraw?n.queue():(u.push(n),n.setup());q&&!p?setTimeout(function(){C()},q):C();return this}};V.prototype.destroy=function(){for(var a=this.wrapper,c=this.items,e;e=c.shift();)e.destroy();a&&(this.wrapper=a.remove());this._idstore[this._id]===this&&delete this._idstore[this._id]};V.prototype.addItem=function(a,c,b){var h=
this.items,f=this._idstore;this.chart=b;h.push(a=new e(a,this,f));c&&null!==this.getRenderer()&&(a.scale(),a.setup(),a.draw());return a};V.prototype.removeItem=function(a){for(var c=this.items,e=c.length;e--;)if(a===c[e]._id)return c.splice(e,1)};V.prototype.getRenderer=function(){return this.annotations&&this.annotations.getRenderer()||null};e=function(a,c){var b=!1,h;this.options=a;this.chart=(this.group=c)&&c.chart;this.args=[];this.attrs={};this.attrsTracker={};this.style={};this.bounds={};this._idstore=
c._idstore;a.id&&(this._id=a.id,c._idstore[a.id]=this);this.type=a.type&&a.type.toLowerCase&&a.type.toLowerCase();for(h in e.eventNames)"function"===typeof a[h]&&(this[h]=a[h],b=!0);this.hasEvents=b;"function"===typeof a.onload&&(this.onload=a.onload)};b.extend(e.prototype,{getAbsoluteBounds:function(){var a=this.bounds,c=a.x1,e=a.y1,b=a.x2,h=a.y2,f=T(c,b),g=T(e,h),c=L(c,b)-f,e=L(e,h)-g;return{x:f,width:c,y:g,height:e,r:a.r,unscaled:{width:c/a.xs,height:e/a.ys}}},queue:function(){this.group.annotations.shapesToDraw.push(this)},
scale:function(a){var c=this,b=c.group,h=b.bounds,f=c.bounds,g=c.options,u=b.snaps,m=n(g.x,g.xpos),q=n(g.y,g.ypos),p=n(g.tox,g.toxpos),C=n(g.toy,g.toypos),A=f.xs=h.xs,h=f.ys=h.ys,H=k(g.xshift,b.xshift,0),r=k(g.yshift,b.yshift,0),K;K=function(e,h,f,g){e=w(e,h,f,g,b.isBelow);e.hasDynamicMacros&&a&&(c.queueDraw=!0);return e.value};c.hasDimension=!0;c.hasDimensionX=!0;c.hasDimensionY=!0;f.x1=K(m,A,0,u)+H;void 0===p?(c.hasDimension=!1,c.hasDimensionX=!1,f.x2=f.x1):f.x2=K(p,A,0,u)+H;f.y1=K(q,h,0,u)+r;void 0===
C?(c.hasDimension=!1,c.hasDimensionY=!1,f.y2=f.y1):f.y2=K(C,h,0,u)+r;e.angularShapeTypes[c.type]&&(f.angles=W(K(g.startangle,1,0,u),K(g.endangle,1,360,u)));f.r=K(g.radius,b.scaleValue,0,u)},setup:function(){var a=this.options,c=this.group,b=c.options,h=this.attrs,u=this.style,w=c.scaleValue,m=k(b.fillalpha,b.alpha,100),q=this.fillAlpha=n(a.fillalpha,a.alpha,m),p=this.fillColor=n(a.fillcolor,a.color,b.color),C=this.fillPattern=n(a.fillpattern&&a.fillpattern.toLowerCase&&a.fillpattern.toLowerCase(),
b.fillpattern&&b.fillpattern.toLowerCase&&b.fillpattern.toLowerCase()),H=this.bordered=k(a.showborder,e.borderedShapeTypes[this.type],!!f(a.bordercolor)),r=this.borderColor=n(a.bordercolor,b.bordercolor,p),m=this.borderAlpha=k(a.borderalpha,a.alpha,b.borderalpha,m),K=this.dashed=!!k(a.dashed,0),O=k(a.borderthickness,a.thickness,2)*w;this.link=n(a.link,b.link);this.shadow="1"==n(a.showshadow,b.showshadow);void 0===p&&(p=e.borderedShapeTypes[this.type]&&"none"||"#ff0000",void 0===r&&(r="#ff0000"));
H&&O?(h.stroke=g(r,m),h["stroke-linecap"]="round",h["stroke-width"]=O,K&&(h["stroke-dasharray"]=[k(a.dashlen,5)*w,k(a.dashgap,3)*w])):h.stroke="none";this.fillOptions={gradientUnits:"objectBoundingBox",color:p,alpha:q,ratio:n(a.fillratio,b.fillratio),angle:360-k(a.fillangle,0),radialGradient:"radial"===C};this.link&&(u.cursor="pointer",u._cursor="hand");h.visibility=k(a.visible,1)?"":"hidden";this.useTracker=c.useTracker;this.toolText=S(n(a.tooltext,b.tooltext));if(this.useTracker||this.link||this.toolText)A(this.attrsTracker,
{stroke:P,fill:P}),this.link&&(this.attrsTracker.ishot=+new Date);this.raiseOwnEvents=c.raiseOwnEvents},draw:function(){var a=this.getRenderer(),c=this.type,b=this.attrs,h=this.style,f=a&&a.components.paper,g=e.types[c]&&e.types[c].call&&e.types[c].call(this,a),k=e.imageShapeTypes[g],n=e.textShapeTypes[g],u=k||n||e.trackerShapeTypes[g],w=this.link||this.toolText,m=this.wrapper,c=this.tracker,q=a&&a.graphics.trackerGroup||this.group.wrapper,p=!1,C=c||m,A=e.eventNames,H=e.ownEvents,r,K;if(a){if(g){if(m)if(m.elemType!==
g){if(this.ownEventsAttached){for(K in H)C["un"+K].apply(m,H[K]);this.ownEventsAttached=!1}m=m.remove()}else if(this.hasEvents)for(r in A)(K=this[r])&&K.eventAttached&&(t(C.node,A[r],K),K.eventAttached=!1);k||(b.fill=O(this.fillOptions));m?m.attr(b).css(h):(this.args.push(this.group.wrapper),m=this.wrapper="text"===g?f[g].call(f,b,h,this.group.wrapper):f[g].apply(f,this.args).attr(b).css(h),m.elemType=g,m.data("annotation",this),p=!0,this.args.pop());!this.shadow||this.shadowAdded||k||n?m.shadow(this.shadowAdded=
!1):m.shadow(this.shadowAdded=!0,L(this.borderAlpha,this.fillOptions.alpha)/100);w?this.useTracker&&(c||(this.args.push(q),c=this.tracker=u?f.rect(0,0,0,0,0,q):f[g].apply(f,this.args),this.args.pop()),c.attr(b).attr(this.attrsTracker)):c&&(c=c.remove());C=c||m;if(this.raiseOwnEvents&&!this.ownEventsAttached){for(K in H)C[K].apply(m,H[K]);this.ownEventsAttached=!0}this.link&&C.click(a.linkedItems.linkClickFN,this);this.toolText&&(C.tooltip(this.toolText||""),this.group.wrapper.trackTooltip(!0));if(this.hasEvents)for(r in A)(K=
this[r])&&!K.eventAttached&&(E(C.node,A[r],K,this),K.eventAttached=!0);k||(c&&u&&(a=m.getBBox(),c.attr({x:a.x,y:a.y,width:a.width,height:a.height})),p&&this.onload&&this.onload(b))}return this}},destroy:function(){var a=this.wrapper,c=this.tracker,b=c||a,h=e.eventNames,f=e.ownEvents,g,k;if(a){if(this.ownEventsAttached){for(k in f)b["un"+k].apply(a,f[k]);this.ownEventsAttached=!1}if(this.hasEvents)for(g in h)(k=this[g])&&k.eventAttached&&(t(b.node,h[g],k),k.eventAttached=!1);c&&(this.tracker=c.remove());
this.wrapper=a.remove()}this._idstore[this._id]===this&&delete this._idstore[this._id]},getRenderer:function(){return this.group&&this.group.getRenderer()||null}});b.extend(e,{imageShapeTypes:{image:!0},angularShapeTypes:{circle:!0,arc:!0},textShapeTypes:{text:!0},trackerShapeTypes:{image:!0,text:!0},borderedShapeTypes:{path:!0,line:!0},eventNames:{onmouseover:a?"touchstart":"mouseover",onmouseout:"mouseout",onmousemove:a?"touchmove":"mousemove",onclick:"click"},ownEvents:{click:[function(a){K("annotationClick",
this,a)}],hover:[function(a){K("annotationRollOver",this,a)},function(a){K("annotationRollOut",this,a)}]},textAlignOptions:{left:"start",right:"end",center:"middle"},textVerticalAlignOptions:{top:"bottom",middle:"middle",bottom:"top"},textRotationOptions:{0:"0",1:"270",right:"90",cw:"90",left:"270",ccw:"270"},types:{rectangle:function(){var a=this.args,c=this.attrs,e=this.getAbsoluteBounds(),b=.5*e.width;e.r>b&&(e.r=b);a[0]=c.x=e.x;a[1]=c.y=e.y;a[2]=c.width=e.width;a[3]=c.height=e.height;a[4]=c.r=
e.r;return"rect"},line:function(){var a=this.attrs,c=this.bounds;this.args[0]=a.path=["M",c.x1,c.y1,"L",c.x2,c.y2];1===a["stroke-width"]&&(a["shape-rendering"]="crisp");a["stroke-width"]<r&&(this.attrsTracker["stroke-width"]=r);this.bordered&&this.dashed&&(this.attrsTracker["stroke-dasharray"]="solid");return"path"},path:function(){var a=this.attrs,c=this.bounds;this.args[0]=a.path=this.options.path;a.transform=["T",c.x1,c.y1,"S",c.xs,c.ys,c.x1,c.y1];1===a["stroke-width"]&&(a["shape-rendering"]="crisp");
return"path"},polygon:function(){var a=this.args,c=this.attrs,e=this.options,b=this.bounds,h=this.group,f=h.snaps;a[0]=w(e.sides,1,5,f,h.isBelow).value;a[1]=b.x1;a[2]=b.y1;a[3]=b.r;a[4]=w(e.startangle,1,0,f,h.isBelow).value;a[5]=0;c.polypath=a.slice(0);return"polypath"},circle:function(a){var c=this.args,e=this.attrs,b=this.options,h=this.bounds,f=a.config.width,g=a.config.height,k=this.group.scaleValueComplement,u=this.group.snaps,C=h.angles,A=this.group;a=h.r;n(b.radius)||(h.r=f<g?f*h.xs:g*h.ys,
h.r=a=.3*h.r);b=w(b.yradius,k,a,u,A.isBelow).value;this.fillPattern||(this.fillOptions.radialGradient=!0,this.fillPattern="radial");"radial"===this.fillPattern&&(this.fillOptions.cx=this.fillOptions.cy=.5);g=C.angle%360;if(!g&&a===b)return c[0]=e.cx=h.x1,c[1]=e.cy=h.y1,c[2]=e.r=h.r,"circle";g||(C.angle=0<C.angle?C.angle-.001:C.angle+.001,C.start=C.end-C.angle);g||g==C.angle||(g=360);f=C.start*p;C=C.end*p;g*=p;u=h.x1;A=h.y1;h=u+B(f)*a;k=A+D(f)*b;u+=B(C)*a;A+=D(C)*b;a=["M",h,k,"A",a,b,0,q(g)>=m?1:0,
f<C?1:0,u,A,"Z"];c[0]=e.path=a;return"path"},arc:function(a){var c=this.options,e=this.args,b=this.attrs,h=this.bounds,f=a.config.width;a=a.config.height;var g=this.group,k=g.scaleValue,u=h.angles;n(c.radius)||(h.r=f<a?f*h.xs:a*h.ys,h.r*=.3);h.innerR=w(c.innerradius,k,.8*h.r,this.group.snaps,g.isBelow).value;h.innerR>h.r&&(h.innerR+=h.r,h.r=h.innerR-h.r,h.innerR-=h.r);this.fillPattern||(this.fillOptions.radialGradient=!0,this.fillPattern="radial");"radial"===this.fillPattern&&(this.fillOptions.cx=
this.fillOptions.cy=.5);e[0]=h.x1;e[1]=h.y1;e[2]=h.r;e[3]=h.innerR;e[4]=u.end*p;e[5]=u.start*p;b.ringpath=e.slice(0);return"ringpath"},text:function(a){var c=this.args,b=this.style,h=this.attrs,f=this.group,g=this.bounds,u=this.options,w=this.getAbsoluteBounds(),m=n(u.align,f.options.textalign,"center").toLowerCase(),q=n(u.valign,f.options.textvalign,"middle").toLowerCase(),p=S(n(u.text,u.label)),C=a.linkedItems.smartLabel,H=k(u.wrap,f.options.wraptext,1),r,K,O=n(u.rotatetext,f.options.rotatetext,
"0").toLowerCase(),O=e.textRotationOptions[O],B="0"!==O?"y":"x",t=a.config.orphanStyles;a=A({},t.defaultStyle.style||{});t=f.id&&t[f.id.toLowerCase()]||X;a=A(a,t.style);var t=parseFloat(a.fontSize),V=n(u.font,f.options.font,a.fontFamily),f=k(u.fontsize,f.options.fontsize,t)*f.scaleText;H&&(r=k(u.wrapwidth,this.hasDimensionX?w.width/g.xs:void 0),K=k(u.wrapheight,this.hasDimensionY?w.height/g.ys:void 0),r&&(r*=g.xs),K&&(K*=g.ys));b.fontFamily=V;b.fontWeight=k(u.bold,u.isbold,0)?"bold":"normal";k(u.italic,
u.isitalic,0)&&(b.fontStyle="italic");u.bgcolor&&(!h["text-bound"]&&(h["text-bound"]=[]),h["text-bound"][0]=Y(u.bgcolor));u.bordercolor&&(!h["text-bound"]&&(h["text-bound"]=[]),h["text-bound"][1]=Y(u.bordercolor),h["text-bound"][2]=k(u.borderthickness,1),h["text-bound"][3]=k(u.padding,1));u.fontcolor&&(h.fill=Y(u.fontcolor),this.fillOptions&&(this.fillOptions.color=h.fill));b.fontSize=f+"px";f===t?b.lineHeight=a.lineHeight:R(b);h["text-anchor"]=e.textAlignOptions[m]||e.textAlignOptions.center;C.setStyle(b);
b=C.getSmartText(p,r,K,!1);h["vertical-align"]=e.textVerticalAlignOptions[q]||e.textVerticalAlignOptions.middle;h["text-anchor"]===e.textAlignOptions.left?w[B]+=k(u.leftmargin,0):h["text-anchor"]===e.textAlignOptions.center&&(w[B]+=.5*k(u.leftmargin,0));"0"!==O&&(h.rotation=[parseFloat(O),w.x,w.y]);c[0]=h.x=w.x;c[1]=h.y=w.y;c[2]=h.text=b.text;b.tooltext&&(h.title=b.tooltext);delete h.stroke;delete h["stroke-weight"];return"text"},image:function(a){var c=this,e=c.style,b=a.config.width,h=a.config.height;
a=c.options;var g=c.attrs,u=c.args,w=f(a.url),m=c.group.scaleImageX*n(Number(a.xscale),100)/100,q=c.group.scaleImageY*n(Number(a.yscale),100)/100,p=c.getAbsoluteBounds(),H={width:1,height:1},r;if(!w)return u[0]=g.x=p.x,u[1]=g.y=p.y,u[2]=g.width=p.width,u[3]=g.height=p.height,u[4]=g.r=p.r,"rect";r=new v.Image;r.onload=function(){H=C("none","top","left",100,0,b,h,r);delete H.x;delete H.y;H=A(H,{width:(c.hasDimensionX?p.unscaled.width:H.width)*m,height:(c.hasDimensionY?p.unscaled.height:H.height)*q});
setTimeout(function(){var a,b,d;if(a=c.wrapper){a.attr(H);if(b=c.tracker)d=a.getBBox(),b.attr({x:d.x,y:d.y,width:d.width,height:d.height});a.css({opacity:e.opacity=L(k(c.fillAlpha,c.borderAlpha),c.borderAlpha)/100})}c.onload&&c.onload(H)},0)};r.src=w;u[0]=g.src=w;u[1]=g.x=p.x;u[2]=g.y=p.y;u[3]=g.width=(c.hasDimensionX?p.unscaled.width:H.width)*m;u[4]=g.height=(c.hasDimensionY?p.unscaled.height:H.height)*q;e.opacity=L(k(c.fillAlpha,c.borderAlpha),c.borderAlpha)/100;delete g.stroke;delete g.fill;delete g["stroke-linecap"];
return"image"}}});h=function(){this.groups=[];this._idstore={};this._options={}};G.Annotations=h;b.extend(h.prototype,{reset:function(a,c,e){var b=this.groups,h,f;this.chart=e;this.clear();if(f=this.setSnapPoints()){h={};for(var g in f)switch(typeof f[g]){case "object":case "function":h["-$"+g]=h["$"+g]=h["+$"+g]=f[g];break;default:h["$"+g]=h["+$"+g]=f[g],h["-$"+g]=-1*f[g]}h=this._literals=h}c&&(this._options=c);if(a&&a.groups&&b)for(f=0;f<a.groups.length;f+=1)b.push(new V(a.groups[f],c,h,this._idstore,
this,e)),b[f].chart=e},getRenderer:function(){return this._renderer},addGroup:function(a){var c=this.getRenderer();this.groups.push(a=new V(a,this._options,this._literals,this._idstore,this,this.chart));c&&(a.setup(),a.scale(),a.draw());return a},addItem:function(a,c,e){var h,f=this.getRenderer();"string"===typeof a?h=this._idstore[a]:(e=c,c=a);if(h&&h.addItem){if(!f&&e){b.raiseWarning(this,"04031411430","run","Annotations~addItem()","Cannot draw the shapeif the group has not been drawn. Use Annotations~draw() to draw the group and pass the renderer to it.");
return}a=h.addItem(c,e)}else a=this.addGroup({}).addItem(c,e);return a},draw:function(a,c){var e=this.groups,b,h,f;if(e&&(this._renderer=a||this._renderer))for(this.resetScale=c,h=0,f=e.length;h<f;h++)b=e[h],b.setup(),b.scale(),b.draw()},clear:function(){var a=this.groups,c;if(a){for(;c=a.shift();)c.destroy();this.shapesToDraw=[]}},dispose:function(){var a;this.disposing=!0;this.clear();for(a in this)delete this[a];this.disposed=!0},hide:function(a){if(a=this._idstore[a])return a.attrs.visibility=
"hidden",a.wrapper&&a.wrapper.hide(),a},show:function(a){if(a=this._idstore[a])return a.attrs.visibility="",a.wrapper&&a.wrapper.show(),a},update:function(a,c,e){a=this._idstore[a];var b;if(a&&c){if("object"===typeof c)for(b in c.id&&delete c.id,c.type&&delete c.type,c)a.options[(b+"").toLowerCase()]=c[b]+"";else a.options[(c+"").toLowerCase()]=e+"";a.wrapper&&(a.scale(),a.setup(),a.draw());return a}},destroy:function(a){var c=this._idstore[a],e=c.group;c&&"function"===typeof c.destroy&&(e&&e.removeItem(a),
c.destroy())},shapesToDraw:[],setSnapPoints:function(){var a=this.chart,c=a.config,e=a.components,b=e.legend,h=e.gradientLegend,f=e.caption.config,e=e.subCaption.config,g=f.width||0,k=e.width||0,n,u=this.datasetFunction.bind(a),w=this.xAxisFunction.bind(a),m=this.yAxisFunction.bind(a);"end"===f.align?(a=f.x-g,n=f.x-k):"start"===f.align?a=n=f.x:(a=f.x-g/2,n=f.x-k/2);b=c.gLegendEnabled?h.conf:b.config;return{canvasendx:c.canvasRight,canvasendy:c.canvasBottom,canvasheight:c.canvasHeight,canvasstartx:c.canvasLeft,
canvasstarty:c.canvasTop,canvaswidth:c.canvasWidth,canvascenterx:c.canvasCenterX||c.canvasLeft+(c.canvasRight-c.canvasLeft)/2,canvascentery:c.canvasCenterY||c.canvasTop+(c.canvasBottom-c.canvasTop)/2,chartcenterx:c.width/2,chartcentery:c.height/2,chartstartx:0,chartstarty:0,chartendx:c.width,chartendy:c.height,chartheight:c.height,chartwidth:c.width,chartleftmargin:c.marginLeft,chartrightmargin:c.marginRight,chartbottommargin:c.marginBottom,charttopmargin:c.marginTop,captionendx:a+f.width,captionendy:f.y+
f.height,captionheight:f.height,captionstartx:a,captionstarty:f.y,captionwidth:g,subcaptionendx:n+e.width,subcaptionendy:e.y+e.height,subcaptionheight:e.height,subcaptionstartx:n,subcaptionstarty:e.y,subcaptionwidth:k,legendendx:b.xPos+b.width,legendendy:b.yPos+b.height,legendheight:b.height,legendstartx:b.xPos,legendstarty:b.yPos,legendwidth:b.width,dataset:u,xaxis:w,yaxis:m,gaugestartx:c.gaugeStartX,gaugestarty:c.gaugeStartY,gaugeendx:c.gaugeEndX,gaugeendy:c.gaugeEndY,gaugecenterx:c.gaugeCenterX,
gaugecentery:c.gaugeCenterY,gaugestartangle:c.gaugeStartAngle,gaugeendangle:c.gaugeEndAngle,gaugeradius:c.gaugeRadius,plotwidth:c.plotWidth,plotsemiwidth:c.plotSemiWidth}},datasetFunction:function(a,c){var e=this.components.dataset,b,h,f,g,k;g=this.is3D;if(!e||!e.length)return 0;isNaN(a[0])?b=0:(b=Number(a[0]),a=a.slice(1));h=a[0];if("set"===h){isNaN(a[1])?(f=0,a=a.slice(1)):(f=Number(a[1]),a=a.slice(2));h=a[0];k=(f=e[b]&&e[b].components.data[f])&&(f.graphics.element||f.graphics.hotElement||f.graphics.upperBoxElem);
e=e[b]&&e[b].graphics.sharedAnchor;!k&&e&&f._polyPath&&(k=e.element.attr(f._polyPath));if(!k)return 0;g=c&&g?k._getBBox2():k.getBBox();f=H(h,g)}return f},xAxisFunction:function(a){var c=this.components&&this.components.xAxis&&this.components.xAxis[0],e,b;if(!c)return 0;b=a[0];if("label"===b){isNaN(a[1])?(e=0,a=a.slice(1)):(e=Number(a[1]),a=a.slice(2));b=a[0];a=c._getLabelElement(e);if(!a)return 0;a=a.getBBox();e=H(b,a)}return e},yAxisFunction:function(a){var c=this.components&&this.components.yAxis,
e,b;if(!c||!c.length)return 0;isNaN(a[0])?e=0:(e=Number(a[0]),a=a.slice(1));e=c[e];if(!e)return 0;c=a[0];if("label"===c){isNaN(a[1])?(b=0,a=a.slice(1)):(b=Number(a[1]),a=a.slice(2));c=a[0];a=e._getLabelElement(b);if(!a)return 0;a=a.getBBox();b=H(c,a)}return b}});b.core.addEventListener("beforeinitialize",function(a){"javascript"===a.sender.options.renderer&&(a.sender.annotations=new h)});b.core.addEventListener("disposed",function(a){a.sender.annotations&&a.sender.annotations.dispose()});b.addEventListener("internal.animationComplete",
function(a){a=a.sender;var c=a.annotations,e=c&&c.shapesToDraw,b=e&&e.length,h,f;a=a.apiInstance.config;var g=a.annRenderDelay,k=a.resize,n=(new Date).getTime(),u,w=function(){for(f=0;f<b;f++)h=e[f],h.draw()};if(b){for(f=0;f<b;f++)h=e[f],h.queueDraw=!1,h.scale(),h.setup();u=(new Date).getTime();g&&!k?setTimeout(function(){w();c.shapesToDraw=[]},g-(u-n)):(w(),c.shapesToDraw=[])}a.resize=!1});z.addEventListener("rendered",function(a,c){if("javascript"===c.renderer){var e=a.sender;e.apiInstance&&(e.apiInstance.showAnnotation||
(e.apiInstance.showAnnotation=function(){e.annotations.show.apply(e.annotations,arguments)}),e.apiInstance.hideAnnotation||(e.apiInstance.hideAnnotation=function(){e.annotations.hide.apply(e.annotations,arguments)}))}})}]);N.register("module",["private","modules.renderer.jpegtopdf",function(){var b=this.window,z=b.btoa,G=b.atob;this.hcLib.JpegToPdf=function(b,F){var E=[],t=0,a=b||500,Q=F||500,r,P,T;r=function(a){t+=a.length+1;E.push(a)};this.addImage=function(a){a=/base64,(.+?)$/g.exec(a);T=G(a[1])};
P=function(){var b=[],D,B;r("%PDF-1.7");b[1]=t;r("1 0 obj");r("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]");r("endobj");b[4]=t;r("4 0 obj");r("<< /Length 36>>");r("stream");r("q "+Q+" 0 0 "+a+" 0 0 cm /Im3 Do Q");r("endstream");r("endobj");b[5]=t;r("5 0 obj");r("<</Type /Page /Parent 2 0 R /MediaBox [0 0 "+Q+" "+a+"] /Contents [4 0 R ] /Resources <</ProcSet 1 0 R /Font <<>> /XObject <</Im3 3 0 R >> >> >>");r("endobj");b[3]=t;r("3 0 obj");r("<</Type /XObject /Subtype /Image /Width "+Q+" /Height "+
a+" /ColorSpace /DeviceRGB /BitsPerComponent 8 /Filter /DCTDecode /Length "+T.length+">>");r("stream");r(T);r("endstream");r("endobj");b[2]=t;r("2 0 obj");r("<</Type /Pages /Kids [5 0 R ] /Count 1>>");r("endobj");b[6]=t;r("6 0 obj");r("<</Type /Catalog /Pages 2 0 R >>");r("endobj");D=t;r("xref");r("0 7");r("0000000000 65535 f ");for(B=1;6>=B;B++)r(("0000000000"+b[B]).slice(-10)+" 00000 n ");r("trailer");r("<</Size 7 /Root 6 0 R >>");r("startxref");r(D);r("%%EOF");return E.join("\n")};this.getDataUrl=
function(){return"data:application/pdf;base64,"+z(P())}}}]);N.register("module",["private","modules.exporter.batch-export",function(){var b=this.window,z=this.hcLib,G=Math.max,v=b.Image,F=z.drawSvgOnCanvas,E=z.downloadCharts,t=z.browserDetails,a=z.pluckNumber,Q=z.pluck,r=z.JpegToPdf,P=b.navigator.userAgent.match(/ (iPad|iPhone|iPod)/g),T="https:"===b.location.protocol?"https://export.api3.fusioncharts.com/":"http://export.api3.fusioncharts.com/";N.batchExport=function(z){var D=z||{},B,m,p,q,A,n=0,
k=!1,g,f,S,C={exportTargetWindow:Q(D.exportTargetWindow,P?"_blank":"_self"),exportAction:D.exportAction&&"save"===D.exportAction.toString().toLowerCase()&&"save"||"download",exportFileName:Q(D.exportFileName,"FusionCharts"),exportHandler:Q(D.exportHandler,T),exportParameters:Q(D.exportParameters,""),exportFormat:Q(D.exportFormat,"PNG"),exportCallBack:Q(D.exportCallBack,""),exportAtClientSide:a(D.exportAtClientSide,1)},Y=C.exportFormat.toLowerCase(),R=0,u=0,X,O=b.document,W=N.items,H=function(a){return a.match(/http:\/\/|https:\/\//)&&
/(http:\/\/|https:\/\/)([^\/\:]*)/.exec(a)[2]&&b.location.hostname!==/(http:\/\/|https:\/\/)([^\/\:]*)/.exec(a)[2]?!1:!0},w=function(b,e,d,c){var h=b,f=e;isNaN(h)&&(h=a(e,c)*(d/c));isNaN(f)&&(f=a(b,d)*(c/d));return{width:h,height:f}},K=function(a){!C.exportAtClientSide||"undefined"===typeof b.btoa||"Chrome"!==t.name&&"Firefox"!==t.name&&"Edge"!==t.name&&"ie"!==t.name?(a={charttype:"combined",stream:a,stream_type:"IMAGE-DATA",parameters:["exportfilename="+C.exportFileName,"exportformat="+Y,"exportaction="+
C.exportAction,"exportparameters="+C].join("|")},E(null,null,null,a,C)):E("url",a,C.exportFileName+"."+Y)},h=function(a){var e;F(a,p,this.x,this.y,this.width,this.height,function(){--n;if(0===n&&k)switch(Y){case "png":K(p.toDataURL("image/png"));break;case "jpeg":K(p.toDataURL("image/jpeg"));break;case "pdf":e=new r(R,u);e.addImage(p.toDataURL("image/jpeg"));K(e.getDataUrl());break;default:K(p.toDataURL("image/png"))}})};z=function(b){var e=D.background;p=O.createElement("canvas");p.id="newCanvas";
p.width=u;p.height=R;p.style.border="1px solid black";q=p.getContext("2d");q.fillStyle=e&&e.bgColor||"#ffffff";q.fillRect(0,0,u,R);e&&e.bgImage&&H(e.bgImage)?(f=new v,f.src=e.bgImage,f._userData=e,q.globalAlpha=a(e.bgImageAlpha,100)/100,f.onload=function(){var e=this._userData,c=a(e.bgImageX,0),h=a(e.bgImageY,0),f=w(Number(e.bgImageWidth),Number(e.bgImageHeight),this.width,this.height),e=f.width,f=f.height;try{q.drawImage(this,c,h,e,f)}finally{q.globalAlpha=1,b()}},f.onerror=function(){b()}):b()};
if(t.hasCanvas){(function(){var a=D.charts,e,b,c,h;m=[];if(a)for(c in a)a.hasOwnProperty(c)&&(e=W[a[c].id])&&(b=a[c],h=w(Number(b.width),Number(b.height),e.width,e.height),m.push({id:e.id,width:h.width,height:h.height,x:b.x,y:b.y}));else for(c in W)W.hasOwnProperty(c)&&(e=W[c],m.push({id:e.id,width:e.width,height:e.height}))})();X=0;for(g=m.length;X<g;X+=1)S=m[X],S.x=a(S.x,5),S.y=a(S.y,R+5),S.height=a(S.height),S.width=a(S.width),R=G(R,S.y+S.height),u=G(u,S.x+S.width);R=D.imageHeight||R+5;u=D.imageWidth||
u+5;z(function(){return function(){X=0;for(g=m.length;X<g;X+=1){S=m[X];X===g-1&&(k=!0);var a=S;B=N.items[S.id];A=B.jsVars.instanceAPI.components.paper.toSVG(!0);n+=1;h.call(a?a:B,A)}}}())}}}]);N.register("module",["private","modules.exporter.main",function(){var b=this,z=b.window,G=b.hcLib,v=G.extend2,F=G.BLANKSTRING,E=G.graphics.RGBtoHex,t=/\s\bx\b=['"][^'"]+?['"]/ig,a=/\s\by\b=['"][^'"]+?['"]/ig,Q=z.document,r=z.Image,P=G.JpegToPdf,T=G.browserDetails;G.exportChart=function(L){var D=this,B=D.config,
m=D.components,p=D.chartInstance,q=G.getSvgDataurl,A=G.removeCrossDomainImages,n=G.downloadCharts,k=B.exportOption;L="object"===typeof L&&function(a){var b={},e;for(e in a)b[e.toLowerCase()]=a[e];return b}(L)||{};var g=v(v({},k),L),f=(g.exportformat||"png").toLowerCase(),S=g.exporthandler,C=(g.exportaction||F).toLowerCase(),Y=g.exporttargetwindow||F,R=g.exportfilename,u=g.exportparameters,X=g.exportcallback,O=g.exportwithimages,W=g.exportatclientside,H,w,K;if(!k||!k.enabled||!S)return!1;b.raiseEvent("beforeExport",
g,p,void 0,function(){function h(){var a,c,e;c=function(a){v.stream=a;v.stream_type="IMAGE-DATA";n(null,null,null,v,Aa)};T.hasCanvas&&"undefined"!==typeof z.btoa?(a=Q.createElement("canvas"),a.width=J.width,a.height=J.height,"svg"===f?q(L,function(a){c(a)}):G.drawSvgOnCanvas(L,a,0,0,J.width,J.height,function(){switch(f){case "png":c(a.toDataURL("image/png"));break;case "jpeg":c(a.toDataURL("image/jpeg"));break;case "pdf":e=new P(J.height,J.width);e.addImage(a.toDataURL("image/jpeg"));c(e.getDataUrl());
break;default:c(a.toDataURL("image/jpeg"))}})):-1!==Ka.indexOf("<image ")?ka?(U=(ca=Ka.match(/<image [^\>]*\>/gi))&&ca.length,xa=function(a){var c,e;(e=a.match(/data:image\/(.*);/))?a=e[1]:(c=a&&a.split("/"),c=c[c.length-1],a=c.split("."),c=a[0],a=a[1]||"png","jpg"===a&&(a="jpeg"));return{name:c,type:a}},aa=function(a,c,e,b,d){var h=new r;h.onload=function(){var f="image/"+e,l=Q.createElement("canvas"),g=l.getContext("2d"),k="";l.width=h.width;l.height=h.height;g.drawImage(h,0,0);k=l.toDataURL(f);
ma[a]=k;ja(k,c,e,b,d)};h.onerror=function(){Z()};h.src=a},ja=function(a,c,e,b,d){Ga["image_"+la]={name:c,type:e,encodedData:a,width:b,height:d};Z()},Z=function(){var a={},c,e,b,d,h,f=!1;la<U?(c=ca[la].replace(/\"/g,""),c.split(" ").forEach(function(c){c=c.split(/=(.+)?/);a[c[0]]=c[1]}),a["xlink:href"]&&(c=(e=xa(a["xlink:href"]))&&e.name||"temp_image_"+la,b=e&&e.type||"png",d=parseInt(a.width,10),h=parseInt(a.height,10),e=c+"."+b,ma[a["xlink:href"]]?f=!0:aa(a["xlink:href"],c,b,d,h)),c='xlink:href="'+
a["xlink:href"],Ka=Ka.replace(c,'xlink:href="temp/'+e),la+=1,f&&Z()):(v.encodedImgData=JSON.stringify(Ga),v.stream=Ka,n(null,null,null,v,Aa))},Z()):n(null,null,null,v,Aa):n(null,null,null,v,Aa)}function k(){var a=R+"."+f;"svg"===f?q(L,function(c){n("url",c,a)}):l(f,c)}function e(){var a=0;H=[];w.replace(/[^\r\n]+/g,function(c){H[a]=[];c.replace(/"([^",]+)/g,function(c,e){H[a].push(e)});a+=1})}function d(){return"data:application/vnd.ms-excel;base64,"+function(a){return z.btoa(z.unescape(encodeURIComponent(a)))}("<html xmlns:o='urn:schemas-microsoft-com:office:office'xmlns:x='urn:schemas-microsoft-com:office:excel'xmlns='http://www.w3.org/TR/REC-html40'><head>\x3c!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--\x3e</head><body>"+
function(){var a,c,e,b,d,h;if(!H.length)return"";e=0;for(h=H.length;e<h;e+=1)if(0===e){a="<thead valign='top'><tr>";b=0;for(d=H[e].length;b<d;b+=1)a+="<th>"+H[e][b]+"</th>";a+="</tr></thead>";c="<tbody>"}else{c+="<tr>";b=0;for(d=H[e].length;b<d;b+=1)c+="<td>"+H[e][b]+"</td>";c+="</tr>"}return"<table align='center' >"+a+(c+"</tbody>")+"</table>"}()+"</body></html>")}function c(a,c,e){e=e+"."+a;switch(a){case "pdf":a=new G.JpegToPdf(J.height,J.width);a.addImage(c);c=a.getDataUrl();n("url",c,e);break;
default:n("url",c,e)}}function l(a,c){var e;e=Q.createElement("canvas");e.width=J.width;e.height=J.height;G.drawSvgOnCanvas(L,e,0,0,J.width,J.height,function(){switch(a){case "png":c(a,e.toDataURL("image/png"),R);break;case "jpeg":c(a,e.toDataURL("image/jpeg"),R);break;default:c(a,e.toDataURL("image/jpeg"),R)}})}var M=p.id,J=m.paper,v,Ka,L,ka=G.isCanvasElemSupported(),ca,U,la=0,Ga={},xa,aa,Z,ja,ma={},oa={DOMId:M,height:J.height,width:J.width,fileName:R+"."+f,statusCode:void 0,statusMessage:void 0,
notice:void 0},Aa={exportAction:C,exportTargetWindow:Y,exportCallback:X,fusionCharts:D,paper:J,chartId:M,exportHandler:S};if("xls"===f)if("undefined"!==typeof z.btoa)w=p.getCSVData();else return b.raiseEvent("exportCancelled",g,p),!1;else m.chartMenuBar&&m.chartMenuBar.group.attr("visibility","hidden"),Ka=J.toSVG(O&&ka&&"svg"!==f),L=J.toSVG(O&&ka),m.chartMenuBar&&m.chartMenuBar.group.attr("visibility","visible"),Ka=Ka.replace(/(\sd\s*=\s*["'])[M\s\d\.]*(["'])/ig,"$1M 0 0 L 0 0$2"),Ka=Ka.replace(/NS\d+:/gi,
"xlink:"),Ka=A(Ka),L=L.replace(/NS\d+:/gi,"xlink:"),L=L.replace(/(\sd\s*=\s*["'])[M\s\d\.]*(["'])/ig,"$1M 0 0 L 0 0$2"),L=L.replace(/(xlink:title\s*=\s*)['"].*["']/ig,""),Ka=Ka.replace(/[\w\-]+\=\"undefined\"/ig,""),Ka=Ka.replace(/(xlink:title\s*=\s*)['"].*["']/ig,""),Ka=Ka.replace(/rgba\(([^\)]+)\)/ig,function(a,c){return"#"+new E(c.split(","))}),Ka=Ka.replace(/<svg[^>]+/i,function(a){a.match(/height/i)||!J.height&&!B.height||(a+=' height="'+(J.height||B.height)+'"');a.match(/width/i)||!J.width&&
!B.width||(a+=' width="'+(J.width||B.width)+'"');return a}),Ka=Ka.replace(/(([\w]+\-)?opacity\s*=\s*)['"][\d\.]+e[\-\+][\d]+["']/ig,'$1"0.001"'),Ka=Ka.replace(/(([\w]+\-)?opacity\s*:\s*)[\d\.]+e[\-\+][\d]+/ig,"$10.001"),Ka=Ka.replace(/<text[^\>]+/ig,function(a){a=a.replace(/stroke\=[\"\']([a-z0-9\#]+)?[\"\']/ig,"");a=a.replace(/stroke\s*\:\s*([a-z0-9\#]+)?;?/ig,"");a=a.replace(/stroke-opacity\=[\"\']([a-z0-9\#]+)?[\"\']/ig,"");a=a.replace(/stroke-opacity\s*\:\s*([a-z0-9\#]+)?;?/ig,"");a=a.replace(/(<text[^\>]+fill\=)([\"\'][^\"\']+[\"\'])([^\>]+)/ig,
'$1$2 stroke=$2 stroke-width="0.2"$3');return a=a.replace(/(<text[^\>]+fill-opacity\=)([\"\'][^\"\']+[\"\'])([^\>]+)/ig,"$1$2 stroke-opacity=$2 $3")}),Ka=Ka.replace(/<(\b[^<>s\s]+\b)[^\>]+?opacity\s*=\s*['"][^1][^\>]+?(\/>|>[\s\r\n]*?<\/\1>)/ig,function(c,e){var b=t.exec(c)||F,d=a.exec(c)||F;return c+"<"+e+b+d+' opacity="1" stroke-opacity="1" fill="#cccccc" stroke-width="0" r="0" height="0.5" width="0.5" d="M 0 0 L 1 1" />'}),v={charttype:p.chartType(),stream:Ka,stream_type:"svg",meta_bgColor:g.bgcolor||
"",meta_bgAlpha:g.bgalpha||"1",meta_DOMId:p.id,meta_width:J.width||B.width,meta_height:J.height||B.height,parameters:["exportfilename="+R,"exportformat="+f,"exportaction="+C,"exportparameters="+u].join("|")};b.raiseEvent("exportDataReady",v,p);"xls"===f?(e(),K=d(),!W||"download"!==C||"undefined"===typeof z.btoa||"Chrome"!==T.name&&"Firefox"!==T.name&&"Edge"!==T.name&&"ie"!==T.name?(v={charttype:"combined",stream:K,stream_type:"IMAGE-DATA",parameters:["exportfilename="+R,"exportformat="+f,"exportaction="+
C,"exportparameters="+Aa].join("|")},n(null,null,null,v,Aa)):(n("url",K,R+"."+f),b.raiseEvent("exported",oa,p))):W&&"download"===C?"undefined"===typeof z.btoa||"Chrome"!==T.name&&"Firefox"!==T.name&&"Edge"!==T.name&&"ie"!==T.name?(b.raiseWarning(this,"14038823867","run","Export Feature","Client side export requirement not fulfiled so exporting through server side"),h()):(k(),b.raiseEvent("exported",oa,p)):h()},function(){b.raiseEvent("exportCancelled",g,p)})}}]);N.register("module",["private","modules.renderer.js-component-toolbox",
function(){function b(a){"number"===typeof a&&(a="'"+a+"'");return a.split("").reduce(function(a,b){a=(a<<5)-a+b.charCodeAt(0);return a&a},0)}function z(a,b){var f;if(a.getBBox)return a;f=a.getBoundingClientRect();a.getBBox=function(){return{x:b.x,y:b.y,width:f.right-f.left,height:f.bottom-f.top,isArtificial:!0}};return a}function G(a,b,f){var g,k;for(g in a)k=a[g],void 0!==k&&null!==k&&(f?b[g]||(b[g]=k):b[g]=k)}function v(a,b){switch(a){case "click":return function(a){t.dem.listen(b,"click",function(b){b.target&&
b.target.parentNode&&a.call(b.target)})};case "hover":return function(a,f){t.dem.listen(b,"pointerhover",function(b){b.target&&b.target.parentNode&&("start"===b.state?a:f).call(b.target)})}}}function F(){this.pool={}}function E(a,b){var f,g,k;g=this.elemTypes={KEY_RECT:"rect",KEY_TEXT:"text",KEY_GROUP:"group",KEY_SCROLLER:"scoller",KEY_BUTTON:"button",KEY_PATH:"path",KEY_DIV:"div"};k=this.cachedState={};f=this.actions={};f[g.KEY_DIV]=function(){return Q.createElement("div")};f[g.KEY_RECT]=function(b){return a.paper.rect(b)};
f[g.KEY_TEXT]=function(b){return a.paper.text(b)};f[g.KEY_GROUP]=function(b,f){return a.paper.group(b,f)};f[g.KEY_SCROLLER]=function(b,f,h,g,e,d,c){return a.paper.scroller(b,f,h,g,e,d,c)};f[g.KEY_BUTTON]=function(b,f,h,g,e,d){return a.paper.button(b,f,h,g,e,d)};f[g.KEY_PATH]=function(b,f){return a.paper.path(b,f)};g=this.cache=k[b]||(k[b]={});this._hideRecursive(g.pool);g.initialized||(f=g.pool=(new F).pool,f._tmp=b,g.initialized=!0)}var t=this.hcLib,a=t.Raphael,Q=this.window.document,r=t.graphics,
P=r.convertColor,T=r.getLightColor,L=r.rawRGBtoHEX,D=t.pluckNumber,B=t.pluck,m={},p={},q={},A=t.extend2,n,k,g,f,S=function(){},C=t.BLANKSTRING,Y=P("FFFFFF",0),R=0;n=function(a,b,f){return["M",a-f,b-f]};k=function(a,b,f){var g=f/4;return["M",a-3*g,b,"L",a-g,b+f,a+f,b-f]};g=function(){a.addSymbol("Internal_CB",n);return{register:function(){var b,f,g;if(1===arguments.length){f=arguments[0];if(null==f||"object"!==typeof f)return;g=f}else if(1<arguments.length){b=arguments[0];f=arguments[1];if("string"!==
typeof b||"function"!==typeof f)return;g={};g[b]=f}else return;for(b in g)f=g[b],{}.hasOwnProperty.call(g,b)&&a.addSymbol(b,f)}}}();E.prototype._hideRecursive=function(a){var b,f,g,k,n,m;if(a)for(b in a)for(f in g=a[b],g)if(k=g[f],k instanceof Array)for(n=0,m=k.length;n<m;n++)k[n].hide&&k[n].hide();else k.hide&&k.hide()};E.prototype.isInitialized=function(){return this.initialized};E.prototype.getCreationStatus=function(){return this.newCreationDataFlag};E.prototype.emptyPool=function(a){a=this.cachedState[a]||
{};a.pool&&(a.pool={})};E.prototype.hideRecursive=function(a){this._hideRecursive((this.cachedState[a]||{}).pool)};E.prototype.getKeys=function(){return this.elemTypes};E.prototype.getComponent=function(a,b,f,g){var k=this.cachedState[b||0]||{};b=k.pool;var n=b[a],m,h,q,e=this.actions,d=0;n||(n=b[a]={});return(h=n[f])&&!(h instanceof Array)||h instanceof Array&&0<h.length?function(){k.newCreationDataFlag=!1;return g?(q=h[d++])?q.show():h[d]=e[f].apply(k,arguments):h.show&&"function"===typeof h.show&&
h.show()||h}:function(){k.newCreationDataFlag=!0;return g?(m=n[f]||(n[f]=[]),h=e[f].apply(k,arguments),m.push(h),h.show&&"function"===typeof h.show&&h.show()||h):n[f]=e[f].apply(k,arguments)}};f=function(a,f){function C(a){a=a||{};this.name=a.name;this.handler=a.handler||S;this.action=a.action&&a.action.toLowerCase()||"click";this.eventMap={};this.style={padding:"3px 8px",margin:"2px 0px",fontFamily:q.baseFontFamily,fontSize:q.baseFontSize+"px"};this.hoverOverStyle=a.hoverOverStyle||{};this.hoverOutStyle=
a.hoverOutStyle||{};G(a.style||{},this.style);this.node=this.subConRef=void 0}function r(a,c){var e=this,b,d;b=c&&c.top||0;var h=c&&c.left,f=c&&c.right;this.container=a;this.position=r.POSITION_BOTTOM;this.atomicLists=[];this.refContainers=[];this.parentListCon=void 0;this.hideFnIds=[];this.target=void 0;h&&f||(this.positionCalculation=!0);this.hoverOverStyle={background:"#333333",color:"#FFFFFF",cursor:"pointer"};this.hoverOutStyle={background:"#FFFFFF",color:"#000000"};this._defaultStyle={position:"absolute",
"z-index":50,top:void 0===b?"auto":b+"px",right:void 0===f?"auto":f+"px",left:void 0===h?"auto":h+"px",overflow:"hidden",background:"#ffffff",border:"1px solid #646464","box-shadow":"#999999 2px 2px 5px",padding:"5px 3px",display:"none"};b=this.container.style;for(d in this._defaultStyle)b[d]=this._defaultStyle[d];E.linkedItems&&(E.linkedItems.container.appendChild(this.container),d=v("hover",this.container),d(function(){e.show(this)},function(){e.hide(300,this)}))}function H(a){this.listContainer=
this.container=void 0;this.measurement=a}function w(a,c,e,b){this.symbol=a;this._id="TB_SYMBOL"+(e||0);this.node=void 0;this.pId=b;this.isPlaintext=c;this.conf={btnTextStyle:{"stroke-width":"1px",stroke:"none"}};this.evt={tooltext:void 0,click:S,hover:[S,S]}}function K(a,c,e,b){w.call(this,"Internal_CB");this._id="TB_CBSYMBOL"+(e||0);this.symbol="Internal_CB";this.text={plaintext:a,node:void 0,style:J};this.pId=b;this.checked=!!c;this.textNode=void 0;this.interPadding=3;this.pos={};this.regSymbolCmd=
void 0;this.checked?this.check():this.uncheck()}function h(a,c,e){w.call(this);this._id="TB_SCROLLER"+(c||0);this.pId=e;this.conf={};this.userConf=p;this.setConfiguaration(a);this.evt.scroll=S;return this}function B(a,c,e){var b;w.call(this,a,void 0,c,e);this.rawContextDefinitation=void 0;this.listContainerManager=(new H(this.position)).init(e);b=this.listContainerManager.getFirstContainer();this.evt.hover=[function(a){b.show(z(a.target||a.fromElement,a))},function(a){b.hide(300,a.target)}]}function e(a,
c){this.preId=a||0;this.id=void 0;this.symbolList=[];this.groupRect=void 0;this.pId=c;A(this.btnConfig={},m);A(this.groupConfig={},l)}function d(a,e){c[this.id="TB_MASTER"+a||b((new Date).getTime())]=this;this.toolbarRect=void 0;this.componentGroups=[];this.toolbarConfig=M;this.group=void 0;this.pId=e}var c={},l={hPadding:3,vPadding:3,borderRadius:2,fill:P("DBDBDB",100),borderColor:P("B2B1B1",100),borderThickness:1,offsetAdjustment:1,radius:1,spacing:6},M={hPadding:3,vPadding:3,borderRadius:0,fill:P("EBEBEB",
100),borderColor:P("D1D0D0",100),borderThickness:1,offsetAdjustment:1,radius:0},J={fontFamily:"Verdana,sans",fontSize:"12px",fill:void 0,fontStyle:"normal",fontWeight:"normal"},t,R,E;R=f.graphics;E=f.chart;t=f.components;C.prototype.updateName=function(a){this.name=a;this.node&&(this.node.innerHTML=a)};C.prototype.assignSubContainer=function(a){a instanceof r&&(this.subConRef=a)};C.prototype.stickIntoContainer=function(a,c){var e=this.node=Q.createElement("div"),b=this.style,d,h,f,l=this;e&&(e.ishot=
!0);this.handler&&(this.eventMap[this.action]=this.handler);a.appendChild(e);e.innerHTML=this.name;h=e.style;for(d in b)h[d]=b[d];b=v("hover",e);v("click",e)(function(){l.handler&&((f=l.eventMap.click)&&f.apply(l,[E]),c.hide())});b(function(){var a,c=e.style,b=l.hoverOverStyle;for(a in b)c[a]=b[a];l.subConRef&&l.subConRef.show(this)},function(){var a,c=e.style,b=l.hoverOutStyle;for(a in b)c[a]=b[a];l.subConRef&&l.subConRef.hide(300,this)})};C.prototype.setStyle=function(a){G(a||{},this.style)};C.prototype.dispose=
function(){var a=this.node;a&&a.remove&&a.remove();this.node=void 0};r.POSITION_TOP="top";r.POSITION_BOTTOM="bottom";r.prototype.addAtomicListItem=function(a){a instanceof C&&(this.atomicLists.push(a),a.stickIntoContainer(this.container,this))};r.prototype.show=function(a){var c=this.hideFnIds,e=E.config.width,b=this.positionCalculation,d=0,h;this.target=this.target||a;for(h=c.length;d<h;d++)clearTimeout(c[d]);c.length=0;(c=this.parentListCon)?(c.show(this.target),this.container.style.left=c.container.offsetLeft+
c.container.offsetWidth+"px",this.container.style.top=c.container.offsetTop+this.target.offsetTop+"px"):(c=a&&a.nodeName&&"DIV"===a.nodeName.toUpperCase()?!0:!1,c||(a=a.getBBox(),b&&(this.container.style.display="block",b=this.container.offsetWidth,b+a.x>e?(this.container.style.left="auto",this.container.style.right=e-a.x-a.width+"px"):(this.container.style.left=a.x+"px",this.container.style.right="auto"),this.container.style.display="none"),this.position===B.POSITION_BOTTOM?(e=a.isArtificial?.5:
1.5,this.container.style.top=a.y+a.height*e+"px",this.container.style.bottom="auto"):(this.container.style.bottom=E.config.height-a.y+"px",this.container.style.top="auto")));this.container.style.display="block"};r.prototype.hide=function(a){var c=this.container,e;(e=this.parentListCon)&&e.hide(300);this.hideFnIds.push(setTimeout(function(){c.style.display="none"},a))};r.prototype.dispose=function(){var a=this.atomicLists,c=this.refContainers,e,b;e=this.hideFnIds.length=0;for(b=a.length;e<b;e++)a[e].dispose();
e=a.length=0;for(b=c.length;e<b;e++)c[e].dispose();c.length=0};H.prototype.init=function(c){var e=a.getKeys();this.container||(c=a.getComponent("div0",c,e.KEY_DIV),(c=c())&&(c.innerHTML=""),this.container=new r(c,this.measurement));return this};H.prototype.getFirstContainer=function(){return this.container};H.prototype.appendAsList=function(a,c){var e=this,b,d=this.container.hoverOverStyle,h=this.container.hoverOutStyle;(function Z(a,c){var f,l=0,g,k,n,w,u,m,q,p;q=c?c:e.container;f=a instanceof Array?
a:[a];for(g=f.length;l<g;l++){k=f[l];n=new C({hoverOverStyle:d,hoverOutStyle:h});for(w in k)n.name=w,u=k[w],n.action=u.action,n.setStyle(u.style),-1!==w.search(/^<[^<]+>$/)&&(n.hoverOverStyle={},n.hoverOutStyle={},u.handler=S),m=u.handler,"function"!==typeof m?p=Z(m,new r(Q.createElement("div"))):n.handler=u.handler;q.addAtomicListItem(n);p&&(p.parentListCon=q,q.refContainers.push(p),n.assignSubContainer(p));p=void 0}return b=q})(a,c);return b};H.prototype.dispose=function(){this.container.dispose();
this.container=void 0};w.prototype.registerSymbol=function(a){g.register(this.symbol,a)};w.prototype._setConfiguaration=function(a){this.conf?G(a,this.conf,!0):this.conf=a};w.prototype.attachEventHandlers=function(a,c){var e=this.evt,b=a.tooltext,d=a.click||S,h=a.hover,f=c&&c.click||S,l=this;b&&(e.tooltext=b);e.click="function"===typeof d?function(){f();d.apply(l,arguments)}:function(){var a=d.fn,c=d.context,e=(d.args||[]).slice(0);d.hasOwnProperty("context")?e.push(l):c=l;[].push.apply(e,arguments);
f();a.apply(c,e)};h&&h instanceof Array&&(e.hover=h);this.node&&this.node.tooltip(this.evt.tooltext).buttonclick(this.evt.click).hover(this.evt.hover[0],this.evt.hover[1]);return l};w.prototype.getLogicalSpace=function(){return{width:this.conf.width,height:this.conf.height}};w.prototype.show=function(){var a=this.node;a&&a.css({display:"block"})};w.prototype.hide=function(){var a=this.node;a&&a.css({display:"none"})};w.prototype.draw=function(c,e,b){var d=this.conf||{},h,f,l=a.getKeys(),g=E.get("config",
"animationObj"),k=g.animObj,n=g.dummyObj,w=g.duration;this.isPlaintext?f=this.symbol:h=this.symbol;void 0!==b.idCount&&(this._id+=b.idCount);d.hoverFill=d.hoverFill?P(d.hoverFill):P(T(L(d.fill),80));b=this.node=a.getComponent(this._id,this.pId,l.KEY_BUTTON,!0)(c,e,f,h,{width:d.width,height:d.height,r:d.radius,verticalPadding:d.symbolHPadding*d.scale,horizontalPadding:d.symbolHPadding},b.parentLayer).labelcss(this.conf.btnTextStyle);b.attr({ishot:!0,fill:[d.fill,d.labelFill,d.symbolFill,d.hoverFill,
!0],stroke:[d.stroke,d.symbolStroke],"stroke-width":[d.strokeWidth,d.symbolStrokeWidth]}).tooltip(this.evt.tooltext).buttonclick(this.evt.click).hover(this.evt.hover[0],this.evt.hover[1]);a.getCreationStatus()||(this.node.unclick(),this.node.animateWith(n,k,{"button-repaint":[c,e,d.width,d.height,d.radius]},w,g.animType),this.node.attr({"button-label":f,"button-padding":[d.symbolHPadding,d.symbolHPadding*d.scale]}),this.node.buttonclick(this.evt.click));b.getBBox=function(){return{x:c,y:e,width:d.width,
height:d.height}};return b};w.prototype.dispose=function(){var a=this.node;a&&a.remove();this.node=void 0};K.prototype=Object.create(w.prototype);K.prototype.constructor=K;K.prototype.check=function(){var a=this.pos;this.checked=!0;this.regSymbolCmd=k;this.node&&(this.registerSymbol(this.regSymbolCmd),this.node.attr({"button-repaint":[a.x,a.y,a.width,a.height,a.r]}))};K.prototype.uncheck=function(){var a=this.pos;this.checked=!1;this.regSymbolCmd=n;this.node&&(this.registerSymbol(this.regSymbolCmd),
this.node.attr({"button-repaint":[a.x,a.y,a.width,a.height,a.r]}))};K.prototype.click=function(){this.checked?this.uncheck():this.check()};K.prototype.attachEventHandlers=function(a){var c=this;w.prototype.attachEventHandlers.apply(this,[a,{click:function(){c.click()}}])};K.prototype.getLogicalSpace=function(){var a=E.linkedItems.smartLabel,c=this.text.style,e;e=w.prototype.getLogicalSpace.apply(this,arguments);a.useEllipsesOnOverflow(E.config.useEllipsesWhenOverflow);a.setStyle(c);a=a.getSmartText(this.text.plaintext);
return{width:a.width+this.interPadding+e.width,height:Math.max(e.height,a.height)}};K.prototype.draw=function(c,e,b){var d,h=this.conf,f;f=E.linkedItems.smartLabel;var l=t.colorManager,g=this.text.plaintext,k,n=a.getKeys();this.registerSymbol(this.regSymbolCmd);d=this.node=w.prototype.draw.apply(this,arguments);this.pos={x:c,y:e,width:h.width,height:h.height,r:h.radius};k=this.text.style;k.fill=k.fill||"#"+l.getColor("baseFontColor");f.useEllipsesOnOverflow(E.config.useEllipsesWhenOverflow);f.setStyle(k);
f=f.getSmartText(g);d=d.getBBox();l=a.getComponent(this._id,this.pId,n.KEY_TEXT);this.textNode=l(b.parentLayer).attr({text:g,x:d.x+d.width+f.width/2+this.interPadding,y:d.y+d.height/2}).css(k);h=h.height>f.height?h.height:f.height;l=a.getComponent(this._id,this.pId,n.KEY_RECT);return l(b.parentLayer).attr({height:h,width:d.width+f.width+this.interPadding,x:c,y:e,stroke:Y})};K.prototype.dispose=function(){this.textNode&&this.textNode.remove();this.textNode=void 0;w.prototype.dispose.call(this)};h.prototype=
Object.create(w.prototype);h.prototype.constructor=K;h.prototype.setConfiguaration=function(a){var c=t.colorManager;p.color||(p.color="#"+c.getColor("altHGridColor"));G(p,this.conf);G(a,this.conf)};h.prototype.getLogicalSpace=function(){var a=this.conf,c={};G(p,c);G(c,a);return w.prototype.getLogicalSpace.call(this)};h.prototype.getDefaultLayer=function(){var c=a.getKeys();return a.getComponent(this._id,this.pId,c.KEY_GROUP)("scroll")};h.prototype.registerSymbol=void 0;h.prototype._setConfiguaration=
function(){};h.prototype.attachEventHandlers=function(a){a&&a.scroll&&"function"===typeof a.scroll&&(this.evt.scroll=a.scroll);w.prototype.attachEventHandlers.apply(this,arguments);return this};h.prototype.draw=function(){var c,e,b,d,h,f,l,g,k,n,w,m,q,C,A,J;A=this.conf;var r,H=a.getKeys(),M={},K=E.get("config","animationObj"),B=K.animObj,t=K.dummyObj;b={};var O=K.duration;1===arguments.length?(A=arguments[0],c=A.x,e=A.y,l=A.parentLayer,h=!!A.sepLayer):(c=arguments[0],e=arguments[1],h=arguments[2],
A&&h?G(h,A):h={},l=h.parentLayer,h=!!h.sepLayer);G(p,b);A.isHorizontal?delete b.width:delete b.height;G(b,A);e+=A.padding;b=A.height;d=A.width;f=A.isHorizontal;J=A.startPercent;g=A.scrollRatio;k=A.showButtons;n=A.displayFlat;w=A.fullCanvasWidth;m=A.windowedCanvasWidth;q=A.color;C=A.roundEdges;M["scroll-repaint"]=[c,e,d,b];l=l?l:this.getDefaultLayer();r=a.getComponent(this._id,this.pId,H.KEY_RECT);l=h?r("scroll-child"):l;r=a.getComponent(this._id,this.pId,H.KEY_SCROLLER);this.node=r(c,e,d,b,f,{scrollPosition:A.scrollPosition||
D(J,0),displayStyleFlat:n,showButtons:k},l).data("fullCanvasWidth",w).data("windowedCanvasWidth",m).attr({"scroll-ratio":g,fill:q,r:C&&2||0}).scroll(this.evt.scroll);a.getCreationStatus()||(this.node.undrag(),this.node.animateWith(t,B,M,O,K.animType),this.node.attr({"scroll-display-style":n?"flat":"3d","scroll-position":A.scrollPosition||D(J,0)}).scroll(this.evt.scroll));return this.node};B.POSITION_TOP="top";B.POSITION_BOTTOM="bottom";B.prototype=Object.create(w.prototype);B.prototype.constructor=
B;B.allNodes=[];B.prototype.getListRefernce=function(){return this.listContainerManager};B.prototype.attachEventHandler=function(a){var c=this.evt;if(a=a.tooltext)c.tooltext=a};B.prototype.getLogicalSpace=function(){var a=this.listContainerManager.getFirstContainer().atomicLists;return a&&0===a.length?{width:0,height:0}:w.prototype.getLogicalSpace.call(this)};B.prototype.draw=function(){var a=this.listContainerManager.getFirstContainer().atomicLists;if(a&&0===a.length)return this.hide(),{getBBox:function(){return{width:0,
height:0}}};a=w.prototype.draw.apply(this,arguments);B.allNodes.push(this.node);return a};B.prototype.dispose=function(){this.listContainerManager&&this.listContainerManager.dispose();this.listContainerManager=void 0;w.prototype.dispose.call(this)};e.prototype.addSymbol=function(a,c){var e=this.symbolList;c?e.unshift(a):e.push(a)};e.prototype.setConfiguaration=function(a){var c=a.buttons;a=a.group;c&&G(c,this.btnConfig);a&&G(a,this.groupConfig)};e.prototype.draw=function(c,e,b){var d=this.preId,h=
this.symbolList,f,l,g=this.groupConfig,k=this.btnConfig,n=e.x,w=e.y,m=0,q=0,p=Number.NEGATIVE_INFINITY;f=a.getKeys();d=this.id=d.toString()+b;R.toolbarGroup=R.toolbar||{};b=a.getComponent(this.id,this.pId,f.KEY_GROUP);c=b("toolbar-group"+d,c).trackTooltip(!0);b=a.getComponent(this.id,this.pId,f.KEY_RECT);d=this.groupRect=b(c).attr({height:0,width:0,x:n,y:w});n+=g.hPadding;w+=g.vPadding;q+=g.hPadding;m+=g.vPadding;f=0;for(b=h.length;f<b;f++)l=h[f],l._setConfiguaration(k),l=l.draw(n,w,{parentLayer:c}),
l=l.getBBox(),p<l.height&&(p=l.height),n+=l.width+(l=k.spacing);q+=n+g.hPadding-e.x-l-g.offsetAdjustment;m+=p+g.vPadding+g.offsetAdjustment;isFinite(m)||(m=0);isFinite(q)||(q=0);d.attr({height:m,width:q}).attr({fill:g.fill,r:g.radius,stroke:g.borderColor,"stroke-width":g.borderThickness});l=d.getBBox();return{height:l.height,width:l.width}};e.prototype.getLogicalSpace=function(){var a=this.symbolList,c,e,b,d=0,h=0,f=Number.NEGATIVE_INFINITY,l=0;e=0;for(b=a.length;e<b;e++)c=a[e],c._setConfiguaration(this.btnConfig),
c=c.getLogicalSpace(),h+=c.width+this.btnConfig.spacing,l+=c.width,f=f<c.height?c.height:f;if(!l)return{width:0,height:0};f!==Number.NEGATIVE_INFINITY&&h&&(h-=this.btnConfig.spacing-2*this.groupConfig.hPadding-this.groupConfig.offsetAdjustment,d=f+2*this.groupConfig.vPadding+this.groupConfig.offsetAdjustment);return{width:h,height:d}};e.prototype.dispose=function(){for(var a=this.symbolList,c=0,e=a.length;c<e;c++)a[c].dispose();a.length=0;this.groupRect.remove()};d.prototype.getId=function(){return this.id};
d.prototype.addComponent=function(a){this.componentGroups.push(a)};d.prototype.draw=function(c,e,b){var d=this.componentGroups,h,f,l;l=this.id;var g=c,k=e,n;e=this.toolbarConfig;var w,m=Number.NEGATIVE_INFINITY;n=a.getKeys();b=b||{};f=R.toolbar=b.parentGroup||R.toolbar||{};b=a.getComponent(this.id,this.pId,n.KEY_GROUP,!0);this.group=l=b(l,f);b=a.getComponent(this.id,this.pId,n.KEY_RECT,!0);n=this.toolbarRect=b(l).attr({height:0,width:0,x:g,y:k});g+=e.hPadding;k+=e.vPadding;b=0;for(f=d.length;b<f;b++)h=
d[b],w=h.groupConfig.spacing||1,h=h.draw(l,{x:g,y:k},b),g+=h.width+w,m=m>h.height?m:h.height;d=m;c=g-w-e.hPadding-c;isFinite(d)||(d=0);isFinite(c)||(c=0);n.attr({height:d+=2*e.vPadding,width:c+=2*e.hPadding}).attr({fill:e.fill,r:e.radius,stroke:e.borderColor,"stroke-width":e.borderThickness});return{height:d,width:c}};d.prototype.getLogicalSpace=function(){var a=this.componentGroups,c,e,b,d=c=0,h=Number.NEGATIVE_INFINITY,f,l=0;c=0;for(e=a.length;c<e;c++)b=a[c],f=b.getLogicalSpace(),b=b.groupConfig.spacing||
1,d+=f.width+b,l+=f.width,h=h<f.height?f.height:h;if(!l)return{width:0,height:0};d-=b-2*this.toolbarConfig.hPadding;c=h+2*this.toolbarConfig.vPadding;return{width:d,height:c}};d.prototype.dispose=function(){for(var c=this.componentGroups,e=0,b=c.length;e<b;e++)c[e].dispose();c.length=0;this.toolbarRect.remove();a.emptyPool(this.pId)};return{HorizontalToolbar:d,ComponentGroup:e,Symbol:w,CheckboxSymbol:K,Scroller:h,SymbolWithContext:B,getInstanceById:function(a){return c[a]}}};N.register("component",
["toolbox","toolbox",{onceInitialized:!1,ALIGNMENT_HORIZONTAL:0,ALIGNMENT_VERTICAL:1,POSITION_TOP:0,POSITION_RIGHT:1,POSITION_BOTTOM:2,POSITION_LEFT:3,init:function(a){if(this.onceInitialized)return this.configure(),this._iCount;this._options=a;this._chart=a.chart;this._iCount=++R;this.configure();this.onceInitialized=!0;return this._iCount},configure:function(){var a,b,f=this._chart.jsonData.chart;m.scale=D(f.toolbarbuttonscale,1.15);m.width=D(f.toolbarbuttonwidth,15);m.height=D(f.toolbarbuttonheight,
15);m.radius=D(f.toolbarbuttonradius,2);m.spacing=D(f.toolbarbuttonspacing,5);m.fill=P(B(f.toolbarbuttoncolor,"ffffff"));m.labelFill=P(B(f.toolbarlabelcolor,"cccccc"));m.symbolFill=P(B(f.toolbarsymbolcolor,"ffffff"));m.hoverFill=B(f.toolbarbuttonhovercolor);m.stroke=P(B(f.toolbarbuttonbordercolor,"bbbbbb"));m.symbolStroke=P(B(f.toolbarsymbolbordercolor,"9a9a9a"));m.strokeWidth=D(f.toolbarbuttonborderthickness,1);m.symbolStrokeWidth=D(f.toolbarsymbolborderthickness,1);b=m.symbolPadding=D(f.toolbarsymbolpadding,
5);m.symbolHPadding=D(f.toolbarsymbolhpadding,b);m.symbolVPadding=D(f.toolbarsymbolvpadding,b);a=m.position=B(f.toolbarposition,"tr").toLowerCase();switch(a){case "tr":case "rt":case "top right":case "right top":a="tr";break;case "br":case "rb":case "bottom right":case "right bottom":a="br";break;case "tl":case "lt":case "top left":case "left top":a="tl";break;case "bl":case "lb":case "bottom left":case "left bottom":a="bl";break;default:a="tr"}b=m.hAlign="left"===(C+f.toolbarhalign).toLowerCase()?
"l":a.charAt(1);a=m.vAlign="bottom"===(C+f.toolbarvalign).toLowerCase()?"b":a.charAt(0);m.hDirection=D(f.toolbarhdirection,"r"===b?-1:1);m.vDirection=D(f.toolbarvdirection,"b"===a?-1:1);m.vMargin=D(f.toolbarvmargin,6);m.hMargin=D(f.toolbarhmargin,10);f.toolbary&&f.toolbarx?(m.x=D(f.toolbarx),m.y=D(f.toolbary),delete m.spaceNotHardCoded):m.spaceNotHardCoded=!0;p.color=f.scrollcolor&&P(f.scrollcolor);p.padding=D(f.scrollpadding,0);p.height=D(f.scrollheight,12);p.width=D(f.scrollwidth,12);p.displayFlat=
D(f.flatscrollbars,0);p.scrollBar3DLighting=D(f.scrollbar3dlighting,1);p.startPercent=Math.min(1,Math.max(0,parseFloat(f.scrolltoend)||0));p.showButtons=!!D(f.scrollshowbuttons,1);p.buttonPadding=D(f.scrollbtnpadding,0);q.baseFontFamily=B(f.basefont,"Verdana,sans");q.baseFontSize=D(f.basefontsize,10);q.baseFontColor=B(f.basefontcolor,"595959")},getAPIInstances:function(a){var b={},k;k=this.componentPool=new E(this._chart.components,this._iCount);k=f(k,this._options);switch(a){case this.ALIGNMENT_HORIZONTAL:b.Toolbar=
k.HorizontalToolbar}b.ComponentGroup=k.ComponentGroup;b.Symbol=k.Symbol;b.Scroller=k.Scroller;b.SymbolWithContext=k.SymbolWithContext;b.SymbolStore=g;b.CheckboxSymbol=k.CheckboxSymbol;return b},getDefaultConfiguration:function(){return m},clean:function(){this.componentPool.hideRecursive(this._iCount)}}])}]);N.register("module",["private","modules.renderer.js-base",function(){var b=this,z=b.hcLib,G=z.Raphael,v=G._availableAnimAttrs,F="VML"===G.type,E=b.window,t=E.document,a=z.BLANKSTRING,Q=z.HUNDREDSTRING,
r=z.preDefStr,P=r.configStr,T=r.animationObjStr,L=r.NORMAL,D=r.BOLD,B=r.hiddenStr,m=r.visibleStr,p=r.ROUND,q=r.miterStr,A=r.POSITION_START,n=r.POSITION_TOP,k=r.POSITION_END,g=r.POSITION_BOTTOM,f=r.POSITION_MIDDLE,S=r.POINTER,C=r.noneStr,Y=r.SEVENTYSTRING,R=r.blackStr="AAAAAA",u=r.AUTOSTRING,X=z.parseConfiguration,O=z.componentConfigurer,W=z.BLANKSTRING,H="https:"===E.location.protocol?"https://export.api3.fusioncharts.com/":"http://export.api3.fusioncharts.com/",w=z.pluck,K=z.getValidValue,h=z.pluckNumber,
V=z.getFirstValue,e=z.parseUnsafeString,d=z.extend2,c=z.getDashStyle,l=z.graphics.mapSymbolName,M=z.regex.dropHash,J=z.HASHSTRING,Ea=E.Image,Ka=z.setImageDisplayMode,va=z.removeEvent,ka=z.getPosition,ca=z.getMouseCoordinate,U=z.addEvent,la=8===E.document.documentMode?m:W,Ga=z.toRaphaelColor,xa=Math,aa=xa.min,Z=xa.max,ja=xa.abs,ma=xa.ceil,oa=xa.floor,Aa=xa.round,ga=xa.sin,wa=xa.cos,ia=Math.PI,ua=ia/2,Ca=2*ia,da=ia+ua,qa=z.getFirstColor,ba=z.setLineHeight,na=z.pluckFontSize,pa=z.graphics.getDarkColor,
La=z.graphics.getLightColor,ea=z.graphics.convertColor,za=z.POSITION_CENTER,ha=z.POSITION_RIGHT,sa=z.POSITION_LEFT,fa=z.chartAPI,ya=z.COMMASTRING,Ia=z.PXSTRING,Fa=z.componentDispose,Ba,Ja=E.navigator.userAgent.match(/ (iPad|iPhone|iPod)/g),Ha={left:A,right:k,center:f},Da=z.each,Ma="rgba(255,0,0,"+(z.isIE?.002:1E-6)+")",Na=z.BGRATIOSTRING,Oa=z.graphics.getAngle,Sa=z.NumberFormatter,Ua=z.getLinkAction,Pa=z.hasTouch=void 0!==t.documentElement.ontouchstart,ab={1:D,0:L},Xa=function(a){a=a.replace("rgba(",
W).split(",");return"#"+("000000"+(a[0]<<16|a[1]<<8|a[2]).toString(16)).slice(-6)},$a=!z.CREDIT_REGEX.test(E.location.hostname),Ta=z.chartPaletteStr={chart2D:{bgColor:"bgColor",bgAlpha:"bgAlpha",bgAngle:"bgAngle",bgRatio:"bgRatio",canvasBgColor:"canvasBgColor",canvasBaseColor:"canvasBaseColor",divLineColor:"divLineColor",legendBgColor:"legendBgColor",legendBorderColor:"legendBorderColor",toolTipbgColor:"toolTipbgColor",toolTipBorderColor:"toolTipBorderColor",baseFontColor:"baseFontColor",anchorBgColor:"anchorBgColor"},
chart3D:{bgColor:"bgColor3D",bgAlpha:"bgAlpha3D",bgAngle:"bgAngle3D",bgRatio:"bgRatio3D",canvasBgColor:"canvasBgColor3D",canvasBaseColor:"canvasBaseColor3D",divLineColor:"divLineColor3D",divLineAlpha:"divLineAlpha3D",legendBgColor:"legendBgColor3D",legendBorderColor:"legendBorderColor3D",toolTipbgColor:"toolTipbgColor3D",toolTipBorderColor:"toolTipBorderColor3D",baseFontColor:"baseFontColor3D",anchorBgColor:"anchorBgColor3D"}},bb=function(){var a={},c,e=function(){var d,h,f,l,g=0,k,n,w=parseInt(b.core.options.resizeTrackingInterval,
10)||300,m={},u=function(){m.itemVar._containerOffsetW=m.parentEle.offsetWidth;m.itemVar._containerOffsetH=m.parentEle.offsetHeight},q;for(d in a)g+=1,h=a[d],f=h.jsVars,k=h.ref,!h.disposed&&(l=k&&k.parentNode)&&(n=k.style)&&(/\%/g.test(n.width)||/\%/g.test(n.height))?(k=l.offsetWidth,q=l.offsetHeight,!f.resizeLocked&&(k&&f._containerOffsetW!==k||q&&f._containerOffsetH!==q)&&(h.resizeTo&&h.resizeTo(),m.itemVar=f,m.parentEle=l,setTimeout(u,1))):(delete a[d],--g);c=g?setTimeout(e,w):clearTimeout(c)};
return function(d,h){var f=d.jsVars,l=h||d.ref&&d.ref.parentNode||{};f._containerOffsetW=l.parentNode.offsetWidth;f._containerOffsetH=l.parentNode.offsetHeight;a[d.id]=d;c||(c=setTimeout(e,parseInt(b.core.options.resizeTrackingInterval,10)||300))}}(),Qa=z.schedular,Wa=z.priorityList,Za={getExternalInterfaceMethods:function(){var a=fa[this.jsVars.type],a=a&&a.eiMethods,c="saveAsImage,print,exportChart,getXML,hasRendered,signature,cancelExport,getSVGString,lockResize,showChartMessage,drawCrossLine,",
e;if("string"===typeof a)c+=a+ya;else if(void 0!==a||null!==a)for(e in a)c+=e+ya;return c.substr(0,c.length-1)},drawOverlayButton:function(a){var c=this.jsVars,e=c.overlayButton,d,h;if(a&&a.show){e||(e=c.overlayButton=t.createElement("span"),z.dem.listen(e,"click",function(){b.raiseEvent("OverlayButtonClick",a,c.fcObj)}));for(d=a.message?a.message:"Back";e.firstChild;)e.removeChild(e.firstChild);e.appendChild(t.createTextNode(d));c.overlayButtonMessage=d;d={border:"1px solid "+(a.borderColor?a.borderColor.replace(M,
J):"#7f8975"),backgroundColor:a.bgColor?a.bgColor.replace(M,J):"#edefec",fontFamily:a.font?a.font:"Verdana,sans",color:"#"+a.fontColor?a.fontColor:"49563a",fontSize:(a.fontSize?a.fontSize:"10")+Ia,padding:(a.padding?a.padding:"3")+Ia,fontWeight:0===parseInt(a.bold,10)?L:D,position:"absolute",top:"0",right:"0",_cursor:"hand",cursor:S};for(h in d)e.style[h]=d[h];c.hcObj.container.appendChild(e);c.overlayButtonActive=!0}else e&&(c.overlayButton=e.parentNode.removeChild(e),c.overlayButtonActive=!1,delete c.overlayButtonMessage)},
print:function(a){var c=this.apiInstance,e=d({},a);if(c.config.isPrinting||!c.config.hasRendered)return!1;b.raiseEvent("BeforePrint",e,c.chartInstance,void 0,function(){var a=c.linkedItems.container,d=[],h=a.parentNode,f=t.body||t.getElementsByTagName("body")[0],l=f.childNodes,g,k,n,w;c.config.isPrinting=!0;Da(l,function(a,c){1==a.nodeType&&(d[c]=a.style.display,a.style.display="none")});if(!1!==e.hideButtons){k=c.components.chartMenuBar.componentGroups[0].symbolList;w=0;for(g=k.length;w<g;w++)if((n=
k[w])instanceof c.components.toolBoxAPI.SymbolWithContext){n=n.getListRefernce().getFirstContainer();break}n.container.style.display=C}f.appendChild(c.linkedItems.container);E.print();setTimeout(function(){n.container.style.display=m;h.appendChild(a);Da(l,function(a,c){1==a.nodeType&&(a.style.display=d[c])});!1!==e.hideButtons&&(n.container.style.display=m);c.config.isPrinting=!1;b.raiseEvent("PrintComplete",e,c.chartInstance)},1E3)},function(){b.raiseEvent("PrintCancelled",e,c.chartInstance)})},
exportChart:function(a){return z.exportChart.call(this.apiInstance,a)},getSVGString:function(a){var c=this,e=c.apiInstance,b=e.chartInstance.args.asyncRender,e=e.getJobList();if("function"===typeof a)e.eiMethods.push(Qa.addJob(function(){a(c.jsVars&&c.jsVars.instanceAPI&&c.jsVars.instanceAPI.components&&c.jsVars.instanceAPI.components.paper&&c.jsVars.instanceAPI.components.paper.toSVG())},c,[],Wa.postRender));else return b?"<svg></svg>":c.jsVars&&c.jsVars.instanceAPI&&c.jsVars.instanceAPI.components&&
c.jsVars.instanceAPI.components.paper&&c.jsVars.instanceAPI.components.paper.toSVG()},resize:function(){var a=this.jsVars,c=a.container;a.instanceAPI&&a.instanceAPI.redraw?a.instanceAPI.redraw():z.createChart(a.fcObj,c,a.type,void 0,void 0,!1,!0);delete a.isResizing},lockResize:function(a){return"boolean"!==typeof a?!!this.jsVars.resizeLocked:this.jsVars.resizeLocked=a},showChartMessage:function(a,c,e,b){var d=this,f=d.jsVars,l=d.apiInstance,g=l.chartInstance,k=g.args.asyncRender,g=g.options,n=l.getJobList(),
m,u=function(){c&&l&&l.config.hasRendered?(l._show(),d.showMessage(a,m,e)):(l._hide(),l.setChartMessage(a,{_chartMessageStyle:m}),l.drawChartMessage())};!b&&(b={});m={fontFamily:w(b.font,g.baseChartMessageFont,"Verdana,sans"),fontSize:h(b.fontSize,g.baseChartMessageFontSize,10),color:w(b.color&&ea(b.color,b.alpha),g.baseChartMessageColor)};f.msgStore[a]&&(a=f.msgStore[a]);k?n.eiMethods.push(Qa.addJob(u,d,[],Wa.postRender)):u();return a},showMessage:function(a,c,e){var b=this.apiInstance,d=b.config,
h=b.components,f=b.graphics.messageGroup,l=h.chartMessage||(h.chartMessage={}),l=l.graphics||(l.graphics={}),g=h.paper,k=b.linkedItems.smartLabel,h=l.messageText,n=l.messageVeil,w=l.message,m=g.width,u=g.height;f?f.toFront():b.graphics.messageGroup=f=g.group("messageGroup");n||(n=l.messageVeil=g.rect(0,0,m,u,f).attr({fill:"rgba(0,0,0,0.2)",stroke:C}));n.show().toFront().attr("cursor",e?S:"default")[e?"click":"unclick"](b._hideChartMessage,b);h||(h=l.messageText=g.text(m/2,u/2,W,f));w&&w.hide();a=
a||W;k.setStyle(c);a=k.getSmartText(a,m-(d.marginRight||0)-(d.marginLeft||0),u-(d.marginTop||0)-(d.marginBotton||0));h.attr({"font-size":c.fontSize,"font-family":c.fontFamily,fill:c.color,text:a.text,ishot:!0,cursor:e?S:"default","line-height":14})[e?"click":"unclick"](b._hideChartMessage,b).show().toFront()},signature:function(){return"FusionCharts/3.4.0 (XT)"},drawCrossLine:function(a){var c=this.apiInstance.components,c=c["datasetGroup_"+c.dataset[0].type];c.config.customHighlightFlag=!0;c.drawTrendRegion&&
c.drawTrendRegion();c._moveTrendRegion&&c._moveTrendRegion(a,void 0,!1)}};delete v.fill;delete v.stroke;b.core.options.resizeTrackingInterval=300;b.core.options.preventTrackResize=!1;b.core.options.SVGDefinitionURL="relative";z.createChart=function(c,e,d,f,l,g,k){var n=c.jsVars,m,u=fa[d||(d=c.chartType())],q=c.apiInstance,p=n.hasNativeMessage;g=c.options;var C=c.args,A=n.secondTimeRender,J;if(e.offsetWidth&&e.offsetHeight){e.FusionCharts=b.core.items[c.id];C.asyncRender=h(C.asyncRender,1);/^\s*absolute\s*$/i.test(b.core.options.SVGDefinitionURL)&&
(G._url=(G._g&&G._g.win||E).location.href.replace(/#.*?$/,a));J=function(a){var d={renderer:"javascript"},h=n.fcObj,l=h.width,I=h.height,g=n.overlayButton;p=n.hasNativeMessage;n.container=e;n.hcObj=a;n.width=e.offsetWidth;n.height=e.offsetHeight;n.instanceAPI=q;a.hasRendered&&n.overlayButtonActive&&g&&(g.innerHTML=W,g.appendChild(t.createTextNode(n.overlayButtonMessage)),a.container.appendChild(g));(/\%/g.test(l)||/\%/g.test(I))&&e&&e.parentNode&&!b.core.options.preventTrackResize&&bb(h,e);if(f&&
(f({success:a.hasRendered,ref:e,id:c.id}),a.hasRendered)){q.config.hasRendered=!0;if(!0===c.disposed)return;p||(h.__state.firstRenderNotified=!0,q.getJobList().postRender.push(Qa.addJob(function(){z.raiseEvent("rendered",{renderer:"javascript"},h,[h.id])},q,[],Wa.postRender)))}a.hasRendered&&n.previousDrawCount<n.drawCount&&(d.width=n.width,d.height=n.height,d.drawCount=n.drawCount,d.displayingMessage=p,d.renderer=h.options.renderer,z.raiseEvent("drawcomplete",d,h,[h.id]),p||k||q.getJobList().postRender.push(Qa.addJob(function(){h.__state&&
!h.__state.firstRenderNotified&&z.raiseEvent("rendered",{renderer:"javascript"},h,[h.id]);b.raiseEvent("renderComplete",d,h)},q,[],Wa.postRender)))};if(q&&q.inited)b.raiseEvent("internal.drawStart",{chartType:d,logicName:q.name,logicBase:q.base&&q.base.name,defaultSeriesType:q.defaultSeriesType},c),l=c.jsVars&&c.jsVars.themeObject&&c.jsVars.themeObject.getThemedJSONData()||c.getChartData(b.dataFormats.JSON,!0),m=l.data,q.config&&q.config.hasChartMessage&&q._hideChartMessage(),q.jsonData=m,k||z.raiseEvent("dataloaded",
{},c,[c.id]),q._removeWaitingJobs(),q.configure(),q._feedAxesRawData(),q._setCategories(),O(q),q.draw(),c.hasRendered()||q.setChartEvents(),J({hasRendered:!0,container:e});else if(q&&"base"===d)q.setChartMessage(l,c,e),q.drawChartMessage();else{q&&"base"===q.name&&"base"!==d&&(q.dispose(),q=void 0);q?q.config&&q.config.hasChartMessage&&q._hideChartMessage():q=c.apiInstance=u?new fa(d):new fa("base");q.chartInstance=c;q.origRenderWidth=c.__state.renderedWidth;q.origRenderHeight=c.__state.renderedHeight;
if("base"!==d){e.jsVars=c.jsVars;u=q.eiMethods;c.ref=e;n.type=d;b.extend(e,Za);if(u&&"string"!==typeof u)for(m in u)e[m]=u[m];z.raiseEvent("loaded",{type:d,renderer:"javascript"},c,[c.id])}if("base"===d)q.setChartMessage(l,c,e),q.drawChartMessage();else if(void 0!==l)"string"===typeof l&&(q.setChartMessage(l,c,e),q.drawChartMessage(),p=n.hasNativeMessage=!0);else if(!q||!q.init||q&&"base"===q.name)c._chartMessageImageStyle={imageHAlign:w(C.typeNotSupportedMessageImageHAlign,g.baseChartMessageImageHAlign).toLowerCase(),
imageVAlign:w(C.typeNotSupportedMessageImageVAlign,g.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:h(C.typeNotSupportedMessageImageAlpha,g.baseChartMessageImageAlpha),imageScale:h(C.typeNotSupportedMessageImageScale,g.baseChartMessageImageScale)},c._chartMessageStyle={color:C.typeNotSupportedMessageColor||g.baseChartMessageColor,fontFamily:C.typeNotSupportedMessageFont||g.baseChartMessageFont,fontSize:C.typeNotSupportedMessageFontSize||g.baseChartMessageFontSize},q.setChartMessage(g.typeNotSupportedMessage,
c,e),q.drawChartMessage(),p=n.hasNativeMessage=!0;else if(n.message)q.setChartMessage(n.message,c,e),q.drawChartMessage(),p=n.hasNativeMessage=!0;else if(n.loadError)c._chartMessageImageStyle={imageHAlign:w(C.dataLoadErrorMessageImageHAlign,g.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:w(C.dataLoadErrorMessageImageVAlign,g.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:h(C.dataLoadErrorMessageImageAlpha,g.baseChartMessageImageAlpha),imageScale:h(C.dataLoadErrorMessageImageScale,
g.baseChartMessageImageScale)},c._chartMessageStyle={color:C.dataLoadErrorMessageColor||g.baseChartMessageColor,fontFamily:C.dataLoadErrorMessageFont||g.baseChartMessageFont,fontSize:C.dataLoadErrorMessageFontSize||g.baseChartMessageFontSize},q.setChartMessage(g.dataLoadErrorMessage,c,e),q.drawChartMessage(),p=n.hasNativeMessage=!0;else if(n.stallLoad)c._chartMessageImageStyle={imageHAlign:w(C.dataLoadStartMessageImageHAlign,g.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:w(C.dataLoadStartMessageImageVAlign,
g.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:h(C.dataLoadStartMessageImageAlpha,g.baseChartMessageImageAlpha),imageScale:h(C.dataLoadStartMessageImageScale,g.baseChartMessageImageScale)},c._chartMessageStyle={fontFamily:C.dataLoadStartMessageFont||g.baseChartMessageFont,fontSize:C.dataLoadStartMessageFontSize||g.baseChartMessageFontSize,color:C.dataLoadStartMessageColor||g.baseChartMessageColor},q.setChartMessage(g.dataLoadStartMessage,c,e),q.drawChartMessage(),p=n.hasNativeMessage=!0,
J({hasRendered:!0,container:e});else if("zoomscatter"!==d||t.createElement("canvas").getContext)if(b.raiseEvent("internal.drawStart",{chartType:d,logicName:q.name,logicBase:q.base&&q.base.name,defaultSeriesType:q.defaultSeriesType},c),l=c.jsVars&&c.jsVars.themeObject&&c.jsVars.themeObject.getThemedJSONData()||c.getChartData(b.dataFormats.JSON,!0),m=l.data,l.error instanceof Error)c._chartMessageImageStyle={imageHAlign:w(C.dataInvalidMessageImageHAlign,g.baseChartMessageImageHAlign).toLowerCase(),
imageVAlign:w(C.dataInvalidMessageImageVAlign,g.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:h(C.dataInvalidMessageImageAlpha,g.baseChartMessageImageAlpha),imageScale:h(C.dataInvalidMessageImageScale,g.baseChartMessageImageScale)},c._chartMessageStyle={fontFamily:C.dataInvalidMessageFont||g.baseChartMessageFont,fontSize:C.dataInvalidMessageFontSize||g.baseChartMessageFontSize,color:C.dataInvalidMessageColor||g.baseChartMessageColor},q.setChartMessage(g.dataInvalidMessage,c,e),q.drawChartMessage(),
p=n.hasNativeMessage=!0,c.__state.dataReady=!1,k||b.raiseEvent("dataInvalid",{error:l.error},n.fcObj,void 0,function(){z.raiseEvent("dataxmlinvalid",{},c,[c.id])});else{k||z.raiseEvent("dataloaded",{},c,[c.id]);if(!0===q.chartInstance.disposed)return;C.asyncRender&&!A&&"base"!==d&&(q.setChartMessage(q.chartInstance.options.loadMessage,void 0,e),q.drawChartMessage(),q.config.hasChartMessage=!1);q.init(e,m,c,J)}else c._chartMessageImageStyle={imageHAlign:w(C.browserNotSupportedMessageImageHAlign,g.baseChartMessageImageHAlign).toLowerCase(),
imageVAlign:w(C.browserNotSupportedMessageImageVAlign,g.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:h(C.browserNotSupportedMessageImageAlpha,g.baseChartMessageImageAlpha),imageScale:h(C.browserNotSupportedMessageImageScale,g.baseChartMessageImageScale)},c._chartMessageStyle={color:C.browserNotSupportedMessageColor||g.baseChartMessageColor,fontFamily:C.browserNotSupportedMessageFont||g.baseChartMessageFont,fontSize:C.browserNotSupportedMessageFontSize||g.baseChartMessageFontSize},q.setChartMessage(w(C.browserNotSupportedMessage,
g.browserNotSupportedMessage),c,e),q.drawChartMessage(),p=n.hasNativeMessage=!0}n.secondTimeRender=!0}};N.register("component",["legend","legend",{customConfigFn:null,init:function(){this.graphics||(this.graphics={});this.item||(this.items=[]);this.components||(this.components={})},drawLegend:function(a,c){var e,b,d,l=this.chart,g=l.config;e=l.components;var w=e.paper,m=this.config,u=this.graphics||(this.graphics={}),q=l.graphics.legendGroup,p;b=u.box;var C=u.caption,J,r=g.height-g.canvasBottom,H=
g.canvasLeft,M=g.canvasWidth,K=m.chartMarginLeft||0,B=m.chartMarginRight||0,t=m.chartMarginBottom||0,O=g.actionBarHeight||0,R=m.actualCanvasMarginLeft||0,D=g.actualCanvasMarginBottom||0,v=g.actualCanvasMarginRight||0,V=m.alignLegendWithCanvas,X=g.height,Ea=g.canvasTop,S=m.width,z=m.height,Y=g.borderWidth;d=m.borderRadius;var U=m.backgroundColor,L=m.borderColor,C=m.borderWidth||0,E=m.legendPos,Ka=.5*C,F=.5*C+2,ka=h(m.padding,4),va=.5*ka,ma=m.scroll.enabled,ca=m.drawn,l=l.get(P,T),la=l.dummyObj,xa=
l.animObj,Ga=l.transposeAnimDuration,oa=l.animType,Q,ga,ia,wa,ja,l=e.legendScrollBar,da=0,ba=0,da=g.oriCanvasLeft,Ca=g.oriTopSpace,ba=g.oriBottomSpace,ea=e.tb,Aa=e.toolBoxAPI.Scroller;E===ha&&(m.align=ha,m.verticalAlign=f,J=m.layout="vertical");J?(void 0===a&&(a=g.width-B-v-S-Y),void 0===c&&(da=h(Ca,Ea),ba=h(ba,r),c=da+.5*(X-ba-da-z)+(m.y||0))):(void 0===a&&(J=g.width-(K+R+(B+v)),J=V?M-S:J-S,H=V?h(da,H):K+R,a=H+J/2),void 0===c&&(c=X-z-D-t-O));z=G.crispBound(a,c,S,z,C);a=z.x;c=z.y;S=z.width;z=z.height;
ca?(m.xL&&(m.xL=aa(Z(m.xL,F),g.width-m.width-F)),m.yL&&(m.yL=aa(Z(m.yL,F),g.height-m.height-F)),q.show().animateWith(la,xa,{transform:["T",m.xL||a,m.yL||c]},Ga,oa)):q.show().transform(["T",a,c]);m.xPos=a;m.yPos=c;q.attr({cursor:m.legendAllowDrag?"move":W});m.legendAllowDrag&&!m._dragEvtListenerBinded&&(q.drag(function(a,c){m.legendAllowDrag&&(wa=ga+a,ja=ia+c,wa=aa(Z(wa,F),g.width-m.width-F),ja=aa(Z(ja,F),g.height-m.height-F),q.transform("t"+wa+","+ja),m.xPos=m.xL=wa,m.yPos=m.yL=ja)},function(){m.legendAllowDrag&&
(ga=m.xL||m.xPos,ia=m.yL||m.yPos)}),m._dragEvtListenerBinded=!0);ca={x:0,y:0,width:S,height:z,r:d,stroke:L,"stroke-width":C,fill:U||"none",ishot:m.legendAllowDrag};b?(b.animateWith(la,xa,{x:0,y:0,width:S,height:z,r:d},Ga,oa),b.attr({stroke:L,"stroke-width":C,fill:U||"none"})):b=u.box=w.rect(ca,q);ca=m.drawn=!0;b.shadow(m&&m.shadow);p=u.itemGroup||(u.itemGroup=w.group("item",q));ma?(b={isHorizontal:!1},d={scroll:function(a){p.transform(["T",0,(Q-m.totalHeight)*a])},mousedown:function(a){a.preventDefault();
a.stopPropagation()}},l=e.legendScrollBar,l||(e.legendScrollBar=l=(new Aa(b,(ea.idCount||0)+1,ea.pId)).attachEventHandlers(d)),Q=z-ka,p.attr({"clip-rect":"0,"+va+(","+S+","+Q)}),e=(Q+ka)/m.totalHeight,l.draw(S-10+va-C,Ka,{height:z-C,scrollRatio:e,startPercent:0,color:m.legendScrollBgColor}),q.appendChild(l.node)):(l&&l.node&&l.node.hide(),p.attr({"clip-rect":null}),p.node&&p.node.removeAttribute("clip-path"));C=u.caption;if(m.title&&m.title.text!==W&&m.validLegendItem){switch(m.title.align){case A:ma=
ka;break;case k:ma=S-ka-(ma?10:0);break;default:ma=.5*S}q.trackTooltip(!0);S=m.title.style;ca={text:m.title.text,title:m.title.originalText||W,x:ma,y:ka,fill:m.title.style.color,direction:m.textDirection,"line-height":S.lineHeight,"vertical-align":n,"text-anchor":m.title.align};ka={"font-weight":S.fontWeight,"font-style":S.fontStyle,"font-family":S.fontFamily,"font-size":S.fontSize};C?(C.show().attr(ca),C.css(ka)):C=u.caption=w.text(ca,ka,p);C.tooltip(m.title.originalText)}else C&&C.hide();m.showLegend&&
!1!==m.enabled?this._drawPointLegendItem():q.hide()},reverseLegendFn:function(){var a=this.components.items||[],c,e=[],b,d=0,h=this.config;for(c=a.length-1;0<=c;c--)a[c].configuration.mainDS?(b=c,e=e.concat(a.splice(b,d+1)),d=0):d++;e.length&&(h.orderReversed=!0,this.components.items=e.slice(0))},_manageLegendPosition:function(a){var c=this.config,e=this.chart.hasSubDataset,b=c.legendPos,d=this.components.items;c.reversed?e?!c.orderReversed&&this.reverseLegendFn():d&&d.reverse():e&&c.orderReversed&&
this.reverseLegendFn();return b===ha?this._placeLegendBlockRight(a):this._placeLegendBlockBottom(a)},_placeLegendBlockBottom:function(c){var b=this.chart,d=this.components,f=b.config,l=z.TESTSTR,g=f.width,k=f.height,n=f.canvasLeft,m=f.width-(f.canvasRight||0),w=b.linkedItems.smartLabel,u=this.config,q=u.chartMarginLeft,p=u.chartMarginRight,C=u.chartMarginTop,A=u.alignLegendWithCanvas,J=u.minimiseWrappingInLegend,r=u.legendScale,H=u.numColumns,M=u.padding,K=2*c,B=2*M,t=B,O=u.title,R=O.padding,D=parseInt(u.itemStyle.fontSize,
10)||10,v=d.items||[],V=v.length,d=u.oriSymbolPadding,X=u.textPadding,S=u.legendPadding,Ea=f.canvasMarginRight,Y=f.canvasMarginLeft,U=b.components.yAxis||[],b=U[0],U=U[1],b=b&&b.config||{},U=U&&U.config||{},L=b.nameMaxW,E=U.nameMaxW,G=b.name&&b.name.style||{},F=U.name&&U.name.style||{},Ka=b.axisName||W,ka=U.axisName||W,va=0,ca=0,P=0,la=0,xa=U=0,Ga=0,Q=0,ga=[],wa=!1,ia=0,ja=0,da,ba,Ca=b=f.canvasWidth-f.canvasMarginLeft-f.canvasMarginRight,ea;u.paddingBottom=f.height-f.canvasBottom;w.useEllipsesOnOverflow(f.useEllipsesWhenOverflow);
w.setStyle(G);la=w.getOriSize(Ka);w.setStyle(F);F=w.getOriSize(ka);D+=1;0>=D&&(D=1);b-=B;d*=r;D=aa(D*r,b);0>=D&&(d=D=0);u.symbolWidth=D;u.textPadding=4;u.legendHeight=f=D+2*d;u.rowHeight=r=Z(parseInt(u.itemStyle.lineHeight,10)||12,f);M=X+d+M;w.setStyle(u.itemStyle);G=w.getOriSize(l).height;l=S+u.borderWidth/2+1;l=aa(l,c-G-8);S=.05*r;if(la||F)da=h(la.height,0)>h(F.height,0)?(ea=L)&&la.width:(ea=E)&&F.width;b=A?b:g-(da+C>k-c?2*ea+p+q+Ea+Y:p+q+Y+Ea);u.initialItemY=0;u.initialItemX=0;if(u.showLegend&&
0!==V){for(g=0;g<V;g+=1)da=v[g],k=da.config||(da.config={}),C=da.configuration,da=k.name=e(C.label),da===a||0===C.enabled||!1===C.enabled?k.enabled=0:(k.enabled=1,P+=1,ba=!0,da=w.getOriSize(da),va=Z(va,da.width),xa=Z(xa,aa(da.height,K)),ca+=da.width);u.validLegendItem=ba;la=ca/P;C=f+S+X+d+B;ca+=C*P;u.x=(n-q-m+p)/2;u.x=!A&&ca>Ca?0:u.x;if(ba){la+=C;va+=C;0<H&&P<H&&(H=P);ca<=b&&(0>=H||H===P)?(H=P,U=ca/P,wa=!0,xa>r&&(Q=(xa-r)/2,r=xa)):0<H&&(U=b/H)>la?U>va&&(U=va):b>va&&(J||1.5*la>va)?(H=oa(b/va),P<H&&
(H=P),U=va):b>=2*la?(H=oa(b/la),P<H&&(H=P),U=oa(b/H),U>va&&(U=va)):(H=1,U=b);u.itemWidth=U;n=ma(U-C);0>n&&(d=n=X=0);u.symbolPadding=d;u.textPadding=X;u.width=U*H-S;O.oriText!==a&&(w.setStyle(O.style),da=w.getSmartText(O.oriText,b,K),O.text=da.text,da.tooltext&&(O.originalText=da.tooltext),O=da.width+B,u.width<O&&(u.initialItemX=(O-u.width)/2,u.width=O),u.initialItemY=Ga=da.height+R);w.setStyle(u.itemStyle);for(g=0;g<V;g+=1)if(da=v[g],k=da.config,0!==k.enabled){0===n&&(ga[ja]=!0,k.name=a,R=1,O=parseInt(ja/
H,10),m=ja%H,k._legendX=m*U,k._legendY=O*r+B,k._legendH=R*r,k._totalWidth=D+d);if(wa)da=w.getOriSize(k.name),da.height<r&&(k._legendTestY=(r-da.height)/2),k._markerYGutter=Q,k._legendX=ia,k._legendY=B,k._legendH=r,k._totalWidth=D+M+da.width,ia+=da.width+C;else{da=w.getSmartText(k.name,n,K);k.name=da.text;for(da.tooltext&&(k.originalText=da.tooltext);!0===ga[ja];)ja+=1;O=da.height/r;m=ja;for(R=0;R<O;R+=1,m+=H)ga[m]=!0;da.height<r&&(k._legendTestY=(r-da.height)/2);O=parseInt(ja/H,10);m=ja%H;k._legendX=
m*U;k._legendY=O*r+B;k._legendH=R*r;k._totalWidth=D+M+da.width}ja++}w=wa?1:ma(ga.length/H);u.height=u.totalHeight=t+(w*r+Ga);u.rowHeight=r;u.legendNumColumns=H;u.height-2*d>c?(u.height=c,c=u.scroll||(u.scroll={}),c.enabled=!0,c.flatScrollBars=u.flatScrollBars,c.scrollBar3DLighting=u.scrollBar3DLighting,u.width=u.width+12>b?u.width:u.width+12):u.scroll.enabled=!1;l+=u.height;u.isActive=!0;u.enabled=!0}else u.enabled=!1,l=u.width=0}else l=0,u.height=0,u.width=0;return{bottom:l,right:0}},_placeLegendBlockRight:function(c){var b=
this.config,d=this.components,h=this.chart,f=h.config,l=h.linkedItems.smartLabel,g=h.components.canvas.config.canvasBorderThickness||0,k=b.textPadding,h=b.title.padding,n=b.oriSymbolPadding,m=b.legendPadding,u=b.legendScale,w=parseInt(b.itemStyle.fontSize,10),q=2*f.canvasHeight,p=0,C=2*b.padding,A=C,J={},H=!1,d=d.items||[],r=d.length,M,K,B,t=0;c-=C+m;w+=1;0>=w&&(w=1);n*=u;w=aa(w*u,c);0>=w&&(n=w=0);b.symbolPadding=n;b.symbolWidth=w;b.legendHeight=u=w+2*n;b.rowHeight=Z(parseInt(b.itemStyle.lineHeight,
10)||12,u);g=m+b.borderWidth/2+g;K=c-u-m-k;0>K&&(K=0);l.useEllipsesOnOverflow(f.useEllipsesWhenOverflow);l.setStyle(b.itemStyle);if(b.showLegend&&0!==r){for(t=0;t<r;t+=1)M=d[t],f=M.config||(M.config={}),B=M.configuration,M=f.name=e(B.label),f._legendX=0,f._legendY=A,0===B.enabled||!1===B.enabled||M===a?f.enabled=0:(f.enabled=1,H=!0,0===K?(A+=f._legendH=u,f.name=a,f._totalWidth=w+n):(M=l.getSmartText(M,K,q),f.name=M.text,M.tooltext&&(f.originalText=M.tooltext),M.height<u&&(f._legendTestY=(u-M.height)/
2),f._totalWidth=w+n+k+M.width+m,A+=f._legendH=Z(M.height,u),p=Z(M.width,p)));(b.validLegendItem=H)?(b.itemWidth=p+u+m+k,b.width=b.itemWidth+C,b.title.oriText!==a&&(l.setStyle(b.title.style),M=l.getSmartText(b.title.oriText,c,q),b.title.text=M.text,M.tooltext&&(b.title.originalText=M.tooltext),l=M.width+C,b.width<l&&(b.initialItemX=(l-b.width)/2,b.width=l),b.initialItemY=M.height+h,A+=b.initialItemY),b.height=b.totalHeight=A,g=aa(b.width+g,c),J.right=g+m,b.isActive=!0,b.enabled=!0):(b.enabled=!1,
b.width=0,J.right=0)}else J.right=0,b.height=0,b.width=0;return J},postSpaceManager:function(){var a=this.config,c=this.chart.config.canvasHeight;a.legendPos===ha&&(a.height>c?(a.height=c,a.scroll.enabled=!0,a.scroll.flatScrollBars=a.flatScrollBars,a.scroll.scrollBar3DLighting=a.scrollBar3DLighting,a.width+=(a.scroll.scrollBarWidth=10)+(a.scroll.scrollBarPadding=2)):a.scroll.enabled=!1)},configure:function(){var c=this.chart,b=this.config,d=c.config,f=d.style,l=c.jsonData.chart||c.jsonData.map,k=
c.components.colorManager,n=c.is3D?Ta.chart3D:Ta.chart2D,m,u,q=h(l.useroundedges,0);m=f.outCancolor;u=h(l.legendpadding,7);var p=w(l.legenditemfont,f.outCanfontFamily),C=h(l.legendiconscale,1),A=na(l.legenditemfontsize,f.fontSize),J=w(l.legenditemfontcolor,m).replace(/^#?([a-f0-9]+)/ig,"#$1"),H=w(l.legendiconbgcolor),r=w(l.legendiconbordercolor),M=w(l.legendiconbgalpha,l.legendiconalpha,100),K=w(l.legendiconborderalpha,l.legendiconalpha,100),B=h(l.legendiconsides,4),t=h(l.legendiconborderthickness),
O=h(l.legendiconstartangle,45),R=qa(w(l.legenditemhoverfontcolor,J)),D=ab[h(l.legenditemfontbold,0)]||W,f=na(l.legendcaptionfontsize,f.fontSize)+"px";b.isActive=!1;b.chartMarginTop=d.origMarginTop;b.chartMarginRight=d.origMarginRight;b.chartMarginBottom=d.origMarginBottom;b.chartMarginLeft=d.origMarginLeft;b.showLegend=h(l.showlegend,!c.dontShowLegendByDefault,1);A+="px";b.legendPos=w(l.legendposition,c.legendposition,g).toLowerCase();b.numColumns=h(l.legendnumcolumns,0);b.xL=b.yL=0;if(0>=C||5<C)C=
1;b.drawCustomLegendIcon=h(l.drawcustomlegendicon,0);b.customLegendConfig={bgColor:H,borderColor:r,bgAlpha:M,borderAlpha:K,borderThickness:t,startAngle:O,sides:B};b.legendScale=C;b.legendPadding=u;b.oriSymbolPadding=3;b.textPadding=4;b.alignLegendWithCanvas=h(l.alignlegendwithcanvas,1);b.itemStyle={color:ea(J),fontFamily:p,fontSize:A,fontWeight:D};ba(b.itemStyle);b.itemHiddenStyle={fontFamily:p,fontSize:A,color:ea(w(l.legenditemhiddencolor,"cccccc").replace(/^#?([a-f0-9]+)/ig,"#$1")),fontWeight:D};
ba(b.itemHiddenStyle);b.title.style={fontFamily:w(l.legendcaptionfont,p),fontSize:f,color:w(l.legendcaptionfontcolor,m).replace(/^#?([a-f0-9]+)/ig,"#$1"),fontWeight:ab[h(l.legendcaptionfontbold,1)]||W};b.title.align=Ha[l.legendcaptionalignment&&l.legendcaptionalignment.toLowerCase()||Ha.center]||Ha.center;b.itemHoverStyle={color:ea(R.replace(/^#?([a-f0-9]+)/ig,"#$1"))};b.title.style["text-anchor"]=b.title.align;b.padding=4;d=w(l.legendbordercolor,k.getColor(n.legendBorderColor));m=h(l.legendborderalpha,
100);u=h(l.legendbgalpha,100);b.backgroundColor=ea(w(l.legendbgcolor,k.getColor(n.legendBgColor)),u);b.borderColor=ea(d,m);b.borderWidth=h(l.legendborderthickness,!q||l.legendbordercolor?1:0);b.borderRadius=h(q,0);b.shadow=!!h(l.legendshadow,1);b.symbol3DLighting=!!h(l.use3dlighting,l.useplotgradientcolor,1);b.shadow&&(b.shadow={enabled:b.shadow,opacity:Z(m,u)/100});b.reversed=!!h(l.reverselegend,0);b.style={padding:4};b.lineWidth=h(l.linethickness,2);(b.interactiveLegend=!1!==c.hasInteractiveLegend&&
!!h(l.interactivelegend,1))?(b.interactiveLegend=!0,b.symbolStyle={_cursor:"hand",cursor:S}):(b.interactiveLegend=!1,b.itemStyle.cursor="default",b.itemHoverStyle.cursor="inherit");b.borderRadius=h(l.legendborderradius,q?3:0);b.legendAllowDrag=!!h(l.legendallowdrag,0);b.title.text=b.title.oriText=e(V(l.legendcaption,a));b.legendScrollBgColor=qa(w(l.legendscrollbgcolor,l.scrollcolor,k.getColor("altHGridColor")));b.legendScrollBarColor=w(l.legendscrollbarcolor,d);b.legendScrollBtnColor=w(l.legendscrollbtncolor,
d);b.minimiseWrappingInLegend=h(l.minimisewrappinginlegend,0);b.flatScrollBars=h(l.flatscrollbars,0);b.scrollBar3DLighting=h(l.scrollbar3dlighting,1);b.orderReversed=!1},_drawPointLegendItem:function(){var a=this,c=a.chart,e=c.hasSubDataset,d=c.config,f=c.get(P,T),g=f.transposeAnimDuration,k=f.animType,m=f.dummyObj,f=f.animObj,u=c.components.dataset,q=c.components.paper,p=a.config,C=p.reversed,H=a.components.items||[],r=p.legendHeight,K=p.symbolPadding,B=p.symbolWidth,t=p.interactiveLegend,O=p.textPadding||
2,R=h(p.padding,4),d=d.textDirection,D=p.itemHiddenStyle,v=p.itemStyle,V=p.itemHoverStyle,X=p.lineWidth,Ea=v.color,W=D&&D.color||"#CCCCCC",D=a.graphics,Y=D.itemGroup,U=p.drawCustomLegendIcon,L=p.customLegendConfig,E,G,F,Ka,ka,va,ma,Z,la,aa,xa,oa,Q,da,ga,ja,wa,ia,ba,Ca,Aa,qa,ua,na,pa,fa,ha,za,sa,N=z.hashify,ya=function(a){var e=this.data("legendItem"),d=e.configuration.datasetObj||e.dataset,d=d.getEventArgs?d.getEventArgs(e):{};a=ca(c.chartInstance,a);d.chartX=a.chartX;d.chartY=a.chartY;d.pageX=a.pageX;
d.pageY=a.pageY;d.legendItemIndex=e.index;d.legendItemId=e.legendItemId;d.preventDefaults=function(){};b.raiseEvent("LegendItemClicked",d,c.chartInstance)},Ba=function(a){var e=this.data("legendItem")||{},d=e.configuration.datasetObj||e.dataset,f=this.data("interactive"),d=d.getEventArgs?d.getEventArgs(e):{};a=ca(c.chartInstance,a,c);var h=this.data("itemHoverStyle"),l=e.graphics&&e.graphics.legendItemText;!1!==e.dataset.visible&&f&&l&&l.attr({fill:h.color});d.chartX=a.chartX;d.chartY=a.chartY;d.pageX=
a.pageX;d.pageY=a.pageY;d.legendItemIndex=e.index;d.legendItemId=e.legendItemId;b.raiseEvent("LegendItemRollover",d,c.chartInstance)},Da=function(a){var e=this.data("legendItem")||{},d=e.configuration.datasetObj||e.dataset,f=this.data("interactive"),d=d.getEventArgs?d.getEventArgs(e):{};a=ca(c.chartInstance,a,c);var h=!1!==e.dataset.visible,l=this.data("itemStyle"),I=e.graphics&&e.graphics.legendItemText;h&&f&&I&&I.attr({fill:l.color});d.chartX=a.chartX;d.chartY=a.chartY;d.pageX=a.pageX;d.pageY=a.pageY;
d.legendItemIndex=e.index;d.legendItemId=e.legendItemId;b.raiseEvent("LegendItemRollout",d,c.chartInstance)},Fa=function(c){var e=this.data("legendItem"),b=e.dataset;this.data("interactive")&&e.legendClickFN.call(a,b,e,u);ya.call(this,c)},Ia=function(){ia=.5*B;wa=Z+K+ia;Ka=la+(ga._markerYGutter||0)+K+ia;Na&&(ia*=.6);za=l(qa.anchorSide);Ca=qa.symbol=za&&za.split("_")||[];ba="spoke"===Ca[0]?1:0;Oa={polypath:[Ca[1]||2,wa,Ka,ia,qa.startAngle,qa.spoke||ba]};Ja={cursor:v.cursor||S,stroke:F?ua:W,fill:F?
na:W,"stroke-width":Aa,ishot:t}},Ha,Ja,Qa={},Na,Oa,Pa;E=p.initialItemX||0;G=p.initialItemY||0;if(!1!==p.enabled&&p.showLegend){Y.css(v);xa=0;for(oa=H.length;xa<oa;xa+=1)p=H[xa],p.index=xa,qa=p.configuration,va=qa.type,ga=p.config=p.config||(p.config={}),D=p.graphics||(p.graphics={}),Q=p.dataset,Q.graphics&&(Q.graphics.legendGraphics=D),ua=ga.strokeColor=qa.strokeColor||"000000",na=ga.fillColor=qa.fillColor||"000000",ga.interactiveLegend=qa.interactiveLegend,ga.legendBackgroundColor=qa.legendBackgroundColor?
Ga({color:qa.legendBackgroundColor,alpha:20}):Ga(Ma),pa=qa.anchorSide,fa=ga.drawLine=qa.drawLine,X=qa.lineWidth||X,ha=qa.lineColor||ua,Z=E+ga._legendX+R,la=G+ga._legendY-R,Aa=ga.strokeWidth=qa.strokeWidth||.5,aa=ga._legendH,F=!1!==Q.visible,Q=D.legendItemBackground,ka=D.legendItemText,da=D.legendItemLine,ja=D.legendItemSymbol,t=w(ga.interactiveLegend,t),!t&&(v.cursor="default"),0!==ga.enabled?(sa=Z+r+O-2,Pa=la+(ga._legendTestY||0),ma={text:ga.name,fill:F?Ea:W,"text-anchor":A,"vertical-align":n,cursor:v.cursor||
S,direction:d,"line-height":v.lineHeight},Ha=Oa=null,ga.textAttr=ma,ka?(ka.show().animateWith(m,f,{x:sa,y:Pa},g,k),ka.attr(ma)):(ma.x=sa,ma.y=Pa,ka=D.legendItemText=q.text(ma,Y).data("legendItem",ga)),Na=!1,U&&!1!==qa.customLegendIcon?(sa=L.borderColor,ka=w(L.borderAlpha),ha=L.bgColor,ma=w(L.bgAlpha,"100"),pa||"line"===va||fa||"spline"===va?(va=N(qa.rawStrokeColor),qa.rawFillColor=N(qa.rawFillColor),na=w(ha,qa.rawFillColor,ga.color),/^#/.test(na)&&(na=ea(na,ma)),ha=w(sa,va,ga.strokeColor),ha=ea(ha,
ka),ga.anchorSide=L.sides):(va=w(qa.rawFillColor,ga.fillColor),na=w(ha,va),na=ea(na,ma),L.borderColor?ha=ea(L.borderColor,ka):(/rgb/.test(va)&&(va=Xa(va)),ha=La(va,60).replace(M,J),ha=ea(ha,ka))),ga.fillColor=na,ga.strokeColor=ha,ia=.5*B,wa=Z+K+ia,Ka=la+(ga._markerYGutter||0)+K+ia,Ca=(za=l(L.sides))&&l(L.sides).split("_")||[],ba="spoke"===Ca[0]?1:0,Oa={polypath:[Ca[1]||2,wa,Ka,ia,L.startAngle,ba]},Ja={cursor:v.cursor||S,stroke:F?ha:W,fill:F?na:W,"stroke-width":h(L.borderThickness,1),ishot:t}):"line"===
va||fa?(Ka=la+(ga._markerYGutter||0)+K+.5*B,Ha={path:["M",Z+K,Ka,"L",Z+K+B,Ka]},Na=!0,Qa={"stroke-width":X,stroke:F?ha:W,cursor:v.cursor||S,ishot:t},pa&&Ia()):pa?Ia():"line"!==va&&(ja=D.legendItemSymbol,va=a._getSymbolPath(Z+K,la+(ga._markerYGutter||0)+K,B,B,va),Oa={path:va.path},Ja={"stroke-width":.5,stroke:F?ua:W,fill:F?na:W,cursor:v.cursor||S,ishot:t}),Ha&&Na?(ga.lineAttr=Qa,da||(da=D.legendItemLine=q.path(Y),da.attr(Ha)),da.show().animateWith(m,f,Ha,g,k),da.attr(Qa).data("legendItem",ga)):da&&
da.hide(),Oa?(ga.symbolAttr=Ja,ja||(ja=D.legendItemSymbol=q.polypath(Y),ja.attr(Oa)),ja.show().animateWith(m,f,Oa,g,k),ja.attr(Ja),ja.data("legendItem",ga)):ja&&ja.hide(),aa={x:Z,y:la,width:ga._totalWidth,height:aa},da={r:0,fill:ga.legendBackgroundColor,"stroke-width":1,stroke:"none",cursor:v.cursor||S,ishot:t},Q||(Q=D.legendItemBackground=q.rect(Y),Q.attr(aa).mouseover(Ba).mouseout(Da).click(Fa)),Q.show().animateWith(m,f,aa,g,k),Q.attr(da),Q.data("legendItem",p).data("interactive",t).data("itemHoverStyle",
V).data("itemStyle",v)):(ka&&ka.hide(),Q&&Q.hide(),ja&&ja.hide(),da&&da.hide());!e&&C&&H.reverse()}},_getSymbolPath:function(a,c,e,b,d){var f=["M"],h,l,g;switch(d){case "column":case "dragcolumn":case "column3d":h=.25*e;d=.5*h;l=.7*b;g=.4*b;f=f.concat([a,c+b,"l",0,-l,h,0,0,l,"z","m",h+d,0,"l",0,-b,h,0,0,b,"z","m",h+d,0,"l",0,-g,h,0,0,g,"z"]);break;case "bar2d":case "bar3d":h=.3*e;d=.6*e;l=b/4;g=l/2;f=f.concat([a,c,"L",a+d,c,a+d,c+l,a,c+l,"Z","M",a,c+l+g,"L",a+e,c+l+g,a+e,c+l+g+l,a,c+2*l+g,"Z","M",
a,c+2*(l+g),"L",a+h,c+2*(l+g),a+h,c+b,a,c+b,"Z"]);break;case "area":case "area3d":case "areaspline":case "dragarea":l=.6*b;g=.2*b;d=.8*b;f=f.concat([a,c+d,"L",a,c+l,a+.3*e,c+g,a+.6*e,c+l,a+e,c+g,a+e,c+d,"Z"]);break;case "pie2d":case "pie3d":case "doughnut2d":case "doughnut3d":h=.5*e;d=.9*h;e=a+h+1;b=c+h-1;a=a+h-1;c=c+h+1;f=f.concat(["M",e,b,"L",e,b-d+1,"A",d-1,d-1,0,0,1,e+d-1,b,"Z","M",a,c,"L",a,c-d,"A",d,d,0,1,0,a+d,c,"Z"]);break;case "boxandwhisker2d":f=f.concat([a,c,"L",a+e,c,a+e,c+b,a,c+b,"Z"]);
break;default:f=f.concat([a,c,"L",a+e,c,a+e,c+b,a,c+b,"Z"])}return{path:f}},emptyItems:function(a,c){var e=this.components,b=e.items||(e.items=[]),d,f,e=void 0!==c?c:b.length,h=b.splice(a,e);a=0;for(e=h.length;a<e;a+=1)for(d in b=(h[a]||(h[a]={})).graphics,b)(f=b[d])&&f.remove&&"function"===typeof f.remove&&f.remove()},removeItem:function(a){var c=this.getItems()||[],e,b,d,f=c.length;for(e=0;e<f;e++)if(b=c[e],d=b.legendItemId,a===d){Fa.call(b);c.splice(e,1);break}},addItems:function(a,c,e){var b,
d=this.components;b=this.lastItemId;var f=w(a.legendItemId,e.legendItemId),d=d.items||(d.items=[]);void 0!==f?(this.configureItems(f,{legendClickFN:c,configuration:e,dataset:a}),b=f):(void 0===b?this.lastItemId=b="FCLEGEND_0":(b=(b=b.split("_"))&&b[1],this.lastItemId=b="FCLEGEND_"+ ++b),d.push({legendItemId:b,dataset:a,legendClickFN:c,configuration:e||{}}));return b},configureItems:function(a,c){var e=this.components.items,b,d,f=e.length,h,l;for(d=0;d<f&&(l=e[d],!l.dataset||(h=w(l.dataset.legendItemId,
l.legendItemId),h!==a));d++);for(b in l)if(b in c)switch(b){case "configuration":this.mergeConf(c[b],l[b]);break;default:l[b]=c[b]}},mergeConf:function(a,c){var e,b;for(e in a)b=a[e],void 0!==b&&null!==b&&(c[e]=b)},getItems:function(){return this.components.items},hide:function(){this.chart.graphics.legendGroup.hide()}},void 0,{enabled:!0,symbolWidth:12,borderRadius:1,backgroundColor:"#FFFFFF",initialItemX:0,title:{text:W,x:0,y:0,padding:2},scroll:{},itemStyle:{}}]);N.register("component",["toolbox",
"horizontaltoolbox",{init:function(a){this.config={type:a};this.components={};this.graphics={};this._configure()},_getPosition:function(){var a=this.config.type,c=a.frame,e=a.orientation,b=a.placement,d={chart:{outer:{left:0,right:0,top:0,bottom:0},inner:{left:0,right:0,top:0,bottom:0}},canvas:{outer:{left:0,right:0,top:0,bottom:0},inner:{left:0,right:0,top:0,bottom:0}}};!a&&(a={});return c&&b&&e?d[c][b][e]:a},_configure:function(){var c,e,b=this.config,d=this.chart,f=d.jsonData.chart,l=d.config,
d=l.width,l=l.height;b.scale=h(f.toolbarbuttonscale,1.15);b.width=h(f.toolbarbuttonwidth,15);b.height=h(f.toolbarbuttonheight,15);b.radius=h(f.toolbarbuttonradius,2);b.spacing=h(f.toolbarbuttonspacing,5);b.fill=ea(w(f.toolbarbuttoncolor,"ffffff"));b.labelFill=ea(w(f.toolbarlabelcolor,"cccccc"));b.symbolFill=ea(w(f.toolbarsymbolcolor,"ffffff"));b.hoverFill=ea(w(f.toolbarbuttonhovercolor,"ffffff"));b.stroke=ea(w(f.toolbarbuttonbordercolor,"bbbbbb"));b.symbolStroke=ea(w(f.toolbarsymbolbordercolor,"9a9a9a"));
b.strokeWidth=h(f.toolbarbuttonborderthickness,1);b.symbolStrokeWidth=h(f.toolbarsymbolborderthickness,1);c=b.symbolPadding=h(f.toolbarsymbolpadding,5);b.symbolHPadding=h(f.toolbarsymbolhpadding,c);b.symbolVPadding=h(f.toolbarsymbolvpadding,c);e=b.position=w(f.toolbarposition,"tr").toLowerCase();switch(e){case "tr":case "rt":case "top right":case "right top":e="tr";break;case "br":case "rb":case "bottom right":case "right bottom":e="br";break;case "tl":case "lt":case "top left":case "left top":e=
"tl";break;case "bl":case "lb":case "bottom left":case "left bottom":e="bl";break;default:e="tr"}c=b.hAlign=(a+f.toolbarhalign).toLowerCase()===sa?"l":e.charAt(1);e=b.vAlign=(a+f.toolbarvalign).toLowerCase()===g?"b":e.charAt(0);b.hDirection=h(f.toolbarhdirection,"r"===c?-1:1);b.vDirection=h(f.toolbarvdirection,"b"===e?-1:1);b.vMargin=h(f.toolbarvmargin,6);b.hMargin=h(f.toolbarhmargin,10);b.x=h(f.toolbarx,"l"===c?0:d);b.y=h(f.toolbary,"t"===e?0:l)},_manageToolBoxPosition:function(a,c){var e,b,d=0,
f=this.components;for(e in f)f.hasOwnProperty(e)&&(b=f[e],b=b._spaceOccupied(),d=Z(d,b.height));d>c&&this._postSpaceManager();return{top:0,bottom:d,left:0,right:0}},addItem:function(a){var c,e,b,d=this.components;for(c=0;c<a.length;c+=1)b=a[c],e=d[b.name]=new (N.register("component",["toolButton","button"])),e.init(this,b),e.chart=this.chart},draw:function(){var a,c,e=this.components,b=this.x,d=this.y;for(a in e)e.hasOwnProperty(a)&&(c=e[a],c.draw(b,d))},_postSpaceManager:function(){}}]);N.register("component",
["toolBox","verticalToolBox",{},"horizontaltoolbox"]);N.register("component",["toolButton","button",{init:function(){this.config={};this.components={};this.graphics={};this._configure.apply(this,arguments)},_configure:function(a,c){var e=a.config,b=this.config;b.type=c.type;b.scale=h(c.scale,e.scale);b.width=h(c.width,e.width);b.height=h(c.height,e.height);b.radius=h(c.radius,e.radius);b.spacing=h(c.spacing,e.spacing);b.fill=ea(w(c.fill,e.fill));e.x=h(c.x,e.x);e.y=h(c.y,e.y)},draw:function(){this["_draw"+
this.config.type]()},_drawScroller:function(){var a=this.chart,c=a.components,e=a.config,d=a.jsonData.chart,f=c.paper,l=a.graphics,g=c.xAxis["0"]||{},k=g.config||{},n=k.rawAttr.axisLineThickness,c=e.scrollOptions||{},m=e.canvasTop,u=e.canvasLeft,w=e.canvasWidth,q=e.canvasHeight,p=e.canvasBorderWidth,k=p||(k.showLine?n:0),C=p||n,n=p||n,d=e.useRoundEdges||(e.useRoundEdges=h(d.useroundedges,0)),A,J,H,r,M,K,B,t,O,R,D,v=l.scroller,p=l.datasetGroup,V;c.enabled&&(V=l.scroll=l.scroll||f.group("scroll").insertAfter(p),
p=c.scrollRatio,r=h(c.startPercent),M=c.viewPortMax,K=c.viewPortMin,J=c.vxLength,ma(J),B=c.showButtons,t=c.height,O=c.padding,R=c.color,D=c.flatScrollBars,J=c.windowedCanvasWidth=g.getAxisPosition(J),A=c.fullCanvasWidth=g.getAxisPosition(M-K)-J,H=Aa(r*A),v||(v=l.scroller=f.scroller(u-C,m+q+k+O-!!k,w+C+n,t,!0,{showButtons:B,displayStyleFlat:D,scrollRatio:p,scrollPosition:r},V).data("fullCanvasWidth",A).data("windowedCanvasWidth",J).attr({"scroll-display-style":D,fill:R,r:d&&2||0}).scroll(function(c){var b=
e.viewPortConfig;H=-Aa(c*A);b.x=-H/b.scaleX;z.chartAPI.mscolumn2d._drawDataset.call(a);g.draw()})),function(){var c;G.eve.on("raphael.scroll.start."+v.node.id,function(e){c=e;b.raiseEvent("scrollstart",{scrollPosition:e},a.chartInstance)});G.eve.on("raphael.scroll.end."+v.node.id,function(e){b.raiseEvent("scrollend",{prevScrollPosition:c,scrollPosition:e},a.chartInstance)})}());this._finalizeScrollPlots();return c.enabled},_finalizeScrollPlots:function(){var a=this.chart,c=a.config,e=a.container,
d=a.graphics,f=d.scroller,l=d.datasetGroup,g=d.datalabelsGroup,n=d.trackerGroup,m,u={},w,q,p=a.components.xAxis["0"]||{};w=c.scrollOptions||{};var C=h(w.startPercent),J=w.fullCanvasWidth,H,r=c.animation,M=w.startPercent,c=[Z(0,c.canvasLeft),Z(0,c.canvasTop),Z(1,c.canvasWidth),Z(1,c.canvasHeight)];w.enabled&&(l.attr({"clip-rect":c}),g.attr({"clip-rect":c}),n.attr({"clip-rect":c}),w=function(c){var e=d.canvas,h=m.left,l=m.top,g={pageX:0,pageY:0},n=c.state,g=Pa&&z.getTouchEvent(c)||g;c=c.originalEvent;
h=(c.clientX||c.pageX||g.pageX)-h;l=(c.clientY||c.pageY||g.pageY)-l;switch(n){case A:q=e.isPointInside(h,l);u.ox=q&&h||null;if(!q)return!1;u.prevScrollPosition=f.attrs["scroll-position"];b.raiseEvent("scrollstart",{scrollPosition:u.prevScrollPosition},a.logic.chartInstance);break;case k:b.raiseEvent("scrollend",{prevScrollPosition:u.prevScrollPosition,scrollPosition:u.scrollPosition},a.logic.chartInstance);q=!1;u={};break;default:q&&(e=h-u.ox,u.ox=h,u.scrollPosition=f.attrs["scroll-position"]-e/J,
f.attr({"scroll-position":u.scrollPosition}))}},Pa&&(m=ka(e),e&&(va(e,"pointerdrag",w),U(e,"pointerdrag",w))),0<C&&(H=-Aa(C*J),l&&l.transform(["T",H,0]),n&&n.transform(["T",H,0]),p.setOffset&&p.setOffset(H),r&&M?a.animationCompleteQueue.push({fn:function(){g&&g.transform(["T",H,0])},scope:a}):g&&g.transform(["T",H,0])))},_spaceOccupied:function(){var a=this.config;return{x:a.x,y:a.y,width:a.width,height:a.height}}}]);fa("base",{creditLabel:$a,setChartMessage:function(a,c,b){var d=this.components||
(this.components={}),f=this.chartInstance,l=f.options,g=f.args,k=this.config||(this.config={}),n=this.linkedItems&&this.linkedItems.smartLabel||f.jsVars.smartLabel,m=z.getImageURL(void 0!==a?a:l.dataEmptyMessage),u,q;b&&!this.linkedItems?this.linkedItems={container:b}:b=this.linkedItems.container;u=k.prevWidth=b.offsetWidth;q=k.prevHeight=b.offsetHeight;a=k.height=Number(q);f=k.width=Number(u);k.hasChartMessage=!0;d.paper?d.paper.setSize(u,q):(b=d.paper=new G(b,u,q),b.setConfig("stroke-linecap",p));
m.image?(a=m.string,c=c?{imageHAlign:w(c._chartMessageImageStyle.imageHAlign,l.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:w(c._chartMessageImageStyle.imageVAlign,l.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:h(c._chartMessageImageStyle.imageAlpha,l.baseChartMessageImageAlpha),imageScale:h(c._chartMessageImageStyle.imageScale,l.baseChartMessageImageScale)}:{imageHAlign:w(g.dataEmptyMessageImageHAlign,l.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:w(g.dataEmptyMessageImageVAlign,
l.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:h(g.dataEmptyMessageImageAlpha,l.baseChartMessageImageAlpha),imageScale:h(g.dataEmptyMessageImageScale,l.baseChartMessageImageScale)},k.chartMessageType="image"):(c=c?{"font-family":c._chartMessageStyle.fontFamily||l.baseChartMessageFont,"font-size":c._chartMessageStyle.fontSize||l.baseChartMessageFontSize,fill:c._chartMessageStyle.color||l.baseChartMessageColor}:{"font-family":g.dataEmptyMessageFont||l.baseChartMessageFont,"font-size":g.dataEmptyMessageFontSize||
l.baseChartMessageFontSize,fill:g.dataEmptyMessageColor||l.baseChartMessageColor},n.setStyle(c),l=n.getSmartText(e(m.string),f,a),a={text:l.text,x:f/2,y:a/2},k.chartMessageType="text");k.chartMessageAttr=a;k.chartMessageStyle=c},_hideChartMessage:function(){var a=this.config,c=this.components.chartMessage,e=c&&c.graphics,b;if(c)for(b in"image"===a.chartMessageType&&!e.backgroundImage&&e.backgroundElement&&(a.stopImageDraw=!0),a&&(a.hasChartMessage=!1),e)e[b].hide?e[b].hide():e[b][0]&&e[b][0].hide()},
drawChartMessage:function(){var a=this.config,c=this.components,e=c.paper,b,c=c.chartMessage||(c.chartMessage={}),c=c.graphics||(c.graphics={});b=this.graphics||(this.graphics={});var f=d(a.chartMessageAttr,a.chartMessageStyle);b=b.messageGroup||(b.messageGroup=e.group("messageGroup"));this._hideChartMessage();a.hasChartMessage=!0;"image"===a.chartMessageType?this._drawBackground(a.chartMessageAttr,a.chartMessageStyle):c.message||"text"!==a.chartMessageType?(c.message=c.message.attr(f),c.message.show()):
c.message=e.text(f,b);this._drawCreditLabel()},dispose:function(){var a=this.components,a=a&&a.paper,c=this.linkedItems&&this.linkedItems.eventListeners,e=c&&c.length;for(this._clearTimers&&this._clearTimers();e--;)c[e].unlisten();this._removeWaitingJobs();a&&(a.clear(),a.remove());this.chartInstance&&delete this.chartInstance.apiInstance;Fa.call(this)},_removeWaitingJobs:function(){var a=this.jobList,c,e,b,d;for(d in a)for(b=a[d],e=b.length,c=0;c<e;c++)Qa.removeJob(b[c])},_drawBackground:function(c,
e){var d=this,l=d.components,I=d.graphics,k=d.jsonData&&d.jsonData.chart||{},m=l.paper,u=c?l.chartMessage:l.background,q=u.graphics,l=q.backgroundElement,p=q.borderElement,u=u.config||{},A=d.config,J=A.width,H=A.height,r,M,B,t,O,R,D,v=d.get&&d.get(P,T)||{},V=v.animType,X=v.animObj,S=v.dummyObj,W=v.duration,Y,U,L=c?I.messageGroup:I.backgroundGroup,E=u.borderWidth||0,I=u.borderRadius,v=u.borderDashStyle,G=u.borderColor,F=u.bgSWF=w(c,k.bgimage,k.bgswf),ka=u.bgSWFAlpha=h(e&&e.imageAlpha,k.bgimagealpha,
k.bgswfalpha,100),va=u.imgClipRect=E+","+E+","+(J-2*E)+","+(H-2*E),ma=w(k.bgimagedisplaymode,C).toLowerCase(),Z=(e&&K(e.imageVAlign)||K(k.bgimagevalign,a)).toLowerCase(),ca=(e&&e.imageHAlign||k.bgimagehalign||a).toLowerCase(),aa=u.bgImageScale=h(e&&e.imageScale,k.bgimagescale,100),k=u.containerBackgroundColor=z.getContainerBackgroundColor(d);m.canvas.style.backgroundColor=k;"tile"==ma||"fill"==ma||"fit"==ma?(Z!=n&&Z!=f&&Z!=g&&(Z=f),ca!=sa&&ca!=f&&ca!=ha&&(ca=f)):(Z!=n&&Z!=f&&Z!=g&&(Z=n),ca!=sa&&ca!=
f&&ca!=ha&&(ca=sa));u.bgSWFAlpha=ka;u.bgImageVAlign=Z;u.bgImageHAlign=ca;u.backgroundColor=u=!c&&d._getBackgroundCosmetics();k={x:E,y:E,width:J-2*E,height:H-2*E,stroke:"none",fill:Ga(u)};l?(l.animateWith(S,X,{x:E,y:E,width:J-2*E,height:H-2*E},W,V),l.attr({stroke:"none",fill:Ga(u)})):q.backgroundElement=m.rect(k,L);k={x:E/2,y:E/2,width:J-E,height:H-E,stroke:G,"stroke-width":E,"stroke-dasharray":v,fill:"none",r:I||0};p||c?c||(p.animateWith(S,X,{x:E/2,y:E/2,width:J-E,height:H-E,r:I||0},W,V),p.attr({stroke:G,
"stroke-width":E,"stroke-dasharray":v,fill:"none"})):q.borderElement=m.rect(k,L);if(F)r=new Ea,B=M=1,r.onload=function(){if(A.stopImageDraw)A.stopImageDraw=!1;else{!q.backgroundImage&&(q.backgroundImage=[]);if(q.backgroundImage)for(U=0,Y=q.backgroundImage.length;U<Y;U++)q.backgroundImage[U].hide();t=Ka(ma,Z,ca,aa,E,J,H,r);t["clip-rect"]=va;if(t.tileInfo)for(M=t.tileInfo.xCount,B=R=t.tileInfo.yCount,O=t.y,delete t.tileInfo,D=0;M&&t.width&&t.height;)--R,q.backgroundImage[D]||(q.backgroundImage[D]=m.image(F,
L)),q.backgroundImage[D].show(),q.backgroundImage[D].animateWith(S,X,t,W,V),q.backgroundImage[D].attr({src:F}).css({opacity:.01*ka}),t.y+=t.height,0===R&&(R=B,--M,t.x+=t.width,t.y=O),D++;else q.backgroundImage[0]||(q.backgroundImage[0]=m.image(F,L),q.backgroundImage[0].attr(t)),q.backgroundImage[0].show(),q.backgroundImage[0].animateWith(S,X,t,W,V),q.backgroundImage[0].css({opacity:.01*ka}).attr({src:F,visibility:la,"clip-rect":va});b.raiseEvent("BackgroundLoaded",{url:F,bgImageAlpha:100*ka,bgImageDisplayMode:ma,
bgImageVAlign:Z,bgImageHAlign:ca,bgImageScale:aa,imageWidth:r.width,imageHeight:r.height},d.chartInstance)}},r.onerror=function(a){b.raiseEvent("BackgroundLoadError",{url:F,bgImageAlpha:100*ka,error:a,bgImageDisplayMode:ma,bgImageVAlign:Z,bgImageHAlign:ca,bgImageScale:aa},d.chartInstance)},r.src=F;else if(q.backgroundImage)for(U=0,Y=q.backgroundImage.length;U<Y;U++)q.backgroundImage[U].hide()},redraw:function(){var a=this.graphics.dummyObj;a&&a.stop(void 0,!0,!0);this.draw&&this.draw()},_drawCreditLabel:function(){var a=
b.core.options.creditLabel,c=this.chartInstance.args.creditLabel,e=this.config.height,d=this.graphics,f=d.creditLabel,l=d.creditGroup,h=d.parentGroup||d.messageGroup,k=this.components.paper,n={href:z.CREDIT_HREF,text:z.CREDIT_STRING},a=this.creditLabel&&(void 0===c?!1!==a:!1!==c);l||(l=d.creditGroup=k.group("creditgroup"));h&&l.insertAfter(h);e={text:n.text,x:6,y:e-4,"vertical-align":g,"text-anchor":A,fill:"rgba(0,0,0,0.5)",title:n.title||W};d={fontSize:9,fontFamily:"Verdana,sans",cursor:S,_cursor:"hand"};
a&&(f?f.attr(e).css(d):f=this.graphics.creditLabel=k.text(e,d,l).click(function(){try{E.open(n.href)}catch(a){(E.top||E).location.href=n.href}}))},_mouseEvtHandler:function(a){var c=a.data.mouseTracker,e=this.config,b=e.canvasLeft-(e.toleranceLeft||0),d=e.canvasRight+(e.toleranceRight||0),f=e.canvasBottom+(e.toleranceBottom||0),l=e.canvasTop-(e.toleranceTop||0),h=e.datasetOrder||this.components.dataset,g=z.getMouseCoordinate(this.linkedItems.container,a.originalEvent,this),k=g.chartX,g=g.chartY,n,
m=this.components,u="datasetGroup_"+h[0].type,w,q=!1,p=h.length,C,A=c._lastDatasetIndex,J=c._lastPointIndex;if(k>b&&k<d&&g>l&&g<f)for(;p--&&!q;)(n=h[p])&&n.visible&&(w=n._getHoveredPlot&&n._getHoveredPlot(k,g))&&w.hovered&&(q=!0,w.datasetIndex=p,C=c._getMouseEvents(a,w.datasetIndex,w.pointIndex));(!q||C&&C.fireOut)&&void 0!==A&&(delete c._lastDatasetIndex,delete c._lastPointIndex,h[A]&&h[A]._firePlotEvent&&h[A]._firePlotEvent("mouseout",J,a));if(q)for(b=C.events&&C.events.length,c._lastDatasetIndex=
w.datasetIndex,J=c._lastPointIndex=w.pointIndex,e.drawTrendRegion&&m[u]._notifyGroup(!0,a),c=0;c<b;c+=1)n&&n._firePlotEvent&&n._firePlotEvent(C.events[c],J,a,w.datasetIndex);else e.drawTrendRegion&&m[u]._notifyGroup(!1,a);e.drawTrendRegion&&m[u]._getHoveredRegion(k,g,a)},eiMethods:{hideChartMessage:function(){var a=this.apiInstance;a._show.apply(a);a._hideChartMessage(a)}}});fa("mscartesian",{standaloneInit:!1,tooltipConstraint:"chart",annotationInteractionEvents:!0,useScaleRecursively:!0,init:function(a,
c,e,b){var d=this;e=d.chartInstance||e;var f=e.jsVars,h=c.colorrange,l,g=d.getJobList(),k=function(){d.draw();d.setChartEvents();b({hasRendered:!0,container:a})};c.chart=c.chart||c.graph||c.map||{};d.jsonData=c;c=d.components||(d.components={});c.background||(c.background={graphics:{},config:{}});c.canvas||(c.canvas={graphics:{},config:{}});l=N.register("component",["caption","caption"]);c.caption||(c.caption=new l);c.caption.init();c.caption.chart=d;l=N.register("component",["caption","subCaption"]);
c.subCaption||(c.subCaption=new l);c.subCaption.init();c.dataset||(c.dataset=[]);d.linkedItems={container:a,smartLabel:f.smartLabel};c.colorManager=new z.colorManager(d);c.numberFormatter=new Sa(d);h&&(c.colorRange=new z.ColorRange(d));d._checkInvalidData()?(z.raiseEvent("nodatatodisplay",{},e,[e.id]),b({hasRendered:!0,container:a})):(d._createLegend(),d._createGradientLegend(),d.configure(),d.disposeChartStyleSheet(),d._createAxes(),d._feedAxesRawData(),d.config.realtimeEnabled&&(f=N.get("component",
["manager","alert"]))&&(c.alertManager=new f,c.alertManager.init(d),c.alertManager.configure()),d.config.enablemousetracking&&(f=N.get("component",["tracker","mouse"]))&&(c.mouseTracker=new f,c.mouseTracker.init(d),c.mouseTracker.configure(),z.toolTip.setup()),d._createDatasets(),d._createQuadrant&&d._createQuadrant(),e.args.asyncRender?g.draw.push(Qa.addJob(k,d,[],Wa.render)):k(),d.inited=!0,d.chartInstance.__state.dataReady=!0)},_checkInvalidData:function(){var a=this.jsonData,c=this.chartInstance;
if(!(this.isWidget||this.isMap||a.data&&0!==a.data.length||a.dataset||a.value||a.lineset||a.annotations||a.category||a.tasks||a.process||a.axis))return this.setChartMessage(),this.drawChartMessage(),c.__state.dataReady=!1,c.jsVars.hasNativeMessage=!0,c.jsVars.drawCount+=1,!0},_createToolBox:function(){var a,c,e,b,d,f,l,g;d=!!E.btoa;var k=this,n=k.jsonData.chart,m=h(n.exportshowmenuitem),u=n.exportformats,w=k.chartMenuTools,n=w.get,q=w.set,w=this.components,p=k.config,C=p.exportOption.enabled;a=w.chartMenuBar;
e=w.actionBar;var p=p.printOption.enabled,A={PNG:"Export As PNG",JPG:"Export As JPG",PDF:"Export As PDF",SVG:"Export As SVG",XLS:"Export As XLS"},J,H={},r=[],M;if(!(a&&a.drawn||e&&e.drawn)){a=w.tb||(w.tb=new (N.register("component",["toolbox","toolbox"])));g=a.init({graphics:k.graphics||(k.graphics={}),chart:k,components:w});w.toolBoxAPI=e=w.toolBoxAPI||(w.toolBoxAPI=a.getAPIInstances(a.ALIGNMENT_HORIZONTAL));b=e.SymbolWithContext;c=e.SymbolStore;f=e.ComponentGroup;l=e.Toolbar;a.idCount=a.idCount||
0;a.pId=g;e=a.getDefaultConfiguration();c.register("ContextIcon",function(a,c,e){var b=2*e;e=Aa(b/4);var d=.7*Aa(b/2),b=a-d;a+=d;d=c+e;e=c-e;return["M",b,c,"L",a,c,"M",b,d,"L",a,d,"M",b,e,"L",a,e]});c=new b("ContextIcon",a.idCount++,g);b=c.getListRefernce();if(C&&0!==m){if(u)for(m=u.split("|"),H=0,C=m.length;H<C;H++)u=m[H].split("="),M=u[0].toUpperCase(),A[M]&&(A[M]=u[1]||A[M]),A[M]&&(J||(J={}))&&(J[M]=!0);m=function(a){return function(){z.exportChart.call(k,a)}};for(M in A)"XLS"===M&&!d||J&&!J[M]||
(H={},H[A[M]]={handler:m({exportformat:M}),action:"click"},r.push(H));q(r)}p&&q([{Print:{handler:function(a){k.chartInstance.print.call(k.chartInstance,a)},action:"click"}}]);b.appendAsList(n());d=new f(a.idCount++,g);d.setConfiguaration({buttons:e,group:{fill:Ma,borderColor:Ma}});d.addSymbol(c);delete w.chartMenuBar;delete w.actionBar;a="t"===d.btnConfig.vAlign?w.chartMenuBar=new l(a.idCount++,a.pId):w.actionBar=new l(a.idCount++,a.pId);a.addComponent(d)}},chartMenuTools:function(){var a=[];return{get:function(){return a},
set:function(c){var e,b=c.length||0;for(e=0;e<b;e+=1)a.push(c[e])},reset:function(c,e){var b=e.components,d=b.actionBar;(b=b.chartMenuBar)&&(b.drawn=!1);d&&(d.drawn=!1);a.length=0;c&&(c.idCount=0,c.clean())},update:function(a,c,e){var b=e.components;e=e.components.toolBoxAPI.SymbolWithContext;var d=(b.chartMenuBar||b.actionBar).componentGroups,f,l,h,g,k,b=0;for(h=d.length;b<h;b++)for(l=d[b],l=l.symbolList||[],g=0,k=l.length;g<k;g++)l[g]instanceof e&&(f=l[g],f=f.getListRefernce().getFirstContainer().atomicLists);
f=f||[];b=0;for(h=f.length;b<h;b++)if(e=f[b],e.name===a){e.updateName(c);break}}}}(),getConfig:function(a){return a?this.config[a]:this.config},get:function(a,c){var e=this[a];return c?e&&e[c]:e},disposeChartStyleSheet:function(){var a=this.components.paper;a&&a.cssClear()},createChartStyleSheet:function(){this.components.paper.cssRender()},configure:function(){var b,f,l,k=this.components,I=this.jsonData,n,m=this.chartInstance,u=k.colorManager,q=this.is3D,p=q?Ta.chart3D:Ta.chart2D,C=this.isBar,A,
J;A=!1;var M=k.legend,B={linear:"linear",easein:"easeIn",easeout:"easeOut",easeinout:"easeInOut",backin:"backIn",backout:"backOut",elastic:"elastic",bounce:"bounce"};I.chart=I.chart||I.graph||I.map||{};delete I.map;delete I.graph;n=I.chart;!n&&(n=I.chart={});k.colorRange||(k.colorRange=new z.ColorRange(this));I=this.config||(this.config={});this.__setDefaultConfig();X(n,I);I.snapLiterals={};I.viewPortConfig={scaleY:1,scaleX:1,x:0,y:0};q&&(C?(I.xDepth=5,I.yDepth=5):(I.xDepth=10,I.yDepth=10),I.showCanvasBase=
C=!!h(n.showcanvasbase,1),I.canvasBasePadding=h(n.canvasbasepadding,2),I.canvasBaseDepth=C?h(n.canvasbasedepth,10):0,I.canvasBgDepth=h(n.canvasbgdepth,3));k.colorManager&&k.colorManager.configure();I.placeAxisLabelsOnTop=h(n.placexaxislabelsontop,0);I.enableAnimation=C=h(n.animation,n.defaultanimation,1);k=h(n.transposeanimation,0);C=C?1E3*h(n.animationduration,1):0;k=k?1E3*h(n.transposeanimduration,.2):0;I.animationObj&&(A=!0);I.animationObj=k={initAnimDuration:C,transposeAnimDuration:k};k.duration=
A||void 0!==k.duration?k.transposeAnimDuration:k.initAnimDuration;for(J in B)J===w(n.animationeffect)&&(I.animationeffect=B[J]);I.showToolTip=h(n.showtooltip,1);I.exportOption={enabled:h(n.exportenabled,0),bgcolor:m.jsVars.transparent||0===h(m.options.containerBackgroundOpacity,1)?a:m.options.containerBackgroundColor||"#ffffff",bgalpha:(m.jsVars.transparent?0:h(m.options.containerBackgroundOpacity,1))+a,exporttargetwindow:w(n.exporttargetwindow,Ja?"_blank":"_self"),exportaction:n.exportaction&&"save"===
n.exportaction.toString().toLowerCase()&&"save"||"download",exportfilename:w(n.exportfilename,"FusionCharts"),exporthandler:w(n.html5exporthandler,n.exporthandler,H),exportparameters:w(n.exportparameters,a),exportformat:w(n.exportformat,"PNG"),exportcallback:w(n.exportcallback,a),exportwithimages:h(n.exportwithimages,1),exportatclientside:h(n.exportatclientside,0)};I.printOption={enabled:h(n.printshowbutton,n.showprintmenuitem,0)};I.chartMenuOptions={position:b=w(n.toolbarposition,"tr").toLowerCase(),
hAlign:f=(a+n.toolbarhalign).toLowerCase()===sa?"l":b.charAt(1),vAlign:l=(a+n.toolbarvalign).toLowerCase()===g?"b":b.charAt(0),hDirection:h(n.toolbarhdirection,"r"===f?-1:1),vDirection:h(n.toolbarvdirection,"b"===l?-1:1),vMargin:h(n.toolbarvmargin,6),hMargin:h(n.toolbarhmargin,10),x:h(n.toolbarx,"l"===f?0:I.width),y:h(n.toolbary,"t"===l?0:I.height)};b=I.style={};I.textDirection="1"===n.hasrtltext?"rtl":W;b.inCanfontFamily=f=w(n.basefont,"Verdana,sans");b.inCanfontSize=l=na(n.basefontsize,10);b.inCancolor=
m=w(n.basefontcolor,u.getColor(p.baseFontColor));b.outCanfontFamily=w(n.outcnvbasefont,f);b.fontSize=A=na(n.outcnvbasefontsize,l);b.outCanfontSize=A+Ia;b.outCancolor=w(n.outcnvbasefontcolor,m).replace(/^#? ([a-f0-9]+)/ig,"#$1");b.baseFontSize=l;b.inCanfontSize=l+Ia;b.inCancolor=m.replace(/^#? ([a-f0-9]+)/ig,"#$1");b.inCanvasStyle=A={fontFamily:f,fontSize:l,color:m};b.inCanLineHeight=A=ba(A);J=(J=V(n.valuebordercolor,a))?ea(J,h(n.valueborderalpha,n.valuealpha,100)):a;I.reverseXAxis=this.config.allowreversexaxis&&
h(n.reversexaxis,0);I.showBorder=h(n.showborder,q?0:1);I.borderWidth=Z(I.showBorder?h(n.borderthickness,1):0,0);I.useplotgradientcolor=""===n.plotgradientcolor?0:I.useplotgradientcolor;I.valuefontbold=h(n.valuefontbold,I.valuefontbold);I.dataLabelStyle=q={fontFamily:w(n.valuefont,f),fontSize:w(n.valuefontsize,parseInt(l,10))+Ia,lineHeight:A,color:ea(w(n.valuefontcolor,m),h(n.valuefontalpha,n.valuealpha,100)),fontWeight:I.valuefontbold?D:L,fontStyle:h(n.valuefontitalic)?"italic":L,border:J||n.valuebgcolor?
h(n.valueborderthickness,1)+"px solid":W,borderColor:J,borderThickness:h(n.valueborderthickness,1),borderPadding:h(n.valueborderpadding,2),borderRadius:h(n.valueborderradius,0),backgroundColor:n.valuebgcolor?ea(n.valuebgcolor,h(n.valuebgalpha,n.valuealpha,100)):a,borderDash:h(n.valueborderdashed,0)?c(h(n.valueborderdashlen,4),h(n.valueborderdashgap,2),h(n.valueborderthickness,1)):"none"};ba(q);I.orphanStyles={defaultStyle:{style:d({},b.inCanvasStyle)},connectorlabels:{style:d({},I.dataLabelStyle)},
vyaxisname:{style:d({},b.inCanvasStyle)}};I.legendPosition=w(n.legendposition,g);I.logoURL=K(n.logourl);I.logoPosition=w(n.logoposition,"tl").toLowerCase();I.logoAlpha=h(n.logoalpha,100);I.logoLink=K(n.logolink);I.logoScale=h(n.logoscale,100);I.logoLeftMargin=h(n.logoleftmargin,0);I.logoTopMargin=h(n.logotopmargin,0);I.minChartWidthPercent=h(n.minchartwidth,this.minChartWidth,50)/100;I.minChartHeightPercent=h(n.minchartheight,this.minChartHeight,50)/100;I.minCanvasWidthPercent=h(n.mincanvaswidth,
this.minCanvasWidth,60)/100;I.minCanvasHeightPercent=h(n.mincanvasheight,this.minCanvasHeight,30)/100;this._parseBackgroundCosmetics();this.components.caption.configure();this._parseCanvasCosmetics();I.origMarginTop=h(n.charttopmargin,this.chartTopMargin,15);I.origMarginLeft=h(n.chartleftmargin,this.chartLeftMargin,15);I.origMarginBottom=h(n.chartbottommargin,this.chartBottomMargin,15);I.origMarginRight=h(n.chartrightmargin,this.chartRightMargin,15);p=w(n.zeroplanecolor,n.divlinecolor,u.getColor(p.divLineColor));
q=w(n.zeroplanealpha,n.divlinealpha,u.getColor("divLineAlpha"));I.zeroPlaneColor=ea(p,q);I.zeroPlaneBorderColor=ea(w(n.zeroplanebordercolor,p),h(n.zeroplaneshowborder,1)?q:0);I.zeroPlaneShowBorder=h(n.zeroplaneshowborder,1);I.dataStreamURL=e(n.datastreamurl);I.realtimeEnabled=p=h(n.realtimeenabled,this.isRealTime);I.showLegend=h(n.showlegend,this.showLegend,1);I.link=n.clickurl;I.annRenderDelay=1E3*h(n.annrenderdelay,0);I.transposeAxis=h(this.transposeAxis,n.transposeaxis,0);I.useEllipsesWhenOverflow=
h(n.useellipseswhenoverflow,n.useellipsewhenoverflow,1);I.gLegendPadding=h(n.legendpadding,10);I.skipZeroPlots=h(n.skipzeroplots,1);I.drawTrendRegion=h(n.drawcrossline,0);I.rolloverbandanimation=h(n.crosslineanimation,0);I.rolloverbandanimationduration=1E3*h(n.crosslineanimationduration,.09);I.plotcolorintooltip=h(n.plotcolorintooltip,this.singleseries?0:1);I.trendRegionColor=I.trendRegionStroke=ea(w(n.crosslinecolor,u.getColor(r.altHGridColorStr)),w(n.crosslinealpha,u.getColor(r.altHGridAlphaStr)));
I.binSize=aa(h(n.plotbinsize,this.binSize,.5),1);I.labelBinSize=aa(h(n.labelbinsize,1),1);I.enableMouseOutEvent=h(n.enablemouseoutevent,this.enableMouseOutEvent,0);I.tooltipgrayoutcolor=w(n.tooltipgrayoutcolor,R);p&&this._realTimeConfigure();this._setToolTipOptions();M.configure();this.linkedItems.linkClickFN=Ua(this.jsonData,this.chartInstance);this._createConfigurableComponents()},_createConfigurableComponents:function(){var a=this.config,c=this.components,e;a.realtimeEnabled&&a.usemessagelog&&
(a=N.get("component",["logger","message"]))&&(e=c.messageLogger,e||(c.messageLogger=new a,c.messageLogger.init(this)),c.messageLogger.configure())},_parseBackgroundCosmetics:function(){var a=this.is3D,e=this.components.background.config,b=this.components.colorManager,d=this.jsonData.chart,f;f=e.showBorder=h(d.showborder,this.showBorder,a?0:1);e.borderWidth=f=Z(f?h(d.borderthickness,1):0,0);e.borderRadius=e.borderRadius=h(d.borderradius,0);e.borderDashStyle=e.borderDashStyle=h(d.borderdashed,0)?c(h(d.borderdashlen,
4),h(d.borderdashgap,2),f):"none";e.borderAlpha=w(d.borderalpha,a?"100":b&&b.getColor("borderAlpha"));e.borderColor=e.borderColor=ea(w(d.bordercolor,a?"#666666":b&&b.getColor("borderColor")),e.borderAlpha)},_parseCanvasCosmetics:function(){var a,c,e=this.config;c=this.components;var b=c.canvas.config,d=this.jsonData.chart;c=c.colorManager;var f,l=this.is3D?Ta.chart3D:Ta.chart2D,g=b.isRoundEdges=h(d.useroundedges,0);a=h(d.showxaxisline,d.showyaxisline,d.showaxislines,0)?0:1;b.canvasBorderRadius=h(d.plotborderradius,
g?2:0);a=b.showCanvasBorder=!!h(d.showcanvasborder,a,void 0,g?0:1);f=b.oriCanvasBorderThickness=Z(h(d.canvasborderthickness,g?0:h(this.canvasborderthickness,2),0));b.canvasBorderWidth=this.is3D?0:a?f:0;b.canvasBorderColor=ea(w(d.canvasbordercolor,c.getColor("canvasBorderColor")),w(d.canvasborderalpha,c.getColor("canvasBorderAlpha")));a=b.canBGAlpha=w(d.canvasbgalpha,c.getColor("canvasBgAlpha"));b.canBGColor={FCcolor:{color:w(d.canvasbgcolor,c.getColor(l.canvasBgColor)),alpha:w(d.canvasbgalpha,100),
angle:w(d.canvasbgangle,0),ratio:w(d.canvasbgratio)}};c=b.shadow=h(d.showshadow,g,0)&&g?{enabled:!0,opacity:a/100}:0;b.shadowOnCanvasFill=c&&c.enabled;e.origMarginTop=h(d.charttopmargin,15);e.origMarginLeft=h(d.chartleftmargin,15);e.origMarginBottom=h(d.chartbottommargin,15);e.origMarginRight=h(d.chartrightmargin,15);e.origCanvasLeftMargin=h(d.canvasleftmargin,0);e.origCanvasRightMargin=h(d.canvasrightmargin,0);e.origCanvasTopMargin=h(d.canvastopmargin,0);e.origCanvasBottomMargin=h(d.canvasbottommargin,
0);b.canvasPadding=h(d.canvaspadding,0);b.origCanvasTopPad=h(d.canvastoppadding,0);b.origCanvasBottomPad=h(d.canvasbottompadding,0);b.origCanvasLeftPad=h(d.canvasleftpadding,0);b.origCanvasRightPad=h(d.canvasrightpadding,0)},_preDraw:function(){this.config.realtimeEnabled&&this._setRealTimeCategories&&this._setRealTimeCategories();this._setAxisValuePadding();this._setAxisLimits();this.chartMenuTools.reset(this.components.tb,this);this.config.useShowLogMenu&&this._setUseLog()},_setUseLog:function(){var a=
this.components.messageLogger,c=this.chartMenuTools;c&&c.set([{"Show Log":{handler:function(){a.show()},action:"click"}}])},_manageSpace:function(){var a=this.components.canvas.config,c=this.linkedItems.container,e=this.config,b,d,f,l,h,g,k,n,m,u,w;e.width=b=c.offsetWidth;e.height=w=c.offsetHeight;e.minChartHeight=m=e.minChartHeightPercent*w;e.minChartWidth=u=e.minChartWidthPercent*b;e.minCanvasWidth=c=e.minCanvasWidthPercent*u;e.minCanvasHeight=d=e.minCanvasHeightPercent*m;e.marginTop=f=e.origMarginTop;
e.marginLeft=l=e.origMarginLeft;e.marginBottom=h=e.origMarginBottom;e.marginRight=g=e.origMarginRight;e.canvasMarginTop=e.origCanvasTopMargin;e.canvasMarginLeft=e.origCanvasLeftMargin;e.canvasMarginBottom=e.origCanvasBottomMargin;e.canvasMarginRight=e.origCanvasRightMargin;e.canvasHeight=k=e.height-e.marginTop-e.marginBottom;e.canvasWidth=n=e.width-e.marginLeft-e.marginRight;e.availableHeight=k-d;e.availableWidth=n-c;k<m&&(k=w-m,e.canvasHeight=m,w=f+h,e.marginTop=k*f/w,e.marginBottom=k*h/w,e.availableHeight=
m-d);n<u&&(k=b-u,w=g+l,e.canvasWidth=u,e.marginLeft=k*l/w,e.marginRight=k*g/w,e.availableWidth=u-c);e.canvasLeft=e.marginLeft;e.canvasTop=e.marginTop;a.canvasPaddingLeft=aa(a.origCanvasLeftPad,Aa(.1*e.height));a.canvasPaddingRight=aa(a.origCanvasRightPad,Aa(.1*e.height));a.canvasPaddingTop=aa(a.origCanvasTopPad,Aa(.1*e.height));a.canvasPaddingBottom=aa(a.origCanvasBottomPad,Aa(.1*e.height));this._spaceManager()},_postSpaceManagement:function(){var a=this.config,c=this.components,e=c.xAxis&&c.xAxis[0],
b=c.yAxis&&c.yAxis[0],d=c.legend,f=a.xDepth,l=c.canvas.config,c=l.canvasBorderWidth,h=l.canvasPadding||0,g=l.canvasPaddingLeft,k=l.canvasPaddingRight,n=l.canvasPaddingTop,l=l.canvasPaddingBottom;e&&e.setAxisDimention({x:a.canvasLeft+(f||0)+Z(g,h),y:a.canvasBottom+(a.shift||0)+c,opposite:a.canvasTop-c,axisLength:a.canvasWidth-(f||0)-Z(g,h)-Z(k,h)});e&&this._allocateXAxisLabelSpace(e);b&&b.setAxisDimention({x:a.canvasLeft-c,y:a.canvasTop+n,opposite:a.canvasRight+c,axisLength:a.canvasHeight-n-l});e&&
e.shiftLabels(-f,0);d.postSpaceManager();this._adjustCanvasPadding()},_allocateXAxisLabelSpace:function(a){var c=this.config,e=a.getAxisEndLabelDisplaySpace();a=e.left;var b=e.right,d=e.top,e=e.bottom,f=c.availableWidth,l=c.availableHeight,h=c.canvasLeft,g=c.canvasRight,k=c.canvasTop,n=c.canvasBottom,m=c.width,u=c.height,w=function(a,c){return a<c&&0<c?c-a:0};d+e>l&&(c=d+e,d=l*d/c,e=l*e/c);a+b>f&&(c=a+b,a=f*a/c,b=f*b/c);a=w(h,a);b=w(m-g,b);d=w(k,d);e=w(u-n,e);this._allocateSpace({left:a,right:b,top:d,
bottom:e})},_animCallBack:function(){var a=this.config;a.animationStarted&&(b.raiseEvent("internal.animationComplete",{},this.chartInstance),a.animationStarted=!1)},_setAnimDuration:function(){var a=this.config.animationObj;a&&(a.duration=a.transposeAnimDuration)},_setDataLabelStyle:function(){var a=this.config.dataLabelStyle;this.graphics.datalabelsGroup.css({fontFamily:a.fontFamily,fontSize:a.fontSize,fontWeight:a.fontWeight,fontStyle:a.fontStyle})},_updateVisuals:function(){var a=this.linkedItems.container,
c=this.components,e=c.paper,b=c.tooltip,d=this.chartInstance,f=this.get(P,T),l=f.animType,h=f.dummyObj,g=f.animObj,f=f.duration,k=this.config,n,m=k.prevWidth,u=k.prevHeight;k.animationStarted=!0;e?((m||u)&&e.setSize(m,u),m={width:a.offsetWidth,height:a.offsetHeight},n=!0,this._chartAnimation(!0),e.animateWith(h,g,m,f,l)):(e=c.paper=new G(a,a.offsetWidth,a.offsetHeight),e.setConfig("stroke-linecap",p));k.prevWidth=a.offsetWidth;k.prevHeight=a.offsetHeight;e.tooltip(b.style,b.config.shadow,b.config.constrain);
this.setChartCursor();this._createLayers();this._setDataLabelStyle();!n&&this._chartAnimation(!0);this._drawBackground();!1!==this.hasCanvas&&this._drawCanvas();c.chartMenuBar&&this._drawChartMenuBar();this._manageCaptionPosition();c.caption&&c.caption.draw();this.drawLegend();c.actionBar&&this.drawActionBar();this._drawAxis&&this._drawAxis();this._drawDataset();this._drawQuadrant&&this._drawQuadrant();this._drawCreditLabel();this._drawLogo();d.annotations&&this._drawAnnotations();this.drawAxisUpdateUI&&
this.drawAxisUpdateUI();c.messageLogger&&c.messageLogger.isDrawn()&&c.messageLogger.draw();this.drawScrollBar&&this.drawScrollBar();this.showRTvalue&&k.realTimeConfig.showRTValue&&this._drawRealTimeValue()},_chartAnimation:function(a){var c=this,e=c.graphics,b=c.components.paper,d=c.config.animationObj,f,l=d.duration||d.transposeAnimDuration,h=c.getJobList(),g=c.config,k=g.animationeffect,n=function(){c._animCallBack()};!l||g.parentElementPause?Qa.addJob(c._animCallBack,c,[],Wa.animation):(d.animObj=
l=G.animation({x:0},l,k,n,!1),d.animType=k,(f=e.dummyObj)?f.attr({x:100}):(e.dummyObj=f=b.rect({x:100,y:0,width:10,height:30}),f.hide()),d.dummyObj=e.dummyObj,f.stop(void 0,!0,!0),a?(f.animate(l),f.pause(void 0,!0),g.parentElementPause=!0,h.postRender.push(Qa.addJob(function(){g.parentElementPause=!1;c._setAnimDuration();f.resume(void 0,!0)},c,[],Wa.animation))):(setTimeout(function(){c._setAnimDuration()},0),f.animate(l)))},draw:function(){var a=this.chartInstance;this.config.hasChartMessage?(this._hide(),
this.drawChartMessage(),z.raiseEvent("nodatatodisplay",{},a,[a.id]),this.chartInstance.jsVars.drawCount+=1,this.chartInstance.__state.dataReady=!1,this.chartInstance.jsVars.hasNativeMessage=!0):(this._hideChartMessage(),this._clearTimers&&this._clearTimers(),this.config.plotOverFlow=!1,this._show(),this._preDraw(),this._createToolBox(),this._manageSpace(),this._postSpaceManagement(),this._updateVisuals(),this.chartInstance.jsVars.drawCount+=1,this.chartInstance.jsVars.hasNativeMessage=!1)},drawLegend:function(){var a=
this.components,c=a.legend,a=a.gradientLegend,e=this.hasLegend;this.config.gLegendEnabled?(c&&c.hide(),this.drawGradientLegend&&this.drawGradientLegend()):(a&&a.elem&&a.elem.gl.carpet&&a.elem.gl.carpet.node&&a.elem.gl.carpet.group.hide(),!1!==e&&c.drawLegend())},manageGradientLegendSpace:function(a){var c=this.components.gradientLegend,e=c&&c.conf,b;b=aa(this.config.gLegendPadding,.5*a);e?(e=e.legendPosition,a=c.getLogicalSpace(a),b=e===g?{bottom:(a.height||0)+b}:{right:(a.width||0)+b}):b={bottom:0,
right:0};return b},drawGradientLegend:function(){var a=this.components,c=this.config,e=this.jsonData.colorrange,b=a.gradientLegend||{},d=(b.conf||{}).legendPosition,f=c.canvasLeft,l=c.canvasTop,h=c.canvasWidth,k=c.canvasHeight,n=c.marginBottom,m=c.marginRight,u=this.hasGradientLegend,w,q,p;w=b.getLogicalSpace();q=w.width;p=w.height;d===g?(d=h-q,m=f+(0>d?0:d/2),n=c.height-w.height-n-(c.actionBarHeight||0)):(d=k-p,n=l+(0>d?0:d/2),m=c.width-w.width-m);e&&u&&b.draw(m,n,{paper:a.paper,parentGroup:this.graphics.parentGroup})},
_drawAxis:function(){var a=this.components,c=a.yAxis||[],e=a.xAxis||[],a=a.scale,b,d;b=0;for(d=e.length;b<d;b++)e[b].draw();b=0;for(d=c.length;b<d;b++)c[b].draw();a&&a.draw()},_drawAnnotations:function(){var a=this.jsonData,c=a.chart,e=this.config,b=e.width,d=e.height,e=a&&a.annotations||{},f=this.chartInstance.annotations;if(a&&c&&h(c.showannotations,1)){var a=h(e.scaleonresize,c.scaleonresize,1),c={interactionevents:w(this.annotationInteractionEvents,!0),showbelow:w(e.showbelow,e.showbelowchart),
autoscale:e.autoscale,scaletext:e.scaletext,scaleimages:e.scaleimages,constrainedscale:e.constrainedscale,scaleonresize:a,origw:w(e.origw,c.origw,this.origRenderWidth,b),origh:w(e.origh,c.origh,this.origRenderHeight,d),xshift:e.xshift,yshift:e.yshift,grpxshift:e.grpxshift,grpyshift:e.grpyshift,xscale:e.xscale,yscale:e.yscale,rootxscale:h(e.xscale,100)/100,rootyscale:h(e.yscale,100)/100},l;c||(c={});for(l in void 0)c[l]=(void 0)[l];f.reset(e,c,this)}else f.clear();f.draw(this)},_clearTimers:function(){var a=
this.config&&this.config.realTimeConfig,c=this.linkedItems.timers,e=c&&c.setTimeout,c=c&&c.setInterval,b;a&&(a.refreshIntervalFlag=!1);for(b in e)clearTimeout(e[b]);for(b in c)clearInterval(c[b])},_createLayers:function(){var a=this.graphics||(this.graphics={}),c,e,b=this.components.paper,a=this.graphics;a.parentGroup=c=a.parentGroup||b.group("parentgroup");a.backgroundGroup=a.backgroundGroup||b.group("background",c);a.canvasGroup=a.canvasGroup||b.group("canvas",c);a.axisBottomGroup=a.axisBottomGroup||
b.group("axisbottom",c);a.datasetGroup=e=a.datasetGroup||b.group("dataset",c);a.axisTopGroup=a.axisTopGroup||b.group("axistop",c);a.sumLabelsLayer=a.sumLabelsLayer||b.group("sumlabels",c);a.datalabelsGroup=a.datalabelsGroup||b.group("datalabel",c);a.legendGroup=a.legendGroup||b.group("legend",c);a.captionGroup=a.captionGroup||b.group("caption",c);a.captionGroup.trackTooltip(!0);a.columnTrendGroup=a.columnTrendRegion||b.group("columnTrendGroup",e);a.columnGroup=a.columnGroup||b.group("column",e);a.areaGroup=
a.areaGroup||b.group("area",e);a.lineGroup=a.lineGroup||b.group("line",e);a.trackerGroup||(a.trackerGroup=b.group("tracker",c),a.trackerGroup.trackTooltip(!0));a.buttonGroup=a.buttonGroup||b.group("buttons")},_spaceManager:function(){var a,c,e=this.config,b=this.components,d=b.xAxis&&b.xAxis[0];c=b.yAxis&&b.yAxis||[];var f,l,h=b.legend.config.legendPos,k=e.xDepth,n=e.yDepth,m=e.canvasBgDepth,u=e.canvasBaseDepth,w=e.canvasBasePadding,q=b.canvas.config.canvasBorderWidth,p=e.realTimeConfig&&e.realTimeConfig.showRTValue,
C=e.borderWidth,A=e.canvasMarginTop,J=e.canvasMarginBottom,H=e.canvasMarginLeft,M=e.canvasMarginRight,b=e.minCanvasHeight,r=e.minCanvasWidth;a=e.minChartWidth;var K=e.minChartHeight,B=e.height,t=e.width,O=!1,R=!1,D,v=e.origCanvasTopMargin,V=e.origCanvasBottomMargin,X=e.origCanvasLeftMargin,S=e.origCanvasRightMargin,Ea,W,z=[];e.canvasWidth-2*C<a&&(l=(e.canvasWidth-a)/2);e.canvasHeight-2*C<K&&(f=(e.canvasHeight-K)/2);this._allocateSpace({top:f||C,bottom:f||C,left:l||C,right:l||C});C=0;for(l=c.length;C<
l;C++)f=c[C],a=.7*e.availableWidth,a=f&&f.placeAxis(a)||{},z.push({axisIndex:C,spaceTaken:a}),f&&this._allocateSpace(a);e.yAxisSpaceAllocation=z;this._allocateSpace(this._manageActionBarSpace&&this._manageActionBarSpace(.225*e.availableHeight)||{});this._manageLegendSpace(void 0);c=h===g?.6*e.availableHeight:.6*e.availableWidth;n&&(this._allocateSpace({bottom:n}),e.shift=k+w+u);m&&this._allocateSpace({right:m});e.canvasWidth-2*q<r&&(W=(e.canvasWidth-r)/2);this._allocateSpace({left:W||q,right:W||q});
r>t-H-M&&(R=!0,n=e.canvasWidth-r,k=H+M,H=e.canvasMarginLeft=n*H/k,M=e.canvasMarginRight=n*M/k);H=H>e.canvasLeft?H-e.canvasLeft:0;M=M>t-e.canvasRight?M+e.canvasRight-t:0;this._allocateSpace({left:H,right:M});R&&(k=X+S,R=e.canvasWidth,R>r&&(n=R-r,H=n*X/k,M=n*S/k),this._allocateSpace({left:H,right:M}));e.actualCanvasMarginRight=M;e.actualCanvasMarginBottom=D;this._manageChartMenuBar(c);c=.2*e.availableHeight;this._allocateSpace(this._getSumValueSpace(c));c=.3*e.availableHeight;e.realtimeEnabled&&(p?
this._allocateSpace(this._realTimeValuePositioning(c)):this._hideRealTimeValue());this._resetViewPortConfig&&this._resetViewPortConfig();this._setAxisScale&&this._setAxisScale();c=.6*e.availableHeight;e.xAxisSpaceAllocation=D=d&&d.placeAxis(c);d&&this._allocateSpace(D);this._getDSspace&&this._allocateSpace(this._getDSspace(.4*e.canvasWidth));c=.3*e.availableHeight;this._manageScrollerPosition&&this._manageScrollerPosition(c);e.canvasHeight-2*q<b&&(Ea=(e.canvasHeight-b)/2);this._allocateSpace({top:Ea||
q,bottom:Ea||q});this._allocateSpace({bottom:u});b>B-A-J&&(O=!0,n=e.canvasHeight-b,k=A+J,A=e.canvasMarginTop=n*A/k,J=e.canvasMarginBottom=n*J/k);d=A>e.canvasTop?A-e.canvasTop:0;D=J>B-e.canvasBottom?J+e.canvasBottom-B:0;this._allocateSpace({top:d,bottom:D});O&&(k=v+V,u=e.canvasHeight,u>b&&(n=u-b,d=n*v/k,D=n*V/k),this._allocateSpace({top:d,bottom:D}));e.actualCanvasMarginTop=d;e.actualCanvasMarginLeft=H},_manageLegendSpace:function(){var a=this.config,c=this.components,e=c.legend,b=c.gradientLegend,
d;d=this.jsonData.colorrange;var c=this.hasLegend,f={},l=this.hasGradientLegend,g=h(this.jsonData.chart.mapbycategory,0);l&&d&&h(d.gradient)&&!g?(d=b.conf,l=!0,a.gLegendEnabled=!0,b=.5,d=d.legendPosition):(d=e.config,l=!1,a.gLegendEnabled=!1,d=d.legendPos,b=d===ha?.8:.4);a=d===ha?a.availableWidth*b:a.availableHeight*b;l?f=this.manageGradientLegendSpace(a):!1!==c&&(f=e._manageLegendPosition(a));this._allocateSpace({bottom:f.bottom||0,right:f.right||0})},_getSumValueSpace:function(a){var c={},e=this.isBar,
b=this.jsonData.chart,c=0!==this.showsum?h(b.showsum,this.showsum,0):0,d=this.config.stack100percent,f=this.config.isstacked,b=0,l=this.components["datasetGroup_"+this.defaultDatasetType],g=0;c&&d&&f&&l&&(c=l.getMaxSumValueSpace(),e?b=c.maxWidth:g=c.maxHeight,g>a&&(g=a),b>a&&(b=a));return{top:g,right:b}},_setAxisValuePadding:function(){var a=this.components.dataset,c=a.length,e,b,d=-Infinity,f=-Infinity,l=this.components.xAxis;for(e=0;e<c;e++)b=a[e],b=b.getAxisValuePadding&&b.getAxisValuePadding()||
{},d=Z(d,b.left||-Infinity),f=Z(f,b.right||-Infinity);-Infinity===d&&(d=0);-Infinity===f&&(f=0);l&&l[0].setAxisPadding(d,f)},_fetchCaptionPos:function(a){var c=this.config,e=this.components,b=c.width,d=e.chartMenuBar,l=d.componentGroups[0].btnConfig,d=d.getLogicalSpace().width,e=e.caption.config,h=e.width,l="l"===l.hAlign,g=c.width-a,k=c.origMarginRight,n=c.origMarginLeft,m=l?n:k;return e.align===f?(l?a:g)-h/2-m-d:e.align===A?l?-1:b-c.canvasLeft-m-h-d+e.horizontalPadding:l?b-(k+n+d+h):-1},_manageChartMenuBar:function(a){var c=
this.config,e=this.components,b=e.chartMenuBar,d=b&&b.getLogicalSpace(),e=e.caption.config,f=e.isOnTop,l=c.width/2,g=c.canvasRight,k=g?(c.canvasLeft+g)/2:l,g=0,l=e.alignWithCanvas?k:l,g=b&&b.componentGroups[0].btnConfig,b=d&&g.spaceNotHardCoded;g&&g.spaceNotHardCoded&&(g.x=h("l"===g.hAlign?0:c.width),g.y=h("t"===g.vAlign?0:c.height));delete e._offsetHeight;f?(a=this._manageCaptionSpacing(a),b&&(g=this._fetchCaptionPos(l),e._offsetHeight=0>g?d.height:0,a.top=0>g?h(a.top,0)+d.height:Z(a.top,d.height))):
(this._allocateSpace({top:b?d.height:0}),a=this._manageCaptionSpacing(a));this._allocateSpace(a);return{top:d?Z(d.height,a.top):a.top,bottom:a.bottom}},_manageActionBarSpace:function(){var a=this.config,c=this.components.actionBar,c=(c&&c.getLogicalSpace()||{}).height||0;a.actionBarHeight=c;return{bottom:c}},_getDSspace:function(a){var c=this.components.dataset,e,b=c.length,d,f,l={},h={left:0,right:0,top:0,bottom:0,paddingLeft:0,paddingRight:0,paddingBottom:0,paddingTop:0},g;for(d=0;d<b;d++)if(e=
c[d],f=e.groupManager)l[e.type]=f;else if(e.manageSpace)for(g in e=e.manageSpace&&e.manageSpace(),e)h[g]=Z(e[g],h[g]);for(g in l)if(f=l[g],f.manageSpace)for(g in e=f.manageSpace&&f.manageSpace(a),e)h[g]=Z(e[g],h[g]);c=h.paddingLeft;b=h.paddingRight;d=c+b;a<d&&(h.paddingLeft=a*c/d,h.paddingRight=a*b/d);return h},_adjustCanvasPadding:function(){for(var a=this.config,c=this.components,e=c.dataset,b=e.length,d=c.xAxis&&c.xAxis[0],f=a.xDepth,l={},h,g,k,n=c.canvas.config,m=n.canvasBorderWidth,u=n.canvasPadding,
c=0;c<b;c++)h=e[c],(g=h.groupManager)&&(l[h.type]=g);for(k in l)g=l[k],g.preDrawCalculate&&g.preDrawCalculate();this._getDSspace&&(this._allocateSpace(this._getDSspace(.4*a.canvasWidth)),d&&d.setAxisDimention({x:a.canvasLeft+(f||0)+Z(n.canvasPaddingLeft,u),y:a.canvasBottom+(a.shift||0)+m,opposite:a.canvasTop-m,axisLength:a.canvasWidth-(f||0)-Z(n.canvasPaddingLeft,u)-Z(n.canvasPaddingRight,u)}))},_setAxisLimits:function(){var a=this.components,c=a.dataset,e=a.yAxis,a=a.xAxis,b,d=c.length,f,l=-Infinity,
h=Infinity,g=Infinity,k=-Infinity,n,m,u,q={},p=[],C=function(a){m=w(a.xMax,-Infinity);u=w(a.xMin,Infinity);l=Z(l,a.max);h=aa(h,a.min);k=Z(k,m);g=aa(g,u)};for(f=0;f<d;f++)b=c[f],(n=b.groupManager)?q[b.type]=n:p.push(b);for(n in q)c=q[n].getDataLimits(),C(c);d=p.length;for(f=0;f<d;f++)c=p[f].getDataLimits(),C(c);C(this._getTrendLineMinMax("h"));-Infinity===l&&(l=0);Infinity===h&&(h=0);this.config.yMax=l;this.config.yMin=h;e[0].setAxisConfig({isPercent:this.config.isstacked?this.config.stack100percent:
0});e[0].setDataLimit(l,h);if(-Infinity!==k||Infinity!==g)a[0].config.xaxisrange={max:k,min:g},a[0].setDataLimit(k,g)},_getTrendLineMinMax:function(a,c){var e="v"===a?this.jsonData.vtrendlines:this.jsonData.trendlines,b={max:-Infinity,min:Infinity},d,f,l,h,g;c=c||"p";if(e)for(f=0,h=e.length;f<h;f+=1)for(l=0,g=e[f].line?e[f].line.length:0;l<g;l+=1)d=e[f].line[l],"s"===c&&"s"!==d.parentyaxis||"s"!==c&&"s"===d.parentyaxis||(b.max=Z(d.startvalue||-Infinity,d.endvalue||-Infinity,b.max),b.min=aa(d.startvalue||
Infinity,d.endvalue||Infinity,b.min));return b},_setToolTipOptions:function(){var a=this.components,c=this.components.colorManager,e=this.jsonData.chart,b=a.tooltip||(b=a.tooltip={}),a=b.config||(a=b.config={}),d=this.config,f=d.style,d=d.style.inCanvasStyle,l,g,k;l=ea(w(e.tooltipbgcolor,c.getColor("toolTipBgColor")),w(e.tooltipbgalpha,100));c=ea(w(e.tooltipbordercolor,c.getColor("toolTipBorderColor")),w(e.tooltipborderalpha,100));g=h(e.tooltipborderthickness,1)+"px";k=h(e.tooltippadding,3)+"px";
b=b.style={fontFamily:f.inCanfontFamily,fontSize:f.inCanfontSize,lineHeight:d.lineHeight,color:ea(f.inCancolor),backgroundColor:l,borderColor:c,borderWidth:g,padding:k};e.tooltipcolor&&(b.color=qa(e.tooltipcolor));if(e.tooltipborderradius||e.useroundedges)b.borderRadius=h(e.tooltipborderradius,2)+"px";a.shadow=h(e.showtooltipshadow,e.showshadow,1)?{enabled:!0,opacity:Z(h(e.tooltipbgalpha,100),h(e.tooltipborderalpha,100))/100}:!1;a.constrain=h(e.constraintooltip,1)},_createAxes:function(){var a=this.components,
c=N.register("component",["axis","cartesian"]),e;a.yAxis=[];a.xAxis=[];a.yAxis[0]=e=new c;a.xAxis[0]=a=new c;e.chart=this;a.chart=this;e.init();a.init();this._setCategories()},_feedAxesRawData:function(){var a=this.config,c=this.components,e=c.colorManager,b=this.jsonData,d=b.chart,f,l=this.is3d,g=l?Ta.chart3D:Ta.chart2D;f={outCanfontFamily:w(d.outcnvbasefont,d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,d.basefontcolor,e.getColor(g.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,
"#$1"),axisBreaks:d.xaxisbreaks,axisNamePadding:d.xaxisnamepadding,axisValuePadding:d.labelpadding,axisNameFont:d.xaxisnamefont,axisNameFontSize:d.xaxisnamefontsize,axisNameFontColor:d.xaxisnamefontcolor,axisNameFontBold:d.xaxisnamefontbold,axisNameFontItalic:d.xaxisnamefontitalic,axisNameBgColor:d.xaxisnamebgcolor,axisNameBorderColor:d.xaxisnamebordercolor,axisNameAlpha:d.xaxisnamealpha,axisNameFontAlpha:d.xaxisnamefontalpha,axisNameBgAlpha:d.xaxisnamebgalpha,axisNameBorderAlpha:d.xaxisnameborderalpha,
axisNameBorderPadding:d.xaxisnameborderpadding,axisNameBorderRadius:d.xaxisnameborderradius,axisNameBorderThickness:d.xaxisnameborderthickness,axisNameBorderDashed:d.xaxisnameborderdashed,axisNameBorderDashLen:d.xaxisnameborderdashlen,axisNameBorderDashGap:d.xaxisnameborderdashgap,useEllipsesWhenOverflow:d.useellipseswhenoverflow,divLineColor:w(d.vdivlinecolor,d.divlinecolor,e.getColor(g.divLineColor)),divLineAlpha:w(d.vdivlinealpha,d.divlinealpha,l?e.getColor("divLineAlpha3D"):e.getColor("divLineAlpha")),
divLineThickness:h(d.vdivlinethickness,d.divlinethickness,1),divLineIsDashed:!!h(d.vdivlinedashed,d.vdivlineisdashed,d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.vdivlinedashlen,d.divlinedashlen,4),divLineDashGap:h(d.vdivlinedashgap,d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatevgridcolor,0),alternateGridColor:w(d.alternatevgridcolor,e.getColor("altVGridColor")),alternateGridAlpha:w(d.alternatevgridalpha,e.getColor("altVGridAlpha")),numDivLines:h(d.numvdivlines,this.numVDivLines),
labelFont:d.labelfont,labelFontSize:d.labelfontsize,labelFontColor:d.labelfontcolor,labelFontAlpha:d.labelalpha,labelFontBold:d.labelfontbold,labelFontItalic:d.labelfontitalic,maxLabelHeight:d.maxlabelheight,axisName:d.xaxisname,axisMinValue:d.xaxisminvalue,axisMaxValue:d.xaxismaxvalue,setAdaptiveMin:h(d.setadaptivexmin,this.setadaptivexmin,a.setadaptivexmin),adjustDiv:d.adjustvdiv,labelDisplay:d.labeldisplay,showLabels:d.showlabels,rotateLabels:d.rotatelabels,slantLabel:h(d.slantlabels,d.slantlabel),
labelStep:h(d.labelstep,d.xaxisvaluesstep),showAxisValues:h(d.showxaxisvalues,d.showxaxisvalue),showLimits:h(d.showvlimits,this.showvlimits),showDivLineValues:h(d.showvdivlinevalues,d.showvdivlinevalues,this.showvdivlinevalues),showZeroPlane:h(d.showvzeroplane,this.showzeroplane),zeroPlaneColor:d.vzeroplanecolor,zeroPlaneThickness:h(d.vzeroplanethickness,d.vdivlinethickness,a.zeroplanethickness,2),zeroPlaneAlpha:h(d.vzeroplanealpha,d.vdivlinealpha,a.zeroplanealpha),showZeroPlaneValue:h(d.showvzeroplanevalue,
this.showzeroplanevalue),trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,showTrendlinesOnTop:d.showtrendlinesontop,showAxisLine:l?0:h(d.showxaxisline,d.showaxislines,d.drawAxisLines,this.showxaxisline,0),axisLineThickness:h(d.xaxislinethickness,d.axislinethickness,1),axisLineAlpha:h(d.xaxislinealpha,d.axislinealpha,100),axisLineColor:w(d.xaxislinecolor,d.axislinecolor,"#000000")};e={outCanfontFamily:w(d.outcnvbasefont,
d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,d.basefontcolor,e.getColor(g.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisBreaks:d.yaxisbreaks,axisNamePadding:d.yaxisnamepadding,axisValuePadding:d.yaxisvaluespadding,axisNameFont:d.yaxisnamefont,axisNameFontSize:d.yaxisnamefontsize,axisNameFontColor:d.yaxisnamefontcolor,axisNameFontBold:d.yaxisnamefontbold,axisNameFontItalic:d.yaxisnamefontitalic,axisNameBgColor:d.yaxisnamebgcolor,
axisNameBorderColor:d.yaxisnamebordercolor,axisNameAlpha:d.yaxisnamealpha,axisNameFontAlpha:d.yaxisnamefontalpha,axisNameBgAlpha:d.yaxisnamebgalpha,axisNameBorderAlpha:d.yaxisnameborderalpha,axisNameBorderPadding:d.yaxisnameborderpadding,axisNameBorderRadius:d.yaxisnameborderradius,axisNameBorderThickness:d.yaxisnameborderthickness,axisNameBorderDashed:d.yaxisnameborderdashed,axisNameBorderDashLen:d.yaxisnameborderdashlen,axisNameBorderDashGap:d.yaxisnameborderdashgap,axisNameWidth:d.yaxisnamewidth,
useEllipsesWhenOverflow:d.useellipseswhenoverflow,rotateAxisName:h(d.rotateyaxisname,1),axisName:d.yaxisname,divLineColor:w(d.divlinecolor,e.getColor(g.divLineColor)),divLineAlpha:w(d.divlinealpha,l?e.getColor("divLineAlpha3D"):e.getColor("divLineAlpha")),divLineThickness:h(d.divlinethickness,1),divLineIsDashed:!!h(d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.divlinedashlen,4),divLineDashGap:h(d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatehgridcolor,1),alternateGridColor:w(d.alternatehgridcolor,
e.getColor("altHGridColor")),alternateGridAlpha:w(d.alternatehgridalpha,e.getColor("altHGridAlpha")),numDivLines:h(d.numdivlines,this.numDivLines),axisMinValue:d.yaxisminvalue,axisMaxValue:d.yaxismaxvalue,setAdaptiveMin:h(d.setadaptivesymin,d.setadaptiveymin),adjustDiv:d.adjustdiv,labelStep:d.yaxisvaluesstep,showAxisValues:h(d.showyaxisvalues,d.showyaxisvalue,this.showyaxisvalues),showLimits:h(d.showyaxislimits,d.showlimits,this.showLimits),showDivLineValues:h(d.showdivlinevalues,d.showdivlinevalue,
this.showdivlinevalues),showZeroPlane:h(d.showzeroplane,this.showzeroplane),zeroPlaneColor:d.zeroplanecolor,zeroPlaneThickness:h(d.zeroplanethickness,d.divlinethickness,a.zeroplanethickness,2),zeroPlaneAlpha:h(d.zeroplanealpha,d.divlinealpha,a.zeroplanealpha),showZeroPlaneValue:h(d.showzeroplanevalue,this.showzeroplanevalue),showZeroPlaneOnTop:a.showzeroplaneontop,trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,
showTrendlinesOnTop:d.showtrendlinesontop,showAxisLine:l?0:h(d.showyaxisline,d.showaxislines,d.drawAxisLines,this.showyaxisline,0),axisLineThickness:h(d.yaxislinethickness,d.axislinethickness,1),axisLineAlpha:h(d.yaxislinealpha,d.axislinealpha,100),axisLineColor:w(d.yaxislinecolor,d.axislinecolor,"#000000")};f.vtrendlines=b.vtrendlines;e.trendlines=b.trendlines;b=c.yAxis&&c.yAxis[0];c=c.xAxis&&c.xAxis[0];b&&(b.setCommonConfigArr(e,!0,!1,!1),b.configure());c&&(c.setCommonConfigArr(f,!1,a.reverseXAxis,
!1),c.configure())},_createLegend:function(){var a=this.components,c=N.register("component",["legend","legend"]);Ba=a.legend=new c;Ba.chart=this;Ba.init()},_createGradientLegend:function(){var a=this.components,c;this.hasGradientLegend&&(c=a.gradientLegend=a.gradientLegend||new (N.register("component",["gradientLegend","gradientLegend"])),a.postLegendInitFn=c.init({chart:this}))},_setCategories:function(){var a=this.jsonData,c=this.components.xAxis,a=a.categories&&a.categories[0].category;c&&c[0].setCategory(a)},
_getDiff:function(a,c,e,b){e>a&&(a=e,c=b);return{diff:a,startIndex:c}},_createDatasets:function(){var a,c=this.components,b=c.xAxis[0],d=this.jsonData,f=d.dataset,l=f&&f.length,h,g,k,n=this.defaultDatasetType,m=this.applicableDSList,u=this.components.legend.components.items||[],q,p,C,A=this.config.isstacked,J,H,M=[],r=this.isRealTime,K=this.config.catLen,B={};f&&0!==f.length||this.setChartMessage();this.config.categories=d.categories&&d.categories[0].category;h=c.dataset||(c.dataset=[]);g=h.length;
for(d=0;d<l;d++)if(C=f[d],C.seriesname&&(C.seriesname=e(C.seriesname)),k=C.parentyaxis||W,p=(p=this.isDual&&"s"===k.toLowerCase()?w(C.renderas,this.sDefaultDatasetType):w(C.renderas,n))&&p.toLowerCase(),m[p]||(p=n),a=N.get("component",["dataset",p]))void 0===B[p]?B[p]=0:B[p]++,J="datasetGroup_"+p,k=N.register("component",["datasetGroup",p]),(q=c[J])&&M.push(q),k&&!q&&(q=c[J]=new k,q.chart=this,q.init()),(k=h[d])?(p=b.getCategoryLen(),a=K-p,J=r?k.components:k.JSONData,H=J.data&&J.data.length,J=r?0:
C.data&&C.data.length||0,H-=J,a=this._getDiff(H,J,a,p),p=a.diff,a=a.startIndex,this.config._dataUpdated=!0,0<p&&k.removeData(a,p,!1),this.config._dataUpdated=!1,h[d].JSONData=C,h[d].configure(),h[d]._deleteGridImages&&h[d]._deleteGridImages()):(k=new a,h.push(k),k.chart=this,k.index=d,q&&(A?q.addDataSet(k,0,B[p]):q.addDataSet(k,B[p],0)),k.init(C));if(g>l){p=g-l;q&&A&&q.removeDataSet(0,d,p);c=d;for(l=p+d;c<l;c++)q&&!A&&q.removeDataSet(d,0,1),Fa.call(h[c]);h.splice(d,p);u.splice(d,p)}this.config.catLen=
b.getCategoryLen()},_drawDataset:function(){var a=this.components.dataset,c,e=a.length,b,d,f={},l=[];for(b=0;b<e;b++)c=a[b],(d=c.groupManager)?f[c.type]=d:l.push(c);for(d in f)f[d].skipOverlapPlot(),f[d].draw();e=l.length;for(b=0;b<e;b++)l[b].draw();this._setRTdata&&this._setRTdata()},_drawCanvas:function(){var a=this.jsonData.chart,c=this.components,e=this.config,b=this.graphics,d=c.paper,f=c.canvas,c=f.graphics,l=f.config,f=l.clip={},g=c.canvasBorderElement,k=this.get(P,T),n=k.animType,m=k.animObj,
u=k.dummyObj,k=k.duration,w=c.canvasElement,C=e.canvasLeft,A=e.canvasTop,J=e.canvasWidth,H=e.canvasHeight,M=l.xDepth=e.xDepth||0,e=l.yDepth=e.yDepth||0,b=b.canvasGroup,r=l.canvasBorderRadius,K=l.canvasBorderWidth,B=.5*K,t=l.canvasBorderColor,O=l.canBGColor,D=l.canBGAlpha,R=l.shadow,a=l.showCanvasBG=!!h(a.showcanvasbg,1),v=l.shadowOnCanvasFill,V=l.showCanvasBorder,l={x:C-B,y:A-B,width:J+K,height:H+K,r:r,"stroke-width":K,stroke:t,"stroke-linejoin":2<K?p:q};V?g?(g.show(),g.animateWith(u,m,{x:C-B,y:A-
B,width:J+K,height:H+K,r:r},k,n),g.attr({"stroke-width":K,stroke:t,"stroke-linejoin":2<K?p:q}),g.shadow(R)):c.canvasBorderElement=d.rect(l,b).shadow(R):g&&g.hide();f["clip-canvas"]=[Z(0,C-M),Z(0,A-e),Z(1,J+2*M),Z(1,H+e)];f["clip-canvas-init"]=[Z(0,C-M),Z(0,A-e),1,Z(1,H+2*e)];a?(l={x:C,y:A,width:J,height:H,r:r,"stroke-width":0,stroke:"none",fill:Ga(O)},w?(w.show(),w.animateWith(u,m,{x:C,y:A,width:J,height:H,r:r},k,n),w.attr({"stroke-width":0,stroke:"none",fill:Ga(O)})):w=c.canvasElement=d.rect(l,b),
v?w.shadow({opacity:D/100}):w.shadow(!1)):w&&w.hide()},_getBackgroundCosmetics:function(){var a=this.jsonData.chart,c=this.components.colorManager,e=this.is3D?Ta.chart3D:Ta.chart2D;return{FCcolor:{color:w(a.bgcolor,this.bgColor,c.getColor(e.bgColor)),alpha:w(a.bgalpha,this.bgAlpha,c.getColor(e.bgAlpha)),angle:w(a.bgangle,c.getColor(e.bgAngle)),ratio:w(a.bgratio,c.getColor(e.bgRatio))}}},_manageCaptionSpacing:function(a,c){return this.components.caption.manageSpace(a,c)},_manageCaptionPosition:function(){this.components.caption.managePosition()},
drawActionBar:function(){var a=this.config,c=this.components,e=c.actionBar||{},b=this.graphics,d=b.toolbarWrapperGroup,f=c.paper,l=e.componentGroups[0].btnConfig,c=e&&e.getLogicalSpace();e.toolbarConfig.fill=Ma;e.toolbarConfig.vPadding=0;e.toolbarConfig.borderColor=Ma;d||(d=b.toolbarWrapperGroup=f.group("toolbarWrapper",b.parentGroup).insertBefore(b.datalabelsGroup));l.spaceNotHardCoded?e.draw("b"===l.vAlign&&"r"===l.hAlign?a.width-a.marginRight-c.width:a.marginLeft,a.height-a.marginBottom-c.height,
{parentGroup:d}):e.draw(l.x,l.y);e.drawn=!0},_drawChartMenuBar:function(){var a=this.components.chartMenuBar,c=a.getLogicalSpace(),e=a.toolbarConfig,b=a.componentGroups[0].btnConfig,d=b.vDirection,f=b.hDirection,l=b.y,h=b.x;e.fill=Ma;e.borderColor=Ma;b.spaceNotHardCoded?(l+=b.vMargin*d+aa(0,c.height*d),h+=b.hMargin*f-Z(0,c.width*f),a.draw("l"===b.hAlign?h+c.width:h-c.width,l)):a.draw(h,l);a.drawn=!0},_drawLogo:function(){var a=this,c=a.components.paper,e=a.config,d=e.borderWidth||0,l=e.height,h=e.width,
k=a.graphics.logoImage,m=e.logoURL,u=e.logoAlpha/100,w=e.logoPosition,q=e.logoLink,p=e.logoScale,C=e.logoLeftMargin,A=e.logoTopMargin,J,H,e=a.get(P,T),M=e.animType,r=e.animObj,K=e.dummyObj,B=e.duration,e={tr:{vAlign:n,hAlign:ha},bl:{vAlign:g,hAlign:sa},br:{vAlign:g,hAlign:ha},cc:{vAlign:f,hAlign:f}},t,O,D;m?(t=new Ea,(D=e[w])||(D={vAlign:n,hAlign:sa}),t.onload=function(){O=Ka("none",D.vAlign,D.hAlign,p,d,h,l,t);F&&(O.w=O.width||0,O.h=O.height||0);O.src=m;k?k.animateWith(K,r,O,B,M):k=a.graphics.logoImage=
c.image(O);k.show();k.translate(C,A).css("opacity",u);q?k.css({cursor:S,_cursor:"hand"}):k.css({cursor:"default",_cursor:L});if(k.events&&k.events.length)for(H=0,J=k.events.length;H<J;H++)k.events[H].unbind(),k.events.splice(H,1),--J,--H;k.mouseover(function(c){c=ca(a.chartInstance.ref,c);b.raiseEvent("LogoRollover",{logoURL:m,logoAlpha:100*u,logoPosition:w||"tl",logoScale:p,logoLink:q,chartX:c.chartX,chartY:c.chartY,pageX:c.pageX,pageY:c.pageY},a.chartInstance)});k.mouseout(function(c){c=ca(a.chartInstance.ref,
c);b.raiseEvent("LogoRollout",{logoURL:m,logoAlpha:100*u,logoPosition:w||"tl",logoScale:p,logoLink:q,chartX:c.chartX,chartY:c.chartY,pageX:c.pageX,pageY:c.pageY},a.chartInstance)});k.click(function(c){c=ca(a.chartInstance.ref,c);b.raiseEvent("LogoClick",{logoURL:m,logoAlpha:100*u,logoPosition:w||"tl",logoScale:p,logoLink:q,chartX:c.chartX,chartY:c.chartY,pageX:c.pageX,pageY:c.pageY},a.chartInstance,void 0,function(){q&&a.linkedItems.linkClickFN.call({link:q},a)})});b.raiseEvent("LogoLoaded",{logoURL:m,
logoAlpha:100*u,logoPosition:w||"tl",logoScale:p,logoLink:q},a.chartInstance)},t.onerror=function(c){b.raiseEvent("LogoLoadError",{logoURL:m,logoAlpha:100*u,logoPosition:w||"tl",logoScale:p,logoLink:q,error:c},a.chartInstance)},t.src=m):k&&k.hide()},_addCSSDefinition:function(a,c){var e=this.components.paper;c.color&&(c.fill=c.color);e.cssAddRule(a,c)},_allocateSpace:function(a){var c=this.components.canvas.config,e=this.config,b=e.canvasHeight,d=e.canvasWidth,f=e.availableHeight,l=e.availableWidth;
e.canvasLeft+=a.left||0;e.canvasTop+=a.top||0;d=e.canvasWidth=Z(d-((a.left||0)+(a.right||0)),0);b=e.canvasHeight=Z(b-((a.top||0)+(a.bottom||0)),0);e.availableHeight=Z(f-((a.top||0)+(a.bottom||0)),0);e.availableWidth=Z(l-((a.left||0)+(a.right||0)),0);e.canvasRight=e.canvasLeft+d;e.canvasBottom=e.canvasTop+b;c.canvasPaddingLeft=Z(c.canvasPaddingLeft,a.paddingLeft||0);c.canvasPaddingRight=Z(c.canvasPaddingRight,a.paddingRight||0);c.canvasPaddingTop=Z(c.canvasPaddingTop,a.paddingTop||0);c.canvasPaddingBottom=
Z(c.canvasPaddingBottom,a.paddingBottom||0)},_updateCategory:function(a){var c=this.jsonData,c=c.categories&&c.categories[0].category,e=a.category,b=e.length,d=a.index,f=a.prepend;a=a.add;var l;for(l=0;l<b;l++)d?(a&&c.splice(d-1+l,0,e[l]),!a&&(c[d-1+l]=e[l])):f?(a&&c.splice(l,0,e[l]),!a&&(c[l]=e[l])):(a&&c.push(e),!a&&(c[c.length-1]=e))},realTimeUpdate:function(a){var c=this.components,e=c.xAxis&&c.xAxis[0],c=c.dataset,b=a.dataset;a=a.categories&&a.categories.category||[];var d=e&&e.getCategoryLen(),
f=this.config.realTimeConfig=this.config.realTimeConfig||(this.config.realTimeConfig={}),l=0,h;if(c){if(e){e.categoryInsert(d,a,!0);d=0;for(h=a.length;d<h;d++)a[d].vline||(l+=1);e.categoryDelete(0,l,!0)}this.config._sumValuesUpdated=!1;d=0;for(h=c.length;d<h;d++)l=b[d],c[d].addData(l),c[d].removeData(0,l.data.length),c[d].maxminFlag&&(f.maxminFlag=c[d].maxminFlag)}},_RTmanageSpace:function(){var a=this.config,c=this.components,e=c.xAxis[0],b=c.yAxis[0],d=c.yAxis[1],f,l=c.canvas.config,c=l.canvasBorderWidth,
h=l.canvasPaddingTop,g=l.canvasPaddingBottom,k=l.canvasPadding||0,n=l.canvasPaddingLeft,l=l.canvasPaddingRight,m;f=a.xAxisSpaceAllocation;m=a.yAxisSpaceAllocation||[];var u=m[0]&&m[0].spaceTaken||{},w=m[1]&&m[1].spaceTaken||{},q=a.primaryAxisOnleft,p,C,A;f=(a.xAxisSpaceAllocation=e.placeAxis(a.availableHeight+f.bottom)).bottom-f.bottom;0!==f&&(this._allocateSpace({bottom:f}),f=a.availableWidth,m[0].spaceTaken=f=b.placeAxis(f+u.left),this._allocateSpace({left:f.left-u.left}),f=a.availableWidth,u=a.canvasLeft-
c,C=a.canvasRight+c,d&&(p=C,A=u,0===q&&(q=u,u=p,p=q,q=C,C=A,A=q),m[1].spaceTaken=m=d.placeAxis(f+(w.right||0)),this._allocateSpace({right:(m.right||0)-(w.right||0)}),d.setAxisDimention({x:p,y:a.canvasTop+h,opposite:A,axisLength:a.canvasHeight-h-g})),e&&e.setAxisDimention({x:a.canvasLeft+Z(n,k),y:a.canvasBottom+(a.shift||0)+c,opposite:a.canvasTop-c,axisLength:a.canvasWidth-Z(n,k)-Z(l,k)}),b&&b.setAxisDimention({x:u,y:a.canvasTop+h,opposite:C,axisLength:a.canvasHeight-h-g}),b.draw(),this._drawCanvas())},
realTimeDraw:function(a,c,e,d,f){var l=this.components,h=l.xAxis&&l.xAxis[0],g=l.yAxis&&l.yAxis[0],k=l.yAxis&&l.yAxis[1],n=l.scale,l=l.dataset,m=this.config.realTimeConfig,u=m.sync,w=m.showRTValue,q=m.maxminFlag,p,C,A=l.length;C=(new Date).getTime();this._chartAnimation(u);this.rtManageSpace&&this._RTmanageSpace();if(l){h&&h.draw();this._setAxisLimits();q&&g&&g.draw();k&&k.draw();q&&n&&n.draw();for(h=0;h<A;h++)p=l[h].groupManager,!p&&l[h].draw();w&&this._drawRealTimeValue&&this._drawRealTimeValue();
p&&p.draw()}this._setRTdata&&this._setRTdata();C=(new Date).getTime()-C;c={data:c,updateObject:m.legacyUpdateObj,prevData:e,source:a?"XmlHttpRequest":"feedData",latency:C};a&&(c.networkLatency=f,c.url=d);b.raiseEvent("realTimeUpdateComplete",c,this.chartInstance)},_getPrevData:function(){return this.config.realTimeConfig&&this.config.realTimeConfig.prevData},feedData:function(a,c,e,b){var d=this,f=d.config.realtimeEnabled,l=d.config.realTimeConfig||(d.config.realTimeConfig={}),h,g=d.components,k=
g.xAxis,n=d.components.dataset,m,u,w=l.clearInterval,q=l.refreshInterval,p=l.updateInterval,C=d.linkedItems.timers||(d.linkedItems.timers={setTimeout:{},setInterval:{}}),A=n.length,J=l.prevData;h=d._linearDataParser(a);if(f&&d.chartInstance.isActive()){if(l.clear){for(f=0;f<A;f++)n[f]._realTimeConfigure(!0);l.clear=!1}q<p&&(q=l.refreshInterval=l.updateInterval);g.messageLogger&&g.messageLogger.addLog(h);g.alertManager&&g.alertManager.processRTData(h);d.realTimeUpdate(h);d.canvasPadding&&d._adjustCanvasPadding();
q&&!1===l.clearIntervalFlag?(d.realTimeDraw(c,a,J,e,b),l.refreshIntervalFlag=!1):q&&!l.refreshIntervalFlag?(l.refreshIntervalFlag=!0,C.setTimeout.loadData=setTimeout(function(){m=(new Date).getTime();d.realTimeDraw(c,a,J,e,b);u=(new Date).getTime();l.refreshIntervalFlag=!1;l.refreshIntervalTimeDifference=u-m},1E3*q-(l.refreshIntervalTimeDifference||0)-(b||0))):q||d.realTimeDraw(c,a,J,e,b);w&&!l.clearIntervalFlag&&k&&(l.clearIntervalFlag=!0,C.setTimeout.clearData=setTimeout(function(a){m=(new Date).getTime();
try{clearTimeout(a.setTimeout.loadData)}catch(c){clearTimeout(C.setTimeout.loadData)}d._clearChart();u=(new Date).getTime();l.clearIntervalTimeDifference=u-m;l.clearIntervalFlag=!1},1E3*w-(l.clearIntervalTimeDifference||0)-(b||0),C));return!0}return!1},_clearChart:function(a){var c=this.components,e=c.xAxis&&c.xAxis[0],c=c.dataset,b=e.getCategoryLen(),d=this.config.realTimeConfig||(this.config.realTimeConfig={}),f=c.length;d.clear=!0;if(c){e&&e.categoryDelete(0,b,!0);this.config._sumValuesUpdated=
!1;for(b=0;b<f;b++)e=c[b],c[b].removeData(0,e.components.data.length),c[b].maxminFlag&&(d.maxminFlag=c[b].maxminFlag);this.realTimeDraw()}this._setRealTimeCategories();z.raiseEvent("ChartCleared",{source:a},this.chartInstance,[this.id,a])},_linearDataParser:function(c,e){var b,d,f,l,h,g,k,n,m,u,w,q,p,C,A,J,H,M,r,K,B,t,O=this.components.dataset,O=O&&O.length;C=this.config.realTimeConfig;var D=C.prevData=[],R=C.legacyUpdateObj={},v=R.values=[],V=R.target=[],X=R.valueVisibility=[],S=R.toolTexts=[],Ea=
R.toolTextsTarget=[],z=R.colors=[],Y=R.links=[],U=0,E={categories:{category:[]},dataset:[]},L=E.categories.category,F=E.dataset,G,Ka=c,ka;c=c&&c.toString&&c.toString()||W;this.rtParserModify&&(Ka=Ka.replace(/([^\\])(\|)/g,"$1,"),c=c.replace(/\|/g,","));b=c.split("&");C=0;for(A=b.length;C<A;C+=1)if(d=b[C].split("="),f=d[1],d=d[0],d!==a&&void 0!==d&&void 0!==f&&(f!==a||e))switch(G=d.toLowerCase(),G){case "label":R.labels=J=f.split(",");break;case "vline":R.vlines=H=f.split(",");break;case "vlinelabel":R.vlineLabels=
m=f.split(",");break;case "vlinecolor":R.vlineColors=u=f.split(",");break;case "vlinethickness":R.vlineThickness=w=f.split(",");break;case "vlinedashed":R.vlineDashed=q=f.split(",");break;case "value":M=f.split("|");break;case "target":r=f.split("|");break;case "showlabel":R.showLabels=p=f.split(",");break;case "showvalue":l=f.split("|");break;case "tooltext":h=(h=(h=Ka.match(/tooltext=(.*?\\&)*.*?[^\\]&/i))?h[0].substr(9,h[0].length-10):Ka.match(/(tooltext=)(.*)/i)[2])&&h.replace(/([^\\])(\|)/g,
"$1_FC@@**");h=h.split("_FC@@**");break;case "targettooltext":g=f.split("|");break;case "link":n=f.split("|");break;case "color":k=f.split("|");break;case "datastamp":R.dataStamp=K=f;break;case "stopupdate":R.pause=B="1"==f;break;case "clear":R.clear=t="1"==f;break;default:R[d]=E[d]=f}b=M&&M.length;for(C=0;C<b;C++)v[C]=M[C].split(","),V[C]=r&&r[C]&&r[C].split(","),X[C]=l&&l[C]&&l[C].split(","),Ea[C]=g&&g[C]&&g[C].split(","),z[C]=k&&k[C]&&k[C].split(","),Y[C]=n&&n[C]&&n[C].split(","),h&&(ka=h[C])&&
(ka=ka.replace(/([^\\])(\,)/g,"$1_FC@@**"),S[C]=ka.split("_FC@@**")),U=Z(U,v[C].length);l=Z(J&&J.length||0,U||0);for(C=0;C<l;C++)L.push({label:J&&J[C],color:u&&u[C],showlabel:p&&p[C]});H&&L.push({label:m&&m[0],vline:H&&H[0],color:u&&u[0],thickness:w&&w[0],dashed:q&&q[0],showlabel:p&&p[0]});for(C=0;C<O;C++){w={};m=w.data=[];q=D[C]=[];for(u=0;u<l;u++)m.push({value:v[C]&&v[C][u],target:V[C]&&V[C][u],showvalue:X[C]&&X[C][u],tooltext:S[C]&&S[C][u]&&S[C][u].replace(/\\/g,""),tooltexttarget:Ea[C]&&Ea[C][u],
color:z[C]&&z[C][u],link:Y[C]&&Y[C][u]}),q.push(v[C]&&v[C][u]);F.push(w)}B&&this._stopUpdate();t&&this._clearChart();K&&(this.config.dataStamp=K);return E},exportChart:function(a){return z.exportChart.call(this,a)},chartHoverManager:function(){return function(a){var c=a.type,e=a.data,b=e.linkedItems.eventListeners||(e.linkedItems.eventListeners=[]);"mouseover"!==c&&"touchstart"!==c||!1!==e.mouseStateIn||(e.mouseStateIn=!0,e.onContainerRollOver(a),b.push(U(F?t:E,"mouseover",e.winMouseHover,e)))}}(),
setChartEvents:function(){var a=this.linkedItems.eventListeners||(this.linkedItems.eventListeners=[]),c=this.components.paper.canvas,e=this.linkedItems.container,b=h(this.jsonData.chart.enablechartmousemoveevent,0);va(e,"click",this.onContainerClick);a.push(U(e,"click",this.onContainerClick,this));va(c,"mouseover",this.chartHoverManager,this);va(c,"touchstart",this.chartHoverManager,this);va(c,"mouseout",this.chartHoverManager,this);va(c,"touchend",this.chartHoverManager,this);a.push(U(c,"mouseover touchstart mouseout touchend",
this.chartHoverManager,this));va(e,"mousemove",this.onContainerMouseMove,this);va(e,"touchmove",this.onContainerMouseMove,this);b&&a.push(U(e,"mousemove touchmove",this.onContainerMouseMove,this))},setChartCursor:function(){var a=this.config.link,c=this.components.paper.canvas.style;G.svg?c.cursor=a?S:"default":this.components.paper.canvas.style.cursor=a?"hand":"default"},onContainerClick:function(a){var c=a.target||a.originalTarget||a.srcElement||a.relatedTarget||a.fromElement,e=c&&c.parentElement,
f=c&&c.nodeName.toLowerCase(),l=a.data,h=l.chartInstance;a=z.getMouseCoordinate(l.linkedItems.container,a.originalEvent,l);h.ref&&(h=d({height:h.args.height,width:h.args.width,pixelHeight:h.ref.offsetHeight,pixelWidth:h.ref.offsetWidth,id:h.args.id,renderer:h.args.renderer,container:h.options.containerElement},a),b.raiseEvent("chartclick",h,l.chartInstance),c&&c.ishot&&l||"tspan"===f&&e&&e.ishot&&l||l.config.link&&l.linkedItems.linkClickFN.call(l,l))},onContainerMouseMove:function(a){var c=a.data,
e=c.chartInstance;a=z.getMouseCoordinate(c.linkedItems.container,a.originalEvent,c);e.ref&&(e=d({height:e.args.height,width:e.args.width,pixelHeight:e.ref.offsetHeight,pixelWidth:e.ref.offsetWidth,id:e.args.id,renderer:e.args.renderer,container:e.options.containerElement},a),b.raiseEvent("chartMouseMove",e,c.chartInstance))},onContainerRollOver:function(a){var c=a.data,e=c.chartInstance;a=z.getMouseCoordinate(c.linkedItems.container,a.originalEvent,c);e.ref&&(e=d({height:e.args.height,width:e.args.width,
pixelHeight:e.ref.offsetHeight,pixelWidth:e.ref.offsetWidth,id:e.args.id,renderer:e.args.renderer,container:e.options.containerElement},a),b.raiseEvent("chartRollOver",e,c.chartInstance))},onContainerRollOut:function(a){var c=a.chart,e=c.chartInstance;a=z.getMouseCoordinate(c.linkedItems.container,a.event,c);e.ref&&(e=d({height:e.args.height,width:e.args.width,pixelHeight:e.ref.offsetHeight,pixelWidth:e.ref.offsetWidth,id:e.args.id,renderer:e.args.renderer,container:e.options.containerElement},a),
b.raiseEvent("chartRollOut",e,c.chartInstance))},mouseStateIn:!1,winMouseHover:function(a){var c=a.originalEvent,c=c.target||c.originalTarget||c.srcElement||c.relatedTarget||c.fromElement,e=a.data,b=e.components.paper;a={chart:e,event:a.originalEvent};F?b.getById(c.parentNode.raphaelid)||(e.onContainerRollOut(a),e.mouseStateIn=!1,va(t,"mouseover",e.winMouseHover)):c.viewportElement||(e.mouseStateIn=!1,e.onContainerRollOut(a),va(E,"mouseover",e.winMouseHover))},_show:function(){this.graphics&&this.graphics.parentGroup&&
this.graphics.parentGroup.show()},_hide:function(){this.graphics&&this.graphics.parentGroup&&this.graphics.parentGroup.hide()},getJobList:function(){this.jobList||(this.jobList={trackerDrawID:[],labelDrawID:[],entityDrawID:[],kdTreeID:[],draw:[],eiMethods:[],postRender:[]});return this.jobList},_setDatasetOrder:function(){var a=this.config,c=this.components.dataset,e=h(this.jsonData.chart.areaovercolumns,1),b={line:[],area:[],column:[]},d=c.length,f,l;for(f=0;f<d;f++)l=c[f],b[l.type].push(l);a.datasetOrder=
e?b.column.concat(b.area).concat(b.line):b.area.concat(b.column).concat(b.line)}},fa.base,{valuefontbold:0,stickytracking:1,usemessagelog:0,zeroplanethickness:void 0,animationeffect:"easeIn",showshadow:1,showhovereffect:void 0,plothovereffect:void 0,anchorhovereffect:void 0,plotborderdashed:void 0,stack100percent:void 0,showpercentvalues:void 0,showpercentintooltip:void 0,plotbordercolor:void 0,showtooltip:1,seriesnameintooltip:1,rotatevalues:0,minimizetendency:0,plotfillangle:270,valuepadding:2,
useplotgradientcolor:1,plotborderthickness:1,plotfillalpha:Y,showvalues:1,valueposition:u,tooltipsepchar:", ",usedataplotcolorforlabels:0,placevaluesinside:0,showplotborder:1,use3dlighting:1,useroundedges:0,plotspacepercent:20,plotpaddingpercent:void 0,plotfillratio:void 0,maxcolwidth:50,plotborderdashlen:5,plotborderdashgap:4});N.register("component",["caption","caption",{pIndex:2,customConfigFn:null,init:function(){var a=this.graphics;!this.components&&(this.components={});!a&&(this.graphics={})},
configure:function(){var a=this.chart,c=a.jsonData.chart,b=a.components,d=b.caption,l=d.config,g=a.config.style,m=g.outCanfontFamily,u=g.outCancolor,g=g.fontSize,b=b.subCaption,q=b.config;d.components.text=e(c.caption);b.components.text=e(c.subcaption);l.style={fontFamily:w(c.captionfont,m),color:ea(w(c.captionfontcolor,u).replace(/^#? ([a-f0-9]+)/ig,"#$1")),fontSize:h(c.captionfontsize,g+3)+Ia,fontWeight:0===h(c.captionfontbold)?L:D};l.align=q.align=w(c.captionalignment,za);switch(l.align){case ha:l.align=
k;break;case sa:l.align=A;break;default:l.align=f}l.isOnTop=q.isOnTop=h(c.captionontop,1);l.isOnLeft=!h(c.captiononright,0);l.captionPosition=K(c.captionposition,n).toLowerCase();l.alignWithCanvas=q.alignWithCanvas=h(a.aligncaptionwithcanvas,c.aligncaptionwithcanvas,1);l.horizontalPadding=q.horizontalPadding=h(c.captionhorizontalpadding,l.alignWithCanvas?0:15);l.drawCaption=!0;ba(l.style);q.style={fontFamily:w(c.subcaptionfont,c.captionfont,m),color:ea(w(c.subcaptionfontcolor,c.captionfontcolor,u).replace(/^#? ([a-f0-9]+)/ig,
"#$1")),fontSize:h(c.subcaptionfontsize,h(Z(h(c.captionfontsize)-3,-1),g)+h(a.subTitleFontSizeExtender,1))+Ia,fontWeight:0===h(c.subcaptionfontbold,a.subTitleFontWeight,c.captionfontbold)?L:D};ba(q.style)},draw:function(){var a=this.chart,c=a.config,e=a.components,b=a.config.textDirection,d=a.graphics,l=d.captionGroup,h=e.paper,g=a.linkedItems.smartLabel,k=e.caption,u=k.graphics,w=u.captionElement,q=e.subCaption,e=q.graphics,p=e.subCaptionElement,C=k.components,k=k.config,A=q.config,J=k.style,H=A.style,
q=q.components,M=C.text,r=q.text,K=k.x,t=k.align,O,R=c.showToolTip;O=a.get(P,T);var a=O.animType,D=O.animObj,v=O.dummyObj,V=O.duration;!M&&!r||l||(l=d.captionGroup=h.group("caption"),l.trackTooltip(!0),d.tracker?l.insertBefore(d.trackerGroup):l.insertAfter(d.datasetGroup));M?(O={text:C.text,fill:J.color,x:K,y:k.y,"text-anchor":t||f,"vertical-align":k.verticalAlign||n,visibility:k.drawCaption?m:B,direction:b},w?(w.animateWith(v,D,{x:K,y:k.y,"text-anchor":t||f,"vertical-align":k.verticalAlign||n,direction:b},
V,a),w.attr({"text-anchor":t||f,text:C.text,fill:J.color,visibility:k.drawCaption?m:B}),w.css(J)):w=u.captionElement=h.text(O,J,l),w.tooltip(C.originalText),g&&(g.useEllipsesOnOverflow(c.useEllipsesWhenOverflow),g.setStyle(J),g.getOriSize(C.text))):w&&(u.captionElement=w.remove());r?(O={text:q.text,fill:H.color,x:K,y:A.y,"text-anchor":t||f,"vertical-align":n,direction:b,visibility:k.drawCaption?m:B},p?(p.animateWith(v,D,{x:K,y:A.y,"text-anchor":t||f,"vertical-align":n,direction:b},V,a),p.attr({"text-anchor":t||
f,text:q.text,fill:H.color,visibility:k.drawCaption?m:B}),p.css(H)):p=e.subCaptionElement=h.text(O,H,l),p.tooltip(q.originalText)):p&&(e.subCaptionElement=p.remove());l&&l.trackTooltip(R?!0:!1);M||r||!l||(d.captionGroup=l.remove())},manageSpace:function(c,b){var d=this.chart,l=d.config,f=d.components,g=f.caption,k=f.subCaption,n=g.config,m=k.config,g=g.components,k=k.components,u=d.jsonData.chart,d=d.linkedItems.smartLabel,w=c,q=e(u.caption),p=e(u.subcaption),C=u=h(u.captionpadding,10),A=l.canvasWidth,
J=!1,H,M,r=0,K=0,B=0,t=0,O=0,K=Z(f.canvas.config.canvasBorderThickness,0),R=f=0;!b&&(b=A);if(3<w){u<K&&(u=K+2);q!==a&&(H=n.style,t=ma(h(parseFloat(H.fontHeight,10),parseFloat(H.lineHeight,10),12)));p!==a&&(M=m.style,O=h(parseInt(M.fontHeight,10),parseInt(M.lineHeight,10),12));if(0<t||0<O)w=Z(w,0),r=t+O+u,r>w?(K=w-r,J=!0,K<u?u=Z(K,5):(K-=u,u=0,O>K?(B=O-K+10,O=0,k._originalText=k.text,k.text=W):(K-=O,O=0,t>K&&(B=t-K)))):B=w-r,d.useEllipsesOnOverflow(l.useEllipsesWhenOverflow),0<t&&(d.setStyle(H),t+=
B,H=d.getSmartText(q,b,t),B=t-H.height,n.height=t=H.height,g.text=H.text,g.originalText=H.tooltext?H.tooltext:!1,f=H.width),0<O&&(d.setStyle(M),O+=B,M=d.getSmartText(p,b,O),B=O-M.height,O=M.height,k.text=M.text,m.height=M.height,k.originalText=M.tooltext?M.tooltext:!1,R=M.width),J&&0<B&&(u+=aa(C-u,B)),n.captionPadding=u,n.height=t,n.width=f,m.width=R,m.height=O,r=t+O+u;r>l.canvasHeight?(r=0,n.drawCaption=!1):n.drawCaption=!0;l=n.isOnTop?{top:r}:{bottom:r,top:5}}else l={bottom:0,top:0},n.drawCaption=
!1;return l},managePosition:function(){var a=this.chart,c=a.config,e=a.components,b=e.caption,d=b.config,l=d.widgetValueHeight||0,f=e.subCaption.config,g=d.x,n=c.canvasWidth,g=d.align,b=b.components.text,u=d.alignWithCanvas,m=d.horizontalPadding,w=c.width,q=c.canvasLeft,p=c.canvasRight,C=c.marginRight,J=c.marginLeft,c=c.marginTop,H=(Aa(q)||0)+h(n,w)/2,n=d.height,M=f.height,r=e.legend.config,K=r.height,B=r.legendPadding,t=r.legendPos,O=e.gradientLegend||{},R=0,D=!!(O.conf||{}).showLegend,v=a.config.borderWidth,
e=e.actionBar,V=0;r.isActive||(K=0);D&&a.config.gLegendEnabled&&(R=O.getLogicalSpace().height);switch(g){case k:g=u?p-m:w-m;break;case A:g=u?q+m:m;break;default:g=u?H:J+.5*(w-J-C)||w/2}d.x=g;d.isOnTop?d.y=(v||0)+(c||0):(t===ha&&(R=K=B=0),e&&(g=e.getLogicalSpace()||{},V=g.height,void 0===V||Infinity===V||0>V)&&(V=0),d.y=a.config.height-a.config.marginBottom-n-(M||0)-(v||0)-(B||0)-(K||0)-R-l-V);d.y+=d._offsetHeight||0;f.y=b?d.y+n+2:d.y||c||0}}]);N.register("component",["caption","subcaption",{pIndex:2,
init:function(){var a=this.graphics;!this.components&&(this.components={});!a&&(this.graphics={})}}]);fa("scrollbase",{standaloneInit:!1,_scrollBar:function(){var a=[];return{get:function(){return a},clear:function(){a.length=0},add:function(c,e){a.push({conf:c,handler:e})}}}()},fa.mscartesian,{enablemousetracking:!0});fa("msinversecartesian",{standaloneInit:!1,_createAxes:function(){var a=this.components,c=N.register("component",["axis","cartesian"]),e;a.yAxis=[];a.xAxis=[];a.yAxis[0]=e=new c;a.xAxis[0]=
a=new c;e.chart=this;a.chart=this;e.init();a.init();this._setCategories()},_feedAxesRawData:function(){var a=this.components,c=this.config,e=a.colorManager,b=this.jsonData,d=b.chart,l,f=(l=this.is3d)?Ta.chart3D:Ta.chart2D;l={outCanfontFamily:w(d.outcnvbasefont,d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,d.basefontcolor,e.getColor(f.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:d.xaxisnamepadding,axisValuePadding:d.labelpadding,
axisNameFont:d.xaxisnamefont,axisNameFontSize:d.xaxisnamefontsize,axisNameFontColor:d.xaxisnamefontcolor,axisNameFontBold:d.xaxisnamefontbold,axisNameFontItalic:d.xaxisnamefontitalic,axisNameBgColor:d.xaxisnamebgcolor,axisNameBorderColor:d.xaxisnamebordercolor,axisNameAlpha:d.xaxisnamealpha,axisNameFontAlpha:d.xaxisnamefontalpha,axisNameBgAlpha:d.xaxisnamebgalpha,axisNameBorderAlpha:d.xaxisnameborderalpha,axisNameBorderPadding:d.xaxisnameborderpadding,axisNameBorderRadius:d.xaxisnameborderradius,
axisNameBorderThickness:d.xaxisnameborderthickness,axisNameBorderDashed:d.xaxisnameborderdashed,axisNameBorderDashLen:d.xaxisnameborderdashlen,axisNameBorderDashGap:d.xaxisnameborderdashgap,useEllipsesWhenOverflow:d.useellipseswhenoverflow,divLineColor:w(d.vdivlinecolor,d.divlinecolor,e.getColor(f.divLineColor)),divLineAlpha:w(d.vdivlinealpha,d.divlinealpha,l?e.getColor("divLineAlpha3D"):e.getColor("divLineAlpha")),divLineThickness:h(d.vdivlinethickness,d.divlinethickness,1),divLineIsDashed:!!h(d.vdivlinedashed,
d.vdivlineisdashed,d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.vdivlinedashlen,d.divlinedashlen,4),divLineDashGap:h(d.vdivlinedashgap,d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatevgridcolor,0),alternateGridColor:w(d.alternatevgridcolor,e.getColor("altVGridColor")),alternateGridAlpha:w(d.alternatevgridalpha,e.getColor("altVGridAlpha")),numDivLines:d.numvdivlines,maxLabelHeight:d.maxlabelheight,labelFont:d.labelfont,labelFontSize:d.labelfontsize,labelFontColor:d.labelfontcolor,
labelFontAlpha:d.labelalpha,labelFontBold:d.labelfontbold,labelFontItalic:d.labelfontitalic,axisName:d.xaxisname,axisMinValue:d.xaxisminvalue,axisMaxValue:d.xaxismaxvalue,setAdaptiveMin:d.setadaptivexmin,adjustDiv:d.adjustvdiv,labelDisplay:d.labeldisplay,showLabels:d.showlabels,rotateLabels:d.rotatelabels,slantLabel:h(d.slantlabels,d.slantlabel),labelStep:h(d.labelstep,d.xaxisvaluesstep),showAxisValues:h(d.showxaxisvalues,d.showxaxisvalue),showLimits:d.showvlimits,showDivLineValues:h(d.showvdivlinevalues,
d.showvdivlinevalues),showZeroPlane:d.showvzeroplane,zeroPlaneColor:d.vzeroplanecolor,zeroPlaneThickness:d.vzeroplanethickness,zeroPlaneAlpha:d.vzeroplanealpha,showZeroPlaneValue:d.showvzeroplanevalue,trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,showTrendlinesOnTop:d.showtrendlinesontop,showAxisLine:h(d.showxaxisline,d.showaxislines,d.drawAxisLines,0),axisLineThickness:h(d.xaxislinethickness,d.axislinethickness,
1),axisLineAlpha:h(d.xaxislinealpha,d.axislinealpha,100),axisLineColor:w(d.xaxislinecolor,d.axislinecolor,"#000000")};c={outCanfontFamily:w(d.outcnvbasefont,d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,d.basefontcolor,e.getColor(f.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:d.yaxisnamepadding,axisValuePadding:d.yaxisvaluespadding,axisNameFont:d.yaxisnamefont,axisNameFontSize:d.yaxisnamefontsize,axisNameFontColor:d.yaxisnamefontcolor,
axisNameFontBold:d.yaxisnamefontbold,axisNameFontItalic:d.yaxisnamefontitalic,axisNameBgColor:d.yaxisnamebgcolor,axisNameBorderColor:d.yaxisnamebordercolor,axisNameAlpha:d.yaxisnamealpha,axisNameFontAlpha:d.yaxisnamefontalpha,axisNameBgAlpha:d.yaxisnamebgalpha,axisNameBorderAlpha:d.yaxisnameborderalpha,axisNameBorderPadding:d.yaxisnameborderpadding,axisNameBorderRadius:d.yaxisnameborderradius,axisNameBorderThickness:d.yaxisnameborderthickness,axisNameBorderDashed:d.yaxisnameborderdashed,axisNameBorderDashLen:d.yaxisnameborderdashlen,
axisNameBorderDashGap:d.yaxisnameborderdashgap,axisNameWidth:d.yaxisnamewidth,useEllipsesWhenOverflow:d.useellipseswhenoverflow,rotateAxisName:h(d.rotateyaxisname,1),axisName:d.yaxisname,divLineColor:w(d.divlinecolor,e.getColor(f.divLineColor)),divLineAlpha:w(d.divlinealpha,e.getColor("divLineAlpha")),divLineThickness:h(d.divlinethickness,1),divLineIsDashed:!!h(d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.divlinedashlen,4),divLineDashGap:h(d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatehgridcolor,
1),alternateGridColor:w(d.alternatehgridcolor,e.getColor("altHGridColor")),alternateGridAlpha:w(d.alternatehgridalpha,e.getColor("altHGridAlpha")),numDivLines:d.numdivlines,axisMinValue:d.yaxisminvalue,axisMaxValue:d.yaxismaxvalue,setAdaptiveMin:d.setadaptiveymin,adjustDiv:d.adjustdiv,labelStep:d.yaxisvaluesstep,showAxisValues:h(d.showyaxisvalues,d.showyaxisvalue),showLimits:h(d.showyaxislimits,d.showlimits,this.showLimits),showDivLineValues:h(d.showdivlinevalues,d.showdivlinevalue),showZeroPlane:d.showzeroplane,
zeroPlaneColor:d.zeroplanecolor,zeroPlaneThickness:h(d.zeroplanethickness,d.divlinethickness,c.zeroplanethickness,2),zeroPlaneAlpha:h(d.zeroplanealpha,d.zeroplanealpha,c.zeroplanealpha,80),showZeroPlaneValue:d.showzeroplanevalue,showZeroPlaneOnTop:c.showzeroplaneontop,trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,showTrendlinesOnTop:d.showtrendlinesontop,showAxisLine:h(d.showyaxisline,d.showaxislines,d.drawAxisLines,
0),axisLineThickness:h(d.yaxislinethickness,d.axislinethickness,1),axisLineAlpha:h(d.yaxislinealpha,d.axislinealpha,100),axisLineColor:w(d.yaxislinecolor,d.axislinecolor,"#000000")};l.vtrendlines=b.vtrendlines;c.trendlines=b.trendlines;b=a.yAxis&&a.yAxis[0];a=a.xAxis&&a.xAxis[0];b&&(b.setCommonConfigArr(c,!0,!0,!1),b.configure());a&&(a.setCommonConfigArr(l,!1,!1,!1),a.configure(),a.setAxisConfig({isRelativeAxisInverse:!0}))}},fa.mscartesian);fa("sscartesian",{standaloneInit:!1,hasLegend:!1,_createDatasets:function(){var a=
this.components,c=a.legend,e=this.jsonData,b=e.dataset,d=e.data||b&&b[0].data,l=this.defaultDatasetType,f,h,e=this._dataSegregator(d);this.config.categories=e.data;b=a.dataset||(a.dataset=[]);if(!d||0===d.length)this.setChartMessage();else if(l&&(h=N.get("component",["dataset",l])))if(d="datasetGroup_"+l,f=N.register("component",["datasetGroup",l]),l=a[d],f&&!l&&(l=a[d]=new f,l.chart=this,l.init()),b[0]){a=b[0];l=a.JSONData;b=a.components.data||[];d=l.data.length-(a.config.showSum||0);h=e.data&&e.data.length||
0;if(d>h){if(c)for(l=h;l<d;l++)b[l]&&b[l].legendItemId&&c.removeItem(b[l].legendItemId);a.removeData(h,d-h,!1)}a.JSONData=e;a.configure()}else a=new h,b.push(a),a.chart=this,l&&l.addDataSet(a,0,0),a.index=0,a.init(e)},_dataSegregator:function(a){var c=[];Da(a,function(a){"true"!==a.vline&&!0!==a.vline&&1!==a.vline&&"1"!==a.vline&&c.push(a)});return{data:c}},_setCategories:function(){var a=this.jsonData,c=a.dataset;this.components.xAxis[0].setCategory(a.data||c&&c[0].data)}},fa.mscartesian,{linethickness:4});
fa("msdybasecartesian",{standaloneInit:!1,_createAxes:function(){var a=this.components,c,e=N.register("component",["axis","cartesian"]),b;a.yAxis=[];a.xAxis=[];a.yAxis[0]=b=new e;a.yAxis[1]=c=new e;a.xAxis[0]=a=new e;b.chart=this;c.chart=this;a.chart=this;b.init();c.init();a.init();this._setCategories()},_feedAxesRawData:function(){var a=this.config,c=this.components,e=c.colorManager,b=this.jsonData,d=b.chart,l,f,g=this.is3d,k=g?Ta.chart3D:Ta.chart2D,n,u=a.primaryAxisOnleft=h(d.primaryaxisonleft,
1),m=h(d.syncaxislimits,0);f=[{line:[]}];n=[{line:[]}];var q,p=b.trendlines||[];l={outCanfontFamily:w(d.outcnvbasefont,d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,d.basefontcolor,e.getColor(k.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:d.xaxisnamepadding,axisValuePadding:d.labelpadding,axisNameFont:d.xaxisnamefont,axisNameFontSize:d.xaxisnamefontsize,axisNameFontColor:d.xaxisnamefontcolor,axisNameFontBold:d.xaxisnamefontbold,
axisNameFontItalic:d.xaxisnamefontitalic,axisNameBgColor:d.xaxisnamebgcolor,axisNameBorderColor:d.xaxisnamebordercolor,axisNameAlpha:d.xaxisnamealpha,axisNameFontAlpha:d.xaxisnamefontalpha,axisNameBgAlpha:d.xaxisnamebgalpha,axisNameBorderAlpha:d.xaxisnameborderalpha,axisNameBorderPadding:d.xaxisnameborderpadding,axisNameBorderRadius:d.xaxisnameborderradius,axisNameBorderThickness:d.xaxisnameborderthickness,axisNameBorderDashed:d.xaxisnameborderdashed,axisNameBorderDashLen:d.xaxisnameborderdashlen,
axisNameBorderDashGap:d.xaxisnameborderdashgap,useEllipsesWhenOverflow:d.useellipseswhenoverflow,divLineColor:w(d.vdivlinecolor,d.divlinecolor,e.getColor(k.divLineColor)),divLineAlpha:w(d.vdivlinealpha,d.divlinealpha,g?e.getColor("divLineAlpha3D"):e.getColor("divLineAlpha")),divLineThickness:h(d.vdivlinethickness,d.divlinethickness,1),divLineIsDashed:!!h(d.vdivlinedashed,d.vdivlineisdashed,d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.vdivlinedashlen,d.divlinedashlen,4),divLineDashGap:h(d.vdivlinedashgap,
d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatevgridcolor,0),alternateGridColor:w(d.alternatevgridcolor,e.getColor("altVGridColor")),alternateGridAlpha:w(d.alternatevgridalpha,e.getColor("altVGridAlpha")),numDivLines:d.numvdivlines,maxLabelHeight:d.maxlabelheight,labelFont:d.labelfont,labelFontSize:d.labelfontsize,labelFontColor:d.labelfontcolor,labelFontAlpha:d.labelalpha,labelFontBold:d.labelfontbold,labelFontItalic:d.labelfontitalic,axisName:d.xaxisname,axisMinValue:d.xaxisminvalue,
axisMaxValue:d.xaxismaxvalue,setAdaptiveMin:d.setadaptivexmin,adjustDiv:d.adjustvdiv,labelDisplay:d.labeldisplay,showLabels:d.showlabels,rotateLabels:d.rotatelabels,slantLabel:h(d.slantlabels,d.slantlabel),labelStep:h(d.labelstep,d.xaxisvaluesstep),showAxisValues:h(d.showxaxisvalues,d.showxaxisvalue),showLimits:d.showvlimits,showDivLineValues:h(d.showvdivlinevalues,d.showvdivlinevalues),zeroPlaneColor:d.vzeroplanecolor,zeroPlaneThickness:h(d.vzeroplanethickness,d.vdivlinethickness,2),zeroPlaneAlpha:h(d.vzeroplanealpha,
d.vdivlinealpha,a.zeroplanealpha),showZeroPlaneValue:d.showvzeroplanevalue,trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,showTrendlinesOnTop:d.showtrendlinesontop,showAxisLine:g?0:h(d.showxaxisline,d.showaxislines,d.drawAxisLines,0),axisLineThickness:h(d.xaxislinethickness,d.axislinethickness,1),axisLineAlpha:h(d.xaxislinealpha,d.axislinealpha,100),axisLineColor:w(d.xaxislinecolor,d.axislinecolor,"#000000")};
a={outCanfontFamily:w(d.outcnvbasefont,d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,d.basefontcolor,e.getColor(k.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:h(d.pyaxisnamepadding,d.yaxisnamepadding),axisValuePadding:h(d.pyaxisvaluespadding,d.yaxisvaluespadding),axisNameFont:w(d.pyaxisnamefont,d.yaxisnamefont),axisNameFontSize:h(d.pyaxisnamefontsize,d.yaxisnamefontsize),axisNameFontColor:w(d.pyaxisnamefontcolor,
d.yaxisnamefontcolor),axisNameFontBold:h(d.pyaxisnamefontbold,d.yaxisnamefontbold),axisNameFontItalic:h(d.pyaxisnamefontitalic,d.yaxisnamefontitalic),axisNameBgColor:w(d.pyaxisnamebgcolor,d.yaxisnamebgcolor),axisNameBorderColor:w(d.pyaxisnamebordercolor,d.yaxisnamebordercolor),axisNameAlpha:h(d.pyaxisnamealpha,d.yaxisnamealpha),axisNameFontAlpha:h(d.pyaxisnamefontalpha,d.yaxisnamefontalpha),axisNameBgAlpha:h(d.pyaxisnamebgalpha,d.yaxisnamebgalpha),axisNameBorderAlpha:h(d.pyaxisnameborderalpha,d.yaxisnameborderalpha),
axisNameBorderPadding:h(d.pyaxisnameborderpadding,d.yaxisnameborderpadding),axisNameBorderRadius:h(d.pyaxisnameborderradius,d.yaxisnameborderradius),axisNameBorderThickness:h(d.pyaxisnameborderthickness,d.yaxisnameborderthickness),axisNameBorderDashed:h(d.pyaxisnameborderdashed,d.yaxisnameborderdashed),axisNameBorderDashLen:h(d.pyaxisnameborderdashlen,d.yaxisnameborderdashlen),axisNameBorderDashGap:h(d.pyaxisnameborderdashgap,d.yaxisnameborderdashgap),axisNameWidth:h(d.pyaxisnamewidth,d.yaxisnamewidth),
useEllipsesWhenOverflow:d.useellipseswhenoverflow,rotateAxisName:h(d.rotateyaxisname,1),axisName:w(d.pyaxisname,d.yaxisname),divLineColor:w(d.divlinecolor,e.getColor(k.divLineColor)),divLineAlpha:w(d.divlinealpha,e.getColor("divLineAlpha")),divLineThickness:h(d.divlinethickness,1),divLineIsDashed:!!h(d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.divlinedashlen,4),divLineDashGap:h(d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatehgridcolor,1),alternateGridColor:w(d.alternatehgridcolor,
e.getColor("altHGridColor")),alternateGridAlpha:w(d.alternatehgridalpha,e.getColor("altHGridAlpha")),numDivLines:d.numdivlines,axisMinValue:m?h(d.syaxisminvalue,d.pyaxisminvalue,d.yaxisminvalue):h(d.pyaxisminvalue,d.yaxisminvalue),axisMaxValue:m?h(d.syaxismaxvalue,d.pyaxismaxvalue,d.yaxismaxvalue):h(d.pyaxismaxvalue,d.yaxismaxvalue),setAdaptiveMin:d.setadaptiveymin,adjustDiv:d.adjustdiv,labelStep:d.yaxisvaluesstep,showAxisValues:h(d.showyaxisvalues,d.showyaxisvalue),showLimits:h(d.showyaxislimits,
d.showlimits,this.showLimits),showDivLineValues:h(d.showdivlinevalues,d.showdivlinevalue),zeroPlaneColor:d.zeroplanecolor,zeroPlaneThickness:h(d.zeroplanethickness,d.divlinethickness,a.zeroplanethickness,2),zeroPlaneAlpha:h(d.zeroplanealpha,d.divlinealpha,a.zeroplanealpha),showZeroPlaneValue:d.showzeroplanevalue,showZeroPlaneOnTop:a.showzeroplaneontop,trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,showTrendlinesOnTop:d.showtrendlinesontop,
showAxisLine:g?0:h(d.showyaxisline,d.showaxislines,d.drawAxisLines,0),axisLineThickness:h(d.yaxislinethickness,d.axislinethickness,1),axisLineAlpha:h(d.yaxislinealpha,d.axislinealpha,100),axisLineColor:w(d.yaxislinecolor,d.axislinecolor,"#000000")};e={outCanfontFamily:w(d.outcnvbasefont,d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,d.basefontcolor,e.getColor(k.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:d.yaxisnamepadding,
axisValuePadding:d.yaxisvaluespadding,axisNameFont:d.syaxisnamefont,axisNameFontSize:d.syaxisnamefontsize,axisNameFontColor:d.syaxisnamefontcolor,axisNameFontBold:d.syaxisnamefontbold,axisNameFontItalic:d.syaxisnamefontitalic,axisNameBgColor:d.syaxisnamebgcolor,axisNameBorderColor:d.syaxisnamebordercolor,axisNameAlpha:d.syaxisnamealpha,axisNameFontAlpha:d.syaxisnamefontalpha,axisNameBgAlpha:d.syaxisnamebgalpha,axisNameBorderAlpha:d.syaxisnameborderalpha,axisNameBorderPadding:d.syaxisnameborderpadding,
axisNameBorderRadius:d.syaxisnameborderradius,axisNameBorderThickness:d.syaxisnameborderthickness,axisNameBorderDashed:d.syaxisnameborderdashed,axisNameBorderDashLen:d.syaxisnameborderdashlen,axisNameBorderDashGap:d.syaxisnameborderdashgap,axisNameWidth:d.syaxisnamewidth,useEllipsesWhenOverflow:d.useellipseswhenoverflow,rotateAxisName:h(d.rotateyaxisname,1),axisName:d.syaxisname,divLineColor:w(d.divlinecolor,e.getColor(k.divLineColor)),divLineAlpha:w(d.divlinealpha,e.getColor("divLineAlpha")),divLineThickness:h(d.divlinethickness,
1),divLineIsDashed:!!h(d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.divlinedashlen,4),divLineDashGap:h(d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatehgridcolor,1),alternateGridColor:w(d.alternatehgridcolor,e.getColor("altHGridColor")),alternateGridAlpha:w(d.alternatehgridalpha,e.getColor("altHGridAlpha")),numDivLines:d.numdivlines,axisMinValue:m?h(d.syaxisminvalue,d.pyaxisminvalue,d.yaxisminvalue):d.syaxisminvalue,axisMaxValue:m?h(d.syaxismaxvalue,d.pyaxismaxvalue,d.yaxismaxvalue):
d.syaxismaxvalue,setAdaptiveMin:d.setadaptivesymin||d.setadaptiveymin,adjustDiv:d.adjustdiv,labelStep:d.yaxisvaluesstep,showAxisValues:h(d.showsyaxisvalues,d.showsyaxisvalue,d.showyaxisvalues,d.showyaxisvalue),showLimits:h(d.showsecondarylimits,d.showyaxislimits,d.showlimits),showDivLineValues:h(d.showdivlinesecondaryvalue,d.showyaxisvalues,d.showyaxisvalue,1),zeroPlaneColor:d.zeroplanecolor,zeroPlaneThickness:h(d.zeroplanethickness,d.divlinethickness,2),zeroPlaneAlpha:d.zeroplanealpha,showZeroPlaneValue:d.showzeroplanevalue,
trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,showTrendlinesOnTop:d.showtrendlinesontop,showAxisLine:g?0:h(d.showsyaxisline,d.showaxislines,d.drawAxisLines,0),axisLineThickness:h(d.syaxislinethickness,d.axislinethickness,1),axisLineAlpha:h(d.syaxislinealpha,d.axislinealpha,100),axisLineColor:w(d.syaxislinecolor,d.axislinecolor,"#000000")};l.vtrendlines=b.vtrendlines;m=0;for(k=p.length;m<k;m++)for(b=p[m]&&
p[m].line||[],g=b.length,q=0;q<g;q++)d=b[q]||{},d.parentyaxis&&d.parentyaxis.toLowerCase(),"s"===d.parentyaxis?f[0].line.push(d):n[0].line.push(d);a.trendlines=n;e.trendlines=f;n=c.yAxis[0];f=c.yAxis[1];c=c.xAxis[0];1===u?(n.setCommonConfigArr(a,!0,!1,!1),f.setCommonConfigArr(e,!0,!1,!0)):(n.setCommonConfigArr(a,!0,!1,!0),f.setCommonConfigArr(e,!0,!1,!1));c.setCommonConfigArr(l,!1,!1,!1);n.configure();f.configure();c.configure();f.setAxisConfig({isActive:!1,isPercent:this.isPercentage,axisIndex:1,
uniqueClassName:1})},_setAxisLimits:function(){var a=this.components,c=a.dataset,e=a.yAxis,a=a.xAxis,d,b=c.length,l,f=-Infinity,g=Infinity,k=-Infinity,n=Infinity,m=Infinity,u=-Infinity,w,q,p;w=h(this.jsonData.chart.syncaxislimits,0);var C={};q=function(a){return-Infinity===a||Infinity===a?null:a};var A=function(a){J?(k=Z(k,a.sYMax||a.max),n=aa(n,a.sYMin||a.min)):(f=Z(f,a.max),g=aa(g,a.min));u=Z(u,a.xMax||-Infinity);m=aa(m,a.xMin||Infinity)},J=0;for(l=0;l<b;l++)d=c[l],p=d.groupManager,J=d.config.parentYAxis,
p?(C[d.type]=p,C[d.type].yAxisIndex=J):(d=d.getDataLimits(),A(d));for(p in C)J=C[p].yAxisIndex,d=C[p].getDataLimits(),f=Z(f,d.max),g=aa(g,d.min),k=Z(k,d.sYMax),n=aa(n,d.sYMin);c=this._getTrendLineMinMax("h");p=this._getTrendLineMinMax("h","s");f=Z(f,c.max);g=aa(g,c.min);k=Z(k,p.max);n=aa(n,p.min);w?(w=Z(f,k),q=aa(g,n),e[0].setDataLimit(w,q),e[1].setDataLimit(w,q)):(f=q(f),g=q(g),k=q(k),n=q(n),e[0].setDataLimit(f,g),e[1].setDataLimit(k,n));e[0].getDivLineCount();if(-Infinity!==u||Infinity!==m)a[0].config.xaxisrange=
{max:u,min:m},a[0].setDataLimit(u,m)},_postSpaceManagement:function(){var a=this.config,c=this.components,e=c.yAxis,d=c.xAxis&&c.xAxis[0],b=e[0],e=e[1],l=c.legend,f=a.xDepth,h=c.canvas.config,g=h.canvasBorderWidth,k=h.canvasPadding,n=h.canvasPaddingLeft,m=h.canvasPaddingRight,c=h.canvasPaddingTop,u=a.primaryAxisOnleft,h=h.canvasPaddingBottom;d&&d.setAxisDimention({x:a.canvasLeft+(f||0)+Z(n,k),y:a.canvasBottom+(a.shift||0)+g,opposite:a.canvasTop-g,axisLength:a.canvasWidth-(f||0)-Z(n,k)-Z(m,k)});u?
(a.yAxisStartXPos=a.canvasLeft-g,a.sYAxisStartXPos=a.canvasRight+g):(a.yAxisStartXPos=a.canvasRight+g,a.sYAxisStartXPos=a.canvasLeft-g);g=a.yAxisStartXPos;k=a.sYAxisStartXPos;b&&b.setAxisDimention({x:g,y:a.canvasTop+c,opposite:k,axisLength:a.canvasHeight-c-h});e&&e.setAxisDimention({x:k,y:a.canvasTop+c,opposite:g,axisLength:a.canvasHeight-c-h});d&&d.shiftLabels(-f,0);l.postSpaceManager();this.config.realtimeEnabled&&this._setRealTimeCategories&&this._setRealTimeCategories();this._adjustCanvasPadding()}},
fa.mscartesian);fa("mscartesian3d",{standaloneInit:!1,is3d:!0,_createDatasets:function(){var a=this.components,c=a.xAxis[0],d=this.jsonData,b=d.dataset,l=b&&b.length,f,h,g,k=this.defaultDatasetType,n=this.applicableDSList,m=this.components.legend,u,q,p,C,A=this.config.isstacked,J,H,M=[],r=this.isRealTime,K=this.config.catLen,B={};b||this.setChartMessage();this.config.categories=d.categories&&d.categories[0].category;f=a.dataset||(a.dataset=[]);h=f.length;for(d=0;d<l;d++)if(C=b[d],C.seriesname&&(C.seriesname=
e(C.seriesname)),g=C.parentyaxis||W,q=(q=this.isDual&&"s"===g.toLowerCase()?w(C.renderas,this.sDefaultDatasetType):w(C.renderas,k))&&q.toLowerCase(),n[q]||(q=k),p=N.get("component",["dataset",q]))void 0===B[q]?B[q]=0:B[q]++,J="datasetGroup_"+q,g=N.register("component",["datasetGroup",q]),(u=a[J])&&M.push(u),g&&!u&&(u=a[J]=new g,u.chart=this,u.init()),(g=f[d])?(q=c.getCategoryLen(),J=K-q,p=r?g.components:g.JSONData,H=p.data&&p.data.length||0,p=C.data&&C.data.length||0,H-=p,J>H||(J=H,q=p),0<J&&g.removeData(q,
J,!1),f[d].JSONData=C,f[d].configure(),f[d]._deleteGridImages&&f[d]._deleteGridImages()):(g=new p,f.push(g),g.chart=this,g.index=d,u&&(A?u.addDataSet(g,0,B[q]):u.addDataSet(g,B[q],0)),g.init(C));if(h>l){J=h-l;u&&A&&u.removeDataSet(0,d,J);a=d;for(l=J+d;a<l;a++)u&&!A&&u.removeDataSet(d,0,1),f[a].visible=!1,f[a].draw(),m.removeItem(f[a].legendItemId);f.splice(d,J)}this.config.catLen=c.getCategoryLen()},_drawCanvas:function(){var a=this.config,c=a.canvasLeft,e=a.canvasTop,d=a.canvasWidth,b=a.canvasHeight,
l=this.jsonData.chart,f=this.components,g=f.canvas,k=f.colorManager,f=f.paper,n=g.graphics,u=n.canvasBorderElement,m=n.canvasElement,p=g.config,C=p.clip={},g=this.graphics.canvasGroup,A=n.canvasBg,H=n.canvas3DBase,r=this.get(P,T),K=r.animType,B=r.animObj,t=r.dummyObj,r=r.duration,O=n.canvas3dbaseline,R=p.canvasBgColor,D=p.showCanvasBG=!!h(l.showcanvasbg,1),v=a.canvasBgDepth,V=a.showCanvasBase,X=a.canvasBaseDepth,S=p.canvasBaseColor3D=w(l.canvasbasecolor,k.getColor("canvasBaseColor3D")),Ea=p.use3DLighting=
h(l.use3dlighting,1),R=Ta.chart3D,W=p.canvasBorderRadius=h(l.plotborderradius,0),z=p.canvasBorderColor=ea(w(l.canvasbordercolor,k.getColor("canvasBorderColor"))),Y=p.canBGAlpha=w(l.canvasbgalpha,k.getColor("canvasBgAlpha")),U=p.canBGColor=w(l.canvasbgcolor,k.getColor(R.canvasBgColor)),E=a.xDepth,l=a.yDepth,k=a.canvasBasePadding||2,R=Ea?p.canvasBgColor={FCcolor:{color:pa(U,85)+ya+La(U,55),alpha:Y+ya+Y,ratio:Na,angle:Oa(a.width-(a.marginLeft+a.marginRight),a.height-(a.marginTop+a.marginBottom),1)}}:
p.canvasBgColor=ea(U,Y);U.split(ya);Y.split(ya);E=p.xDepth=10;l=p.yDepth=10;a={x:c-0,y:e-0,width:d+0,height:b+0,r:W,"stroke-width":0,stroke:z,"stroke-linejoin":q};u?(u.animateWith(t,B,{x:c-0,y:e-0,width:d+0,height:b+0,r:W},r,K),u.attr({"stroke-width":0,stroke:z,"stroke-linejoin":q})):n.canvasBorderElement=f.rect(a,g);C["clip-canvas"]=[Z(0,c-E),Z(0,e),Z(1,d+E),Z(1,b+l)];C["clip-canvas-init"]=[Z(0,c-E),Z(0,e-l),1,Z(1,b+2*l)];a={x:c,y:e,width:d,height:b,r:W,"stroke-width":0,stroke:"none",fill:Ga(R)};
D?(m?(m.show(),m.animateWith(t,B,{x:c,y:e,width:d,height:b,r:W},r,K),m.attr({"stroke-width":0,stroke:"none",fill:Ga(R)})):n.canvasElement=f.rect(a,g),a=["M",c+d,",",e,"L",c+d+v,",",e+1.2*v,",",c+d+v,",",e+b-v,",",c+d,",",e+b,"Z"],A?(A.show(),A.animateWith(t,B,{path:a},r,K),A.attr({path:a})):A=n.canvasBg=f.path(a,g),A.attr({"stroke-width":0,stroke:"none",fill:Ga(R)})):(m&&m.hide(),A&&A.hide());V?(a=c-E-k,u=e+b+l+k,m=E+k,A=l+k,H?(H.show(),H._.cubeside.show(),H._.cubetop.show(),H.animateWith(t,B,{cubepath:[a,
u,d,X,m,A]},r,K),H.attr({cubepath:[a,u,d,X,m,A]})):H=n.canvas3DBase=f.cubepath(a,u,d,X,m,A,g),H.attr({stroke:"none","stroke-width":0,fill:[S.replace(M,J),!Ea]}),O?(O.show(),O.animateWith(t,B,{path:["M",c,e+b,"H",d+c]},r,K)):O=n.canvas3dbaseline=f.path(void 0,g),O.attr({path:["M",c,e+b,"H",d+c],stroke:G.tintshade(S.replace(M,J),.05).rgba})):(H&&(H.hide(),H._.cubeside.hide(),H._.cubetop.hide()),O&&O.hide())}},fa.mscartesian,{showplotborder:0});fa("msdybasecartesian3d",{standaloneInit:!1,is3d:!0,_drawCanvas:fa.mscartesian3d},
fa.msdybasecartesian);fa("sscartesian3d",{standaloneInit:!1,hasLegend:!1,is3d:!0,_drawCanvas:fa.mscartesian3d},fa.sscartesian,{showplotborder:0});fa("msbarcartesian",{standaloneInit:!1,_createAxes:function(){var a=this.components,c=N.get("component",["axis","cartesian"]),e;a.yAxis=[];a.xAxis=[];a.yAxis[0]=e=new c;a.xAxis[0]=a=new c;e.chart=this;a.chart=this;e.init();a.init();this._setCategories()},_feedAxesRawData:function(){var a=this.config,c=this.components,e=c.colorManager,d=this.jsonData,b=d.chart,
l,f=this.is3d,g=f?Ta.chart3D:Ta.chart2D;l={outCanfontFamily:w(b.outcnvbasefont,b.basefont,"Verdana,sans"),outCanfontSize:na(b.outcnvbasefontsize,b.basefontsize,10),outCancolor:w(b.outcnvbasefontcolor,b.basefontcolor,e.getColor(g.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:b.xaxisnamepadding,maxLabelWidthPercent:b.maxlabelwidthpercent,axisValuePadding:b.labelpadding,axisNameFont:b.xaxisnamefont,axisNameFontSize:b.xaxisnamefontsize,axisNameFontColor:b.xaxisnamefontcolor,axisNameFontBold:b.xaxisnamefontbold,
axisNameFontItalic:b.xaxisnamefontitalic,axisNameBgColor:b.xaxisnamebgcolor,axisNameBorderColor:b.xaxisnamebordercolor,axisNameAlpha:b.xaxisnamealpha,axisNameFontAlpha:b.xaxisnamefontalpha,axisNameBgAlpha:b.xaxisnamebgalpha,axisNameBorderAlpha:b.xaxisnameborderalpha,axisNameBorderPadding:b.xaxisnameborderpadding,axisNameBorderRadius:b.xaxisnameborderradius,axisNameBorderThickness:b.xaxisnameborderthickness,axisNameBorderDashed:b.xaxisnameborderdashed,axisNameBorderDashLen:b.xaxisnameborderdashlen,
axisNameBorderDashGap:b.xaxisnameborderdashgap,axisNameWidth:b.xaxisnamewidth,useEllipsesWhenOverflow:b.useellipseswhenoverflow,divLineColor:w(b.vdivlinecolor,b.divlinecolor,e.getColor(g.divLineColor)),divLineAlpha:w(b.vdivlinealpha,b.divlinealpha,f?e.getColor("divLineAlpha3D"):e.getColor("divLineAlpha")),divLineThickness:h(b.vdivlinethickness,b.divlinethickness,1),divLineIsDashed:!!h(b.vdivlinedashed,b.vdivlineisdashed,b.divlinedashed,b.divlineisdashed,0),divLineDashLen:h(b.vdivlinedashlen,b.divlinedashlen,
4),divLineDashGap:h(b.vdivlinedashgap,b.divlinedashgap,2),showAlternateGridColor:h(b.showalternatehgridcolor,1),alternateGridColor:w(b.alternatehgridcolor,e.getColor("altHGridColor")),alternateGridAlpha:w(b.alternatehgridalpha,e.getColor("altHGridAlpha")),numDivLines:b.numvdivlines,labelFont:b.labelfont,labelFontSize:b.labelfontsize,labelFontColor:b.labelfontcolor,labelFontAlpha:b.labelalpha,labelFontBold:b.labelfontbold,labelFontItalic:b.labelfontitalic,axisName:b.xaxisname,axisMinValue:b.xaxisminvalue,
axisMaxValue:b.xaxismaxvalue,setAdaptiveMin:b.setadaptivexmin,adjustDiv:b.adjustvdiv,labelDisplay:b.labeldisplay,showLabels:b.showlabels,rotateLabels:b.rotatelabels,slantLabel:h(b.slantlabels,b.slantlabel),labelStep:h(b.labelstep,b.xaxisvaluesstep),showAxisValues:h(b.showxaxisvalues,b.showxaxisvalue),showLimits:b.showvlimits,showDivLineValues:h(b.showvdivlinevalues,b.showvdivlinevalues),zeroPlaneColor:b.vzeroplanecolor,zeroPlaneThickness:h(b.vzeroplanethickness,b.vdivlinethickness,2),zeroPlaneAlpha:h(b.vzeroplanealpha,
b.vdivlinealpha,a.zeroplanealpha),showZeroPlaneValue:b.showvzeroplanevalue,trendlineColor:b.trendlinecolor,trendlineToolText:b.trendlinetooltext,trendlineThickness:b.trendlinethickness,rotateAxisName:h(b.rotatexaxisname,1),trendlineAlpha:b.trendlinealpha,showTrendlinesOnTop:b.showtrendlinesontop,showAxisLine:f?0:h(b.showxaxisline,b.showaxislines,b.drawAxisLines,0),axisLineThickness:h(b.xaxislinethickness,b.axislinethickness,1),axisLineAlpha:h(b.xaxislinealpha,b.axislinealpha,100),axisLineColor:w(b.xaxislinecolor,
b.axislinecolor,"#000000")};a={outCanfontFamily:w(b.outcnvbasefont,b.basefont,"Verdana,sans"),outCanfontSize:na(b.outcnvbasefontsize,b.basefontsize,10),outCancolor:w(b.outcnvbasefontcolor,b.basefontcolor,e.getColor(g.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:b.yaxisnamepadding,axisValuePadding:b.yaxisvaluespadding,axisNameFont:b.yaxisnamefont,axisNameFontSize:b.yaxisnamefontsize,axisNameFontColor:b.yaxisnamefontcolor,axisNameFontBold:b.yaxisnamefontbold,axisNameFontItalic:b.yaxisnamefontitalic,
axisNameBgColor:b.yaxisnamebgcolor,axisNameBorderColor:b.yaxisnamebordercolor,axisNameAlpha:b.yaxisnamealpha,axisNameFontAlpha:b.yaxisnamefontalpha,axisNameBgAlpha:b.yaxisnamebgalpha,axisNameBorderAlpha:b.yaxisnameborderalpha,axisNameBorderPadding:b.yaxisnameborderpadding,axisNameBorderRadius:b.yaxisnameborderradius,axisNameBorderThickness:b.yaxisnameborderthickness,axisNameBorderDashed:b.yaxisnameborderdashed,axisNameBorderDashLen:b.yaxisnameborderdashlen,axisNameBorderDashGap:b.yaxisnameborderdashgap,
axisNameWidth:b.yaxisnamewidth,useEllipsesWhenOverflow:b.useellipseswhenoverflow,axisName:b.yaxisname,divLineColor:w(b.divlinecolor,e.getColor(g.divLineColor)),divLineAlpha:w(b.divlinealpha,f?e.getColor("divLineAlpha3D"):e.getColor("divLineAlpha")),divLineThickness:h(b.divlinethickness,1),divLineIsDashed:!!h(b.divlinedashed,b.divlineisdashed,0),divLineDashLen:h(b.divlinedashlen,4),divLineDashGap:h(b.divlinedashgap,2),showAlternateGridColor:h(b.showalternatevgridcolor,1),alternateGridColor:w(b.alternatevgridcolor,
e.getColor("altVGridColor")),alternateGridAlpha:w(b.alternatevgridalpha,e.getColor("altVGridAlpha")),numDivLines:b.numdivlines,axisMinValue:b.yaxisminvalue,axisMaxValue:b.yaxismaxvalue,setAdaptiveMin:b.setadaptiveymin,adjustDiv:b.adjustdiv,labelStep:b.yaxisvaluesstep,showAxisValues:h(b.showyaxisvalues,b.showyaxisvalue),showLimits:h(b.showyaxislimits,b.showlimits,this.showLimits),showDivLineValues:h(b.showdivlinevalues,b.showdivlinevalue),zeroPlaneColor:b.zeroplanecolor,zeroPlaneThickness:h(b.zeroplanethickness,
b.divlinethickness,2),zeroPlaneAlpha:h(b.zeroplanealpha,b.divlinealpha,a.zeroplanealpha),showZeroPlaneValue:b.showzeroplanevalue,trendlineColor:b.trendlinecolor,trendlineToolText:b.trendlinetooltext,trendlineThickness:b.trendlinethickness,trendlineAlpha:b.trendlinealpha,isTrendZone:0,showTrendlinesOnTop:b.showtrendlinesontop,showAxisLine:f?0:h(b.showyaxisline,b.showaxislines,b.drawAxisLines,0),axisLineThickness:h(b.yaxislinethickness,b.axislinethickness,1),axisLineAlpha:h(b.yaxislinealpha,b.axislinealpha,
100),axisLineColor:w(b.yaxislinecolor,b.axislinecolor,"#000000"),numberFormatterFn:"yAxis"};a.vtrendlines=d.trendlines;l.trendlines=d.vtrendlines;d=c.yAxis[0];c=c.xAxis[0];d.setCommonConfigArr(a,!1,!1,!1);c.setCommonConfigArr(l,!0,!0,!1);d.configure();c.configure()},_spaceManager:function(){var a,c,e=this.config,d=this.components,b=d.yAxis&&d.yAxis[0],l=d.xAxis&&d.xAxis||[];c=d.legend.config.legendPos;var f=e.xDepth,h=e.yDepth,k=e.canvasBgDepth,n=e.canvasBaseDepth,u=e.canvasBasePadding,m=d.canvas.config.canvasBorderWidth,
w=e.realTimeConfig&&e.realTimeConfig.showRTValue,q=e.borderWidth,p=e.canvasMarginTop,C=e.canvasMarginBottom,A=e.canvasMarginLeft,J=e.canvasMarginRight,d=e.minCanvasHeight,H=e.minCanvasWidth,r=e.minChartWidth,M=e.minChartHeight,K=e.height,B=e.width,t=!1,O=!1,R,D=e.origCanvasTopMargin,v=e.origCanvasBottomMargin,V=e.origCanvasLeftMargin,X=e.origCanvasRightMargin,S,Ea,W;e.canvasWidth-2*q<r&&(S=(e.canvasWidth-r)/2);e.canvasHeight-2*q<M&&(a=(e.canvasHeight-M)/2);this._allocateSpace({top:a||q,bottom:a||
q,left:S||q,right:S||q});l=l[0];a=.7*e.availableWidth;e.yAxisSpaceAllocation=a=l&&l.placeAxis(a);l&&this._allocateSpace(a);l=.225*e.availableHeight;l=this._manageActionBarSpace&&this._manageActionBarSpace(l)||{};this._allocateSpace(l);this._manageLegendSpace();c=c===g?.6*e.availableHeight:.6*e.availableWidth;h&&(this._allocateSpace({left:h}),e.shift=f+u+n);k&&this._allocateSpace({top:k});e.canvasWidth-2*m<H&&(W=(e.canvasWidth-H)/2);this._allocateSpace({left:W||m,right:W||m});H>B-A-J&&(O=!0,h=e.canvasWidth-
H,f=A+J,A=e.canvasMarginLeft=h*A/f,J=e.canvasMarginRight=h*J/f);A=A>e.canvasLeft?A-e.canvasLeft:0;J=J>B-e.canvasRight?J+e.canvasRight-B:0;this._allocateSpace({left:A,right:J});this._allocateSpace({left:n});O&&(f=V+X,n=e.canvasWidth,n>H&&(h=n-H,A=h*V/f,J=h*X/f),this._allocateSpace({left:A,right:J}));e.actualCanvasMarginRight=J;e.actualCanvasMarginBottom=R;this._manageChartMenuBar(c);c=.2*e.availableHeight;this._allocateSpace(this._getSumValueSpace(c));c=.3*e.availableHeight;e.realtimeEnabled&&(w?this._allocateSpace(this._realTimeValuePositioning(c)):
this._hideRealTimeValue());c=.6*e.availableHeight;e.xAxisSpaceAllocation=R=b&&b.placeAxis(c);b&&this._allocateSpace(R);c=.3*e.availableHeight;this._manageScrollerPosition&&this._manageScrollerPosition(c);e.canvasHeight-2*m<d&&(Ea=(e.canvasHeight-d)/2);this._allocateSpace({top:Ea||m,bottom:Ea||m});d>K-p-C&&(t=!0,h=e.canvasHeight-d,f=p+C,p=e.canvasMarginTop=h*p/f,C=e.canvasMarginBottom=h*C/f);b=p>e.canvasTop?p-e.canvasTop:0;R=C>K-e.canvasBottom?C+e.canvasBottom-K:0;this._allocateSpace({top:b,bottom:R});
t&&(f=D+v,C=e.canvasHeight,C>d&&(h=C-d,b=h*D/f,R=h*v/f),this._allocateSpace({top:b,bottom:R}));e.actualCanvasMarginTop=b;e.actualCanvasMarginLeft=A},_postSpaceManagement:function(){var a=this.config,c=this.components,e=c.xAxis&&c.xAxis[0],d=c.yAxis&&c.yAxis[0],b=c.legend,l=a.xDepth,f=c.canvas.config,c=f.canvasBorderWidth,h=f.canvasPadding,g,k,n;d&&this._allocateXAxisLabelSpace(d);g=f.canvasPaddingLeft;k=f.canvasPaddingRight;n=f.canvasPaddingTop;f=f.canvasPaddingBottom;d&&d.setAxisDimention({x:a.canvasLeft+
g,y:a.canvasBottom+c,opposite:a.canvasTop-c,axisLength:a.canvasWidth-g-k});e&&e.setAxisDimention({x:a.canvasLeft-(a.shift||0)-c,y:a.canvasTop+(l||0)+Z(n,h),opposite:a.canvasRight+c,axisLength:a.canvasHeight-(l||0)-Z(n,h)-Z(f,h)});b.postSpaceManager()}},fa.mscartesian,{maxbarheight:50});fa("ssbarcartesian",{standaloneInit:!1,_createAxes:fa.msbarcartesian,_feedAxesRawData:fa.msbarcartesian,_spaceManager:fa.msbarcartesian,_postSpaceManagement:fa.msbarcartesian,_allocateXAxisLabelSpace:fa.msbarcartesian},
fa.sscartesian);fa("msbarcartesian3d",{standaloneInit:!1,_createDatasets:fa.mscartesian3d,is3d:!0,_drawCanvas:function(){var a=this.config,c=a.canvasLeft,e=a.canvasTop,d=a.canvasWidth,b=a.canvasHeight,l=this.jsonData.chart,f=this.components,g=f.canvas,k=f.colorManager,f=f.paper,n=g.graphics,u=n.canvasBorderElement,m=n.canvasElement,C=g.config,A=C.clip={},g=this.graphics.canvasGroup,H=n.canvasBg,r=n.canvas3DBase,K=this.get(P,T),B=K.animType,t=K.animObj,O=K.dummyObj,K=K.duration,R=n.canvas3dbaseline,
D=C.canvasBgColor,v=C.showCanvasBG=!!h(l.showcanvasbg,1),V=a.canvasBgDepth,X=a.showCanvasBase,S=a.canvasBaseDepth,Ea=C.canvasBaseColor3D=w(l.canvasbasecolor,k.getColor("canvasBaseColor3D")),W=C.use3DLighting=h(l.use3dlighting,1),D=Ta.chart3D,z=C.canvasBorderRadius=h(l.plotborderradius,0),Y=C.canvasBorderWidth=0,U=.5*Y,E=C.canvasBorderColor=ea(w(l.canvasbordercolor,k.getColor("canvasBorderColor"))),L=C.canBGAlpha=w(l.canvasbgalpha,k.getColor("canvasBgAlpha")),F=C.canBGColor=w(l.canvasbgcolor,k.getColor(D.canvasBgColor)),
k=C.xDepth,l=C.yDepth,D=W?C.canvasBgColor={FCcolor:{color:pa(F,85)+ya+La(F,55),alpha:L+ya+L,ratio:Na,angle:Oa(a.width-(a.marginLeft+a.marginRight),a.height-(a.marginTop+a.marginBottom),1)}}:C.canvasBgColor=ea(F,L);F.split(ya);L.split(ya);k=C.xDepth=5;l=C.yDepth=5;a={x:c-U,y:e-U,width:d+Y,height:b+Y,r:z,"stroke-width":Y,stroke:E,"stroke-linejoin":2<Y?p:q};u?(u.animateWith(O,t,{x:c-U,y:e-U,width:d+Y,height:b+Y,r:z},K,B),u.attr({"stroke-width":Y,stroke:E,"stroke-linejoin":2<Y?p:q})):n.canvasBorderElement=
f.rect(a,g);A["clip-canvas"]=[Z(0,c-k),Z(0,e),Z(1,d+k),Z(1,b+l)];A["clip-canvas-init"]=[Z(0,c-k),Z(0,e-l),1,Z(1,b+2*l)];a={x:c,y:e,width:d,height:b,r:z,"stroke-width":0,stroke:"none",fill:Ga(D)};v?(m?(m.show(),m.animateWith(O,t,{x:c,y:e,width:d,height:b,r:z},K,B),m.attr({"stroke-width":0,stroke:"none",fill:Ga(D)})):n.canvasElement=f.rect(a,g),d=["M",c,",",e,"L",c+1.2*V,",",e-V,",",c+d-V,",",e-V,",",c+d,",",e,"Z"],H?(H.show(),H.animateWith(O,t,{path:d},K,B),H.attr({path:d})):H=n.canvasBg=f.path(d,
g),H.attr({"stroke-width":0,stroke:"none",fill:Ga(D)})):(m&&m.hide(),H&&H.hide());X?(d=c-k-S-1,a=e+l+1,u=k+1,m=l+1,r?(r.show(),r._.cubeside.show(),r._.cubetop.show(),r.animateWith(O,t,{cubepath:[d,a,S,b,u,m]},K,B),r.attr({cubepath:[d,a,S,b,u,m]})):r=n.canvas3DBase=f.cubepath(d,a,S,b,u,m,g),r.attr({stroke:"none","stroke-width":0,fill:[Ea.replace(M,J),!W]}),R?(R.show(),R.animateWith(O,t,{path:["M",c,e,"V",b+e]},K,B)):R=n.canvas3dbaseline=f.path(void 0,g),R.attr({path:["M",c,e,"V",b+e],stroke:G.tintshade(Ea.replace(M,
J),.05).rgba})):(r&&(r.hide(),r._.cubeside.hide(),r._.cubetop.hide()),R&&R.hide())}},fa.msbarcartesian,{showplotborder:0});fa("ssbarcartesian3d",{standaloneInit:!1,_createAxes:fa.msbarcartesian,_feedAxesRawData:fa.msbarcartesian,_drawCanvas:fa.msbarcartesian3d,_spaceManager:fa.msbarcartesian,_postSpaceManagement:fa.msbarcartesian,_allocateXAxisLabelSpace:fa.msbarcartesian},fa.sscartesian3d);fa("mspolar",{standaloneInit:!1,hasCanvas:!1,_createAxes:function(){var a=this.components,c=N.register("component",
["axis","polarcartesan"]),e=N.register("component",["axis","polar"]);a.yAxis=[];a.xAxis=[];a.yAxis[0]=c=new c;a.xAxis[0]=a=new e;c.chart=this;a.chart=this;c.init();a.init();c.setAxisConfig({polarAxis:a});this._setCategories()},_feedAxesRawData:function(){var a=this.components,c=a.colorManager,e=this.jsonData,d=e.chart,b,l=(b=this.is3d)?Ta.chart3D:Ta.chart2D;b={outCanfontFamily:w(d.outcnvbasefont,d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,
d.basefontcolor,c.getColor(l.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:d.xaxisnamepadding,axisValuePadding:d.labelpadding,axisNameFont:d.xaxisnamefont,axisNameFontSize:d.xaxisnamefontsize,axisNameFontColor:d.xaxisnamefontcolor,axisNameFontBold:d.xaxisnamefontbold,axisNameFontItalic:d.xaxisnamefontitalic,axisNameBgColor:d.xaxisnamebgcolor,axisNameBorderColor:d.xaxisnamebordercolor,axisNameAlpha:d.xaxisnamealpha,axisNameFontAlpha:d.xaxisnamefontalpha,axisNameBgAlpha:d.xaxisnamebgalpha,
axisNameBorderAlpha:d.xaxisnameborderalpha,axisNameBorderPadding:d.xaxisnameborderpadding,axisNameBorderRadius:d.xaxisnameborderradius,axisNameBorderThickness:d.xaxisnameborderthickness,axisNameBorderDashed:d.xaxisnameborderdashed,axisNameBorderDashLen:d.xaxisnameborderdashlen,axisNameBorderDashGap:d.xaxisnameborderdashgap,useEllipsesWhenOverflow:d.useellipseswhenoverflow,divLineColor:w(d.vdivlinecolor,d.divlinecolor,c.getColor(l.divLineColor)),divLineAlpha:w(d.vdivlinealpha,d.divlinealpha,b?c.getColor("divLineAlpha3D"):
c.getColor("divLineAlpha")),divLineThickness:h(d.vdivlinethickness,d.divlinethickness,1),divLineIsDashed:!!h(d.vdivlinedashed,d.vdivlineisdashed,d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.vdivlinedashlen,d.divlinedashlen,4),divLineDashGap:h(d.vdivlinedashgap,d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatevgridcolor,1),alternateGridColor:w(d.alternatevgridcolor,c.getColor("altVGridColor")),alternateGridAlpha:w(d.alternatevgridalpha,c.getColor("altVGridAlpha")),numDivLines:d.numvdivlines,
labelFont:d.labelfont,labelFontSize:d.labelfontsize,labelFontColor:d.labelfontcolor,labelFontAlpha:d.labelalpha,labelFontBold:d.labelfontbold,labelFontItalic:d.labelfontitalic,axisName:d.yaxisname,axisMinValue:d.xaxisminvalue,axisMaxValue:d.xaxismaxvalue,setAdaptiveMin:d.setadaptivexmin,adjustDiv:d.adjustvdiv,labelDisplay:d.labeldisplay,showLabels:d.showlabels,rotateLabels:d.rotatelabels,slantLabel:h(d.slantlabels,d.slantlabel),labelStep:h(d.labelstep,d.xaxisvaluesstep),showAxisValues:h(d.showxaxisvalues,
d.showxaxisvalue),showLimits:d.showvlimits,showDivLineValues:h(d.showvdivlinevalues,d.showvdivlinevalues),zeroPlaneColor:d.vzeroplanecolor,zeroPlaneThickness:d.vzeroplanethickness,zeroPlaneAlpha:d.vzeroplanealpha,showZeroPlaneValue:d.showvzeroplanevalue,trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,showTrendlinesOnTop:d.showtrendlinesontop,showAxisLine:h(d.showxaxisline,d.showaxislines,d.drawAxisLines,
0),axisLineThickness:h(d.xaxislinethickness,d.axislinethickness,1),axisLineAlpha:h(d.xaxislinealpha,d.axislinealpha,100),axisLineColor:w(d.xaxislinecolor,d.axislinecolor,"#000000"),showRadarBorder:d.showradarborder,radarBorderColor:d.radarbordercolor,radarBorderThickness:d.radarborderthickness,radarBorderAlpha:d.radarborderalpha,radarFillColor:d.radarfillcolor,radarFillAlpha:d.radarfillalpha,radarSpikeColor:d.radarspikecolor,radarSpikeThickness:d.radarspikethickness,radarSpikeAlpha:d.radarspikealpha,
radarInLineAlpha:d.radarinlinealpha};c={outCanfontFamily:w(d.outcnvbasefont,d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,d.basefontcolor,c.getColor(l.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:d.yaxisnamepadding,axisValuePadding:d.yaxisvaluespadding,axisNameFont:d.yaxisnamefont,axisNameFontSize:d.yaxisnamefontsize,axisNameFontColor:d.yaxisnamefontcolor,axisNameFontBold:d.yaxisnamefontbold,axisNameFontItalic:d.yaxisnamefontitalic,
axisNameBgColor:d.yaxisnamebgcolor,axisNameBorderColor:d.yaxisnamebordercolor,axisNameAlpha:d.yaxisnamealpha,axisNameFontAlpha:d.yaxisnamefontalpha,axisNameBgAlpha:d.yaxisnamebgalpha,axisNameBorderAlpha:d.yaxisnameborderalpha,axisNameBorderPadding:d.yaxisnameborderpadding,axisNameBorderRadius:d.yaxisnameborderradius,axisNameBorderThickness:d.yaxisnameborderthickness,axisNameBorderDashed:d.yaxisnameborderdashed,axisNameBorderDashLen:d.yaxisnameborderdashlen,axisNameBorderDashGap:d.yaxisnameborderdashgap,
axisNameWidth:d.yaxisnamewidth,useEllipsesWhenOverflow:d.useellipseswhenoverflow,rotateAxisName:h(d.rotateyaxisname,1),axisName:d.xaxisname,divLineColor:w(d.divlinecolor,c.getColor(l.divLineColor)),divLineAlpha:w(d.divlinealpha,c.getColor("divLineAlpha")),divLineThickness:h(d.divlinethickness,1),divLineIsDashed:!!h(d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.divlinedashlen,4),divLineDashGap:h(d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatehgridcolor,1),alternateGridColor:w(d.alternatehgridcolor,
c.getColor("altHGridColor")),alternateGridAlpha:w(d.alternatehgridalpha,c.getColor("altHGridAlpha")),numDivLines:d.numdivlines,axisMinValue:d.yaxisminvalue,axisMaxValue:d.yaxismaxvalue,setAdaptiveMin:d.setadaptiveymin,adjustDiv:d.adjustdiv,labelStep:d.yaxisvaluesstep,showAxisValues:h(d.showyaxisvalues,d.showyaxisvalue),showLimits:h(d.showyaxislimits,d.showlimits,this.showLimits),showDivLineValues:h(d.showdivlinevalues,d.showdivlinevalue),zeroPlaneColor:d.zeroplanecolor,zeroPlaneThickness:h(d.zeroplanethickness,
d.divlinethickness,2),zeroPlaneAlpha:d.zeroplanealpha,showZeroPlaneValue:d.showzeroplanevalue,trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,showTrendlinesOnTop:d.showtrendlinesontop,showAxisLine:h(d.showyaxisline,d.showaxislines,d.drawAxisLines,0),axisLineThickness:h(d.yaxislinethickness,d.axislinethickness,1),axisLineAlpha:h(d.yaxislinealpha,d.axislinealpha,100),axisLineColor:w(d.yaxislinecolor,d.axislinecolor,
"#000000")};b.vtrendlines=e.trendlines;c.trendlines=e.vtrendlines;e=a.yAxis[0];a=a.xAxis[0];e.setCommonConfigArr(c,!0,!1,!1);a.setCommonConfigArr(b,!1,!1,!1);e.configure();a.configure()},_spaceManager:function(){var a,c,e=this.config;c=this.components;var d=e.radarborderthickness,b=e.legendPosition,l=c.xAxis&&c.xAxis[0],f=c.yAxis&&c.yAxis[0];a=this.hasLegend;c=c.legend;var h;h=b===g?.3*e.canvasHeight:.3*e.canvasWidth;!1!==a&&l&&this._allocateSpace(c._manageLegendPosition(h));c=.7*e.canvasHeight;a=
.7*e.canvasWidth;l&&this._allocateSpace(l.placeAxis(a,c));a=.7*e.canvasWidth;f&&f.placeAxis(a);a=.225*e.availableHeight;a=this._manageActionBarSpace&&this._manageActionBarSpace(a)||{};this._allocateSpace(a);a=0<e.radarradius?2*e.radarradius:aa(e.canvasHeight,e.canvasWidth);e.canvasHeight>a&&(c=ja((e.canvasHeight-a)/2),this._allocateSpace({top:c,bottom:c}));e.canvasWidth>a&&(c=ja((e.canvasWidth-a)/2),this._allocateSpace({left:c,right:c}));c=b===g?.6*e.availableHeight:.6*e.availableWidth;this._manageChartMenuBar(c);
f.setAxisDimention({x:e.canvasLeft+e.canvasWidth/2-d/2,y:e.canvasTop,axisLength:e.canvasHeight/2});l.setAxisConfig({centerX:e.canvasLeft+e.canvasWidth/2,centerY:e.canvasTop+e.canvasHeight/2,radius:aa(e.canvasWidth/2,e.canvasHeight/2)-d/2})}},fa.mscartesian);fa("mslog",{standaloneInit:!1,_createAxes:function(){var a=this.components,c=N.register("component",["axis","cartesian"]),e=N.register("component",["axis","log"]);a.yAxis=[];a.xAxis=[];a.yAxis[0]=e=new e;a.xAxis[0]=a=new c;e.chart=this;a.chart=
this;e.init();a.init();this._setCategories()},_feedAxesRawData:function(){var a=this.components,c=a.colorManager,e=this.jsonData,d=e.chart,b,l=(b=this.is3d)?Ta.chart3D:Ta.chart2D,f=1===h(d.invertyaxis,0)?!0:!1;b={outCanfontFamily:w(d.outcnvbasefont,d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,d.basefontcolor,c.getColor(l.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:d.xaxisnamepadding,axisValuePadding:d.labelpadding,
axisNameFont:d.xaxisnamefont,axisNameFontSize:d.xaxisnamefontsize,axisNameFontColor:d.xaxisnamefontcolor,axisNameFontBold:d.xaxisnamefontbold,axisNameFontItalic:d.xaxisnamefontitalic,axisNameBgColor:d.xaxisnamebgcolor,axisNameBorderColor:d.xaxisnamebordercolor,axisNameAlpha:d.xaxisnamealpha,axisNameFontAlpha:d.xaxisnamefontalpha,axisNameBgAlpha:d.xaxisnamebgalpha,axisNameBorderAlpha:d.xaxisnameborderalpha,axisNameBorderPadding:d.xaxisnameborderpadding,axisNameBorderRadius:d.xaxisnameborderradius,
axisNameBorderThickness:d.xaxisnameborderthickness,axisNameBorderDashed:d.xaxisnameborderdashed,axisNameBorderDashLen:d.xaxisnameborderdashlen,axisNameBorderDashGap:d.xaxisnameborderdashgap,useEllipsesWhenOverflow:d.useellipseswhenoverflow,divLineColor:w(d.vdivlinecolor,d.divlinecolor,c.getColor(l.divLineColor)),divLineAlpha:w(d.vdivlinealpha,d.divlinealpha,b?c.getColor("divLineAlpha3D"):c.getColor("divLineAlpha")),divLineThickness:h(d.vdivlinethickness,d.divlinethickness,1),divLineIsDashed:!!h(d.vdivlinedashed,
d.vdivlineisdashed,d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.vdivlinedashlen,d.divlinedashlen,4),divLineDashGap:h(d.vdivlinedashgap,d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatevgridcolor,0),alternateGridColor:w(d.alternatevgridcolor,c.getColor("altVGridColor")),alternateGridAlpha:w(d.alternatevgridalpha,c.getColor("altVGridAlpha")),numDivLines:d.numvdivlines,maxLabelHeight:d.maxlabelheight,labelFont:d.labelfont,labelFontSize:d.labelfontsize,labelFontColor:d.labelfontcolor,
labelFontAlpha:d.labelalpha,labelFontBold:d.labelfontbold,labelFontItalic:d.labelfontitalic,axisName:d.xaxisname,axisMinValue:d.xaxisminvalue,axisMaxValue:d.xaxismaxvalue,setAdaptiveMin:d.setadaptivexmin,adjustDiv:d.adjustvdiv,labelDisplay:d.labeldisplay,showLabels:d.showlabels,rotateLabels:d.rotatelabels,slantLabel:h(d.slantlabels,d.slantlabel),labelStep:h(d.labelstep,d.xaxisvaluesstep),showAxisValues:h(d.showxaxisvalues,d.showxaxisvalue),showLimits:d.showvlimits,showDivLineValues:h(d.showvdivlinevalues,
d.showvdivlinevalues),showZeroPlane:d.showvzeroplane,zeroPlaneColor:d.vzeroplanecolor,zeroPlaneThickness:d.vzeroplanethickness,zeroPlaneAlpha:d.vzeroplanealpha,showZeroPlaneValue:d.showvzeroplanevalue,trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,showTrendlinesOnTop:d.showtrendlinesontop,showAxisLine:h(d.showxaxisline,d.showaxislines,d.drawAxisLines,0),axisLineThickness:h(d.xaxislinethickness,d.axislinethickness,
1),axisLineAlpha:h(d.xaxislinealpha,d.axislinealpha,100),axisLineColor:w(d.xaxislinecolor,d.axislinecolor,"#000000")};c={outCanfontFamily:w(d.outcnvbasefont,d.basefont,"Verdana,sans"),outCanfontSize:na(d.outcnvbasefontsize,d.basefontsize,10),outCancolor:w(d.outcnvbasefontcolor,d.basefontcolor,c.getColor(l.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:d.yaxisnamepadding,axisValuePadding:d.yaxisvaluespadding,axisNameFont:d.yaxisnamefont,axisNameFontSize:d.yaxisnamefontsize,axisNameFontColor:d.yaxisnamefontcolor,
axisNameFontBold:d.yaxisnamefontbold,axisNameFontItalic:d.yaxisnamefontitalic,axisNameBgColor:d.yaxisnamebgcolor,axisNameBorderColor:d.yaxisnamebordercolor,axisNameAlpha:d.yaxisnamealpha,axisNameFontAlpha:d.yaxisnamefontalpha,axisNameBgAlpha:d.yaxisnamebgalpha,axisNameBorderAlpha:d.yaxisnameborderalpha,axisNameBorderPadding:d.yaxisnameborderpadding,axisNameBorderRadius:d.yaxisnameborderradius,axisNameBorderThickness:d.yaxisnameborderthickness,axisNameBorderDashed:d.yaxisnameborderdashed,axisNameBorderDashLen:d.yaxisnameborderdashlen,
axisNameBorderDashGap:d.yaxisnameborderdashgap,axisNameWidth:d.yaxisnamewidth,useEllipsesWhenOverflow:d.useellipseswhenoverflow,rotateAxisName:h(d.rotateyaxisname,1),axisName:d.yaxisname,divLineColor:w(d.divlinecolor,c.getColor(l.divLineColor)),divLineAlpha:w(d.divlinealpha,c.getColor("divLineAlpha")),divLineThickness:h(d.divlinethickness,2),divLineIsDashed:!!h(d.divlinedashed,d.divlineisdashed,0),divLineDashLen:h(d.divlinedashlen,4),divLineDashGap:h(d.divlinedashgap,2),showAlternateGridColor:h(d.showalternatehgridcolor,
1),alternateGridColor:w(d.alternatehgridcolor,c.getColor("altHGridColor")),alternateGridAlpha:w(d.alternatehgridalpha,c.getColor("altHGridAlpha")),numDivLines:d.numdivlines,axisMinValue:d.yaxisminvalue,axisMaxValue:d.yaxismaxvalue,setAdaptiveMin:d.setadaptiveymin,adjustDiv:d.adjustdiv,labelStep:d.yaxisvaluesstep,showAxisValues:h(d.showyaxisvalues,d.showyaxisvalue),showLimits:h(d.showyaxislimits,d.showlimits,this.showLimits),showDivLineValues:h(d.showdivlinevalues,d.showdivlinevalue),showZeroPlane:d.showzeroplane,
zeroPlaneColor:d.zeroplanecolor,zeroPlaneThickness:d.zeroplanethickness,zeroPlaneAlpha:d.zeroplanealpha,showZeroPlaneValue:d.showzeroplanevalue,trendlineColor:d.trendlinecolor,trendlineToolText:d.trendlinetooltext,trendlineThickness:d.trendlinethickness,trendlineAlpha:d.trendlinealpha,showTrendlinesOnTop:d.showtrendlinesontop,showAxisLine:h(d.showyaxisline,d.showaxislines,d.drawAxisLines,0),axisLineThickness:h(d.yaxislinethickness,d.axislinethickness,1),axisLineAlpha:h(d.yaxislinealpha,d.axislinealpha,
100),base:d.base,logBase:d.logbase,axisLineColor:w(d.yaxislinecolor,d.axislinecolor,"#000000"),showMinorDivLineValues:h(d.showminordivlinevalues,0),numMinorDivLines:d.numminordivlines};"1"===c.base&&(c.base=10,c.logBase=10);c.minorDivlinecolor=w(d.minordivlinecolor,c.divLineColor);c.minorDivLineThickness=w(d.minordivlinethickness,1);c.minorDivLineAlpha=w(d.minordivlinealpha,c.divLineAlpha/2);b.vtrendlines=e.vtrendlines;c.trendlines=e.trendlines;e=a.yAxis[0];a=a.xAxis[0];e.setCommonConfigArr(c,!0,
f,!1);a.setCommonConfigArr(b,!1,!1,!1);e.configure();a.configure()},_setAxisLimits:function(){var a=this.components,c=a.dataset,e=a.yAxis,a=a.xAxis,d,b=c.length,l,f=-Infinity,h=Infinity,g=Infinity,k=-Infinity,n,u={},m=[],w=function(a){f=Z(f,a.max);h=aa(h,a.min);k=Z(k,a.xMax||-Infinity);g=aa(g,a.xMin||Infinity)};for(l=0;l<b;l++)d=c[l],(n=d.groupManager)?u[d.type]=n:m.push(d);for(n in u)c=u[n].getDataLimits(),w(c);b=m.length;for(l=0;l<b;l++)c=m[l].getDataLimits(),w(c);w(this._getTrendLineMinMax("h"));
-Infinity===f&&(f=1);Infinity===h&&(h=1);e[0].setDataLimit(f,h);if(-Infinity!==k||Infinity!==g)a[0].config.xaxisrange={max:k,min:g},a[0].setDataLimit(k,g)}},fa.mscartesian);fa("guageBase",{standaloneInit:!1,hasCanvas:!1,_createAxes:function(){},_feedAxesRawData:function(){},_setCategories:function(){},_setAxisLimits:function(){},_adjustCanvasPadding:function(){},placeDataLabels:function(){var a=function(a,c){return a.point.value-c.point.value},c=function(a,c){return a.angle-c.angle},e=[A,A,k,k],d=
[-1,1,1,-1],b=[1,1,-1,-1];return function(l,g,k,n){var u=this.config,m=this.components.dataset[0].conf,w=u.canvasLeft,q=u.canvasTop,p=u.canvasWidth,C=w+.5*u.canvasWidth,A=q+.5*u.canvasHeight,J=this.linkedItems.smartLabel,H=m.dataLabelOptions,r=H.style,M=h(ma(parseFloat(r.lineHeight)),12),K=V(H.placeLabelsInside,1===g.length?!0:!1),t=H.skipOverlapLabels,O=H.manageLabelOverflow,R=H.connectorPadding,D;D=n&&n.metrics||[C,A,2*m.pieMinRadius,m.innerSize||0];var v=D[1],X=D[0];n=.5*D[2];var S=[[],[],[],[]],
m=k.labelsRadius=n+H.distance,A=C=parseInt(r.fontSize,10),Ea=A/2,R=[R,R,-R,-R];k=k.labelsMaxInQuadrant||(k.labelsMaxInQuadrant=oa(m/A));var H=H.isSmartLineSlanted,W=D[3]/2,z,Y,U,E,L,F,G,Ka,ka,va,ca,P,Ga,Q,ba,ea;D=Number.POSITIVE_INFINITY;var Aa,T;U=[];Y=[];J.useEllipsesOnOverflow(u.useEllipsesWhenOverflow);l||J.setStyle(r);if(1==g.length&&!W&&K)U=g[0],(ca=U.dataLabel)&&ca.show(),U.slicedTranslation=[w,q],ca&&(ca.attr({visibility:la,align:f,transform:["t",X,v]}),ca.x=X);else if(K)ea=W+(n-W)/2,Da(g,
function(a){Aa=a.config;T=a.graphics;(ca=T.label)&&ca.show();ca&&(va=Aa.angle,ka=v+ea*ga(va),L=X+ea*wa(va),ca.x=L,ca._x=L,ca.y=ka,a.sliced&&(ba=a.slicedTranslation,Ga=ba[0]-w,Q=ba[1]-q,L+=Ga,ka+=Q),ca.attr({visibility:la,align:f,transform:["t",L,ka]}))});else{Da(g,function(a){Aa=a.config;T=a.graphics;(ca=T.label)&&ca.show();ca&&(va=Aa.angle%Ca,0>va&&(va=Ca+va),P=0<=va&&va<ua?1:va<ia?2:va<da?3:0,S[P].push({point:a,angle:va}))});for(g=l=4;g--;){if(t&&(u=S[g].length-k,0<u))for(S[g].sort(a),r=S[g].splice(0,
u),u=0,Y=r.length;u<Y;u+=1)U=r[u].point,U.dataLabel.attr({visibility:B}),U.connector&&U.connector.attr({visibility:B});S[g].sort(c)}g=Z(S[0].length,S[1].length,S[2].length,S[3].length);u=Z(aa(g,k)*A,m+A);Y=S[0].concat(S[1]);U=S[2].concat(S[3]);for(g=Y.length-1;0<=g;g--)r=Y[g].point.config,delete r.clearance,delete r.clearanceShift,W=ja(u*ga(r.angle)),Math.abs(D-W)<2*M&&(r.clearance=0,Y[g+1].point.clearanceShift=M/2),D=W;D=Number.POSITIVE_INFINITY;g=0;for(Y=U.length;g<Y;g++)r=U[g].point.config,delete r.clearance,
delete r.clearanceShift,W=ja(u*ga(r.angle)),Math.abs(D-W)<2*M&&(r.clearance=0,U[g-1].point.clearanceShift=M/2),D=W;S[1].reverse();for(S[3].reverse();l--;){r=S[l];Y=r.length;t||(A=Y>k?u/Y:C,Ea=A/2);M=Y*A;D=u;for(g=0;g<Y;g+=1,M-=A)W=ja(u*ga(r[g].angle)),D<W?W=D:W<M&&(W=M),D=(r[g].oriY=W)-A;K=e[l];Y=u-(Y-1)*A;D=0;for(g=r.length-1;0<=g;--g,Y+=A)if(U=r[g].point,va=r[g].angle,Aa=U.config,T=U.graphics,U=Aa.sliced,ca=T.label,W=ja(u*ga(va)),W<D?W=D:W>Y&&(W=Y),D=W+A,M=void 0===Aa.clearance?2*ma(h(parseFloat(Aa.style.border),
12),12):2*ma(h(parseFloat(Aa.style.border),Aa.clearance)),G=(W+r[g].oriY)/2,W=X+b[l]*m*wa(xa.asin(G/u)),G*=d[l],G+=v,Ka=v+n*ga(va),E=X+n*wa(va),(2>l&&W<E||1<l&&W>E)&&(W=E),L=W+R[l],ka=G-Ea-2,F=L+R[l],ca.x=F,ca._x=F,O&&(z=1<l?F-this.canvasLeft:this.canvasLeft+p-F,J.setStyle(Aa.style),M=h(ma(parseFloat(Aa.style.lineHeight)),12)+M,M=J.getSmartText(Aa.labelText,z,M),void 0===Aa.clearance&&M.height>A&&(G+=A),ca.attr({text:M.text}).tooltip(M.tooltext)),ca.y=ka,U&&(Ga=Aa.transX,Q=Aa.transY,L+=Ga,W+=Ga,E+=
Ga,Ka+=Q,F+=Ga),ca.attr({visibility:la,"text-anchor":K,vAlign:f,x:F,y:G}),M=T.connector)T.connectorPath=U=["M",E,Ka,"L",H?W:E,G,L,G],M.attr({path:U,visibility:la})}}}}()},fa.sscartesian);fa("scatterBase",{standaloneInit:!1,_setCategories:function(){var a=this.jsonData,c=this.components.xAxis,e=w(a.chart.xaxislabelmode,"categories"),a=a.categories&&a.categories[0].category;c[0].setAxisConfig({xAxisLabelMode:"categories"});"auto"!==e&&"mixed"!==e&&a&&0<a.length?c[0].setCategory(a):"auto"!==e?(c[0].setCategory(a,
!1),c[0].setAxisConfig({xAxisLabelMode:"mixed"})):c[0].setAxisConfig({xAxisLabelMode:"auto"})},_setAxisLimits:function(){var a=this.components,c=this.jsonData,e=a.xAxis,d=w(c.chart.xaxislabelmode,"categories"),c=c.categories&&c.categories[0],c=(c&&c.category||[]).slice(),b,l,f,h,g;b=Infinity;f=-Infinity;var k,n;fa("mscartesian")._setAxisLimits.call(this);l=e[0].getLimit();h=l.tickInterval;for(g=0;g<c.length;g+=1)if(k=c[g].x)k<b&&(b=k),k>f&&(f=k);g=this._getTrendLineMinMax("v");f=Z(f,g.max);b=aa(b,
g.min);if(f>l.max||b<l.min)f=Z(f,l.max),b=aa(b,l.min),e[0].setDataLimit(f,b);if("mixed"===d||"auto"===d||!(c&&0<c.length)){f=[];b=a.numberFormatter.xAxis;if("mixed"===d)for(g=0,d=c.length;g<d;g+=1)f[c[g].x||c[g].y||g]=!0;else c=[];k=e[0].getAxisConfig();n=g=l.min;for(d=l.max;g<=d;)f[g]||c.push({label:W+b.call(a.numberFormatter,g),x:g,showverticalline:0===g?k.showZeroPlane:1,isNumeric:!0,linecolor:0===g?k.zeroPlaneColor:k.divLineColor,linealpha:0===g?k.zeroPlaneAlpha:k.divLineAlpha,linethickness:0===
g?k.zeroPlaneThickness:k.divLineThickness,linedashed:k.divLineIsDashed,linedashLen:k.divLineDashLen,linedashgap:k.divLineDashGap}),0>g&&0<g+h?(g=0,n+=h):g<n?g=n:(g+=h,n+=h);e[0].setCategory(c,!1)}},_createQuadrant:function(){var a;a=this.components;var c=N.register("component",["quadrant","cartesian"]);a.quadrant=a=new c;a.chart=this;a.init()},_drawQuadrant:function(){this.components.quadrant.draw()},_getDiff:function(a,c){return{diff:a,startIndex:c}}},fa.mscartesian,{zeroplanethickness:1,zeroplanealpha:40,
showzeroplaneontop:0,setadaptivexmin:1});fa("areabase",{standaloneInit:!1,enableMouseTracker:!0},fa.mscartesian,{anchorborderthickness:1,anchorimageurl:void 0,anchorimagepadding:1,anchorsides:1,anchoralpha:void 0,anchorbgalpha:Q,anchorimagealpha:Q,anchorimagescale:100,anchorstartangle:90,anchorshadow:0,anchorbgcolor:void 0,anchorbordercolor:void 0,anchorradius:3,showvalues:1,plotfillalpha:Y,linedashlen:5,linedashgap:4,linedashed:void 0,linealpha:Q,linethickness:2,drawfullareaborder:1,connectnulldata:0})}]);
N.register("module",["private","modules.renderer.js-renderer",function(){var b=this.hcLib.Raphael,z=Math.round;b.ca.ishot=function(z){if(this.removed)return!1;var v=this.node;z=z||"";v.ishot=z;switch(this.type){case "group":for(v=this.bottom;v;)v.attr("ishot",z),v=v.next;break;case "text":if(b.svg)for(v=v.getElementsByTagName("tspan")[0];v;)v.ishot=z,v=v.nextSibling}return!1};b.addSymbol({printIcon:function(b,v,F){var E=.75*F,t=.5*F,a=.33*F,Q=z(b-F)+.5,r=z(v-F)+.5,P=z(b+F)+.5;F=z(v+F)+.5;var T=z(b-
E)+.5,L=z(v-E)+.5,E=z(b+E)+.5,D=z(v+t)+.5,B=z(b+t)+.5,m=z(v+a)+.5;b=z(b-t)+.5;a=z(v+a+a)+.5;return["M",T,r,"L",E,r,E,L,T,L,"Z","M",Q,L,"L",Q,D,T,D,T,v,E,v,E,D,P,D,P,L,"Z","M",T,v,"L",T,F,E,F,E,v,"Z","M",B,m,"L",b,m,"M",B,a,"L",b,a]},exportIcon:function(b,v,F){var E=.66*F,t=.5*E,a=z(b-F)+.5,Q=z(v-F)+.5,r=z(b+F)+.5;F=z(v+F)-.5;var P=z(b-t)+.5,T=v<F-3?F-3:z(v)+.5,t=z(b+t)-.5,L=z(b+E)-.5,E=z(b-E)+.5;return["M",a,T,"L",a,F,r,F,r,T,r,F,a,F,"Z","M",b,F-1,"L",E,v,P,v,P,Q,t,Q,t,v,L,v,"Z"]}})}]);N.register("module",
["private","modules.renderer.js-axis-cartesian",function(){var b=this.hcLib,z=b.parseConfiguration,G=b.BLANKSTRING,v=b.extend2,F=b.pluck,E=b.toPrecision,t=b.pluckNumber,a=b.setLineHeight,Q=b.pluckFontSize,r=b.toRaphaelColor,P=b.graphics.convertColor,T=b.parseUnsafeString,L=b.ONESTRING,D=b.getDashStyle,B=b.plotEventHandler,m=b.getValidValue,p=b.getFirstValue,q=b.parseTooltext,A=b.preDefStr,n=A.visibleStr,k=A.hiddenStr,g=A.POSITION_MIDDLE,f=A.POSITION_START,S=A.POSITION_TOP,C=A.POSITION_BOTTOM,Y=A.POSITION_END,
R=8===this.window.document.documentMode?n:"",A=Math,u=A.round,X=A.min,O=A.max,W=A.abs,H=A.ceil,w=A.floor,K=A.pow,h=A.log,V=function(a,d){var c=!1,b=d%2,f;a[1]===a[4]&&(c=a[1],f=u(c),a[1]=a[4]=b?f>c?f-.5:f+.5:f,c=!0);a[2]===a[5]&&(c=a[2],f=u(c),a[2]=a[5]=b?f>c?f-.5:f+.5:f,c=!0);return{path:a,isCrisped:c}};N.register("component",["axis","cartesian",{pIndex:2,customConfigFn:"_feedAxesRawData",init:function(a,d,c,b){var f;this.graphics={};this.components={};f=this.config;f.isVertical=d;f.isReverse=c;
f.isOpposit=b;f.isActive=!0;f.drawLabels=!0;f.drawOnlyCategoryLine=!1;f.drawLabelsOpposit=!1;f.drawLabelOnBothSide=!1;f.drawPlotlines=!0;f.drawAxisLine=!0;f.drawPlotBands=!0;f.drawAxisName=!0;f.drawAxisNameOpposit=!1;f.axisNameAlignCanvas=!1;f.drawAxisNameFromBottom=!1;f.drawTrendLines=!0;f.drawTrendLabels=!0;f.drawTick=!0;f.drawTickMinor=!0;f.animateAxis=!0;f.drawAxisLineWRTCanvas=!0;f.isRelativeAxisInverse=!1;f.axisIndex=0;f.uniqueClassName=0;f.viewPortRatio={};f.canvas={};f.rawAttr=a;f.axisRange=
{};f.isConfigured=!0;f.axisDimention={};f.extremeLabels={firstLabel:{},lastLabel:{}};f._setRangeAgain=!1;f._defaultForceDecimal=void 0;f._defaultDecimalPrecision=void 0},setCommonConfigArr:function(a,d,c,b){var f=this.config;f.rawAttr=a;f.isVertical=d;f.isReverse=c;f.isOpposit=b},configure:function(){var e=this.config,d=e.rawAttr,c=this.chart,b=c.components,f=this.chart.is3D,c=c.jsonData.chart,h=b.numberFormatter;e.trendLines=d.trendlines;e.vTrendLines=d.vtrendlines;this.__setDefaultConfig();z(d,
e);e.axisName=T(d.axisName);e.axisValuePadding=e.axisNamePadding||t(d.axisValuePadding,4);e.axisNamePadding=e.axisNamePadding||t(d.axisNamePadding,5);e.maxLabelWidthPercent=t(d.maxLabelWidthPercent);e.maxLabelWidthPercent=W(e.maxLabelWidthPercent);e.numDivLines=t(d.numDivLines,4);0>e.numDivLines&&(e.numDivLines=0);e.categoryNumDivLines=t(d.numDivLines,0);0>e.axisValuePadding&&(e.axisValuePadding=0);e.categoryDivLinesFromZero=1;e.axisMinValue=h.getCleanValue(d.axisMinValue);e.axisMaxValue=h.getCleanValue(d.axisMaxValue);
e.zeroPlaneColor=F(d.zeroPlaneColor,d.divLineColor);e.zeroPlaneThickness=F(d.zeroPlaneThickness,d.divLineThickness);e.axisLineColor=P(d.axisLineColor,d.axisLineAlpha);e.tickAlpha=t(d.tickAlpha,e.axisLineAlpha);e.tickColor=P(F(d.tickColor,d.axisLineColor),e.tickAlpha);e.tickWidth=t(d.tickWidth,e.axisLineThickness);e.showVLines=t(c.showvlines,1);e.showVLinesOnTop=t(c.showvlinesontop,0);e.showVLineLabels=t(c.showvlinelabels,this.showVLineLabels,1);e.showVLineLabelBorder=t(c.showvlinelabelborder,1);e.rotateVLineLabels=
t(c.rotatevlinelabels,0);e.vLineColor=F(c.vlinecolor,"333333");e.vLineLabelColor=F(c.vlinelabelcolor);e.vLineThickness=F(c.vlinethickness,1);e.vLineAlpha=t(c.vlinealpha,80);e.vLineLabelBgColor=F(c.vlinelabelbgcolor,"ffffff");e.vLineLabelBgAlpha=t(c.vlinelabelbgalpha,f?50:100);e.staggerLines=Math.max(t(c.staggerlines,2),2);1>e.staggerlines&&(e.staggerlines=1);e.trendlineValuesOnOpp=F(d.trendlineValuesOnOpp,d.trendlineValuesOnOpp,0);e.labelDisplay=F(d.labelDisplay,"auto").toLowerCase();e.labelStep=
t(d.labelStep,0);e.labelStep=u(e.labelStep);0>e.labelStep&&(e.labelStep=0);e._oriLabelStep=e.labelStep;e.showLimits=t(d.showLimits,e.showAxisValues);e.showUpperLimit=d.showLimits;e.showDivLineValues=t(d.showDivLineValues,e.showAxisValues);e.showCanvasBorder=b.canvas.config.showCanvasBorder?1:0;e.axisBreak=d.axisBreaks;e.isBreak=!!e.axisBreak;e.isBreak&&this._processAxisBreak();b=(b=p(d.axisNameBorderColor,""))?P(b,t(d.axisNameBorderAlpha,d.axisNameAlpha,100)):"";e.name=e.name||{};e.name.style={fontFamily:F(d.axisNameFont,
d.outCanfontFamily),fontSize:F(d.axisNameFontSize,parseInt(d.outCanfontSize,10))+"px",color:P(F(d.axisNameFontColor,d.outCancolor),t(d.axisNameFontAlpha,d.axisNameAlpha,100)),fontWeight:t(d.axisNameFontBold,1)?"bold":"normal",fontStyle:t(d.axisNameFontItalic)?"italic":"normal",border:b||d.axisNameBgColor?t(d.axisNameBorderThickness,1)+"px solid":void 0,borderColor:b,borderThickness:t(d.axisNameBorderThickness,1),borderPadding:t(d.axisNameBorderPadding,2),borderRadius:t(d.axisNameBorderRadius,0),backgroundColor:d.axisNameBgColor?
P(d.axisNameBgColor,t(d.axisNameBgAlpha,d.axisNameAlpha,100)):"",borderDash:t(d.axisNameBorderDashed,0)?D(t(d.axisNameBorderDashLen,4),t(d.axisNameBorderDashGap,2),t(d.axisNameBorderThickness,1)):"none"};e.name.style.lineHeight=a(e.name.style);b=(b=p(c.trendvaluebordercolor,""))?P(b,t(c.trendvalueborderalpha,c.trendvaluealpha,100)):"";e.trend=e.trend||{};e.trend.trendStyle={fontFamily:F(c.trendvaluefont,d.outCanfontFamily),color:F(c.trendvaluefontcolor,d.trendlineColor,d.outCancolor,"333333"),fontSize:Q(c.trendvaluefontsize,
parseInt(d.outCanfontSize,10))+"px",fontWeight:t(c.trendvaluefontbold)?"bold":"normal",fontStyle:t(c.trendvaluefontitalic)?"italic":"normal",border:b||c.trendvaluebgcolor?t(c.trendvalueborderthickness,1)+"px solid":"",borderColor:b,borderThickness:t(c.trendvalueborderthickness,1),borderPadding:t(c.trendvalueborderpadding,2),borderRadius:t(c.trendvalueborderradius,0),backgroundColor:c.trendvaluebgcolor?P(c.trendvaluebgcolor,t(c.trendvaluebgalpha,c.trendvaluealpha,100)):"",borderDash:t(c.trendvalueborderdashed,
0)?D(t(c.trendvalueborderdashlen,4),t(c.trendvalueborderdashgap,2),t(c.trendvalueborderthickness,1)):"none"};e.trend.trendStyle.lineHeight=a(e.trend.trendStyle);e.labels=e.labels||{};e.lines=e.lines||{};e.band=e.band||{};b=(b=p(c.labelbordercolor,""))?P(b,t(c.labelborderalpha,c.labelalpha,100)):"";e.labels.style={fontFamily:F(d.labelFont,d.outCanfontFamily),fontSize:t(d.labelFontSize,parseInt(d.outCanfontSize,10))+"px",fontWeight:t(d.labelFontBold)?"bold":"normal",fontStyle:t(d.labelFontItalic)?"italic":
"normal",color:P(F(d.labelFontColor,d.outCancolor),t(d.labelFontAlpha,100)),labelLink:c.labellink,border:b||c.labelbgcolor?t(c.labelborderthickness,1)+"px solid":"",borderColor:b,borderThickness:t(c.labelborderthickness,1),borderPadding:t(c.labelborderpadding,2),borderRadius:t(c.labelborderradius,0),backgroundColor:c.labelbgcolor?P(c.labelbgcolor,t(c.labelbgalpha,c.labelalpha,100)):"",borderDash:t(c.labelborderdashed,0)?D(t(c.labelborderdashlen,4),t(c.labelborderdashgap,2),t(c.labelborderthickness,
1)):"none"};e.labels.style.lineHeight=a(e.labels.style);e.numberFormatterFn=F(d.numberFormatterFn);e.axisEndLabelDisplaySpace={left:0,right:0,top:0,bottom:0};e.isConfigured=!0;e._defaultForceDecimal=void 0;e._defaultDecimalPrecision=void 0},_processAxisBreak:function(){var a=this.config,d,c,b,f;a.breakPoints=[];d=a.axisBreak.split("|");b=0;f=d.length;for(c=0;b<f;b+=1)d[b]=d[b].split(","),isNaN(d[b][0])||isNaN(d[b][1])||(a.breakPoints[c]={start:t(d[b][0]),end:t(d[b][1]),length:t(d[b][2],0)},c+=1);
a.breakPoints.sort(function(a,c){return a.start-c.start});a.hasBreakPoints=!0;this._validateBreakPoints()},_validateBreakPoints:function(){var a=this.config,d=a.breakPoints,c=0,b,f=d.length;for(b=0;b<f;b+=1)c+=d[b].end-d[b].start;a.totalBreakAmount=c},_getRelativeBreakValue:function(a){var d=this.config.breakPoints,c,b=d.length,f=0;for(c=0;c<b;c+=1){if(a>=d[c].start&&a<=d[c].end)return d[c].start-f;if(a<d[c].start)break;f+=d[c].end-d[c].start}return a-f},_getRealBreakValue:function(a){var d=this.config.breakPoints,
c,b=d.length;for(c=0;c<b;c+=1)if(a>=d[c].start)a+=d[c].end-d[c].start;else if(a<d[c].start)break;return a},getBreakPoints:function(){var a=this.config;return a.hasBreakPoints?a.breakPoints:!1},setCanvas:function(a){this.config.canvas=a},getAxisBase:function(){var a=this.config,d=a.axisRange.min,c=a.axisRange.max;return 0>d&&0<c?0:a.isReverse?c:0>=c?c:d},getValue:function(a){var d=this.config,c=d.axisRange,b=d.canvas,f=d.axisDimention||{},h=this.chart.config,g=h.viewPortConfig,k=f.axisLength||b.canvasWidth||
h.canvasWidth,f=f.axisLength||b.canvasHeight||h.canvasHeight,b=c.max,c=c.min,h=b-c;d.isVertical?(k=f*g.scaleY/h,a=d.isReverse?c+(g.y*g.scaleY+Number(a))/k:b-(g.y*g.scaleY+Number(a))/k):(k=k*g.scaleX/h,a=d.isReverse?b-(g.x*g.scaleX+Number(a))/k:c+(g.x*g.scaleX+Number(a))/k);return a},_getLabelElement:function(a){var d=this.components;return this.config.hasCategory?d&&d.categoryLabel&&d.categoryLabel[a]&&d.categoryLabel[a].graphics&&d.categoryLabel[a].graphics.label:this.graphics&&this.graphics.labels&&
this.graphics.labels[a]},_getVisibleConfig:function(){var a=this.config,d=a.axisRange,c=a.canvas,b=a.axisDimention||{},f=this.chart.config,h=f.viewPortConfig,g=b.axisLength||c.canvasWidth||f.canvasWidth,c=b.axisLength||c.canvasHeight||f.canvasHeight,b=d.max,d=d.min,f=b-d;a.isVertical?(f/=c,a=h.scaleY,g=b-f*h.y,c=b-f*(h.y+c/a)):(f/=g,a=h.scaleX,c=d+f*h.x,g=d+f*(h.x+g/a));return{maxValue:g,minValue:c}},_adjustNumberFormatter:function(a){var d=this.config,c=d.axisIndex,b=this.chart.components,f=d._defaultDecimalPrecision,
h=d._defaultForceDecimal,g=0,c=d.isVertical||"yAxis"===d.numberFormatterFn?(b.numberFormatter.Y[c]||b.numberFormatter.Y[0]).yAxisLabelConf:b.numberFormatter.paramX;void 0!==f?c.decimalprecision=f:d._defaultDecimalPrecision=c.decimalprecision;void 0!==h?c.forcedecimals=h:d._defaultForceDecimal=c.forcedecimals;0<parseInt(a)||!(a=a.toString().split(".")[1])||(g=a.match(/^[0]*/)[0].length,g+1>c.decimalprecision&&(c.forcedecimals=1),c.decimalprecision=O(g+1,c.decimalprecision))},_setTickIntervalAfterZoom:function(){var a=
this.config,d=this.chart.config.viewPortConfig,c=a.isVertical,f=a.axisRange,h=b.getAxisLimits,g=a.numDivLines,k=a.setAdaptiveMin,n=a.adjustDiv,n=a.rawAttr,u,m,w,q;a.hasCategory||(c=c?d.scaleY:d.scaleX,d=t(n.axisrange?n.axisrange.max:f.max),q=t(n.axisrange?n.axisrange.min:f.min),m=f.max,w=f.min,k=u=!k,n=t(1===c?a.adjustDiv:0),a=h(d,q,m,w,u,k,g*c,n),f.min=Number(E(a.Min,10)),f.max=Number(E(a.Max,10)),f.tickInterval=Number(E(a.divGap,10)),this._adjustNumberFormatter(f.tickInterval),0===f.tickInterval&&
(f.tickInterval=1))},_getAttribAsObj:function(a){var d,c={};for(d in a)a.hasOwnProperty(d)&&"string"===typeof a[d]&&a[d]&&(c[d]=a[d]);return c},_extractAttribToEnd:function(a,d){var c;a._attrib=v({},d);a._attrib=v(a._attrib,this._getAttribAsObj(a));for(c in a)a.hasOwnProperty(c)&&a[c]&&"object"===typeof a[c]&&"_attrib"!==c&&this._extractAttribToEnd(a[c],a._attrib)},setCategory:function(a,d){var c;function b(a){var c={labelfont:["fontFamily"],labelfontcolor:["fontColor"],labelfontsize:["fontSize",
function(a){return a?t(a)+"px":void 0}],labelfontbold:["fontWeight",function(a){return a?"bold":"normal"}],labelfontitalic:["fontStyle",function(a){return a?"italic":"normal"}],labelfontalpha:["fontAlpha"]},e=function(a){return a},d=!1,f,l,g,k={},n,u;for(f in h)"category"===f||f in a||(l=h[f],a[f]=l);for(f in c){g=c[f];n=g[0];u=g[1]||e;l=a[f];g=a[n.toLowerCase()];if(void 0!==l||void 0!==g)if(void 0!==(l=u(l))||void 0!==(l=u(g)))k[n]=l,d=!0;d&&(a.style=k)}}var f=this.chart.jsonData.categories,h=f&&
f[0]||{},f=this.config,g=f.axisRange;c=a&&a.length;var k=f.startPad||0,n=f.endPad||0,u=0,m=void 0!==d?d:!0,w,q,p,C,A,H;f.hasCategory=1;f.categories={};C=f.categories.category=[];A=f.categories.vline=[];q=f.categories.catIdMap={};f.isCategoryAnimate=!1;f.isCategoryVlineAnimate=!1;for(p=0;p<c;p+=1)(w=a[p])||(w={}),H=Number(w.x),"true"!==w.vline&&!0!==w.vline&&1!==w.vline&&"1"!==w.vline?(w.id&&(q[w.id.toLowerCase()]={catObj:w,index:p}),b(w),H===H&&(w.x=H,f.irregularCatAxis=!0),C.push(w),C[u].label=T(C[u].label),
u+=1):(w.startIndex=C.length-1,A.push(w));f.oriCatLen=u-1;1===u&&(0===k&&(k=.5),0===n&&(n=.5));m&&(c=u-1+n,g.min=Number(E(-k,10)),g.max=Number(E(c,10)),g.tickInterval=Number(E(1,10)));f.isConfigured=!0},updateCategory:function(a,d){var c=this.config,b,f;b=c.categories.category;if(b[a])for(f in d)d.hasOwnProperty(f)&&(b[a][f]=d[f]);c.isConfigured=!0},categoryInsert:function(a,d,c){var b=this.config,f=b.axisRange,h=d.length,g=b.endPad||0,k,n,u,m,w;k=b.categories.category;u=b.categories.catIdMap;n=b.categories.vline;
for(m=0;m<h;m+=1)w=d[m],"true"!==w.vline&&!0!==w.vline&&1!==w.vline&&"1"!==w.vline?(w.id&&(u[w.id]={catObj:w,i:a}),k.splice(a,0,w),a+=1):(w.startIndex=a-2,n.push(w));c&&(f.max=Number(E(k.length-1+g,10)));b.isConfigured=!0},categoryDelete:function(a,d,c){var b=this.config,f=b.axisRange,h,g,k;b.isCategoryAnimate=!0;h=b.animateCategories=b.categories.category.slice();g=0;for(k=h.length;g<k;g++)h[g].animate=!0,h[g].leftShift=d,h[g]["delete"]=g<d;b.isCategoryVlineAnimate=!0;h=b.animateCategoriesVline=
b.categories.vline.slice();g=0;for(k=h.length;g<k;g++)h[g].animate=!0,h[g].leftShift=d;b.categories.category.splice(a,d);this._shiftVline(a,d,"left");c&&(f.max-=d);b.isConfigured=!0},categoryUpdate:function(a,d){var c=this.config,b;b=c.categories.category;b[a]&&(b[a]=d);c.isConfigured=!0},_getRotateTextTransformString:function(a,d,c){var b,f="";a=a.matrix.toMatrixString();a.replace(/\(([^\)]*)/,function(a,e){b=e.split(",");b[4]=Number(b[4])+d;b[5]=Number(b[5])+c;f=b.join();return a});f="m"+f;""===
a&&(f="t"+d+","+c);return f},_shiftVline:function(a,d,c){var b=this.config,f=b.categories.vline,b=b.categories.category.length,h=f.length,g,k;for(g=0;g<h;g+=1)if(k=f[g],k.startIndex>=a&&(k.startIndex="right"===c?k.startIndex+d:k.startIndex-d,0>k.startIndex-d||k.startIndex-d>=b))f.splice(g,1),--h,--g},shiftLabels:function(a,d){var c=this.config.labels;c.shiftX=a;c.shiftY=d},setAxisPadding:function(a,d){var c=this.config;a=c.startPad=t(a,0);d=c.endPad=t(d,0);0===c.oriCatLen&&(0===a&&(a=.5),0===d&&(d=
.5));c.hasCategory?0<=c.oriCatLen&&this.setAxisRange({max:c.oriCatLen+d,min:-a}):c.originalMax&&c.originalMin&&this.setDataLimit(c.originalMax,c.originalMin)},setAxisConfig:function(a){var d=this.config,c;for(c in a)a.hasOwnProperty(c)&&(d[c]=a[c])},getAxisConfig:function(a){var d=this.config;return a?d[a]:d},setLabelConfig:function(a){var d=this.config.labels,c;for(c in a)a.hasOwnProperty(c)&&(d[c]=a[c])},setAxisRange:function(a){var d=this.config.axisRange,c;for(c in a)a.hasOwnProperty(c)&&void 0!==
d[c]&&(d[c]=a[c])},getAxisEndLabelDisplaySpace:function(){return this.config.axisEndLabelDisplaySpace||{}},getDivLineCount:function(){var a=this.config.axisRange;return W((a.max-a.min)/a.tickInterval)-1},getLabel:function(a){var d=this.config;a=d.categories&&d.categories.category[a];var d=[3],c={};a&&a.tooltext&&(c.label=a.label,a.tooltext=q(a.tooltext,d,c));return{label:a&&(a.oriLabel||a.label),tooltext:a&&a.tooltext}},getCategoryFromId:function(a){var d=this.config;return(a=d.categories&&d.categories.catIdMap[a])?
a:{}},getCategoryPositionById:function(a){var d=this.config;return(a=d.categories&&d.categories.catIdMap[a])?a.catObj.x||a.index:!1},getClosestDiv:function(a,d){var c=this.config,b=c.axisRange,f=b.tickInterval,h=b.min,b=a;c.hasCategory&&(h=0,f=1);d=d||f/2;h=(a-h)%f;f-=h;c.showZeroPlaneValue&&0>a-h&&0<a&&(h=a);c.showZeroPlaneValue&&0<a+f&&0>a&&(f=-a);h<=f?h<=d&&(b=a-h):f<=d&&(b=a+f);return b},setAxisDimention:function(a){var d=this.config,d=d.axisDimention||(d.axisDimention={});d.x=t(a.x,d.x);d.y=
t(a.y,d.y);d.opposite=t(a.opposite,d.opposite);d.axisLength=t(a.axisLength,d.axisLength)},setDataLimit:function(a,d){var c=this.config,f=c.axisRange,h=b.getAxisLimits,g=c.isPercent?100:c.axisMaxValue,k=c.isPercent?0:c.axisMinValue,n=c.numDivLines,u=c.setAdaptiveMin,m=c.adjustDiv,w=c.startPad||0,q=c.endPad||0;c.originalMax=a;c.originalMin=d;a=c.isPercent?100:a+q;d=c.isPercent?0:d-w;u=w=!u;c.hasBreakPoints&&(a-=c.totalBreakAmount);c=h(t(a,g),t(d,k),g,k,w,u,n,m);f.min=Number(E(c.Min,10));f.max=Number(E(c.Max,
10));f.tickInterval=Number(E(c.divGap,10));this._adjustNumberFormatter(f.tickInterval);0===f.tickInterval&&(f.tickInterval=1)},getPixel:function(a){var d=this.config,c=d.canvas,b=this.chart.config,f=d.axisDimention||{},h=b.viewPortConfig,g=f.axisLength||c.canvasHeight||b.canvasHeight,k=f.y||c.canvasTop||b.canvasTop,n=f.x||c.canvasLeft||b.canvasLeft,u=f.y+f.axisLength||c.canvasBottom||b.canvasBottom,c=f.x+f.axisLength||c.canvasRight||b.canvasRight,b=d.axisRange.min;d.hasBreakPoints&&(a=this._getRelativeBreakValue(a));
h||(h={x:n,y:k,scaleX:1,scaleY:1});d.isVertical?(f=-this.getPVR(),a=d.isReverse?u-((a-b)*f+(g*h.scaleY-h.y*h.scaleY)):k+((a-b)*f+(g*h.scaleY-h.y*h.scaleY))):(f=this.getPVR(),a=d.isReverse?c-((a-b)*f-h.x*h.scaleX):n+((a-b)*f-h.x*h.scaleX));return a},_getCustomPixel:function(a,d){var c=this.config,b=c.canvas,f=this.chart.config,h=c.axisRange,g=f.viewPortConfig,k=d||b.canvasHeight||f.canvasHeight,n=d||b.canvasWidth||f.canvasWidth,u=b.canvasTop||f.canvasTop,m=b.canvasLeft||f.canvasLeft,w=w||f.canvasBottom,
b=b.canvasRight||f.canvasRight,f=h.min,h=h.max-f;c.hasBreakPoints&&(a=this._getRelativeBreakValue(a));g||(g={x:m,y:u,scaleX:1,scaleY:1});c.isVertical?(n=-(k*g.scaleY/h),c=c.isReverse?w-((a-f)*n+(k*g.scaleY-g.y*g.scaleY)):u+((a-f)*n+(k*g.scaleY-g.y*g.scaleY))):(n=n*g.scaleX/h,c=c.isReverse?b-((a-f)*n-g.x*g.scaleX):m+((a-f)*n-g.x*g.scaleX));return c},getLimit:function(){var a=this.config.axisRange;return{min:a.min,max:a.max,tickInterval:a.tickInterval}},getAxisPosition:function(a){return this.getPixel(a)},
getPVR:function(){var a=this.config,d=a.canvas,c=a.isVertical,b=a.axisRange,f=a.axisDimention||{},h=this.chart.config,a=h.viewPortConfig,g=f.axisLength||d.canvasHeight||h.canvasHeight,d=f.axisLength||d.canvasWidth||h.canvasWidth,b=b.max-b.min,b=0<b?b:1;return c?g*a.scaleY/b:d*a.scaleX/b},_isZoomed:function(){var a=this.chart.config;if(this.config.isVertical){if(a.viewPortConfig&&1===a.viewPortConfig.scaleY)return!1}else if(a.viewPortConfig&&1===a.viewPortConfig.scaleX)return!1;return!0},draw:function(){var a=
this.config,d=a.canvas,c=this.chart,b=c.config,f=a.isVertical,h=c.graphics,g=c.components.paper,k=b.viewPortConfig,n=a.viewPortRatio||{},u=d.canvasLeft||b.canvasLeft,m=d.canvasTop||b.canvasTop,w=d.canvasWidth||b.canvasWidth,q=d.canvasHeight||b.canvasHeight,d=a.axisContainer,b=a.axisLabelContainerTop,p=a.axisPlotLineContainer,C=a.axisPlotLineContainerTop,A=a.vlineLabelContainer,H=a.axisBandContainer,r=a.axisNameContainer,K=a.axisTrendContainerTop,B=a.axisTrendContainerBottom,t=a.axisTrendLabelContainer,
O=a.axisAxisLineContainer,R=a.axisAxisLineContainerBottom,D=a.divLineThickness||0,v=h.axisBottomGroup,V=h.axisTopGroup,X=a.animateAxis,S,W,z,Y,E,L,F,G,P,Q,T,N,Fa;P=k.y*k.scaleY;Q=k.x*k.scaleX;c=c.get("config","animationObj");T=c.animObj;N=c.dummyObj;S=c.transposeAnimDuration;Fa=f?u+","+(m-D)+","+w+","+(q+2*D):u-D+","+m+","+(w+2*D)+","+q;D=h.axisBandGroup=h.axisBandGroup||g.group("dataset-Band-group",v);W=h.axisPlotLineGroup=h.axisPlotLineGroup||g.group("dataset-Line-group",v);G=h.axisTrendGroupBottom=
h.axisTrendGroupBottom||g.group("dataset-Trend-group-bottom",v);z=h.axisPlotLineGroupTop=h.axisPlotLineGroupTop||g.group("dataset-Line-group-top",V);E=h.axisNameGroup=h.axisNameGroup||g.group("dataset-Name-group",v);Y=h.axisLineGroup=h.axisLineGroup||g.group("axis-Line-group",V);F=h.axisTrendGroupTop=h.axisTrendGroupTop||g.group("dataset-Trend-group-top",V);L=h.axisLabelGroup=h.axisLabelGroup||g.group("dataset-Label-group",v);h=h.axisLabelGroupTop=h.axisLabelGroupTop||g.group("dataset-Label-group",
V);d||(a.axisContainer=d=g.group("dataset-axis",L));b||(a.axisLabelContainerTop=b=g.group("dataset-top-label",h));O||(a.axisAxisLineContainer=g.group("axis-line-tick",Y));A||(a.vlineLabelContainer=A=g.group("axis-vline-label",Y));H?S&&X?H.animateWith(N,T,{"clip-rect":u+","+m+","+w+","+q},S,c.animType):H.attr({"clip-rect":u+","+m+","+w+","+q}):(a.axisBandContainer=H=g.group("dataset-axis-bands",D),H.attr({"clip-rect":u+","+m+","+w+","+q}));p?S&&X?p.animateWith(N,T,{"clip-rect":Fa},S,c.animType):p.attr({"clip-rect":Fa}):
(a.axisPlotLineContainer=p=g.group("dataset-axis-lines",W),p.attr({"clip-rect":Fa}));C?S&&X?C.animateWith(N,T,{"clip-rect":Fa},S,c.animType):C.attr({"clip-rect":Fa}):(a.axisPlotLineContainerTop=C=g.group("dataset-axis-lines-top",z),C.attr({"clip-rect":Fa}));K?S&&X?K.animateWith(N,T,{"clip-rect":u+","+m+","+w+","+q},S,c.animType):K.attr({"clip-rect":u+","+m+","+w+","+q}):(a.axisTrendContainerTop=K=g.group("dataset-axis-trend-top",F),K.attr({"clip-rect":u+","+m+","+w+","+q}));B?S&&X?B.animateWith(N,
T,{"clip-rect":u+","+m+","+w+","+q},S,c.animType):B.attr({"clip-rect":u+","+m+","+w+","+q}):(a.axisTrendContainerBottom=B=g.group("dataset-axis-trend-bottom",G),B.attr({"clip-rect":u+","+m+","+w+","+q}));t||(a.axisTrendLabelContainer=g.group("dataset-axis-trend-label",F));r||(a.axisNameContainer=g.group("dataset-axis-name",E));R||(a.axisAxisLineContainerBottom=g.group("axis-line-tick-bottom",v));n.scaleX!==k.scaleX||n.scaleY!==k.scaleY?(n.scaleX=k.scaleX,n.scaleY=k.scaleY):f?(a=P-k.y*k.scaleY,A.transform("t0,"+
a),d.transform("t0,"+a),b.transform("t0,"+a),p.transform("t0,"+a),C.transform("t0,"+a),H.transform("t0,"+a),K.transform("t0,"+a),B.transform("t0,"+a)):(a=Q-k.x*k.scaleX,A.transform("t"+a+",0"),d.transform("t"+a+",0"),b.transform("t"+a+",0"),p.transform("t"+a+",0"),C.transform("t"+a+",0"),H.transform("t"+a+",0"),K.transform("t"+a+",0"),B.transform("t"+a+",0"));this._drawComponents()},hide:function(){var a=this.config;a.axisContainer&&(a.axisLabelContainerTop.hide(),a.axisContainer.hide(),a.axisPlotLineContainer.hide(),
a.axisPlotLineContainerTop.hide(),a.axisBandContainer.hide(),a.axisNameContainer.hide(),a.axisTrendContainerTop.hide(),a.axisTrendContainerBottom.hide(),a.axisTrendLabelContainer.hide(),a.axisAxisLineContainer.hide(),a.axisAxisLineContainerBottom.hide())},show:function(){var a=this.config;a.axisContainer&&(a.axisLabelContainerTop.show(),a.axisContainer.show(),a.axisPlotLineContainer.show(),a.axisPlotLineContainerTop.show(),a.axisBandContainer.show(),a.axisNameContainer.show(),a.axisTrendContainerTop.show(),
a.axisTrendContainerBottom.show(),a.axisTrendLabelContainer.show(),a.axisAxisLineContainer.show(),a.axisAxisLineContainerBottom.show())},_drawComponents:function(){var a=this.config,d=this.chart.is3D,c,b;a.drawAxisName&&this._drawAxisName();a.drawAxisLine&&this._drawAxisLine();a.drawAxisLine&&a.hasBreakPoints&&this._drawBreakPoints();a.isActive||(c=a.lines.isDraw,b=a.band.isDraw,a.lines.isDraw=0,a.band.isDraw=0);a.hasCategory?(a.drawLabels&&this._drawCategory(),a.drawOnlyCategoryLine&&this._drawCategoryLine()):
(a.drawLabels&&this._drawLabel(),a.drawPlotlines&&this._drawPlotLine());a.hasCategory&&"auto"!==a.xAxisLabelMode?(a.drawPlotlines&&this._drawCategoryVline(),a.drawPlotlines&&!d&&this._drawCategoryPlotLine(),a.drawPlotBands&&!a.hasBreakPoints&&!d&&this._drawCategoryPlotBand(),"mixed"===a.xAxisLabelMode&&a.drawPlotBands&&!a.hasBreakPoints&&!d&&this._drawPlotBand()):a.drawPlotBands&&!a.hasBreakPoints&&!d&&this._drawPlotBand();a.isActive||(a.lines.isDraw=c,a.band.isDraw=b);a.drawTrendLines&&this._drawTrendLine();
a.isConfigured=!1},_manageReuseableElement:function(a,d,c){var b=this.config.isConfigured,f=this.chart.components.paper,h,g,k,n;h=a._graphicElem||(a._graphicElem=[]);g=a._freeElem||(a._freeElem=[]);k=a._usedElem||(a._usedElem={});n=a._drawnIds={};return{getElement:function(a,e){var u=e||{};n[a]=!0;if(k[a])return k[a]._applyAllAttr=b,k[a]._firstTimeDraw=!1,k[a];if(0<g.length)return k[a]=g.pop(),k[a]._applyAllAttr=!0,k[a]._firstTimeDraw=!1,k[a];h.push(f[d](u,c));k[a]=h[h.length-1];k[a]._firstTimeDraw=
!0;k[a]._applyAllAttr=!1;return k[a]},freeUnusedElement:function(){for(var a in k)k.hasOwnProperty(a)&&!n[a]&&(k[a].attr({visibility:"hidden"}),g.push(k[a]),delete k[a])}}},_drawLabel:function(){var a=this.config,d=a.canvas,c=a.axisDimention||{},b=this.chart,h=b.config,g=b.components,k=a.axisRange,n=a.isOpposit,u,m=a.labels,q=m.style,p,A,r=a.isVertical,K=a.animateAxis,B=k.max,t=k.min,O=d.canvasTop||h.canvasTop,R=d.canvasLeft||h.canvasLeft,D=d.canvasBottom||h.canvasBottom,d=d.canvasRight||h.canvasRight,
h=a.axisNameContainer,v=a.labelPadding,V=a.showUpperLimit,X=g.paper,z=a.labelMaxH,L=a.labelMaxW,F=a.extremeLabels,G=r?c.x:c.y,c=c.opposite,P=a.drawLabelOnBothSide,Q=this.graphics.labels||[],T=0,pa=!0,N=!1,ea,za,ha,sa={fontFamily:q.fontFamily,fontSize:q.fontSize,fontWeight:q.fontWeight,fontStyle:q.fontStyle,lineHeight:q.lineHeight},fa,ya,Ia,Fa,Ba,Ja=function(){(V||!V&&1>=a.labels.step)&&!N&&p<B&&p+u>B&&(A=p=B-u,N=!0);a.showZeroPlane&&0>p&&0<p+u?(p=0,A+=u):p<A?p=A:(p+=u,A+=u)};q.lineHeight&&(ea=q.lineHeight,
-1!==ea.indexOf("px")&&(ea=ea.replace("px",""),ea=parseFloat(ea)));if(a.labels.isDraw){!P&&a.drawLabelsOpposit&&(n=!n,G=c);pa=b.get("config","animationObj");Ia=pa.animObj;Fa=pa.dummyObj;b=pa.transposeAnimDuration;Ba=pa.animType;pa=W(this.getPixel(t)-this.getPixel(t+k.tickInterval));r?(a.labelMaxH>pa&&!a.hasCategory&&(za=H(a.labelMaxH/pa)),za>a.labels.step&&(a.labels.step=za)):(a.labelMaxW>pa&&!a.hasCategory&&(za=H(a.labelMaxW/pa)),za>a.labels.step&&(a.labels.step=za,V=!0));a.labels.step?u=k.tickInterval*
a.labels.step:u=k.tickInterval;ha=a.labels.rotation;k=this._getVisibleConfig();pa=this._isZoomed();T=t+u*w((k.minValue-3*u-t)/u);za=t+u*w((k.maxValue+3*u-t)/u);T=T<t?t:T;za=za>B?B:za;fa={fill:q.color,"line-height":ea,"font-size":q.fontSize};P&&(ya={fill:q.color,"line-height":ea,"font-size":q.fontSize});r||(ha?(fa["text-anchor"]=n?f:Y,fa["vertical-align"]="center",P&&(ya["text-anchor"]=n?Y:f,ya["vertical-align"]="center")):(fa["vertical-align"]=n?C:S,P&&(ya["vertical-align"]=n?S:C)));h.css(sa);F.firstLabel=
{};F.lastLabel={};A=p=T;for(T=0;p<=za;){if(!pa||!(p<k.minValue||p>k.maxValue))if(a.labels.drawNormalVal||a.labels.drawLimitVal&&(p===t||p===B))if(a.labels.drawNormalVal||p===t||p===B)if(a.labels.drawLimitVal||p!==t&&p!==B)if(0!==a.showZeroPlane&&0!==a.showZeroPlaneValue||0!==p){if(1===a.showZeroPlane&&1===a.showZeroPlaneValue&&(0>p&&0<p+u||0<p&&0>p-u)&&p!==t&&p!==B)if(r){if(this.getPixel(p)+z>=this.getPixel(0)&&this.getPixel(0)>=this.getPixel(p)-z){Ja();continue}}else if(this.getPixel(p)+L>=this.getPixel(0)&&
this.getPixel(0)>=this.getPixel(p)-L){Ja();continue}q=a.hasBreakPoints?E(this._getRealBreakValue(p),10):E(p,10);if(r)ea=a.numberFormatterFn?g.numberFormatter[a.numberFormatterFn]:a.isPercent?g.numberFormatter.percentValue:g.numberFormatter.yAxis,ea=""+ea.call(g.numberFormatter,q,a.axisIndex),fa["text-anchor"]=n?f:Y,fa.text=ea,fa.x=n?(G||d)+v:(G||R)-v,fa.y=this.getPixel(q),P&&(ya["text-anchor"]=n?Y:f,ya.text=ea,ya.x=n?(c||R)-v:(c||d)+v,ya.y=this.getPixel(q));else{ea=a.numberFormatterFn?g.numberFormatter[a.numberFormatterFn]:
a.isPercent?g.numberFormatter.percentValue:g.numberFormatter.xAxis;ea=""+ea.call(g.numberFormatter,q);fa.text=ea;fa.x=this.getPixel(q);fa.y=n?(G||O)-v:(G||D)+v;if(p!==B&&V&&fa.x+a.labelMaxW>d){Ja();continue}P&&(ya.text=ea,ya.x=this.getPixel(q),ya.y=n?(c||D)+v:(c||O)-v)}m.shiftX&&(fa.x+=m.shiftX);m.shiftY&&(fa.y+=m.shiftY);fa.transform=X.getSuggestiveRotation(ha,fa.x,fa.y);Q[T]?(q=Q[T],b&&K?q.animateWith(Fa,Ia,fa,b,Ba):q.attr(fa)):Q[T]=q=X.text(fa,h);T+=1;P&&(ya.transform=X.getSuggestiveRotation(ha,
ya.x,ya.y),Q[T]?(q=Q[T],b&&K?q.animateWith(Fa,Ia,ya,b,Ba):q.attr(ya)):Q[T]=q=X.text(ya,h),T+=1);p===B?F.lastLabel.graphic=q:p===t&&(F.firstLabel.graphic=q)}Ja()}if(Q[T])for(p=T;p<Q.length;p++)Q[p].attr({text:""});this.graphics.labels=Q}else if(Q[T])for(p=T;p<Q.length;p++)Q[p].attr({text:""})},_drawAxisName:function(){var a=this.config,d=a.canvas,c=this.chart,b=c.config,f=c.components,h=a.axisDimention||{},g=a.name.style,u=a.name.value,m=a.isVertical,w=a.isOpposit,q=c.linkedItems.smartLabel,p=d.canvasBottom||
b.canvasBottom,C=d.canvasLeft||b.canvasLeft,A=d.canvasRight||b.canvasRight,H=d.canvasTop||b.canvasTop,r=d.canvasHeight||b.canvasHeight,K=d.canvasWidth||b.canvasWidth,d=a.axisNameContainer,B=a.axisNamePadding,R=a.nameMaxH,D=a.nameMaxW,v=m?h.x:h.y,V=h.opposite,X=this.graphics.axisName||{},h=t(a.name.rotation,m?270:90),f=f.paper,S={fontFamily:g.fontFamily,fontSize:g.fontSize,lineHeight:g.lineHeight,fontWeight:g.fontWeight,fontStyle:g.fontStyle},W=a.animateAxis,z,Y,E,L;a.name.isDraw?(z=c.get("config",
"animationObj"),Y=z.animObj,E=z.dummyObj,c=z.transposeAnimDuration,L=z.animType,z={fontFamily:g.fontFamily,fill:g.color,"vertical-align":"center","font-size":g.fontSize,"line-height":g.lineHeight},q.useEllipsesOnOverflow(b.useEllipsesWhenOverflow),q.setStyle({fontSize:g.fontSize,fontFamily:g.fontFamily,lineHeight:g.lineHeight,fontWeight:g.fontWeight}),!a.drawLabelOnBothSide&&a.drawAxisNameOpposit&&(w=!w,v=V),m?(a.relativeAxis&&a.relativeAxis.config&&a.relativeAxis.config.axisNamePadding&&(B=O(a.relativeAxis.config.axisNamePadding,
B)),w&&b.canvasMarginRight&&(B=O(B,b.canvasMarginRight-b.marginLeft-D)),!w&&b.canvasMarginLeft&&(B=O(B,b.canvasMarginLeft-b.marginRight-D)),K=a.axisNameAlignCanvas||b.captionalignment&&"left"==b.captionalignment?r:O(r,a.oriCanvasHeight||0),h?(u=q.getSmartText(u,K,D),q=u.tooltext,K=u.width):(u=q.getSmartText(u,D,K),q=u.tooltext,K=u.height),b=a.drawAxisNameFromBottom?p-K/2:K>r?b.height/2:H+r/2,z.text=u.text,z.x=w?(v||A)+B+D/2:(v||C)-B-D/2,z.y=b):(u=q.getSmartText(u,K,R),q=u.tooltext,w&&b.canvasMarginTop&&
(B=O(B,b.canvasMarginTop-b.marginTop-R)),!w&&b.canvasMarginBottom&&(B=O(B,b.canvasMarginBottom-b.marginBottom-R)),z.text=u.text,z.x=C+K/2,z.y=w?(v||H)-B-R/2:(v||p)+B+R/2),z.transform=f.getSuggestiveRotation(m?h:0,z.x,z.y),this.graphics.axisName?(z.visibility=n,c&&W?X.animateWith(E,Y,z,c,L):X.attr(z),a.showTooltip&&q&&X.trackTooltip(!0),X.css(S)):(X=f.text(z,S,d).tooltip(q),a.showTooltip&&q&&X.trackTooltip(!0)),""!==u.text?X.attr({"text-bound":[g.backgroundColor,g.borderColor,g.borderThickness,g.borderPadding,
g.borderRadius,g.borderDash]}):X.attr({"text-bound":[]}),this.graphics.axisName=X):this.graphics.axisName&&this.graphics.axisName.attr({visibility:k})},_drawPlotLine:function(){var a=this.config,d=a.axisRange,c=d.tickInterval,b=a.isVertical,f=a.canvas,h=this.chart,g=this.chart.is3D,k=h.config,n=f.canvasBottom||k.canvasBottom,u=f.canvasLeft||k.canvasLeft,m=f.canvasRight||k.canvasRight,f=f.canvasTop||k.canvasTop,k=d.max,d=d.min,q=a.axisPlotLineContainer,p=a.axisPlotLineContainerTop,C=a.showCanvasBorder,
A=h.components.paper,H=this.graphics.line||[],r=0,K=P(a.divLineColor,a.divLineAlpha),B=a.divLineThickness,t=a.divLineIsDashed?D(a.divLineDashLen,a.divLineDashGap,B):"none",O=P(a.zeroPlaneColor,a.zeroPlaneAlpha),R=a.zeroPlaneThickness,v=a.animateAxis,X,S,z,Y,E,L,F,G,t={stroke:K,"stroke-width":B,"stroke-dasharray":t};2>W(this.getPixel(d)-this.getPixel(d+c))&&(a.lines.isDraw=0);if(a.lines.isDraw){r=h.get("config","animationObj");L=r.animObj;F=r.dummyObj;h=r.transposeAnimDuration;G=r.animType;S=this._getVisibleConfig();
r=d+c*w((S.minValue-3*c-d)/c);S=d+c*w((S.maxValue+3*c-d)/c);r=r<d?d:r;S=S>k?k:S;E=q;Y=z=r;for(r=0;z<=S;)0===a.showZeroPlane&&0===z||C&&(z===k||z===d)||(0===z&&z!==d&&z!==k&&(t.stroke=O,t["stroke-width"]=R,a.showZeroPlaneOnTop&&!g&&(E=p)),X=a.hasBreakPoints?this._getRealBreakValue(z):z,X=b?V(["M",u,this.getPixel(X),"L",m,this.getPixel(X)],B):V(["M",this.getPixel(X),f,"L",this.getPixel(X),n],B),t.path=X.path,t["shape-rendering"]=X.isCrisped?"crisp":void 0,H[r]?(X=H[r],E.appendChild(X),h&&v?X.animateWith(F,
L,t,h,G):X.attr(t)):(X=A.path(t,E),H[r]=X),0===z&&z!==d&&z!==k&&(t.stroke=K,t["stroke-width"]=B,E=q),r+=1),a.showZeroPlane&&0>z&&0<z+c?(z=0,Y+=c):z<Y?z=Y:(z+=c,Y+=c);if(H[r])for(z=r;z<H.length;z++)H[z].attr({path:[]});this.graphics.line=H}else if(H[r])for(z=r;z<H.length;z++)H[z].attr({path:[]})},_drawAxisLine:function(){var a=this.config,d=a.axisRange,c=a.isVertical,b=a.isOpposit,f=a.canvas,h=this.chart,g=h.config,k=a.breakPoints,n=f.canvasBottom||g.canvasBottom,u=f.canvasLeft||g.canvasLeft,m=f.canvasRight||
g.canvasRight,q=f.canvasTop||g.canvasTop,f=a.axisDimention||{},p=c?f.x:f.y,C=a.drawAxisLineWRTCanvas,A=h.jsonData.chart,f=h.components.paper,g=this.graphics.axisLine||[],H=!1,r=0,K=d.max,B=d.min,d=d.tickInterval,O=a.axisAxisLineContainerBottom,R={},D=a.animateAxis,v,X,S,R=1===t(A.showyaxisline,A.showyaxisline)?t(A.yaxislinethickness,A.pyaxislinethickness,1):0;if(a.showAxisLine){v=h.get("config","animationObj");A=v.animObj;S=v.dummyObj;h=v.transposeAnimDuration;v=v.animType;if(c)if(b?p=(C?m:p||m)+
a.axisLineThickness/2:(p=C?u:p||u,p-=a.axisLineThickness/2),a.hasBreakPoints){R=["M",p,n,"L"];n=0;for(C=k.length;n<C;n+=1)u=this.getPixel(k[n].start),R.push(p,u,"M",p,u-4,"L");R.push(p,q)}else X=V(["M",p,n,"L",p,q],a.axisLineThickness),R=X.path;else if(b?(p=C?q:p||q,p-=a.axisLineThickness/2):(p=C?n:p||n,p+=a.axisLineThickness/2),a.hasBreakPoints){R=["M",u-R,p,"L"];n=0;for(C=k.length;n<C;n+=1)u=this.getPixel(k[n].start),R.push(u,p,"M",u-4,p,"L");R.push(m,p)}else X=V(["M",u-R,p,"L",m,p],a.axisLineThickness),
R=X.path;g[r]?(k=g[r],h&&D?k.animateWith(S,A,{path:R,stroke:a.axisLineColor,"stroke-linecap":"butt","stroke-width":a.axisLineThickness,"shape-rendering":X.isCrisped?"crisp":void 0},h,v):k.attr({path:R,"stroke-linecap":"butt",stroke:a.axisLineColor,"stroke-width":a.axisLineThickness,"shape-rendering":X.isCrisped?"crisp":void 0})):(k=f.path({path:R,"stroke-linecap":"butt",stroke:a.axisLineColor,"stroke-width":a.axisLineThickness},O),g[r]=k);r+=1;if(a.drawTick&&a.tickLength)for(R={stroke:a.tickColor,
"stroke-width":a.tickWidth},b=c?b?p+a.tickLength:p-a.tickLength:b?p-a.tickLength:p+a.tickLength,X=this._getVisibleConfig(),r=B+d*w((X.minValue-3*d-B)/d),X=B+d*w((X.maxValue+3*d-B)/d),X=X>K?K:X,n=r<B?B:r,r=1;n<=X;n+=d)B=a.hasBreakPoints?this._getRealBreakValue(n):n,B=this.getPixel(B),R.path=c?"M"+p+" "+B+"L"+b+" "+B:"M"+B+" "+p+"L"+B+" "+b,g[r]?(B=g[r],h&&D?B.animateWith(S,A,R,h,v):B.attr(R)):(B=f.path(R,O),g[r]=B),!H&&n<K&&n+d>K&&(n=K-d,H=!0),r+=1}if(g[r])for(n=r;n<g.length;n++)g[n].attr({path:[]});
this.graphics.axisLine=g},_drawBreakPoints:function(){var a=this.config,d=a.isVertical,c=this.chart,b=c.config,f=a.breakPoints,b=a.canvas.canvasLeft||b.canvasLeft,h=c.components.paper,g=this.graphics.brokeLine||[],k=c.graphics,n=a.animateAxis,u,m,w,q,p,C,A,r;if(a.showAxisLine)for(u=c.get("config","animationObj"),C=u.animObj,A=u.dummyObj,c=u.transposeAnimDuration,r=u.animType,u=0,q=f.length;u<q;u+=1)d?(m=b-a.axisLineThickness/2,w=this.getPixel(f[u].start),w=["M",m-4,w+4/3,"L",m+4,w-4/3,"M",m-4,w-8/
3,"L",m+4,w-16/3]):w=["M",0,0],g[u]?(m=g[u],c&&n?m.animateWith(A,C,{path:w,stroke:a.axisLineColor,"stroke-width":a.axisLineThickness},c,r):m.attr({path:w,stroke:a.axisLineColor,"stroke-width":a.axisLineThickness})):(m=h.path({path:w,stroke:a.axisLineColor,"stroke-width":a.axisLineThickness},k.axisLineGroup),g[u]=m),p+=1;if(g[p])for(u=p;u<g.length;u++)g[u].attr({path:[]});this.graphics.brokeLine=g},_drawPlotBand:function(){var a=this.config,d=a.axisRange,c=a.canvas,b=this.chart,f=b.config,h=c.canvasLeft||
f.canvasLeft,g=c.canvasTop||f.canvasTop,k=c.canvasHeight||f.canvasHeight,c=c.canvasWidth||f.canvasWidth,f=d.tickInterval,n=a.isVertical,m=a.isReverse,q=d.max,p=d.min,d=a.axisBandContainer,C=b.components.paper,A=this.graphics.band||[],H=0,K=a.showAlternateGridColor,B=a.alternateGridColor,t=a.alternateGridAlpha,O=a.animateAxis,R,D,v,X,V;2>W(this.getPixel(p)-this.getPixel(p+f))&&(a.band.isDraw=0);if(K&&a.band.isDraw){H=b.get("config","animationObj");K=H.animObj;X=H.dummyObj;b=H.transposeAnimDuration;
V=H.animType;R=this._getVisibleConfig();H=p+f*w((R.minValue-3*f-p)/f);R=p+f*w((R.maxValue+3*f-p)/f);H=H<p?p:H;R=R>q?q:R;q=u((H-p)/f)+1;B={fill:r(P(B,t)),"stroke-width":0};p=this.getPVR();D=t=H;for(H=0;t<R;q+=1)0===q%2&&(v=a.showZeroPlane&&0>t&&0<t+f?t:t!==D?D-t:f,n?(B.x=h,B.y=this.getPixel(m?t:t+W(v)),B.width=c,B.height=W(v*p)):(B.x=this.getPixel(t),B.y=g,B.width=W(v*p),B.height=k),A[H]?(v=A[H],b&&O?v.animateWith(X,K,B,b,V):v.attr(B)):(v=C.rect(B,d),A[H]=v),H+=1),a.showZeroPlane&&0>t&&0<t+f?(t=0,
D+=f):t<D?t=D:(t+=f,D+=f);if(A[H])for(t=H;t<A.length;t++)A[t].attr({x:0,y:0,width:0,height:0,fill:null,"stroke-width":0});this.graphics.band=A}else if(A[H])for(t=H;t<A.length;t++)A[t].attr({x:0,y:0,width:0,height:0,fill:null,"stroke-width":0})},_drawTrendLine:function(){var a=this.config,d=a.canvas,c=this.chart,b=c.config,h=c.components,g=a.isOpposit,k=a.isVertical,n=c.is3D,u=a.axisIndex,w=h.numberFormatter,p=d.canvasBottom||b.canvasBottom,C=d.canvasLeft||b.canvasLeft,A=d.canvasRight||b.canvasRight,
H=d.canvasTop||b.canvasTop,r=d.canvasHeight||b.canvasHeight,d=d.canvasWidth||b.canvasWidth,K=a.axisRange,b=K.max,K=K.min,B,R,v=a.trend.trendStyle,W=a.labelPadding,z=a.axisTrendContainerTop,E=a.axisTrendContainerBottom,G=a.axisTrendLabelContainer,h=h.paper,Q=this.components.trendObj||[],ua={fontFamily:v.fontFamily,fontSize:v.fontSize,lineHeight:v.lineHeight,fontWeight:v.fontWeight,fontStyle:v.fontStyle},Ca=a.vTrendLines,da=a.trendLines,qa=!0,ba=a.drawTrendLabels,na=a.axisDimention||{},pa=a.animateAxis,
N,ea,za,ha,sa,fa,ya=0,Ia,Fa,Ba,Ja,Ha,Da,Ma,Na,Oa,Sa,Ua;Ha=this._getVisibleConfig();a.hasBreakPoints&&(Ha.minValue=this._getRealBreakValue(Ha.minValue),Ha.maxValue=this._getRealBreakValue(Ha.maxValue));(qa=this._isZoomed())?(B=O(this.getPixel(Ha.minValue),this.getPixel(Ha.maxValue)),R=X(this.getPixel(Ha.minValue),this.getPixel(Ha.maxValue))):(Ha.minValue=K,Ha.maxValue=b);Ca?Oa=g?(na.opposite||p)-(a.trendBottomPadding||0):(na.y||p)+(a.trendBottomPadding||0):(Oa=g?(na.opposite||C)+(W||0):(na.x||C)-(W||
0),Sa=g?(na.x||A)+(W||0):(na.opposite||A)+(W||0));if(g=da||Ca){N=c.get("config","animationObj");W=N.animObj;na=N.dummyObj;c=N.transposeAnimDuration;Ua=N.animType;za=0;for(ha=g.length;za<ha;za+=1)for(N=0,ea=g[za].line&&g[za].line.length;N<ea;N+=1)Da=g[za].line[N],Ia=k?"yAxis":"xAxis",Fa=w.getCleanValue(F(Da.startvalue,Da.value,0)),fa=Number(Da.endvalue)||void 0,sa=m(T(F(Da.tooltext,g[0].tooltext,a.trendlineToolText))),sa=q(sa,[7,15,16,17,18,19],{startValue:Fa,startDataValue:w[Ia](Fa,u),endValue:fa||
Fa,endDataValue:w[Ia](fa||Fa,u),axisName:a.axisName},Da),Fa>b||Fa<K||fa>b||fa<K||!(Ca&&Fa>=Ha.minValue&&Fa<=Ha.maxValue||fa&&fa>=Ha.minValue&&fa<=Ha.maxValue||fa&&Fa<=Ha.minValue&&fa>=Ha.maxValue||da&&Fa>Ha.minValue&&Fa<=Ha.maxValue||fa&&fa>=Ha.minValue&&fa<=Ha.maxValue||fa&&Fa>=Ha.minValue&&fa<=Ha.maxValue)||(Ca?(Ja=T(Da.displayvalue||""),Ma=this.getPixel(a.hasBreakPoints?this._getRelativeBreakValue(Fa):Fa),Ba=t(Da.istrendzone,a.isTrendZone,1),Na=fa?this.getPixel(a.hasBreakPoints?this._getRelativeBreakValue(fa):
fa):0,void 0!==fa&&""!==fa&&fa!==Fa&&Ba?(Ba={fill:P(F(Da.color,a.trendlineColor),F(Da.alpha,a.trendlineAlpha,40)),"stroke-width":0,path:["M",Ma,H,"L",Ma,p,"L",Na,p,"L",Na,H,"Z"]},Ja={fill:P(F(Da.color,v.color),F(Da.alpha,a.trendlineAlpha,99)),"vertical-align":S,text:Ja,x:Ma+(Na-Ma)/2,y:Oa}):(Ba=t(Da.thickness,a.trendlineThickness,1),Ba=Ba>d?1:Ba,Fa=fa?V(["M",Ma,H,"L",Na,p],Ba):V(["M",Ma,H,"L",Ma,p],Ba),Ba={stroke:P(F(Da.color,a.trendlineColor),F(Da.alpha,a.trendlineAlpha,99)),"stroke-width":Ba,"stroke-dasharray":F(Da.dashed,
a.trendlinesAreDashed)===L?D(t(Da.dashlen,a.trendlinesDashLen),t(Da.dashgap,a.trendlinesDashGap),Ba):"none","shape-rendering":Fa.isCrisped?"crisp":void 0,path:Fa.path},Ja={fill:P(F(Da.color,v.color),F(Da.alpha,a.trendlineAlpha,99)),"vertical-align":S,text:Ja,x:fa?Na:Ma,y:Oa}),qa&&(!ba||Ja.x>B||Ja.x<R)&&(Ja.text="")):da&&(Ja=T(Da.displayvalue||""),Ia=t(Da.valueonright,0),Ba=t(Da.istrendzone,a.isTrendZone,0),Ma=this.getPixel(Fa),Na=fa?this.getPixel(fa):0,void 0!==fa&&""!==fa&&fa!==Fa&&Ba?(Ba={fill:P(F(Da.color,
a.trendlineColor),F(Da.alpha,a.trendlineAlpha,40)),"stroke-width":0,path:["M",C,Ma,"L",A,Ma,"L",A,Na,"L",C,Na,"Z"]},Ja={"text-anchor":Ia?f:Y,fill:P(F(Da.color,v.color),F(Da.alpha,a.trendlineAlpha,99)),text:Ja,x:Ia?Sa:Oa,y:Ma+(Na-Ma)/2}):(Ba=t(Da.thickness,a.trendlineThickness,1),Ba=Ba>r?1:Ba,Fa=fa?V(["M",C,Ma,"L",A,Na],Ba):V(["M",C,Ma,"L",A,Ma],Ba),Ba={stroke:P(F(Da.color,a.trendlineColor),F(Da.alpha,a.trendlineAlpha,99)),"stroke-width":Ba,"stroke-dasharray":F(Da.dashed,a.trendlinesAreDashed)===L?
D(t(Da.dashlen,a.trendlinesDashLen),t(Da.dashgap,a.trendlinesDashGap),Ba):"none","shape-rendering":Fa.isCrisped?"crisp":void 0,path:Fa.path},Ja={"text-anchor":Ia?f:Y,fill:P(F(Da.color,v.color),F(Da.alpha,a.trendlineAlpha,99)),text:Ja,x:Ia?Sa:Oa,y:fa?Ia?Na:Ma:Ma}),qa&&(!ba||Ja.y>B||Ja.y<R)&&(Ja.text="")),fa=t(Da.showontop),fa=n||1!==fa&&1!==a.showTrendlinesOnTop?E:z,Q[ya]?(Ia=Q[ya].graphics.drawing,Fa=Q[ya].graphics.label,fa.appendChild(Ia),Q[ya].graphics.config.text=Ja.text,c&&pa?(Ia.animateWith(na,
W,Ba,c,Ua),Fa.animateWith(na,W,Ja,c,Ua)):(Ia.attr(Ba),Fa.attr(Ja)),Fa.css(ua),Fa.tooltip(Da.valueToolText)):(Ia=h.path(Ba,fa),Fa=h.text(Ja,ua,G),Fa.tooltip(Da.valueToolText),Q[ya]={},Q[ya].graphics={},Q[ya].graphics.drawing=Ia,Q[ya].graphics.label=Fa,Q[ya].graphics.config={text:Ja.text}),a.showTooltip&&Da.valueToolText?Fa.trackTooltip(!0):Fa.trackTooltip(!1),a.showTooltip&&sa?Ia.tooltip(sa).trackTooltip(!0):Ia.trackTooltip(!1),ya+=1);if(Q[ya])for(N=ya;N<Q.length;N++)Q[N].graphics.drawing.attr({path:["M",
0,0]}),Q[N].graphics.label.attr({text:"","text-bound":[]});this.components.trendObj=Q;for(N=0;N<ya;N++)Q[N].graphics.label.attr({"text-bound":Q[N].graphics.config.text?[v.backgroundColor,v.borderColor,v.borderThickness,v.borderPadding,v.borderRadius,v.borderDash]:[]})}if(Q[ya])for(N=ya;N<Q.length;N++)Q[N].graphics.drawing.attr({path:["M",0,0]}),Q[N].graphics.label.attr({text:"","text-bound":[]})},_drawCategory:function(){var b,d,c,h,k,n,u=this.config,m=u.axisDimention||{},w=u.canvas,q=this.chart,
p=q.config,A=u.isOpposit,r=u.labels,K=r.style,O=u.isVertical,v=w.canvasBottom||p.canvasBottom,X=w.canvasLeft||p.canvasLeft,V=w.canvasRight||p.canvasRight,w=w.canvasTop||p.canvasTop,z=u.axisContainer,p=u.labelPadding,E=q.components.paper,L=O?m.x:m.y,m=m.opposite,G=u.drawLabelOnBothSide,Q=this.components.categoryLabel||(this.components.categoryLabel=[]),T=q.jsonData.categories,ua,Ca,da,qa=function(a){return function(c){B.call(this,q,c,a)}},ba=0,na=0,pa=u.animateAxis,N,ea,za,ha,sa,fa,ya,Ia,Fa,Ba,Ja,
Ha,Da,Ma;ha=(za=u.isCategoryAnimate&&u.animateCategories?u.animateCategories:u.categories.category)?za.length-1:0;this._drawCategoryLine(za,0,ha);if(u.labels.isDraw){N=q.get("config","animationObj");Da=N.animObj;Ma=N.dummyObj;ea=N.transposeAnimDuration;N=N.animType;O&&(ba=W(this.getPixel(0)-this.getPixel(1)),u.labelMaxH>ba&&(na=H(u.labelMaxH/ba)),na>u.labels.step&&(u.labels.step=na));Ja=0<u.labels.step?u.labels.step:1;na=this.getPVR();Ha=this._isZoomed();fa=this._getVisibleConfig();ya=u.labels.rotation;
!u.drawLabelOnBothSide&&u.drawLabelsOpposit&&(A=!A,L=m);T&&T[0]&&"auto"!==u.xAxisLabelMode&&(ua=T[0].font,Ca=T[0].fontsize,da=T[0].fontcolor);ua={fontFamily:F(ua,K.fontFamily),fontSize:F(Ca,K.fontSize),fontWeight:F(K.fontWeight),fontStyle:F(K.fontStyle)};ua.lineHeight=a(ua);z.css(ua);T=this._manageReuseableElement(this.components.categoryLabel,"text",z);for(ba=Ca=0;Ca<=ha;Ca+=Ja)if(z=za[Ca])if(d=t(z.x,z.y,Ca),!(0===t(z.showlabel,u.showLabels,1)||Ha&&(d<fa.minValue||d>fa.maxValue))&&("auto"!==u.xAxisLabelMode&&
"mixed"!==u.xAxisLabelMode||0!==u.showZeroPlane&&0!==u.showZeroPlaneValue||0!==d)&&(u.labels.drawNormalVal||u.labels.drawLimitVal&&(0===Ca||Ca===ha))&&(u.labels.drawNormalVal||0===Ca||Ca===ha)&&(u.labels.drawLimitVal||0!==Ca&&Ca!==ha)){h=F(z.font,z.labelfont);k=F(z.fontsize,z.labelfontsize);n=F(z.fontbold,z.labelfontbold)?t(z.fontbold,z.labelfontbold,0)?"bold":"normal":void 0;Fa=F(z.fontitalic,z.labelfontitalic)?t(z.fontitalic,z.labelfontitalic,0)?"italic":"normal":void 0;c=P(F(z.fontcolor,z.labelfontcolor,
da,K.color),t(z.labelalpha,u.rawAttr.labelFontAlpha,q.singleseries?void 0:z.alpha,100));h||k||n||Fa?(b={},h&&(b.fontFamily=h),k&&(b.fontSize=k),n&&(b.fontWeight=n),Fa&&(b.fontStyle=Fa),b.lineHeight=k?a(b):ua.lineHeight):b=void 0;if(b||ua)h=(b||ua).lineHeight,-1!==h.indexOf("px")&&(Ia=h.replace(/px/i,""),Ia=parseFloat(Ia));Fa=this.getPixel(d);O?(k=z.label||"",n=Number(z.labelPadding)||0,h={fill:c,"line-height":Ia,opacity:1,"text-anchor":A?f:Y,text:k,cursor:z.link||z.labellink||K.labelLink?"pointer":
"",x:A?(L||V)+p:(L||X)-p,y:n?Fa+n:Fa},G&&(Ba={fill:c,"line-height":Ia,opacity:1,"text-anchor":A?Y:f,text:k,cursor:z.link||z.labellink||K.labelLink?"pointer":"",x:A?(m||X)-p:(m||V)+p,y:n?Fa+n:Fa})):(k=z.label||"",n=Number(z.labelPadding)||0,h={fill:c,"line-height":Ia,opacity:1,text:k,cursor:z.link||z.labellink||K.labelLink?"pointer":"",x:Fa,y:A?(L||w)-p:(L||v)+p},G&&(Ba={fill:c,"line-height":Ia,opacity:1,text:k,cursor:z.link||z.labellink||K.labelLink?"pointer":"",y:A?(m||v)+p:(m||w)-p}),ya?(h["text-anchor"]=
A?f:Y,h["vertical-align"]="center",G&&(Ba["text-anchor"]=A?Y:f,Ba["vertical-align"]="center")):(h["text-anchor"]=g,h["vertical-align"]=A?C:S,G&&(Ba["vertical-align"]=A?S:C,Ba["text-anchor"]=g)),n&&(h.y=A?h.y-n:h.y+n,G&&(Ba.y=A?Ba.y+n:Ba.y-n)));r.shiftX&&(h.x+=r.shiftX,G&&(Ba.x+=r.shiftX));r.shiftY&&(h.y+=r.shiftY,G&&(Ba.y+=r.shiftY));h.transform=E.getSuggestiveRotation(ya,h.x,h.y);G&&(Ba.transform=E.getSuggestiveRotation(ya,Ba.x,Ba.y));Q[ba]||(Q[ba]={},Q[ba].graphics={},Q[ba].config={});c=Q[ba].graphics.label=
T.getElement("p"+d,h);c._applyAllAttr&&c.attr(h);b&&c._firstTimeDraw?(c.css(b),c._appliedCss=!0):c._applyAllAttr&&!c._firstTimeDraw&&b?(c.css({fontFamily:b&&b.fontFamily?b.fontFamily:ua.fontFamily,fontSize:b&&b.fontSize?b.fontSize:ua.fontSize,fontWeight:b&&b.fontWeight?b.fontWeight:ua.fontWeight,fontStyle:b&&b.fontStyle?b.fontStyle:ua.fontStyle}),c._appliedCss=!0):c._appliedCss&&!b&&(c.removeCSS(),delete c._appliedCss);c._firstTimeDraw||(c._applyAllAttr?(k=h,k.visibility=R):k={x:h.x,y:h.y,"text-anchor":h["text-anchor"],
"vertical-align":h["vertical-align"],text:k,transform:h.transform,visibility:R},ea&&pa&&!z.animate?c.animateWith(Ma,Da,k,ea,N):c.attr(k));u.showTooltip&&z.labelTooltext?(c.tooltip(z.labelTooltext),c.trackTooltip(!0)):c.trackTooltip(!1);G&&(sa=Q[ba].graphics.secondLabel=T.getElement("s"+d,Ba),sa.css(b),sa._firstTimeDraw||(sa._applyAllAttr?(k=Ba,k.visibility=R):k={x:Ba.x,y:Ba.y,transform:h.transform,visibility:R},ea&&pa&&!z.animate?sa.animateWith(Ma,Da,k,ea,N):sa.attr(k)),u.showTooltip&&z.labelTooltext?
(sa.tooltip(z.labelTooltext),sa.trackTooltip(!0)):sa.trackTooltip(!1));c._firstTimeDraw&&c.click(qa("dataLabelClick")).hover(qa("dataLabelRollOver"),qa("dataLabelRollOut"));c.data("eventArgs",{link:z.link||z.labellink||K.labelLink,text:h.text,index:ba});G&&(sa._firstTimeDraw&&sa.click(qa("dataLabelClick")).hover(qa("dataLabelRollOver"),qa("dataLabelRollOut")),Q[ba].graphics.secondLabel.data("eventArgs",{link:z.link||z.labellink||K.labelLink,text:h.text,index:ba}));z.animate&&!O&&(b={x:h.x-z.leftShift*
na},z["delete"]&&(b.opacity=0),b.transform=E.getSuggestiveRotation(ya,b.x,h.y),Q[ba].graphics.label.animateWith(Ma,Da,b,ea,N),G&&(b={x:Ba.x-z.leftShift*na},z["delete"]&&(b.opacity=0),b.transform=E.getSuggestiveRotation(ya,b.x,Ba.y),Q[ba].graphics.secondLabel.animateWith(Ma,Da,b,ea,N)));if(c._applyAllAttr||c._firstTimeDraw)t(z.borderthickness,z.labelborderthickness)&&t(z.borderthickness,z.labelborderthickness,1),b=z.bordercolor||z.labelbordercolor?P(z.bordercolor||z.labelbordercolor,t(z.borderalpha,
z.labelborderalpha,z.alpha,z.labelalpha,100)):"",d=t(z.borderthickness,z.labelborderthickness),c=t(z.borderpadding,z.labelborderpadding),h=t(z.borderradius,z.labelborderradius),k=z.bgcolor||z.labelbgcolor?P(z.bgcolor||z.labelbgcolor,t(z.bgalpha,z.labelbgalpha,z.alpha,z.labelalpha,u.rawAttr.labelFontAlpha,100)):"",n=t(z.borderdashed,z.labelborderdashed,0)?D(t(z.borderdashlen,z.labelborderdashlen,4),t(z.borderdashgap,z.labelborderdashgap,2),t(z.borderthickness,z.labelborderthickness,1)):0===t(z.borderdashed,
z.labelborderdashed)?"none":K.borderDash,z.label?(Q[ba].graphics.label.attr({"text-bound":[F(k,K.backgroundColor),F(b,K.borderColor),F(d,K.borderThickness),F(c,K.borderPadding),F(h,K.borderRadius),F(n,K.borderDash)]}),G&&Q[ba].graphics.secondLabel.attr({"text-bound":[F(k,K.backgroundColor),F(b,K.borderColor),F(d,K.borderThickness),F(c,K.borderPadding),F(h,K.borderRadius),F(n,K.borderDash)]})):(Q[ba].graphics.label.attr({"text-bound":[]}),G&&Q[Ca].graphics.secondLabel.attr({"text-bound":[]}));ba+=
1}this.components.categoryLabel=Q;T.freeUnusedElement()}else if(Q[ba])for(Ca=ba;Ca<Q.length;Ca++)Q[Ca].graphics.label.attr({text:"","text-bound":[]})},_drawCategoryLine:function(a,d,c){var b=this.config,f=b.canvas,h=this.chart,g=h.config,k=h.components,n=b.isVertical,u=f.canvasBottom||g.canvasBottom,m=f.canvasLeft||g.canvasLeft,w=f.canvasRight||g.canvasRight,f=f.canvasTop||g.canvasTop,g=b.axisPlotLineContainer,q=b.showCanvasBorder,p=b.xAxisLabelMode,C=k.paper,k=k.colorManager,A=this.components.categoryLabelLine||
[],H=h.jsonData.categories,r,K,B,O,R,v,X=0,z=b.animateAxis,S,W,Y,E,L,G,Q,T;a||(a=b.isCategoryAnimate&&b.animateCategories?b.animateCategories:b.categories.category);d=d||0;c=c||a?a.length-1:0;if(b.drawPlotlines){X=h.get("config","animationObj");G=X.animObj;Q=X.dummyObj;h=X.transposeAnimDuration;T=X.animType;this.getPVR();L=this._isZoomed();W=this._getVisibleConfig();H&&H[0]&&(r=H[0].verticallinecolor,K=H[0].verticallinealpha,B=H[0].verticallinethickness,O=H[0].verticallinedashed,R=H[0].verticallinedashlen,
v=H[0].verticallinedashgap);H=d;for(X=0;H<=c;H+=1)(S=a[H])&&(!q||"auto"!==p&&"mixed"!==p||H!==c&&H!==d)&&(E=t(S.x,S.y,H),1!==Number(S.showverticalline)||L&&(E<W.minValue||E>W.maxValue)||(Y=this.getPixel(E),E={stroke:P(F(S.linecolor,r,b.divLineColor,k.getColor("divLineColor")),F(S.linealpha,K,k.getColor("divLineAlpha"))),"stroke-width":t(S.linethickness,B,1)},E["stroke-dasharray"]=t(S.linedashed,O,0)?D(t(S.linedashLen,R,4),t(S.linedashgap,v,2),E["stroke-width"]):"none",Y=n?V(["M",m,Y,"L",w,Y],E["stroke-width"]):
V(["M",Y,f,"L",Y,u],E["stroke-width"]),E.path=Y.path,E["shape-rendering"]=Y.isCrisped?"crisp":void 0,A[X]?(Y=A[X].graphics.line,Y.attr(E),h&&z&&!S.animate?Y.animateWith(Q,G,E,h,T):Y.attr(E)):(Y=C.path(E,g),A[X]={},A[X].graphics={},A[X].config={},A[X].graphics.line=Y),X+=1));this.components.categoryLabelLine=A}if(A[X])for(H=X;H<A.length;H++)A[H].graphics.line.attr({path:["M",0,0]})},_drawCategoryVline:function(){var a=this.config,d=a.axisRange,c=d.min,d=d.max,b=a.canvas,h=this.chart,k=h.config,n=k.style||
{},u=h.components.paper,m=b.canvasBottom||k.canvasBottom,w=b.canvasLeft||k.canvasLeft,q=b.canvasRight||k.canvasRight,p=b.canvasTop||k.canvasTop,A=b.canvasHeight||k.canvasHeight,b=b.canvasWidth||k.canvasWidth,H=a.categories.category,r=a.isVertical,K=h.linkedItems.smartLabel,B=a.axisPlotLineContainerTop,O=a.axisPlotLineContainer,R=a.vlineLabelContainer,v=a.isRelativeAxisInverse,X={fontFamily:k.style.inCanfontFamily,fontSize:k.style.inCanfontSize,color:k.style.inCancolor,lineHeight:k.style.inCanLineHeight},
z=this.components.categoryVline||[],E=this.components.categoryVlineLabel||[],L=0,Q=0,N=a.animateAxis,da,qa,ba,na,pa,La,ea,za,ha,sa,fa,ya,Ia,Fa,Ba,Ja,Ha,Da,Ma,Na,Oa,Sa,Ua,Pa,ab,Xa,$a,Ta,bb,Qa,Wa,Za;qa=a.isCategoryVlineAnimate&&a.animateCategoriesVline?a.animateCategoriesVline:a.categories.vline;da=h.get("config","animationObj");Ta=da.animObj;bb=da.dummyObj;h=da.transposeAnimDuration;da=da.animType;na=qa.length;ba=this.getPVR();Qa=this._isZoomed();Wa=this._getVisibleConfig();for(ea=0;ea<na;ea++)pa=
qa[ea],La=T(pa.label),za=!!t(pa.showlabelborder,a.showVLineLabelBorder,1),ha=!!t(pa.showlabelbackground,1),sa=F(pa.labelhalign,r?f:g),"center"==sa?sa=g:"left"==sa?sa=f:"right"==sa&&(sa=Y),fa=F(pa.labelvalign,r?g:C).toLowerCase(),fa==g?fa="center":fa==S?fa=C:fa==C&&(fa=S),ya=t(pa.labelposition,0),Ia=t(pa.lineposition,.5),Fa=t(pa.showvlines,a.showVLines,1),Ba=t(pa.alpha,a.vLineAlpha,80),Ja=F(pa.color,a.vLineColor).replace(/^#?/,"#"),ha=ha?F(pa.labelbgcolor,a.vLineLabelBgColor,"333333").replace(/^#?/,
"#"):G,Sa=F(pa.labelcolor,a.vLineLabelColor,pa.color,n.inCancolor,a.vLineColor).replace(/^#?/,"#"),Ha=t(pa.thickness,a.vLineThickness,1),Da=!!Number(F(pa.dashed,0)),Ma=t(pa.dashlen,5),Oa=t(pa.dashgap,2),Na=X.fontSize,parseInt(Na.replace(/px/i,""),10),Na=t(pa.rotatelabel,a.rotateVLineLabels)?270:0,Ia=0>Ia||1<Ia?.5:Ia,ya=0>ya||1<ya?0:ya,K.useEllipsesOnOverflow(k.useEllipsesWhenOverflow),K.setStyle(X),K.getOriSize(La),Ja=P(Ja,Fa?Ba:"0"),Ba=1===Number(pa.showontop)||1===a.showVLinesOnTop?B:O,Xa=!1,Za=
pa.animate&&!r?pa.startIndex+1:pa.startIndex,Ua=H[Za],Pa=H[Za+1],Ua?Pa||(ab=H[0]&&H[0].x?d:a.oriCatLen,Xa=!0):(ab=H[0]&&H[0].x?c:-1,Xa=!0),Xa||(ab=t(Ua.x,Ua.y,Za),Ia*=ab-t(Pa.x,Pa.y,Za+1)),Ia=ab+W(Ia),Qa&&(Ia<Wa.minValue||Ia>Wa.maxValue)||!pa.animate&&(Ia<c||Ia>d)||pa.animate&&(Ia<c||Ia>d+$a)||(Ia=this.getPixel(Ia),Ma={opacity:1,stroke:Ja,"stroke-width":Ha,"stroke-dasharray":Da?D(Ma,Oa,Ha):"none"},Da={opacity:1,text:La,"text-anchor":sa,"vertical-align":fa,"text-bound":[]},Sa={fill:Fa?Sa:Ja,fontSize:X.fontSize,
fontFamily:X.fontFamily,lineHeight:X.lineHeight,backgroundColor:ha},r?(Oa=V(["M",w,Ia,"L",q,Ia],Ha),Ma.path=Oa.path,Da.x=w+b*(v?1-ya:ya),Da.y=Ia):(Oa=V(["M",Ia,p,"L",Ia,m],Ha),Ma.path=Oa.path,Da.x=Ia,Da.y=p+A*(v?1-ya:ya)),Ma["shape-rendering"]=Oa.isCrisped?"crisp":void 0,sa==f?Da.x+=2:sa==Y&&(Da.x-=2),fa==S?Da.Y+=2:fa==C&&(Da.Y-=2),z[L]?(sa=z[L].graphics.drawing,Ba.appendChild(sa),h&&N&&!pa.animate?sa.animateWith(bb,Ta,Ma,h):sa.attr(Ma)):(sa=u.path(Ma,Ba),z[L]={},z[L].graphics={},z[L].config={},z[L].graphics.drawing=
sa),La&&(Da.transform=u.getSuggestiveRotation(Na,Da.x,Da.y),E[Q]?(sa=E[Q].graphics.label,sa.css(Sa),h&&N&&!pa.animate?sa.animateWith(bb,Ta,Da,h,da):sa.attr(Da)):(sa=u.text(Da,Sa,R).css(Sa),E[Q]={},E[Q].graphics={},E[Q].config={},E[Q].graphics.label=sa)),pa.animate&&!r&&($a=pa.leftShift*ba,sa={x:Da.x-$a},Oa=V(["M",Ia-$a,p,"L",Ia-$a,m],Ha),Ha={path:Oa.path,"shape-rendering":Oa.isCrisped?"crisp":void 0},pa["delete"]&&(sa.opacity=0,sa["text-bound"]=[],Ha.opacity=0),La&&E[Q].graphics.label.animateWith(bb,
Ta,sa,h,da),z[L].graphics.drawing.animateWith(bb,Ta,Ha,h,da)),La&&(E[Q].graphics.label.attr({"text-bound":[ha,Fa&&za?Ja:G,Fa&&za?1:0,2,void 0,Fa&&za?"solid":G]}),Q++),L++);if(z[L])for(ea=L;ea<z.length;ea++)z[ea].graphics.drawing.attr({path:["M",0,0]});if(E[Q])for(ea=Q;ea<E.length;ea++)E[ea].graphics.label.attr({text:"","text-bound":[]});this.components.categoryVline=z;this.components.categoryVlineLabel=E},_drawCategoryPlotLine:function(){var a=this.config,d=a.isVertical,c=a.axisRange,b=c.max,f=c.min,
h=a.canvas,g=this.chart,k=g.config,n=a.categories.category,u=n.length,c=h.canvasBottom||k.canvasBottom,m=h.canvasLeft||k.canvasLeft,q=h.canvasRight||k.canvasRight,h=h.canvasTop||k.canvasTop,k=a.axisPlotLineContainer,p=g.components.paper,C=this.graphics.line||[],A=0,H=P(a.divLineColor,a.divLineAlpha),r=a.divLineThickness,K=a.divLineIsDashed?D(a.divLineDashLen,a.divLineDashGap,r):"none",B=a.animateAxis,t,O,H={stroke:H,"stroke-width":r,"stroke-dasharray":K};if(n[0]&&(void 0!==n[0].x||void 0!==n[0].y)){if(C[A]&&
"categories"===a.xAxisLabelMode)for(b=A;b<C.length;b++)C[b].attr({path:[]})}else if(a.lines.isDraw&&a.categoryNumDivLines){A=g.get("config","animationObj");n=A.animObj;K=A.dummyObj;g=A.transposeAnimDuration;O=A.animType;a.categoryDivLinesFromZero&&(f=0,b=u-1);u=W(b-f)/(a.categoryNumDivLines+1);u=0===u?1:u;t=this._getVisibleConfig();A=f+u*w((t.minValue-3*u-f)/u);t=f+u*w((t.maxValue+3*u-f)/u);A=(A<f?f:A)+u;t=(t>b?b:t)-u;b=A;for(A=0;b<=t;b+=u)f=a.hasBreakPoints?this._getRealBreakValue(b):b,f=d?V(["M",
m,this.getPixel(f),"L",q,this.getPixel(f)],r):V(["M",this.getPixel(f),h,"L",this.getPixel(f),c],r),H.path=f.path,H["shape-rendering"]=f.isCrisped?"crisp":void 0,C[A]?(f=C[A],g&&B?f.animateWith(K,n,H,g,O):f.attr(H)):(f=p.path(H,k),C[A]=f),A+=1;if(C[A])for(b=A;b<C.length;b++)C[b].attr({path:[]});this.graphics.line=C}else if(C[A])for(b=A;b<C.length;b++)C[b].attr({path:[]})},_drawCategoryPlotBand:function(){var a=this.config,d=a.axisRange,c=d.max,b=d.min,f=a.canvas,h=this.chart,g=h.config,k=a.categories.category,
n=k.length,d=f.canvasLeft||g.canvasLeft,m=f.canvasRight||g.canvasRight,q=f.canvasTop||g.canvasTop,p=f.canvasHeight||g.canvasHeight,f=f.canvasWidth||g.canvasWidth,g=a.isVertical,C=a.axisBandContainer,A=h.components.paper,H=this.graphics.band||[],K=0,B=a.showAlternateGridColor,t=a.alternateGridColor,O=a.alternateGridAlpha,R=a.categoryDivLinesFromZero,D=a.animateAxis,v,X,z;if(k[0]&&(void 0!==k[0].x||void 0!==k[0].y)){if(H[K])for(O=K;O<H.length;O++)H[O].attr({x:0,y:0,width:0,height:0,fill:null,"stroke-width":0})}else if(B&&
a.band.isDraw&&a.categoryNumDivLines){K=h.get("config","animationObj");k=K.animObj;B=K.dummyObj;h=K.transposeAnimDuration;z=K.animType;R&&(b=0,c=n-1);a=W(c-b)/(a.categoryNumDivLines+1);a=0===a?1:a;K=this._getVisibleConfig();n=b+a*w((K.minValue-3*a-b)/a);R=b+a*w((K.maxValue+3*a-b)/a);n=n<b?b:n;R=R>c?c:R;b=u((n-b)/a);n+=a;t={fill:r(P(t,O)),"stroke-width":0};X=this.getPVR();O=n;for(K=0;O-a<R;b+=1,O+=a)0===b%2&&(v=O===n?a+W(this.getValue(0))+1:O===R?a+W(this.getValue(m-d)-c):a,g?(t.x=d,t.y=O===R?this.getPixel(O-
W(a)):this.getPixel(O-W(v)),t.width=f,t.height=W(v*X)):(t.x=O===R?this.getPixel(O-W(a)):this.getPixel(O-W(v)),t.y=q,t.width=W(v*X),t.height=p),H[K]?(v=H[K],h&&D?v.animateWith(B,k,t,h,z):v.attr(t)):(v=A.rect(t,C),H[K]=v),K+=1);if(H[K])for(O=K;O<H.length;O++)H[O].attr({x:0,y:0,width:0,height:0,fill:null,"stroke-width":0});this.graphics.band=H}else if(H[K])for(O=K;O<H.length;O++)H[O].attr({x:0,y:0,width:0,height:0,fill:null,"stroke-width":0})},resetNumericAxisComponents:function(){var a=this.graphics.line,
d=this.graphics.labels,c;if(a&&a[0])for(c=0;c<a.length;c+=1)a[c].attr({path:[]});if(d&&d[0])for(c=0,a=d.length;c<a;c+=1)d[c].attr({text:""})},resetCategoryAxisComponents:function(){var a=this.graphics.line,d=this.components.categoryVline,c=this.components.categoryLabel,b=this.components.categoryLabelLine,f;if(a&&a[0])for(f=0;f<a.length;f+=1)a[f].attr({path:[]});if(c&&c[0])for(f=0,a=c.length;f<a;f+=1)c[f].graphics.label.attr({text:"","text-bound":[]}),c[f].graphics.secondLabel&&c[f].graphics.secondLabel.attr({text:"",
"text-bound":[]});if(b&&b[0])for(f=0,a=b.length;f<a;f+=1)b[f].graphics.line.attr({path:["M",0,0]});if(d&&d[0])for(f=0,a=d.length;f<a;f+=1)d[f].graphics.drawing.attr({path:["M",0,0]}),d[f].graphics.label.attr({text:"","text-bound":[]})},placeAxis:function(a){return this.config.isVertical?this._placeVerticalAxis(a):this._placeHorizontalAxis(a)},_placeVerticalAxis:function(a){var d=this.config,c=this.chart,b=c.config,f=c.components,h=c.linkedItems.smartLabel,g=d.axisRange,k=d.name,n=d.isOpposit,u=f.numberFormatter,
m=b.canvasHeight,w=d.labelPadding=t(d.rawAttr.axisValuePadding,4),q=t(d.rawAttr.axisNamePadding,5),p=d.useEllipsesWhenOverflow,C=d.name.style,A=d.trend.trendStyle,H=d.axisName,r=d.trendLines,K=d.drawLabelsOpposit,B=d.drawAxisNameOpposit,R=d.drawLabelOnBothSide,D=0,v=0,z=0,V=0,S=0,W={left:0,right:0},Y="",E="",L=0,G,P,Q,N,ha,sa,fa;b.viewPortConfig&&1!==b.viewPortConfig.scaleY&&(d._setRangeAgain=!0);d._setRangeAgain&&this._setTickIntervalAfterZoom();d.oriCanvasHeight=m;0>w&&(d.labelPadding=2);L=d.drawTick&&
d.tickLength?d.axisLineThickness+d.tickLength:d.axisLineThickness;d.showAxisLine?(d.labelPadding=t(w,2)+L,0>d.labelPadding&&(d.labelPadding=(0>d.axisLineThickness?0:L)+2),a-=d.axisLineThickness):(d.labelPadding=t(w,2),0>d.labelPadding&&(d.labelPadding=2));w=g.max;P=g.min;d.name.rotation=0;d.labels.step=d.labelStep;d.labels.isDraw=1;d.lines.isDraw=1;d.band.isDraw=1;d.labels.drawNormalVal=d.showDivLineValues;d.labels.drawLimitVal=d.showLimits;L=C.lineHeight;L=Number(L.replace(/px/i,""));L<a&&(a-=L);
1!==d.showLimits&&1!==d.showDivLineValues&&(d.labels.isDraw=0);G=d.drawLabels?this._getVMaxLabelDimention(R?a-2*d.labelPadding/2:a-d.labelPadding):{width:0,height:0};if(G.width+d.labelPadding>a&&!d.hasCategory||0===G.width)d.labels.isDraw=0;d.labels.isDraw&&(d.labelMaxW=G.width,d.labelMaxH=G.height,D=G.width+d.labelPadding,v=R?2*D:D);if(d.drawTrendLines&&d.drawTrendLabels&&r){g=d.isPercent?f.numberFormatter.percentValue:d.isVertical?f.numberFormatter.yAxis:f.numberFormatter.xAxis;h.useEllipsesOnOverflow(b.useEllipsesWhenOverflow);
h.setStyle({fontSize:A.fontSize,fontFamily:A.fontFamily,lineHeight:A.lineHeight,fontWeight:A.fontWeight});b=0;for(A=r.length;b<A;b+=1)for(G=0,N=r[b].line&&r[b].line.length;G<N;G+=1)ha=r[b].line[G],sa=u.getCleanValue(F(ha.startvalue,ha.value,0)),fa=t(ha.endvalue,sa),sa<=w&&sa>=P&&fa<=w&&fa>=P&&(d.isOpposit&&(ha.valueonright=1),sa=t(ha.valueonright,0),V=1===sa?ha.endvalue||ha.startvalue:ha.startvalue||ha.endvalue,Q=T(ha.origText||ha.displayvalue||V||""),Q===V&&(Q=""+g.call(f.numberFormatter,Q)),sa?
Q.length>E.length&&(E=Q):Q.length>Y.length&&(Y=Q));G=h.getOriSize(E);S=G.width+d.labelPadding;G=h.getOriSize(Y);V=G.width+d.labelPadding;n?(S>v&&S>a&&(S=a),v=O(v,S+d.labelPadding),V>a-v&&(V=X(V,a-v))):(V>v&&V>a&&(V=a),v=O(v,V+d.labelPadding),S>a-v&&(S=X(S,a-v)));b=0;for(A=r.length;b<A;b+=1)for(G=0,N=r[b].line&&r[b].line.length;G<N;G+=1){ha=r[b].line[G];sa=u.getCleanValue(F(ha.startvalue,ha.value,0));fa=t(ha.endvalue,sa);Q=1===Number(ha.valueonright)?ha.origText||ha.displayvalue||""+fa||"":ha.origText||
ha.displayvalue||""+sa||"";Q=T(""+Q);if(Number(Q)===fa||Number(Q)===sa)Q=""+g.call(f.numberFormatter,Q);ha.origText=Q;Y=(sa=t(ha.valueonright,0))?h.getSmartText(Q,S,c.canvasHeight,p):h.getSmartText(Q,v,c.canvasHeight,p);ha.displayvalue=Y.text;Y.tooltext?ha.valueToolText=Y.tooltext:delete ha.valueToolText}}a+=L;!d.drawAxisName||0>=a-v-S||""===H?(k.isDraw=!1,k.value=""):(h.setStyle({fontSize:C.fontSize,fontFamily:C.fontFamily,lineHeight:C.lineHeight,fontWeight:C.fontWeight}),k.isDraw=!0,d.rotateAxisName?
(d.name.rotation=n?90:270,c=h.getSmartText(H,m,a-v-S),k.value=H,d.nameMaxW=X(c.height)):(c=h.getSmartText(H,a-v-S,m),k.value=H,d.nameMaxW=X(c.width,a-v),d.nameMaxH=c.height,0<=d.axisNameWidth&&(d.nameMaxW=X(d.nameMaxW,d.axisNameWidth))),z=d.nameMaxW+q);n?(R?(W.left+=O(D,V),W.right+=O(D,S)):K?(W.left+=O(D,V),W.right+=S):(W.left+=V,W.right+=O(D,S)),B?(d.axisNamePadding=W.left+q,W.left+=z):(d.axisNamePadding=W.right+q,W.right+=z)):(R?(W.left+=O(D,V),W.right+=O(D,S)):K?(W.left+=V,W.right+=O(D,S)):(W.left+=
O(D,V),W.right+=S),B?(d.axisNamePadding=W.right+q,W.right+=z):(d.axisNamePadding=W.left+q,W.left+=z));k.isDraw&&d.axisNamePadding+d.nameMaxW>a&&(d.axisNamePadding=a-d.nameMaxW);return W},_placeHorizontalAxis:function(a){var d=this.config,c=this.chart,b=c.config,f=c.components,h=c.linkedItems.smartLabel,g=d.axisRange,k=d.name,n=d.isOpposit,u=f.numberFormatter,m=d.drawLabelsOpposit,w=d.drawAxisNameOpposit,q=d.drawLabelOnBothSide,p=0,C=b.canvasWidth,A=d.labelPadding=t(d.rawAttr.axisValuePadding,4),H=
t(d.rawAttr.axisNamePadding,5),r=d.useEllipsesWhenOverflow,K=d.name.style,B=d.trend.trendStyle,R=d.axisName,v=d.vTrendLines,D,X,V=0,z=0,S={top:0,bottom:0},W=0,Y=0,E,L,G,P,Q,N;b.viewPortConfig&&1!==b.viewPortConfig.scaleX&&(d._setRangeAgain=!0);d._setRangeAgain&&this._setTickIntervalAfterZoom();0>A&&(d.labelPadding=2);Y=d.drawTick&&d.tickLength?d.axisLineThickness+d.tickLength:d.axisLineThickness;d.showAxisLine?(d.labelPadding=t(A,2)+Y,0>d.labelPadding&&(d.labelPadding=(0>d.axisLineThickness?0:Y)+
2),a-=d.axisLineThickness):(d.labelPadding=t(A,2),0>d.labelPadding&&(d.labelPadding=2));A=g.max;g=g.min;d.labels.rotation=0;d.labels.step=d.labelStep;d.labels.isDraw=1;d.lines.isDraw=1;d.band.isDraw=1;d.labels.drawNormalVal=d.showDivLineValues;d.labels.drawLimitVal=d.showLimits;Y=K.lineHeight;Y=Number(Y.replace(/px/i,""));Y<a&&(a-=Y);d.rotateLabels&&"stagger"!==d.labelDisplay&&"none"!==d.labelDisplay&&(d.labelDisplay="rotate");1!==d.showLimits&&1!==d.showDivLineValues&&(d.labels.isDraw=0);P=d.drawLabels?
this._getHMaxLabelDimention(q?(a-2*d.labelPadding)/2:a-d.labelPadding):{width:0,height:0};d.labels.rotation?P.width+d.labelPadding>a&&!d.hasCategory&&(d.labels.isDraw=0):P.height+d.labelPadding>a&&!d.hasCategory&&(d.labels.isDraw=0);d.labels.isDraw&&(d.labels.rotation?(d.labelMaxW=P.height,d.labelMaxH=P.width,p=P.width+d.labelPadding):(d.labelMaxW=P.width,d.labelMaxH=P.height,p=P.height+d.labelPadding),V=q?2*p:p);V=O(V,d.labelPadding);P=V<=a?a-V:a;if(d.drawTrendLines&&d.drawTrendLabels&&v&&d.isActive)for(N=
d.isPercent?f.numberFormatter.percentValue:d.isVertical?f.numberFormatter.yAxis:f.numberFormatter.xAxis,h.useEllipsesOnOverflow(b.useEllipsesWhenOverflow),h.setStyle({fontSize:B.fontSize,fontFamily:B.fontFamily,lineHeight:B.lineHeight,fontWeight:B.fontWeight}),b=0,X=v.length;b<X;b+=1)for(E=0,G=v[b].line&&v[b].line.length;E<G;E+=1)Q=v[b].line[E],D=u.getCleanValue(F(Q.startvalue,Q.value,0)),L=t(Q.endvalue,D),D<=A&&D>=g&&L<=A&&L>=g&&(D=t(Q.valueonright,0),D=1===D?Q.endvalue||Q.startvalue:Q.startvalue||
Q.endvalue,L=T(Q.origText||Q.displayvalue||D||""),L===D&&(L=""+N.call(f.numberFormatter,L)),Q.origText=L,D=h.getSmartText(L,c.canvasWidth,B.lineHeight,r),L=D.height+2,0>P-L?Q.displayvalue="":(Q.displayvalue=D.text,W=W<D.height?D.height:W),D.tooltext?Q.valueToolText=D.tooltext:delete Q.valueToolText);V+=W;P=P-W+Y;a+=Y;!d.drawAxisName||0>=P||""===R?(k.isDraw=!1,k.value=""):(h.setStyle({fontSize:K.fontSize,fontFamily:K.fontFamily,lineHeight:K.lineHeight,fontWeight:K.fontWeight}),k.isDraw=!0,c=h.getSmartText(R,
C,P),k.value=R,d.nameMaxW=C,d.nameMaxH=c.height,z=c.height+H,d.axisNamePadding=H+V,d.axisNamePadding+c.height>a&&(d.axisNamePadding=a-c.height,z=c.height+d.axisNamePadding-V));n?(q?(S.bottom+=p+W,S.top+=p):m?S.bottom+=p+W:(S.top+=p,S.bottom+=W),d.trendBottomPadding=S.bottom-W+2,w?S.bottom+=z:S.top+=z):(q?(S.bottom+=p+W,S.top+=p):m?(S.top+=p,S.bottom+=W):S.bottom+=p+W,d.trendBottomPadding=S.bottom-W+2,w?S.top+=z:S.bottom+=z);return S},_getHMaxLabelDimention:function(b){function d(a,d){switch(d.toLowerCase()){case "left":return Math.abs(c._getCustomPixel(a));
case "right":return Math.abs(g.width-c._getCustomPixel(a))}}var c=this,f=c.config,h=c.chart,g=h.config,k=h.components,n=h.linkedItems.smartLabel,u=f.axisRange,m=f.labels,h=f.labelDisplay,w=f.slantLabel,q=m.style,p=f.maxLabelHeight,C=u.tickInterval,A=f.staggerLines,H=f.labelStep,r=g.canvasLeft,K=g.canvasRight,B=A-2,O,R,D=u.max,X=u.min,H=0,S=f.categories&&f.categories.category,V=0,z,Y,L,G={text:void 0,width:0,style:void 0},u=0,F,P,Q,T,N=function(){},ha=N,sa=N,fa=N,ya={},Ia,Fa,Ba,Ja,Ha,Da=0,Ma=!1,Na=
0,Oa,Sa,Ua=!1,Pa,ab,Xa,$a=Number.POSITIVE_INFINITY,Ta,bb=Number.POSITIVE_INFINITY;if(f.hasCategory&&(!S||0===S.length))return{width:0,height:0};"rotate"===h&&(f.rotateLabels=1);f.hasCategory||(f.irregularCatAxis=!1);O=0===B?1:1===B?1.5:B;n.useEllipsesOnOverflow(g.useEllipsesWhenOverflow);n.setStyle({fontSize:q.fontSize,fontFamily:q.fontFamily,lineHeight:q.lineHeight,fontWeight:q.fontWeight});if(f.irregularCatAxis){S.sort(function(a,c){return a.x-c.x});B=0;for(V=S.length;B<V;B++){z=S[B];if(void 0!==
Oa){bb=Math.abs(z.x-Oa);ab=W(c._getCustomPixel(X)-c._getCustomPixel(X+bb));n.setStyle(z.style||{});Pa=n.getOriSize("W");Pa=Pa.width;if(ab<1.2*Pa){z.label="";bb=$a;continue}Xa._individualIWR=ab;z._individualIWL=ab;$a=bb}Xa=z;Oa=z.x}bb===Number.POSITIVE_INFINITY&&(bb=Math.floor(Math.min(z.x,D-z.x)),bb=Math.max(bb,4));B=0;for(V=S.length;B<V;B++)z=S[B],B||(z._individualIWL=Infinity),B===V-1&&(z._individualIWR=Infinity),z.individualIW=Math.min(z._individualIWL,z._individualIWR);L=W(c._getCustomPixel(X)-
c._getCustomPixel(X+bb));L=Math.min(2*d(S[0].x,"left"),2*d(S[V-1].x,"right"),L)}else L=W(c._getCustomPixel(X)-c._getCustomPixel(X+C));b=p?p:b;ya.__root__={getHeight:function(a){return parseInt(S[a]._ovrStyle.lineHeight.replace(/(\d+)px/,"$1"),10)},getWidth:function(){return b},getCalculatedLabelStep:function(d){var b=0,e=d.length,h=Number.NEGATIVE_INFINITY,g={},k,u,m,w=0,p;if(f.irregularCatAxis)return f.labelStep;for(;b<e;b++)if(u=d[b])u.label||(u.label=""),Y={fontSize:q.fontSize,fontFamily:q.fontFamily,
lineHeight:q.lineHeight,fontWeight:q.fontWeight},w++,u.style=u.style||{},v(Y,u.style),k=Y.fontSize+Y.fontFamily+Y.lineHeight+Y.fontWeight,g[k]?u.label.length>g[k].label.length&&(g[k].label=u.label):g[k]={label:u.label,style:Y};for(m in g)g.hasOwnProperty(m)&&(d=g[m].style,b=g[m].label,d.lineHeight=a(d),n.setStyle(d),f.rotateLabels&&(p=parseInt(d.lineHeight.replace(/(\d+)px/,"$1"),10)),F=n.getSmartText(b,void 0,p),d=0===f.rotateLabels?60<F.width?60:F.width:F.height,h=Math.max(d,h));h=Math.floor(W(c._getCustomPixel(D)-
c._getCustomPixel(X))/h);if(w<=h)return f.labelStep;w=Math.max(Math.ceil(w/h),f.labelStep);L=W(c._getCustomPixel(X)-c._getCustomPixel(X+w));return w}};ya._inProp={};ya.getCopyById=function(a){var c=this.__root__,d=this._inProp.copyStore,b,d=d||{};if(b=d[a])return b;v(b=d[a]={},c);return b};if(f.hasCategory){switch(h){case "rotate":m.rotation=w?300:270;T=ya.getCopyById("rotate");break;case "stagger":T=ya.getCopyById("stagger");T.getHeight=function(a){var c;c=(a=f.categories.category[a])&&a.style||
(a.style={});Y={fontSize:q.fontSize,fontFamily:q.fontFamily,lineHeight:q.lineHeight,fontWeight:q.fontWeight};v(Y,c);n.setStyle(Y);return n.getOriSize(a.label).height};T.getWidth=function(a){return a.individualIW?a.individualIW:2*L*O-4};fa=function(a){var c,d=a.length,f=0,h,g,l;n.setStyle(q);c=n.getOriSize("WWW").height;if(Math.floor(a[d-1]._cumulativeSum)<=Math.ceil(d*(c+2)))g=Math.floor(b/c),A=0>g-A?g:A;else{g=Math.floor(b/(c+4));do for(f=0,l=g,h=l-1,d=a.length;h<d;){d-h<g&&(h=d-1);c=a[h];f=c._cumulativeSum-
f;if(~~f>-~b){Ma=!0;break}else Ma=!1;f=c._cumulativeSum;h+=l}while(g--&&Ma);g++;A=Math.min(A,g)}};ha=function(a){var c,d,b,e,f=0;e=0;for(b=a.length;e<b;e++)c=a[e],c.stepSkipped||(d=c&&c.style||{},(d=d.lineHeight)||(d=q.lineHeight),(R=f++%A)?c.labelPadding=d.replace(/px/i,"")*R:c.labelPadding=0)};break;case "none":T=ya.getCopyById("none");T.getHeight=N;sa=T.getWidth=N;f.rotateLabels&&(m.rotation=w?300:270,Sa=b);T.getCalculatedLabelStep=function(){return f.labelStep};break;default:T=ya.getCopyById("auto"),
T.getHeight=function(){return b},T.getWidth=function(a){return a.individualIW?a.individualIW:L-8},sa=function(a,c){var d,b,e,h;if(!f.irregularCatAxis&&(n.setStyle(a),d=n.getOriSize("WWW"),d=d.width,d>=L&&0!==f.rotateLabels)){m.rotation=w?300:270;m.forceRotate=!0;T=ya.getCopyById("rotate");P=T.getWidth;Q=T.getHeight;d=G.width=0;for(b=c.length;d<b;d++)(e=c[d])&&(e.label||e.oriLabel)&&0!==t(e.showlabel,f.showLabels,1)&&!0!==e.stepSkipped&&(h=e._ovrStyle,n.setStyle({fontSize:h.fontSize,fontFamily:h.fontFamily,
lineHeight:h.lineHeight,fontWeight:h.fontWeight}),F=n.getSmartText(e.oriLabel,P(e),Q(d)),e.label=F.text,e.labelTooltext=F.tooltext,e._sLabel=F,G.width<F.width&&(G.text=F.text,G.width=F.width,G.style=h));Ia=G.text}}}P=T.getWidth;Q=T.getHeight;H=f.labels.step=f.labelStep=f._oriLabelStep;H=f.labels.step=f.labelStep=T.getCalculatedLabelStep(S);B=0;for(V=S.length;B<V;B++)(z=S[B])&&(z.label||z.oriLabel)&&0!==t(z.showlabel,f.showLabels,1)&&(Ua=!0,Y={fontSize:q.fontSize,fontFamily:q.fontFamily,lineHeight:q.lineHeight,
fontWeight:q.fontWeight},v(Y,z.style),Y.lineHeight=a(Y),Fa=Y.fontSize+Y.fontFamily+Y.lineHeight+Y.fontWeight,Fa!==Ja&&(n.setStyle(Y),Ja=Fa),B%H?(z.stepSkipped=!0,Na++):(z.stepSkipped=!1,z._ovrStyle=Y,F=n.getSmartText(z.oriLabel||z.label,P(z),Q(B)),Da+=z._nLineHeight=F.height+2,z._cumulativeSum=Da,z.oriLabel=z.oriLabel||z.label,z.label=F.text,z.labelTooltext=F.tooltext,z._sLabel=F,G.width<F.oriTextWidth&&(v(G,F),G.style=Y),u<F.height&&(u=F.height)));if(!Ua)return{height:0,width:0};fa(S,Na);ha(S,Na);
sa(G.style,S);Ia=G.text||"";if("mixed"===f.xAxisLabelMode)for(z=f.isPercent?k.numberFormatter.percentValue:k.numberFormatter.xAxis,H=Ia.length,B=X;B<=D;B+=C)Ja=f.hasBreakPoints?c._getRealBreakValue(B):B,Ja=""+z.call(k.numberFormatter,Ja,f.axisIndex),Ja.length>H&&(Ia=Ja,H=Ja.length);G.height=Math.max(u,G.height||0);k=S.length;B=0;for(V=S.length;B<V&&(Ha=S[B],!Ha._sLabel);B++);V=S.length;for(B=V-1;0<=B&&(Ta=S[B],!Ta._sLabel);B--);Fa=c._isZoomed();m.rotation||Fa||!Ha._sLabel?(f.axisEndLabelDisplaySpace.left=
0,f.axisEndLabelDisplaySpace.right=0):(f.axisEndLabelDisplaySpace.left=Math.max(r-(c._getCustomPixel(Ha.x||0)-Ha._sLabel.width/2),0),f.axisEndLabelDisplaySpace.right=Math.max(c._getCustomPixel(Ta.x||k-1)+Ta._sLabel.width/2-K,0));Ha=G}else{z=f.numberFormatterFn?k.numberFormatter[f.numberFormatterFn]:f.isPercent?k.numberFormatter.percentValue:k.numberFormatter.xAxis;for(B=X;B<=D;B+=C)Ja=f.hasBreakPoints?E(c._getRealBreakValue(B),10):E(B,10),Ja=""+z.call(k.numberFormatter,Ja,f.axisIndex),B===X&&(Fa=
Ja),B===D&&(Ba=Ja),Ja.length>H&&(Ia=Ja,H=Ja.length);n.setStyle({fontSize:q.fontSize,fontFamily:q.fontFamily,lineHeight:q.lineHeight,fontWeight:q.fontWeight});Ha=n.getOriSize(Ia||"");"rotate"===h&&(m.rotation=270);f.rotateLabels&&(m.rotation=w?300:270);m.rotation||(Fa=n.getOriSize(Fa||""),Ba=n.getOriSize(Ba||""),f.axisEndLabelDisplaySpace.left=Fa.width/2+2,f.axisEndLabelDisplaySpace.right=Ba.width/2+2)}f.hasCategory&&"stagger"===h&&(Ha.height=A*G.height);Ha.width=Sa?Math.min(Sa,Ha.width):Ha.width;
return Ha},_getVMaxLabelDimention:function(b){var d,c,f,h,g=this.config,k=this.chart,n=k.components,u=k.config,m=k.linkedItems.smartLabel,w=g.axisRange,q=g.labels.style,p=w.tickInterval,C=g.useEllipsesWhenOverflow;c=g.maxLabelWidthPercent;var A=w.max;f=w.min;w=0;h=k.jsonData.categories;var k={height:0,width:0},H,r;m.useEllipsesOnOverflow(u.useEllipsesWhenOverflow);m.setStyle({fontSize:q.fontSize,fontFamily:q.fontFamily,lineHeight:q.lineHeight,fontWeight:q.fontWeight});if(g.hasCategory){h&&(H=h[0].font,
r=h[0].fontsize);c&&(u=c/100*u.width,u<b&&(b=u));n=g.categories.category;u=0;for(p=n.length;u<p;u++)A=n[u],0!==t(A.showlabel,g.showLabels)&&(d=F(A.font,A.labelfont,H,q.fontFamily),c=F(A.fontsize,A.labelfontsize,r,q.fontSize).replace(/px/i,"")+"px",f="normal"==q.fontWeight?t(A.fontbold,A.labelfontbold,0)?"bold":"normal":q.fontWeight,h="normal"==q.fontStyle?t(A.fontitalic,A.labelfontitalic,0)?"italic":"normal":q.fontStyle,d={fontFamily:F(d,H,q.fontFamily),fontSize:F(c,r,q.fontSize),fontWeight:F(f,q.fontWeight),
fontStyle:F(h,q.fontStyle)},d.lineHeight=a(d),m.setStyle(d),d=m.getSmartText(A.oriLabel||A.label,b,q.lineHeight,C),A.oriLabel=A.oriLabel||A.label,A.label=d.text,A.labelTooltext=d.tooltext,d.width>w&&(k=d,w=d.width));return k}b=g.numberFormatterFn?n.numberFormatter[g.numberFormatterFn]:g.isPercent?n.numberFormatter.percentValue:n.numberFormatter.yAxis;for(u=f;u<=A;u+=p)q=g.hasBreakPoints?E(this._getRealBreakValue(u),10):E(u,10),q=""+b.call(n.numberFormatter,q,g.axisIndex),q.length>w&&(d=q,w=q.length);
return m.getOriSize(d)},getLogAxisLimits:function(a,d,c,b,f,g){var k=function(a){return null===a||void 0===a||""===a||isNaN(a)?!1:!0},n=0,u=[],m,q,p,C,A,r,B,t;a===d&&(d-=d/100);k(c)&&Number(c)>=a?a=Number(c):(c=1<f?H(h(a)/h(f)):w(h(a)/h(f)),a=K(f,c),q=c);q||(q=1<f?H(h(a)/h(f)):w(h(a)/h(f)));k(b)&&Number(b)<=d?d=Number(b):(c=1<f?w(h(d)/h(f)):H(h(d)/h(f)),d=K(f,c),m=c);m||(m=1<f?w(h(d)/h(f)):H(h(d)/h(f)));b=Number(String(h(f)/h(10)));g=Number(g)||(w(b)==b?8:4);1<f?(p=q,C=m):0<f&&1>f&&(p=m,C=q);b=q;
for(m=p;m>=C;--m)if(p=K(f,b),d<=p&&a>=p&&(u[n++]={value:p,ismajor:!0}),m!=C){q=1<f?-1:1;p=K(f,b)-K(f,b+q);c=p/(g+1);for(k=1;k<=g;++k)p=K(f,b+q)+c*k,d<=p&&a>=p&&(u[n++]={value:p,ismajor:!1});1<f?b--:b++}for(B in u)for(t in u[B])"value"==t&&(A||(A=u[B][t]==d&&(u[B].isextreme=u[B].isMin=!0)),r||(r=u[B][t]==a&&(u[B].isextreme=u[B].isMax=!0)));A||(u[n++]={value:d,ismajor:!0,isMin:!0,isextreme:!0});r||(u[n]={value:a,ismajor:!0,isMax:!0,isextreme:!0});return{Max:a,Min:d,divArr:u}},getCategoryLen:function(){return this.config.categories?
this.config.categories.category.length:0},getCleanValue:function(a,d){var c=this.chart;return(this.components.numberFormatter||c.components.numberFormatter).getCleanValue(a,d)},dataLabels:function(a){var d=this.chart;return(this.components.numberFormatter||d.components.numberFormatter).dataLabels(a,this.config.axisIndex)},setNumberFormatter:function(a){this.components.numberFormatter=a}},void 0,{setAdaptiveMin:0,adjustDiv:1,axisNameWidth:void 0,rotateAxisName:0,useEllipsesWhenOverflow:1,divLineColor:void 0,
divLineAlpha:void 0,divLineThickness:void 0,divLineIsDashed:void 0,divLineDashLen:void 0,divLineDashGap:void 0,showAlternateGridColor:void 0,alternateGridColor:void 0,alternateGridAlpha:void 0,showZeroPlane:1,zeroPlaneAlpha:80,showZeroPlaneValue:1,showZeroPlaneOnTop:1,showAxisLine:void 0,axisLineThickness:void 0,axisLineAlpha:void 0,tickLength:void 0,trendlineToolText:void 0,trendlineColor:"333333",trendlineThickness:1,trendlineAlpha:void 0,showTrendlinesOnTop:0,trendlinesAreDashed:0,trendlinesDashLen:5,
trendlinesDashGap:2,isTrendZone:void 0,showTrendlines:1,showTrendlineLabels:1,showLabels:1,maxLabelHeight:void 0,rotateLabels:void 0,slantLabel:0,showAxisValues:1,showTooltip:1}])}]);N.register("module",["private","modules.renderer.js-axis-log",function(){var b=this.hcLib,z=b.pluck,G=b.toPrecision,v=b.pluckNumber,F=b.graphics.convertColor,E=b.getDashStyle,b=b.preDefStr,t=b.POSITION_START,a=b.POSITION_TOP,Q=b.POSITION_BOTTOM,r=b.POSITION_END,b=Math,P=b.abs,T=b.log;N.register("component",["axis","log",
{configure:function(){var a=this.config,b=a.rawAttr,r=this.chart.components,m=r.numberFormatter,r=r.colorManager;N.register("component",["axis","cartesian"]).prototype.configure.call(this);a.minorDivlinecolor=F(z(b.minorDivlinecolor,r.getColor("divLineColor")),v(b.minorDivLineAlpha,r.getColor("divLineAlpha")/2));a.axisMinValue=m.getCleanValue(b.axisMinValue);a.axisMaxValue=m.getCleanValue(b.axisMaxValue);0>=a.axisMinValue&&(a.axisMinValue=void 0);0>=a.axisMaxValue&&(a.axisMaxValue=void 0);a.minorDivLineThickness=
v(b.minorDivLineThickness,1)},setDataLimit:function(a,b){var r=this.config,m=r.axisRange,p=this.getLogAxisLimits,q=r.axisMaxValue,A=r.axisMinValue,r=p(v(a,q),v(b,A),q,A,r.base,r.numMinorDivLines);m.min=Number(G(r.Min,10));m.max=Number(G(r.Max,10));m.divArr=r.divArr||{}},_setTickIntervalAfterZoom:function(){var a=this.config,b=this.chart.config.viewPortConfig,r=a.isVertical,m=a.axisRange,p=this.getLogAxisLimits,q=a.rawAttr,A,n;a.hasCategory||(r=r?b.scaleY:b.scaleX,b=v(q.axisrange?q.axisrange.max:m.max),
n=v(q.axisrange?q.axisrange.min:m.min),q=1===r?a.axisMaxValue:m.max,A=1===r?a.axisMinValue:m.min,v(1===r?a.adjustDiv:0),a=p(b,n,q,A,a.base,a.numMinorDivLines),m.min=Number(G(a.Min,10)),m.max=Number(G(a.Max,10)),m.divArr=a.divArr||{})},getValue:function(a){var b,r,m=this.config,p=m.axisRange,q=m.isVertical;b=m.canvas;r=m.axisDimention||{};var A=this.chart.config,n=A.viewPortConfig,k=r.axisLength||b.canvasWidth||A.canvasWidth,g=p.max,p=p.min,A=a/(r.axisLength||b.canvasHeight||A.canvasHeight);b=Math.log(p);
r=Math.log(g);q?(a=m.isReverse?b-A*(r-b):r-A*(r-b),a=Math.pow(Math.E,a)):(q=k*n.scaleX/(g-p),a=m.isReverse?g-(n.x*n.scaleX+Number(a))/q:p+(n.x*n.scaleX+Number(a))/q);return a},getPixel:function(a){var b=this.config,r=this.chart.config,m=b.axisRange,p=r.viewPortConfig,q=r.canvasHeight,A=r.canvasWidth,n=r.canvasTop,k=r.canvasLeft,g=r.canvasBottom,r=r.canvasRight,f=m.max,m=m.min,t=b.base,C=T(f)/t,v=T(m)/t;a=T(a)/t-v;p||(p={x:k,y:n,scaleX:1,scaleY:1});b.isVertical?(A=-q*p.scaleY/(C-v),b=b.isReverse?g-
(a*A+(q*p.scaleY-p.y*p.scaleY)):n+(a*A+(q*p.scaleY-p.y*p.scaleY))):(A=A*p.scaleX/(T(f-m)/t),b=b.isReverse?r-(a*A-p.x*p.scaleX):k+(a*A-p.x*p.scaleX));return b},_drawPlotLine:function(){var a=this.config,b=a.axisRange,r=a.isVertical,m=this.chart,p=m.config,q=p.canvasLeft,A=p.canvasRight,n=p.canvasTop,p=p.canvasBottom,k=a.showCanvasBorder,g=b.max,f=b.min,t=a.axisPlotLineContainer,C=m.components.paper,v=this.graphics.line||[],R=0,u=F(a.divLineColor,a.divLineAlpha),z=a.divLineThickness,O=a.divLineIsDashed?
E(a.divLineDashLen,a.divLineDashGap,z):"none",W=F(a.zeroPlaneColor,a.zeroPlaneAlpha),H=a.zeroPlaneThickness,w=a.animateAxis,K,h,V,e,d,c,l,M,J;e={stroke:u,"stroke-width":z,"stroke-dasharray":O};O={stroke:a.minorDivlinecolor,"stroke-width":a.minorDivLineThickness,"stroke-dasharray":O};if(a.lines.isDraw){K=m.get("config","animationObj");M=K.animObj;J=K.dummyObj;m=K.transposeAnimDuration;K=K.animType;this._getVisibleConfig();d=b.divArr;c=d.length;for(b=0;b<c;b++)if(V=d[b],l=V.value,h=this.getPixel(l),
V=V.ismajor?e:O,!k||l!==f&&l!==g)if(0!==a.showZeroPlaneValue||0!==a.showZeroPlane||0!==l)0===l&&1===a.showZeroPlane&&1===a.showZeroPlaneValue&&(V.stroke=W,V["stroke-width"]=H),V.path=r?"M"+q+" "+h+"L"+A+" "+h:"M"+h+" "+n+"L"+h+" "+p,v[R]?(h=v[R],m&&w?h.animateWith(J,M,V,m,K):h.attr(V)):(h=C.path(V,t),v[R]=h),0===l&&1===a.showZeroPlane&&1===a.showZeroPlaneValue&&(V.stroke=u,V["stroke-width"]=z),R+=1;if(v[R])for(b=R;b<v.length;b++)v[b].attr({path:[]});this.graphics.line=v}else if(v[R])for(b=R;b<v.length;b++)v[b].attr({path:[]})},
_drawLabel:function(){var b=this.config,v=this.chart,B=v.config,m=v.components,p=b.axisRange,q=b.isOpposit,A,n=b.labels,k=n.style,g=b.isVertical,f=p.max,z=p.min,C=B.canvasBottom,Y=B.canvasLeft,R=B.canvasRight,B=B.canvasTop,u=b.axisContainer,X=b.labelPadding,O=m.paper,W=b.labelMaxH,H=b.labelMaxW,w=b.axisStartPosition,K=this.graphics.labels||[],h=0,V=b.animateAxis,e,d,c,l,M,J,E,G={fontFamily:k.fontFamily,fontSize:k.fontSize,fontWeight:k.fontWeight,fontStyle:k.fontStyle,lineHeight:k.lineHeight},F,ka,
ca,U;k.lineHeight&&(J=k.lineHeight,-1!==J.indexOf("px")&&(J=J.replace("px",""),parseFloat(J)));if(b.labels.isDraw){e=v.get("config","animationObj");v=e.animObj;J=e.dummyObj;ca=e.animType;e=e.transposeAnimDuration;P(this.getPixel(z)-this.getPixel(z+p.tickInterval));U=this._isZoomed();b.labels.step?A=p.tickInterval*b.labels.step:A=p.tickInterval;M=b.labels.rotation;l=this._getVisibleConfig();k={fill:k.color,"font-size":k.fontSize};u.css(G);G=p.divArr;F=G.length;for(p=0;p<F;p++)if(ka=G[p],E=ka.value,
d=this.getPixel(E),!(!ka.ismajor&&!b.showMinorDivLineValues||c&&d>c-b.labelMaxH&&d<c+b.labelMaxH||U&&(E<l.minValue||E>l.maxValue)||!b.labels.drawNormalVal&&(!b.labels.drawLimitVal||E!==z&&E!==f)||!b.labels.drawNormalVal&&E!==z&&E!==f||!(b.labels.drawLimitVal||E!==z&&E!==f)||0===b.showZeroPlaneValue&&0===b.showZeroPlane&&0===E)){if(1===b.showZeroPlane&&1===b.showZeroPlaneValue&&(0>E&&0<E+A||0<E&&0>E-A))if(g){if(d+W>=this.getPixel(0)&&this.getPixel(0)>=d-W)continue}else if(d+H>=this.getPixel(0)&&this.getPixel(0)>=
d-H)continue;g?(c=b.numberFormatterFn?m.numberFormatter[b.numberFormatterFn]:b.isPercent?m.numberFormatter.percentValue:m.numberFormatter.yAxis,c=""+c.call(m.numberFormatter,E),E=b.hasCategory?b.categories.category[p].labelPadding||0:0,k["text-anchor"]=q?t:r,k.text=c,k.x=q?(w||R)+X:(w||Y)-X,k.y=E?d+E:d,c=k.y):(c=b.numberFormatterFn?m.numberFormatter[b.numberFormatterFn]:b.isPercent?m.numberFormatter.percentValue:m.numberFormatter.xAxis,c=""+c.call(m.numberFormatter,E),E=b.hasCategory?Number(b.categories.category[p].labelPadding)||
0:0,k.text=c,k.x=d,k.y=q?(w||B)-X:(w||C)+X,E&&(k.y+=E),M?(k["text-anchor"]=q?t:r,k["vertical-align"]="center"):k["vertical-align"]=q?Q:a,c=k.x);n.shiftX&&(k.x+=n.shiftX);n.shiftY&&(k.y+=n.shiftY);k.transform=O.getSuggestiveRotation(M,k.x,k.y);K[h]?(d=K[h],e&&V?d.animateWith(J,v,k,e,ca):d.attr(k)):K[h]=O.text(k,u);h+=1}if(K[h])for(p=h;p<K.length;p++)K[p].attr({text:""});this.graphics.labels=K}else if(K[h])for(p=h;p<K.length;p++)K[p].attr({text:""})},_drawPlotBand:function(){},_getVMaxLabelDimention:function(){var a=
this.config,b=this.chart,r=b.components,m=b.linkedItems.smartLabel,p=a.labels.style,q=0,A=a.axisRange.divArr,n=A.length,k;m.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);m.setStyle({fontSize:p.fontSize,fontFamily:p.fontFamily,lineHeight:p.lineHeight,fontWeight:p.fontWeight});b=a.isPercent?r.numberFormatter.percentValue:r.numberFormatter.xAxis;for(a=0;a<n;a++)p=A[a],p=""+b.call(r.numberFormatter,p.value),p.length>q&&(k=p,q=p.length);return m.getOriSize(k)},_getHMaxLabelDimention:function(){var a=
this.config,b=this.chart,r=b.components,m=b.linkedItems.smartLabel,p=a.labels.style,q=0,A=a.axisRange.divArr,n=A.length,k;m.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);m.setStyle({fontSize:p.fontSize,fontFamily:p.fontFamily,lineHeight:p.lineHeight,fontWeight:p.fontWeight});b=a.isPercent?r.numberFormatter.percentValue:r.numberFormatter.xAxis;for(a=0;a<n;a++)p=A[a],p=""+b.call(r.numberFormatter,p.value),p.length>q&&(k=p,q=p.length);return m.getOriSize(k)},getCleanValue:function(a){var b=
null,r=this.chart.components.numberFormatter;a=P(a);0<a&&(b=r.getCleanValue(a));return b}},"cartesian",{base:10,showMinorDivLineValues:1,numMinorDivLines:void 0}])}]);N.register("module",["private","modules.renderer.js-axis-polarcartesan",function(){var b=this.hcLib,z=b.graphics.convertColor,G=b.getDashStyle,v=Math.floor;N.register("component",["axis","polarcartesan",{_drawComponents:function(){var b=this.config;b.drawLabels&&this._drawLabel();b.drawPlotlines&&this._drawPlotLine()},_drawPlotLine:function(){var b=
this.config,E=b.axisRange,t=E.tickInterval,a=this.chart,Q=E.max,E=E.min,r=b.axisPlotLineContainer,P=a.components.paper,T=this.graphics.line||[],L=0,D=z(b.divLineColor,b.divLineAlpha),B=b.divLineThickness,m=b.divLineIsDashed?G(b.divLineDashLen,b.divLineDashGap,B):"none",p=z(b.zeroPlaneColor,b.zeroPlaneAlpha),q=b.zeroPlaneThickness,A=b.animateAxis,n,k,g,f,S,C,Y,R,u,m={stroke:D,"stroke-width":B,"stroke-dasharray":m};n=a.get("config","animationObj");R=n.animObj;u=n.dummyObj;a=n.transposeAnimDuration;
n=n.animType;if(b.lines.isDraw){g=this._getVisibleConfig();L=E+t*v((g.minValue-3*t-E)/t);g=E+t*v((g.maxValue+3*t-E)/t);L=L<E?E:L;g=g>Q?Q:g;S=Q=L;for(L=0;Q<g;){if(Q!==E&&(0!==b.showZeroPlane||0!==Q)){0===Q&&1===b.showZeroPlane&&(m.stroke=p,m["stroke-width"]=q);m.path=["M"];k=b.polarAxis;f=k.config.categories.category;C=f.length;for(f=0;f<C;f++)Y=k.getPixel(f,k.config.centerY-this.getPixel(Q)),m.path.push(Y.x,Y.y,"L");m.path.pop();m.path.push("Z");T[L]?(k=T[L],a&&A?k.animateWith(u,R,m,a,n):k.attr(m)):
(k=P.path(m,r),T[L]=k);0===Q&&1===b.showZeroPlane&&(m.stroke=D,m["stroke-width"]=B);L+=1}b.showZeroPlane&&0>Q&&0<Q+t?(Q=0,S+=t):Q<S?Q=S:(Q+=t,S+=t)}if(T[L])for(Q=L;Q<T.length;Q++)T[Q].attr({path:[]});this.graphics.line=T}else if(T[L])for(Q=L;Q<T.length;Q++)T[Q].attr({path:[]})}},"cartesian"])}]);N.register("module",["private","modules.renderer.js-axis-gauge",function(){var b=this.hcLib,z=b.pluck,G=b.toPrecision,v=b.pluckNumber,F=b.graphics.convertColor,E=b.parseUnsafeString,t=b.preDefStr,a=t.POSITION_MIDDLE,
Q=t.POSITION_START,r=t.POSITION_TOP,P=t.POSITION_BOTTOM,T=t.POSITION_END,t=Math,L=t.round,D=t.min,B=t.max,m=t.abs,p=t.ceil,q=t.pow;N.register("component",["axis","gauge",{configure:function(){var a=this.config,b=a.rawAttr,k=this.chart.components.colorManager;N.register("component",["axis","cartesian"]).prototype.configure.call(this);a.majorTMColor=F(z(b.majorTMColor,k.getColor("tickColor")),v(b.majorTMAlpha,100));a.tickValueStep=v(b.tickValueStep,1);a.tickValueStep=L(a.tickValueStep);0>=a.tickValueStep&&
(a.tickValueStep=1);a.connectTickMarks=a.showTickMarks?v(b.connectTickMarks,1):0;a.showTickValues=v(b.showTickValues,a.showTickMarks);a.reverseScale=1==v(b.reverseScale,0);a.minorTMColor=F(z(b.minorTMColor,a.majorTMColor),v(b.minorTMAlpha,a.majorTMAlpha,100));a.minorTMHeight=a.showTickMarks?v(b.minorTMHeight,L(a.majorTMHeight/2)):0;a.tickValueDistance=v(b.tickValueDistance,0)+2;a.upperLimitDisplay=E(b.upperLimitDisplay)||"";a.lowerLimitDisplay=E(b.lowerLimitDisplay)||"";a.drawTickMarkConnector=b.drawTickMarkConnector||
0},setDataLimit:function(a,b){var k=this.config,g=k.axisRange,f=this.getGaugeAxisLimit,m=k.upperlimit,q=k.lowerlimit,p=k.setAdaptiveMin,r=k.majorTMNumber,k=k.adjustTM,u;u=!p;f=f.call(this,v(a,m),v(b,q),m,q,p,u,r,k);g.min=Number(G(f.min,10));g.max=Number(G(f.max,10));g.tickInterval=f.majorTickInt||1;g.numMajorTM=f.numMajorTM},_setTickIntervalAfterZoom:function(){},_drawComponents:function(){var a=this.config;a.drawTick&&this._drawTick();a.drawLabels&&this._drawLabel();a.drawTrendLines&&this._drawTrendLine()},
_drawTick:function(){var a=this.config,b=a.axisRange,k=b.tickInterval,g=a.isVertical,f=a.isOpposit,m=a.drawTick,q=a.drawTickMinor,p=a.canvas,r=this.chart,u=r.config,B=p.canvasBottom||u.canvasBottom,t=p.canvasLeft||u.canvasLeft,v=p.canvasRight||u.canvasRight,H=p.canvasTop||u.canvasTop,p=b.max,u=b.min,w=r.components.paper,K=this.graphics.tick||[],h=a.minorTMNumber,b=b.numMajorTM||a.majorTMNumber,z=a.axisAxisLineContainer,e=0,d=a.animateAxis,c,l,D,J,E,F;D={stroke:a.majorTMColor,"stroke-width":a.majorTMThickness,
"stroke-linecap":"round"};l={stroke:a.minorTMColor,"stroke-width":a.minorTMThickness,"stroke-linecap":"round"};if(a.lines.isDraw&&m){c=r.get("config","animationObj");r=c.animObj;E=c.dummyObj;m=c.transposeAnimDuration;c=c.animType;g?f?a.placeTicksInside?(f=v-a.tickMarkDistance,B=f-a.majorTMHeight,t=f-a.minorTMHeight):(f=v+a.tickMarkDistance,B=f+a.majorTMHeight,t=f+a.minorTMHeight):a.placeTicksInside?(f=t+a.tickMarkDistance,B=f+a.majorTMHeight,t=f+a.minorTMHeight):(f=t-a.tickMarkDistance,B=f-a.majorTMHeight,
t=f-a.minorTMHeight):f?a.placeTicksInside?(f=H+a.tickMarkDistance,B=f+a.majorTMHeight,t=f+a.minorTMHeight):(f=H-a.tickMarkDistance,B=f-a.majorTMHeight,t=f-a.minorTMHeight):a.placeTicksInside?(f=B-a.tickMarkDistance,B=f-a.majorTMHeight,t=f-a.minorTMHeight):(f=B+a.tickMarkDistance,B=f+a.majorTMHeight,t=f+a.minorTMHeight);a=a.drawTickMarkConnector?g?["M",f,this.getPixel(u),"L",f,this.getPixel(p)]:["M",this.getPixel(u),f,"L",this.getPixel(p),f]:[];D.path=a;K[e]?(a=K[e],m&&d?a.animateWith(E,r,{path:D},
m,c):a.attr({path:D})):(a=w.path(D,z),K[e]=a);e+=1;for(H=0;H<b;H+=1)if(F=H<b-1?G(Number(u+k*H),10):p,D.path=g?"M"+f+" "+this.getPixel(F)+"L"+B+" "+this.getPixel(F):"M"+this.getPixel(F)+" "+f+"L"+this.getPixel(F)+" "+B,K[e]?(a=K[e],m&&d?a.animateWith(E,r,D,m,c):a.attr(D)):(a=w.path(D,z),K[e]=a),e+=1,F!==p&&q)for(v=k/(h+1),J=1;J<=h&&!(F+v*J>=p);J+=1)l.path=g?"M"+f+" "+this.getPixel(F+v*J)+"L"+t+" "+this.getPixel(F+v*J):"M"+this.getPixel(F+v*J)+" "+f+"L"+this.getPixel(F+v*J)+" "+t,K[e]?(a=K[e],m&&d?
a.animateWith(E,r,l,m,c):a.attr(l)):(a=w.path(l,z),K[e]=a),e+=1;if(K[e])for(H=e;H<K.length;H++)K[H].attr({path:[]});this.graphics.tick=K}else if(K[e])for(H=e;H<K.length;H++)K[H].attr({path:[]})},_drawLabel:function(){var b=this.config,n=b.canvas,k=b.axisDimention||{},g=this.chart,f=g.config,q=g.components,C=g.linkedItems.smartLabel,B=b.axisRange,t=b.isOpposit,u=b.isReverse,v=B.numMajorTM||b.majorTMNumber,O=b.labels,z=O.style,H=b.isVertical,w=B.max,K=B.min,h=n.canvasTop||f.canvasTop,D=n.canvasLeft||
f.canvasLeft,e=n.canvasBottom||f.canvasBottom,n=n.canvasRight||f.canvasRight,d=b.axisLabelContainerTop,c=b.labelPadding,l=q.paper,M=b.labelMaxH,J=b.labelMaxW,k=H?k.x:k.y,E=this.graphics.labels||[],F=0,L=b.animateAxis,ka,ca,U,la,N,xa;xa={fontFamily:z.fontFamily,fontSize:z.fontSize,fontWeight:z.fontWeight,fontStyle:z.fontStyle,lineHeight:z.lineHeight};var aa,Z,ja,ma;z.lineHeight&&(la=z.lineHeight,-1!==la.indexOf("px")&&(la=la.replace("px",""),la=parseFloat(la)));if(b.labels.isDraw){ka=g.get("config",
"animationObj");aa=ka.animObj;Z=ka.dummyObj;g=ka.transposeAnimDuration;ka=ka.animType;ca=m(this.getPixel(K)-this.getPixel(K+B.tickInterval));H?(b.labelMaxH>ca&&!b.hasCategory&&(N=p(b.labelMaxH/ca)),N>b.labels.step&&(b.labels.step=N)):(b.labelMaxW>ca&&!b.hasCategory&&(N=p(b.labelMaxW/ca)),N>b.labels.step&&(b.labels.step=N),ja=D,ma=f.width-n);N=(H?J:ca/2)*b.labels.step;M=H?ca/2:M;B=B.tickInterval;J=b.labels.step?b.labels.step:1;C.useEllipsesOnOverflow(f.useEllipsesWhenOverflow);C.setStyle({fontSize:z.fontSize,
fontFamily:z.fontFamily,lineHeight:z.lineHeight,fontWeight:z.fontWeight});d.css(xa);for(f=0;f<v;f+=J)if(ca=f<v-J?G(Number(K+B*f),10):w,b.labels.drawNormalVal||b.labels.drawLimitVal&&(ca===K||ca===w))if(b.labels.drawNormalVal||ca===K||ca===w)if(b.labels.drawLimitVal||ca!==K&&ca!==w){xa=q.numberFormatter.scale;if(ca===K&&b.lowerLimitDisplay)xa=C.getSmartText(b.lowerLimitDisplay,N,M+la/2),U=xa.text;else if(ca===w&&b.upperLimitDisplay)xa=C.getSmartText(b.upperLimitDisplay,N,M+la/2),U=xa.text;else if(b.labels.drawNumericVal||
ca!==K&&ca!==w)if(b.labels.drawNumericVal)U=xa.call(q.numberFormatter,ca),xa=C.getOriSize(""+U);else continue;else if(xa=C.getSmartText(xa.call(q.numberFormatter,ca),N,M+la/2),xa.text===xa.oriText)U=xa.text;else continue;H?(U={fill:z.color,"line-height":la,"text-anchor":t?Q:T,text:U,x:t?(k||n)+c:(k||D)-c,y:this.getPixel(ca)},(!u&&ca===K&&b.lowerLimitDisplay||u&&ca===w&&b.upperLimitDisplay)&&xa.height>la&&(U["vertical-align"]=P),(!u&&ca===w&&b.upperLimitDisplay||u&&ca===K&&b.lowerLimitDisplay)&&xa.height>
la&&(U["vertical-align"]=r),b.placeValuesInside&&(U["text-anchor"]=t?T:Q)):(U={fill:z.color,"line-height":la,text:U,"text-anchor":a,x:this.getPixel(ca),y:t?(k||h)-c:(k||e)+c},(!u&&ca===K||u&&ca===w)&&xa.width>2*ja&&(U["text-anchor"]=Q),(!u&&ca===w||u&&ca===K)&&xa.width>2*ma&&(U["text-anchor"]=T),U["vertical-align"]=b.placeValuesInside?t?r:P:t?P:r);O.shiftX&&(U.x+=O.shiftX);O.shiftY&&(U.y+=O.shiftY);E[F]?(ca=E[F],g&&L?ca.animateWith(Z,aa,U,g,ka):ca.attr(U)):E[F]=ca=l.text(U,d);xa&&xa.tooltext?(ca.tooltip(xa.tooltext),
ca.trackTooltip(!0)):ca.trackTooltip(!1);F+=1}if(E[F])for(f=F;f<E.length;f++)E[f].attr({text:""});this.graphics.labels=E}else if(E[F])for(f=F;f<E.length;f++)E[f].attr({text:""})},placeAxis:function(a){var b=this.chart,k=b.components,g=b.linkedItems.smartLabel,f=this.config,q=f.axisRange,p=f.isVertical,r=f.isOpposit,t=f.labels.style,u=q.tickInterval,v=q.max,O=q.min,z,H=0,w=0,q="",K,h,V,e,d;K={left:0,right:0,top:0,bottom:0};if(0>=a)return K;f.labels.isDraw=!0;f.labels.drawNumericVal=!0;f.labels.drawNormalVal=
f.showTickValues;f.labels.drawLimitVal=f.showLimits;f.lines.isDraw=!0;f.labels.step=f.tickValueStep;f.labelPadding=0;g.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);g.setStyle({fontSize:t.fontSize,fontFamily:t.fontFamily,lineHeight:t.lineHeight,fontWeight:t.fontWeight});f.drawTick&&f.showTickMarks&&f.lines.isDraw?(a-=f.tickMarkDistance,w=B(f.minorTMHeight,f.majorTMHeight),f.placeTicksInside?(a+=f.tickMarkDistance,f.placeValuesInside&&(f.labelPadding=f.tickMarkDistance+w)):w>a?f.lines.isDraw=
!1:(p?r?K.right+=w+f.tickMarkDistance:K.left+=w+f.tickMarkDistance:r?K.top+=w+f.tickMarkDistance:K.bottom+=w+f.tickMarkDistance,a-=w,f.placeValuesInside||(f.labelPadding=f.tickMarkDistance+w))):f.lines.isDraw=!1;a-=f.tickValueDistance;if(f.drawLabels&&(f.showTickValues||f.showLimits)){b=m(this._getCustomPixel(O)-this._getCustomPixel(O+u))/2;f.labelPadding+=f.tickValueDistance;a-=f.tickValueDistance;z=k.numberFormatter.scale;for(h=O+u;h<v;h+=u)t=""+z.call(k.numberFormatter,G(h,10)),t.length>H&&(q=
t,H=t.length);w=g.getOriSize(q);p?w.width>a&&(f.labels.drawNumericVal=!1,f.upperLimitDisplay||f.lowerLimitDisplay||(f.labels.isDraw=!1),q="",w=g.getOriSize(q)):w.height>a&&(f.labels.drawNumericVal=!1,f.upperLimitDisplay||f.lowerLimitDisplay||(f.labels.isDraw=!1),q="",w=g.getOriSize(q));H=p?a:b;t=p?b:a;f.showLimits?(h=z.call(k.numberFormatter,v),e=z.call(k.numberFormatter,O),k=f.upperLimitDisplay||""+h,z=f.lowerLimitDisplay||""+e,d=g.getOriSize(k),d.width>w.width&&(V=g.getSmartText(k,H,t),k===h&&V.text===
V.oriText||f.labels.drawNumericVal)&&(q=k,w=d),h=g.getOriSize(z),h.width>w.width&&(V=g.getSmartText(z,H,t),z===e&&V.text===V.oriText||f.labels.drawNumericVal)&&(q=z),""===q&&(q=g.getOriSize(f.upperLimitDisplay).width>g.getOriSize(f.lowerLimitDisplay).width?k:z,w=g.getOriSize(q))):f.labels.drawLimitVal=!1;if(p)g.getSmartText(q,H,t);else for(h=O;h<=v;h+=u)if(O=g.getSmartText(q,H,t),""===O.text)H+=b;else break;O=g.getSmartText(q,H,t);f.labelMaxW=B(O.width,w.width);f.labelMaxH=B(O.height,w.height);!f.placeValuesInside&&
f.labels.isDraw?p?(f.labelMaxW=D(f.labelMaxW,a),r?K.right+=f.labelMaxW+f.tickValueDistance:K.left+=f.labelMaxW+f.tickValueDistance):(f.labelMaxH=D(f.labelMaxH,a),r?K.top+=f.labelMaxH+f.tickValueDistance:K.bottom+=f.labelMaxH+f.tickValueDistance):f.labelPadding=-f.labelPadding}else f.labels.isDraw=!1;return f.spaceTaken=K},getGaugeAxisLimit:function(a,b,k,g,f,m,p,r){var B=!0,u=!0,t=Number(k),O=Number(g),v,H;H={max:0,min:0,MajorTickInterval:1,numMajorTM:p};if(k&&g)t>a&&(a=t),O<b&&(b=O);else if(isNaN(a)&&
(a=.9,u=!1),isNaN(b)&&(b=0,B=!1),a===b&&0===a&&(isNaN(t)||(a=t),isNaN(t)||0===t))a=.9;v=Math.max(Math.floor(Math.log(Math.abs(b))/Math.LN10),Math.floor(Math.log(Math.abs(a))/Math.LN10));p=q(10,v);2>Math.abs(a)/p&&2>Math.abs(b)/p&&(v--,p=q(10,v));v=q(10,Math.floor(Math.log(a-b)/Math.LN10));0<a-b&&10<=p/v&&(p=v);v=(Math.floor(a/p)+1)*p;0>b?m=-1*(Math.floor(Math.abs(b/p))+1)*p:m?m=0:(m=Math.floor(Math.abs(b/p)-1)*p,m=0>m?0:m);f&&0>=a&&(v=0);H.max=!k||k&&t<a&&u?v:t;H.min=!g||g&&O>b&&B?m:O;H.min>H.max?
H.min==O&&H.max==t?(g=H.min,H.min=H.max,H.max=g):H.min==O?H.max=H.min+1:H.max==t&&(H.min=H.max-1):H.min==H.max&&(H.max=H.min+1);H.range=Math.abs(H.max-H.min);H.MajorTickInterval=p;this.calcTickInterval(H,k,r);H.max>t&&t>=a&&(H.max=t,H.range=t-H.min,H.numMajorTM=Math.ceil(H.range/H.majorTickInt)+1);H.min<O&&O<=b&&(H.min=O,H.range=H.max-O,H.numMajorTM=Math.ceil(H.range/H.majorTickInt)+1);return H},calcTickInterval:function(a,b,k){var g=0;-1!=a.numMajorTM&&2>a.numMajorTM&&(a.numMajorTM=2);b||b||-1===
a.numMajorTM?(a.numMajorTM=-1==a.numMajorTM?5:a.numMajorTM,k&&(b=function(a,b){for(var g=0,k=1,n;;){n=a.numMajorTM+g*k;n=0===n?1:n;if(b.isRangeDivisible(a.range,n,a.MajorTickInterval))break;g=-1==k||g>a.numMajorTM?++g:g;if(25<g){n=a.numMajorTM;break}k=g<=a.numMajorTM?-1*k:1}a.numMajorTM=1<n?n:a.numMajorTM},k=a.numMajorTM,b(a,this),2===a.numMajorTM&&(a.numMajorTM=k,1<a.range&&(a.range+=1,0>a.min?--a.min:a.max+=1),b(a,this),g=0))):(a.numMajorTM=-1==a.numMajorTM?5:a.numMajorTM,b=this.getDivisibleRange(a.min,
a.max,a.range,a.numMajorTM,a.MajorTickInterval,!0),k=b-a.range,a.range=b,0<a.max?a.max+=k:a.min-=k);a.majorTickInt=(a.max-a.min+g)/(a.numMajorTM-1)},isRangeDivisible:function(a,n,k){a/=n-1;n=new b.MathExt;return n.numDecimals(a)>n.numDecimals(k)?!1:!0},getDivisibleRange:function(a,b,k,g,f,m){if(3>g)return k;a=Math.abs(b-a);b=a/(g-1);this.isRangeDivisible(a,g,f)||(m&&Number(b)/Number(f)<(1<f?2:.5)&&(f/=10),b=(Math.floor(b/f)+1)*f,a=b*(g-1));return a}},"cartesian",{majorTMNumber:-1,majorTMHeight:6,
showTickMarks:1,majorTMThickness:1,upperlimit:void 0,lowerlimit:void 0,adjustTM:1,minorTMNumber:4,minorTMThickness:1,tickMarkDistance:3,placeTicksInside:0,placeValuesInside:0}])}]);N.register("module",["private","modules.renderer.js-axis-polarGauge",function(){var b=this.hcLib,z=b.pluck,G=b.toPrecision,v=b.pluckNumber,F=b.graphics.convertColor,E=b.parseUnsafeString,t=b.getDashStyle,a=b.getValidValue,Q=b.getFirstValue,b=b.preDefStr,r=b.POSITION_MIDDLE,P=b.POSITION_START,T=b.POSITION_TOP,L=b.POSITION_BOTTOM,
D=b.POSITION_END,B=Math,m=B.sin,p=B.cos,q=B.abs,A=2*B.PI;N.register("component",["axis","polarGauge",{configure:function(){var a=this.config,b=a.rawAttr;N.register("component",["axis","gauge"]).prototype.configure.call(this);a.upperLimitDisplay=b.upperLimitDisplay||"";a.lowerLimitDisplay=b.lowerLimitDisplay||"";a.polarPadding=4},_drawComponents:function(){var a=this.config;a.drawTick&&this._drawTick();a.drawLabels&&this._drawLabel();a.drawTrendLines&&this._drawTrendLine()},getAxisPosition:function(a,
b){return this.getPixel(a,b)},getPixel:function(a,b){var g=this.config,f=g.axisRange,q=f.min,C=f.max-q,r=g.startAngle||A/2,t=g.totalAngle||A/2,u=g.centerX||0,f=g.centerY||0;b=v(b,g.radius,0);g=r+t/C*(a-q);q=u+b*p(g);f+=b*m(g);return{x:q,y:f,angle:g}},getAngle:function(a){var b=this.config,g=b.axisRange,f=g.min;return(b.startAngle||A/2)+(b.totalAngle||A/2)/(g.max-f)*(a-f)},placeAxis:function(a){var b=this.config,g=this.chart,f=g.components,m=g.linkedItems.smartLabel,p=b.axisRange,r=b.labels.style,
t=p.tickInterval,u=b.upperLimitDisplay,A=b.lowerLimitDisplay,B=p.max,v=p.min,p=0,H,w;w={left:0,right:0,top:0,bottom:0};m.useEllipsesOnOverflow(g.config.useEllipsesWhenOverflow);m.setStyle({fontSize:r.fontSize,fontFamily:r.fontFamily,lineHeight:r.lineHeight,fontWeight:r.fontWeight});b.labels.isDraw=1;b.labels.drawNormalVal=1;b.labels.drawLimitVal=1;b.lines.isDraw=1;b.labels.step=b.tickValueStep;b.labelPadding=0;if(b.drawLabels&&b.showTickValues&&0<a){q(this.getPixel(v)-this.getPixel(v+t));b.labelPadding+=
b.tickValueDistance;g=f.numberFormatter.scale;for(r=v;r<=B;r+=t)v=""+g.call(f.numberFormatter,G(r,10)),v.length>p&&(H=v,p=v.length);f=m.getOriSize(H);if(f.width>a/2)return b.labels.isDraw=!1,w;b.showLimits?(u.length>p&&(H=u,p=u.length),A.length>p&&(H=A)):b.labels.drawLimitVal=!1;f=m.getOriSize(H);b.labelMaxW=f.width;b.labelMaxW>a/2&&(b.labelMaxW=a/2);b.labelMaxH=f.height;b.placeValuesInside?b.labelPadding=-b.labelPadding:(w.right+=b.labelMaxW+b.tickValueDistance,w.left+=b.labelMaxW+b.tickValueDistance,
w.top+=b.labelMaxH+b.tickValueDistance,w.bottom+=b.labelMaxH+b.tickValueDistance)}else b.labels.isDraw=!1;return w},_drawLabel:function(){var a=this.config,b=this.chart,g=b.components,f=a.axisRange,m=b.linkedItems.smartLabel,q,p=a.labels.style,t=a.labelPadding||0,u=!1,A=a.radius,B=v(a.gaugeOuterRadius,A),A=v(a.gaugeInnerRadius,A),z=a.centerX,H=a.centerY,w=a.placeValuesInside,K=a.labelMaxH,h=a.labelMaxW,V=f.max,e=f.min,d=a.axisLabelContainerTop,c=g.paper,l=this.graphics.labels||[],M=0,J=a.animateAxis,
E,F,Q;E={fontFamily:p.fontFamily,fontSize:p.fontSize,fontWeight:p.fontWeight,fontStyle:p.fontStyle,lineHeight:p.lineHeight};var ka,ca,U;p.lineHeight&&(Q=p.lineHeight,-1!==Q.indexOf("px")&&(Q=Q.replace("px",""),Q=parseFloat(Q)));m.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);m.setStyle({fontSize:p.fontSize,fontFamily:p.fontFamily,lineHeight:p.lineHeight,fontWeight:p.fontWeight});if(a.labels.isDraw){M=b.get("config","animationObj");ka=M.animObj;ca=M.dummyObj;b=M.transposeAnimDuration;U=M.animType;
a.labels.step?q=f.tickInterval*a.labels.step:q=f.tickInterval;d.css(E);f=e;for(M=0;f<=V;f+=q)if(a.labels.drawNormalVal||a.labels.drawLimitVal&&(f===e||f===V))if(a.labels.drawNormalVal||f===e||f===V)if(a.labels.drawLimitVal||f!==e&&f!==V)if(0!==a.showZeroPlaneValue||0!==a.showZeroPlane||0!==f)E=g.numberFormatter.scale,f===e&&a.lowerLimitDisplay?(E=m.getSmartText(a.lowerLimitDisplay,h,K),E=E.text):f===V&&a.upperLimitDisplay?(E=m.getSmartText(a.upperLimitDisplay,h,K),E=E.text):E=E.call(g.numberFormatter,
G(f,10)),F=w?this.getPixel(f,A+t-a.polarPadding):this.getPixel(f,B+t+a.polarPadding),E={fill:p.color,"line-height":Q,text:E,x:F.x,y:F.y},F.x>z-10&&F.x<z+10&&F.y<H?(E["text-anchor"]=r,E["text-valign"]=w?T:L):F.x>z-10&&F.x<z+10&&F.y<H?(E["text-anchor"]=r,E["text-valign"]=w?L:T):(E["text-anchor"]=F.x<z?w?P:D:w?D:P,E["text-valign"]="center"),l[M]?(F=l[M],b&&J?F.animateWith(ca,ka,E,b,U):F.attr(E)):l[M]=c.text(E,d),M+=1,!u&&f<V&&f+q>V&&(f=V-q,u=!0);if(l[M])for(f=M;f<l.length;f++)l[f].attr({text:""});this.graphics.labels=
l}else if(l[M])for(f=M;f<l.length;f++)l[f].attr({text:""})},_drawTick:function(){var a=this.config,b=a.axisRange,g=b.tickInterval,f=a.drawTick,m=a.drawTickMinor,q=this.chart,p=q.components,r=b.max,u=b.min,t=a.radius,b=v(a.gaugeOuterRadius,t),t=v(a.gaugeInnerRadius,t),p=p.paper,A=this.graphics.tick||[],z=a.minorTMNumber,H=0,w=a.animateAxis,K=!1,h,D,e,d,c,l,M,J,E,F;J=a.axisAxisLineContainer;d={stroke:a.majorTMColor,"stroke-width":a.majorTMThickness,"stroke-linecap":"round"};e={stroke:a.minorTMColor,
"stroke-width":a.minorTMThickness,"stroke-linecap":"round"};if(a.lines.isDraw&&f){H=q.get("config","animationObj");q=H.animObj;E=H.dummyObj;f=H.transposeAnimDuration;F=H.animType;D=this._getVisibleConfig();H=u+g*B.floor((D.minValue-3*g-u)/g);D=u+g*B.floor((D.maxValue+3*g-u)/g);D=D>r?r:D;u=H<u?u:H;for(H=0;u<=D;u+=g){a.placeTicksInside?(h=this.getPixel(u,t),c=this.getPixel(u,t+a.majorTMHeight)):(h=this.getPixel(u,b),c=this.getPixel(u,b-a.majorTMHeight));d.path="M"+h.x+" "+h.y+"L"+c.x+" "+c.y;A[H]?(h=
A[H],f&&w?h.animateWith(E,q,d,f,F):h.attr(d)):(h=p.path(d,J),A[H]=h);H+=1;if(u<r&&m)for(c=g/(z+1),M=1;M<=z;M+=1)l=u+c*M,a.placeTicksInside?(h=this.getPixel(l,t),l=this.getPixel(l,t+a.minorTMHeight)):(h=this.getPixel(l,b),l=this.getPixel(l,b-a.minorTMHeight)),e.path="M"+h.x+" "+h.y+"L"+l.x+" "+l.y,A[H]?(h=A[H],f&&w?h.animateWith(E,q,e,f,F):h.attr(e)):(h=p.path(e,J),A[H]=h),H+=1;!K&&u<r&&u+g>r&&(u=r-g,K=!0)}if(A[H])for(u=H;u<A.length;u++)A[u].attr({path:[]});this.graphics.tick=A}else if(A[H])for(u=
H;u<A.length;u++)A[u].attr({path:[]})},_drawPlotBand:function(){},_drawPlotLine:function(){},_drawTrendLine:function(){var b,k,g,f,m,q,p,A,u,X,O,W,H,w,K,h,V,e,d=this.config,c=d.axisRange,l=c.max,c=c.min,M=this.chart;W=M.config;var J=M.linkedItems.smartLabel,G=M.components,L=G.colorManager,va=d.scaleFactor,ka=d.centerX||0,ca=d.centerY||0,U=d.canvas.canvasWidth||W.canvasWidth,la=d.trend.trendStyle,N=d.axisTrendContainerTop,xa=d.axisTrendContainerBottom,aa=d.axisTrendLabelContainer,Z=G.paper,ja=this.components.trendObj||
[],ma={fontFamily:la.fontFamily,fontSize:la.fontSize,lineHeight:la.lineHeight,fontWeight:la.fontWeight,fontStyle:la.fontStyle},oa=d.trendPoints,Aa=B.PI/180,ga={},wa=d.animateAxis,ia,ua,Ca;ia=0;var da;f={};A={};g={};m={};var qa={},ba,na,pa,La,ea,za,ha,sa,fa,ya,Ia,Fa;if(oa){ia=M.get("config","animationObj");ya=ia.animObj;Ia=ia.dummyObj;M=ia.transposeAnimDuration;Fa=ia.animType;J.useEllipsesOnOverflow(W.useEllipsesWhenOverflow);J.setStyle(ma);ia=ua=0;for(Ca=oa.point.length;ua<Ca;ua+=1)ba=oa.point[ua],
na=v(ba.startvalue,ba.value),pa=v(ba.endvalue,na),da=na!==pa,na<=l&&na>=c&&pa<=l&&pa>=c&&(b=na,k=pa,a(E(ba.markertooltext)),g=a(E(ba.displayvalue),da?"":G.numberFormatter.scale(na)),v(ba.showontop,d.ticksBelowGauge,d.ticksBelowGraph,1),f=z(ba.color,L.getColor("trendLightColor")),m=v(ba.alpha,99),q=v(ba.thickness,1),p=ba.dashed?t(ba.dashlen||2,ba.dashgap||2,ba.thickness||1):"",A=v(ba.usemarker,0),u=F(z(ba.markercolor,ba.color,L.getColor("trendLightColor")),100),X=F(z(ba.markerbordercolor,ba.bordercolor,
L.getColor("trendDarkColor")),100),O=v(v(ba.markerradius)*va,5),W=Q(ba.markertooltext),H=v(v(ba.trendvaluedistance,d.trendValueDistance)*va,d.tickValueDistance),w=v(ba.valueinside,d.placeValuesInside,0),K=v(ba.showborder,1),h=F(z(ba.bordercolor,ba.color,L.getColor("trendDarkColor")),v(ba.borderalpha,ba.alpha,100)),V=v(v(ba.radius)*va),e=v(v(ba.innerradius)*va),La=Math.cos(89.99*Aa),ea=-La,V=v(V,d.gaugeOuterRadius),e=v(e,da?Math.max(d.gaugeInnerRadius-15,0):d.gaugeInnerRadius),za=this.getPixel(na,
V),ha=this.getPixel(na,e),sa=za.x,za=za.y,fa=ha.x,ha=ha.y,pa=this.getAngle(pa),na=this.getAngle(na),da?(na>pa&&(na+=pa,pa=na-pa,na-=pa),f={fill:F(f,m),"stroke-width":K?q:0,stroke:h,"stroke-dasharray":p},m={ringpath:[ka,ca,V,e,na,pa]}):(f={"stroke-width":K?q:0,stroke:h,"stroke-linecap":"round","stroke-dasharray":p},m={path:["M",sa,za,"L",fa,ha]}),A?(A={fill:u,"stroke-width":1,stroke:X},qa={polypath:[3,sa,za,O,(-na+Math.PI)/Aa,0]}):A={},""!==g?(ga=(k+b)/2,pa=this.getAngle(ga-c),b=Math.cos(pa),k=Math.sin(pa),
O=J.getOriSize(g).width,w?(ga=e-2-H,H=b>La?D:b<ea?P:r):(ga=V+2+H,H=b>La?P:b<ea?D:r),sa=ka+ga*b,za=ca+ga*k,ga=J.getOriSize(g).height,ga=J.getSmartText(g,U,ga),sa=U<sa+O?U-O/2:sa<O?O/2:sa,O>U&&(sa=U/2),g={fill:ba.color||la.color,text:ga.text,"text-anchor":H,"vertical-align":T,x:sa,y:za},ba=ga.height,za=b>La||b<ea?za+(-(ba/2)+.4*ba*k*(w?-1:1)):w?za+-(0>k?0:ba):za+-(0<k?0:ba),g.y=za):g={text:""},ja[ia]?(w=ja[ia].graphics.drawing,da=ja[ia].graphics.label,La=ja[ia].graphics.marker,w.attr(f),La.attr(A),
La.tooltip(W),da.css(ma).tooltip(ga.oriText),M&&wa?(w.animateWith(Ia,ya,m,M,Fa),La.animateWith(Ia,ya,qa,M,Fa),da.animateWith(Ia,ya,g,M,Fa)):(w.attr(m),La.attr(qa),da.attr(g)),d.showTooltip&&ga.oriText?da.trackTooltip(!0):da.trackTooltip(!1),La.trackTooltip(d.showTooltip&&""!==W)):(w=da?Z.ringpath(ka,ca,V,e,na,pa,xa):Z.path(N),da=Z.text(g,ma,aa),La=Z.polypath(N),w.attr(f),w.attr(m),La.attr(A),La.attr(qa),La.tooltip(W),da.tooltip(ga.oriText),d.showTooltip&&ga.oriText?da.trackTooltip(!0):da.trackTooltip(!1),
La.trackTooltip(d.showTooltip&&""!==W),ja[ia]={},ja[ia].graphics={},ja[ia].graphics.drawing=w,ja[ia].graphics.label=da,ja[ia].graphics.marker=La),ia+=1);this.components.trendObj=ja}if(ja[ia])for(ua=ia;ua<ja.length;ua++)ja[ua].graphics.drawing.attr({path:["M",0,0]}),ja[ua].graphics.marker.attr({polypath:["M",0,0]}),ja[ua].graphics.label.attr({text:"","text-bound":[]});for(ua=0;ua<ia;ua++)ja[ua].graphics.label.attr({"text-bound":[la.backgroundColor,la.borderColor,la.borderThickness,la.borderPadding,
la.borderRadius,la.borderDash]})}},"gauge",{trendPoints:void 0,ticksBelowGauge:void 0,ticksBelowGraph:void 0,trendValueDistance:void 0}])}]);N.register("module",["private","modules.renderer.js-axis-polar",function(){var b=this.hcLib,z=b.pluck,G=b.pluckNumber,v=b.setLineHeight,F=b.graphics.convertColor,E=b.getDashStyle,t=b.plotEventHandler,b=b.preDefStr,a=b.POSITION_MIDDLE,Q=b.POSITION_START,r=b.POSITION_TOP,P=b.POSITION_BOTTOM,T=b.POSITION_END,b=Math,L=b.sin,D=b.cos,B=b.min,m=b.PI,p=2*m;N.register("component",
["axis","polar",{configure:function(){var a=this.config,b=a.rawAttr,n=this.chart.components.colorManager;N.register("component",["axis","cartesian"]).prototype.configure.call(this);a.gridLineColor=F(z(b.radarSpikeColor,n.getColor("divLineColor")),G(b.radarSpikeAlpha,b.radarInLineAlpha,n.getColor("divLineAlpha")));a.radarBorderColor=F(z(b.radarBorderColor,n.getColor("divLineColor")),G(b.radarBorderAlpha,100));a.radarFillColor=F(z(b.radarFillColor,n.getColor("altHGridColor")),G(b.radarFillAlpha,n.getColor("altHGridAlpha")))},
_drawComponents:function(){var a=this.config;a.drawLabels&&a.hasCategory&&this._drawCategory()},getAxisPosition:function(a,b){return this.getPixel(a,b)},getPixel:function(a,b){var n=this.config,k=n.axisRange,g=k.min,f=k.max-g+1,m=n.startAngle||-(p/4),C=n.totalAngle||-p,r=n.centerX||0,k=n.centerY||0;b=G(b,n.radius,0);n=m+C/f*(a-g);g=r+b*D(n);k+=b*L(n);return{x:g,y:k}},getAngle:function(a,b){var n=this.config;return(180/m*Math.atan2(b-(n.centerY||0),(n.centerX||0)-a)+450)%360},_drawCategory:function(){var b=
this.config,m=this.chart,n=b.isOpposit,k=b.labels,g=k.style,f=b.axisContainer,p=b.axisPlotLineContainer,C=m.components.paper,B=this.components.categoryLabel||[],D=this.graphics.radarBorder||[],u=m.jsonData.categories,X=b.categories.category,O=b.labelPadding,W,H,w,K,h,V,e=b.gridLineColor,d=b.gridLineWidth,c=function(a){return function(c){t.call(this,m,c,a)}},l=0,M=b.centerX,J=b.centerY,L=b.animateAxis,Ka,va,ka,ca,U,la,N,xa,aa,Z,ja;xa=G(b.radius,0);ka=X?X.length-1:0;Ka=m.get("config","animationObj");
aa=Ka.animObj;Z=Ka.dummyObj;va=Ka.transposeAnimDuration;ja=Ka.animType;K={stroke:b.radarBorderColor,fill:b.radarFillColor,"stroke-width":b.radarBorderThickness,path:["M"]};if(0!==b.showRadarBorder){for(l=Ka=0;Ka<=ka;Ka++)la=this.getPixel(Ka,xa),K.path.push(la.x,la.y,"L");K.path.pop();K.path.push("Z")}D[0]?va&&L?D[0].animate(K,va):D[0].attr(K):D[0]=C.path(K,p);this.graphics.radarBorder=D;if(b.labels.isDraw){u&&(W=u[0].font,H=u[0].fontsize,w=u[0].fontcolor);for(l=Ka=0;Ka<=ka;Ka++)if(D=X[Ka],la=G(D.x,
D.y,Ka),b.labels.drawNormalVal||b.labels.drawLimitVal&&(0===Ka||la===ka))if(b.labels.drawNormalVal||0===la||la===ka)if(b.labels.drawLimitVal||0!==la&&la!==ka){u=z(D.font,D.labelfont);K=z(D.fontsize,D.labelfontsize);h=G(D.fontbold,D.labelfontbold,0)?"bold":void 0;V=G(D.fontitalic,D.labelfontitalic,0)?"italic":void 0;U=F(z(D.fontcolor,D.labelfontcolor,w,g.color),G(D.labelalpha,b.rawAttr.labelFontAlpha,100));u={fontFamily:z(u,W,g.fontFamily),fontSize:z(K,H,g.fontSize),fontWeight:z(h,g.fontWeight),fontStyle:z(V,
g.fontStyle)};u.lineHeight=v(u);u.lineHeight&&(ca=u.lineHeight,-1!==ca.indexOf("px")&&(ca=ca.replace(/px/i,""),ca=parseFloat(ca)));K=this.getPixel(la,xa+O);V=K.x;N=K.y;K=D.label||"";if(0===G(D.showlabel,1)||0===b.showLabels)K="";h=Number(D.labelPadding)||0;U={fill:U,"line-height":ca,"font-size":g.fontSize,text:K,cursor:D.link?"pointer":"",x:V,y:N};h&&(U.y+=h);U["vertical-align"]=n?P:r;0===Ka?(U["text-anchor"]=a,U["vertical-align"]=P):Ka===(ka+1)/2?(U["text-anchor"]=a,U["vertical-align"]=r):(U["text-anchor"]=
Ka<(ka+1)/2?T:Q,U["vertical-align"]="center");la=this.getPixel(la,xa);h={stroke:e,"stroke-width":d,"stroke-dasharray":"none",path:["M",M,J,"L",la.x,la.y]};k.shiftX&&(U.x+=k.shiftX);k.shiftY&&(U.y+=k.shiftY);B[l]?(la=B[l].graphics.line,va&&L?la.animateWith(Z,aa,h,va,ja):la.attr(h),h=B[l].graphics.label,va&&L?h.animateWith(Z,aa,U,va,ja):h.attr(U),h.css(u),b.showTooltip&&D.tooltext?(h.tooltip(D.tooltext),h.trackTooltip(!0)):h.trackTooltip(!1)):(la=C.path(h,p),h=C.text(U,u,f),b.showTooltip&&D.tooltext?
(h.tooltip(D.tooltext),h.trackTooltip(!0)):h.trackTooltip(!1),h.click(c("datalabelclick")).hover(c("dataLabelRollOver"),c("dataLabelRollOut")),B[l]={},B[l].graphics={},B[l].config={},B[l].graphics.line=la,B[l].graphics.label=h);B[l].config.labelBox={label:K,lineHeight:u.lineHeight,border:G(D.borderthickness,D.labelborderthickness)?G(D.borderthickness,D.labelborderthickness,1)+"px solid":"",borderColor:D.bordercolor||D.labelbordercolor?F(D.bordercolor||D.labelbordercolor,G(D.borderalpha,D.labelborderalpha,
D.alpha,D.labelalpha,100)):"",borderThickness:G(D.borderthickness,D.labelborderthickness),borderPadding:G(D.borderpadding,D.labelborderpadding),borderRadius:G(D.borderradius,D.labelborderradius),backgroundColor:D.bgcolor||D.labelbgcolor?F(D.bgcolor||D.labelbgcolor,G(D.bgalpha,D.labelbgalpha,D.alpha,D.labelalpha,100)):"",borderDash:G(D.borderdashed,D.labelborderdashed,0)?E(G(D.borderdashlen,D.labelborderdashlen,4),G(D.borderdashgap,D.labelborderdashgap,2),G(D.borderthickness,D.labelborderthickness,
1)):0===G(D.borderdashed,D.labelborderdashed)?"none":g.borderDash};B[l].graphics.label.data("eventArgs",{link:D.link||D.labellink||g.labelLink,text:U.text,index:l});l+=1}if(B[l])for(Ka=l;Ka<B.length;Ka++)B[Ka].graphics.line.attr({path:["M",0,0]}),B[Ka].graphics.label.attr({text:"","text-bound":[]});this.components.categoryLabel=B}else if(B[l])for(Ka=l;Ka<B.length;Ka++)B[Ka].graphics.line.attr({path:["M",0,0]}),B[Ka].graphics.label.attr({text:"","text-bound":[]});for(Ka=0;Ka<l;Ka++)b=B[Ka].config.labelBox,
b.label?B[Ka].graphics.label.attr({"text-bound":[z(b.backgroundColor,g.backgroundColor),z(b.borderColor,g.borderColor),z(b.borderThickness,g.borderThickness),z(b.borderPadding,g.borderPadding),z(b.borderRadius,g.borderRadius),z(b.borderDash,g.borderDash)]}):B[Ka].graphics.label.attr({"text-bound":[]})},placeAxis:function(a,b){var n,k,g,f,m,p,r=this.config,t=this.chart,u=t.linkedItems.smartLabel,D=r.labels.style,O=t.jsonData.categories,W=r.labelPadding=G(r.rawAttr.axisValuePadding,10),H=r.useEllipsesWhenOverflow,
w=0,K=0,h=0,V=0,e=b/2,d=b/2,c=a/2,l=a/2,M,J;M=r.categories.category;r.labels.isDraw=1;r.labels.drawNormalVal=1;r.labels.drawLimitVal=1;if(r.showLabels)for(O&&(m=O[0].font,p=O[0].fontsize),r=0,O=M.length;r<O;r++)J=M[r],n=J.font,k=J.fontsize,g=J.fontbold?"bold":"normal",f=J.fontitalic?"italic":"normal",n={fontFamily:z(n,m,D.fontFamily),fontSize:z(k,p,D.fontSize),fontWeight:z(g,D.fontWeight),fontStyle:z(f,D.fontStyle)},k=v(n),u.useEllipsesOnOverflow(t.config.useEllipsesWhenOverflow),u.setStyle(n),0===
r?(n=u.getSmartText(J.label,a,B(k,e),H),J.oriLabel=J.label,J.label=n.text,n.width+=W,n.height+=W,n.height>w&&(V=w=n.height)):r===O/2?(n=u.getSmartText(J.label,a,B(k,d),H),J.oriLabel=J.label,J.label=n.text,n.width+=W,n.height+=W,n.height>V&&(V=n.height)):r<O/2?(n=u.getSmartText(J.label,l,k,H),J.oriLabel=J.label,J.label=n.text,n.width+=W,n.height+=W,n.width>K&&(K=n.width)):(n=u.getSmartText(J.label,c,k,H),J.oriLabel=J.label,J.label=n.text,n.width+=W,n.height+=W,n.width>h&&(h=n.width));return{top:w,
left:K,right:h,bottom:V}}},"cartesian",{axisValuePadding:10,gridLineWidth:1,showRadarBorder:1,radarBorderThickness:2}])}]);N.register("module",["private","modules.renderer.js-dataset-column",function(){var b=this.window,z=this.hcLib,G=z.parseConfiguration,v="rgba(192,192,192,"+(/msie/i.test(b.navigator.userAgent)&&!b.opera?.002:1E-6)+")",b=z.TOUCH_THRESHOLD_PIXELS,F=z.CLICK_THRESHOLD_PIXELS,E=z.extend2,t=z.pluck,a=z.pluckNumber,Q=z.toRaphaelColor,r=z.graphics.convertColor,P=z.HUNDREDSTRING,T=z.plotEventHandler,
L=z.hasTouch?b:F,D=z.getValidValue,B=z.getFirstValue,m=z.parseTooltext,p=z.regex.dropHypeash,q=z.HASHSTRING,b=z.preDefStr,A=b.DEFAULT,n=b.showHoverEffectStr,k=b.visibleStr,g=b.setRolloverAttrStr,f=b.setRolloutAttrStr,b=Math,S=b.min,C=b.max,Y=b.abs,R=b.ceil,u=b.floor,X=z.getFirstColor,O=z.graphics.getLightColor,W=z.schedular,H=z.toolTip;N.register("component",["dataset","Column",{type:"column",pIndex:2,customConfigFn:"_createDatasets",configure:function(){var b=this.chart,f=this.config,h=this.JSONData,
g=b.singleseries,e=b.config.isdual,d=b.config,c=b.jsonData.chart,l=b.components,k=l.colorManager,n=f.plotColor=k.getPlotColor(this.index||this.positionIndex),u=a(h.dashed,c.plotborderdashed),m=a(c.useplotgradientcolor,1),p,q,r=z.getDashStyle;q=b.isBar;var H=b.is3D,B;this.__setDefaultConfig();G(h,f,d,{data:!0});f.showplotborder=a(c.showplotborder,H?0:1);p=d.plotborderdashlen;d=d.plotborderdashgap;f.plotfillangle=a(360-c.plotfillangle,q?180:90);f.plotfillalpha=q=t(h.alpha,c.plotfillalpha,P);f.plotColor=
t(h.color,n);f.legendSymbolColor=f.plotColor;f.plotgradientcolor=z.getDefinedColor(c.plotgradientcolor,k.getColor("plotGradientColor"));!m&&(f.plotgradientcolor="");f.plotborderalpha=t(c.plotborderalpha,q,P);f.plotbordercolor=t(c.plotbordercolor,H&&!g?"#ffffff":k.getColor("plotBorderColor"));f.plotborderdashstyle=u?r(p,d,void 0):"none";f.showShadow=H?a(c.showshadow,1):a(c.showshadow,k.getColor("showShadow"));f.definedGroupPadding=C(a(c.plotspacepercent),0);f.parentYAxis=e?B="s"===t(h.parentyaxis&&
h.parentyaxis.toLowerCase(),"p")?1:0:B=0;this.yAxis=l.yAxis[B];this.visible=1===a(h.visible,!Number(h.initiallyhidden),1);!0===this.visible?this._conatinerHidden=!1:this._containerHidden=!0;this._setConfigure();this._realTimeConfigure&&this._realTimeConfigure();!1!==b.hasLegend&&this._addLegend()},_setConfigure:function(b,f){var h=this.chart,g=h.config,e=this.config,d=this.JSONData,c=b||d.data,l=h.singleseries,k=h.components,n=k.xAxis[0],u=n.getCategoryLen(),u=b?b.data.length:u,m=h.jsonData.chart,
k=k.colorManager,p=e.showplotborder,q=e.plotColor,H=g.showtooltip,A=z.parseUnsafeString,v=g.yaxisname,R=g.xaxisname,X=g.tooltipsepchar,W=g.seriesnameintooltip,E=z.parseTooltext,F,G,Y,P,T,N,ia=g.plotborderdashlen,ua=g.plotborderdashgap,Ca=g.plotborderthickness,da=g.useroundedges,qa=g.plothovereffect,ba=e.plotfillangle,na,pa,La,ea=e.plotborderdashstyle,za,ha,sa,fa,ya,Ia,Fa,Ba,Ja,Ha=z.getDashStyle,Da=this.components.data,Ma=h.isBar,Na=h.is3D,Oa,Sa=-Infinity,Ua=Infinity,Pa=this.yAxis,ab=g.use3dlighting,
Xa=g.usedataplotcolorforlabels,$a;g.dragTolerance=g.isDrag?(p&&5<Ca?Ca/2+1:5)+L:0;Da||(Da=this.components.data=[]);this.visible=1===a(this.visible,this.JSONData.visible,!Number(this.JSONData.initiallyhidden),1);for(Oa=0;Oa<u;Oa++){b?(N=b&&b.data[Oa]||{},$a=void 0!==f?f+Oa:Da.length-u+Oa,G=Da[$a]):(G=Da[Oa],N=c&&c[Oa]||{});h=G&&G.config;G||(G=Da[Oa]={});G.config||(h=Da[Oa].config={});h.showValue=a(N.showvalue,e.showvalues);h.setValue=G=Pa.getCleanValue(N.value,g.stack100percent);h.setLink=t(N.link);
h.toolTipValue=q=Pa.dataLabels(G);h.setDisplayValue=P=A(N.displayvalue);h.displayValue=t(P,q);q=a(N.dashed);P=a(N.dashlen,ia);F=ua=a(N.dashgap,ua);null!==G&&(Sa=C(Sa,G),Ua=S(Ua,G));h.plotBorderDashStyle=P=1===q?Ha(P,F,Ca):0===q?"none":ea;l?(q=k.getPlotColor(a($a-u,Oa)),q=t(N.color,q),Xa&&n.updateCategory(Oa,{labelfontcolor:r(q)}),La=t(N.alpha,N.borderalpha,e.plotborderalpha,na).toString()):(q=t(N.color,e.plotColor),La=t(N.alpha,e.plotborderalpha,na).toString());pa=t(N.ratio,e.ratio);na=t(N.alpha,
e.plotfillalpha);h.shadow={opacity:e.showShadow?na/100:0};0>G&&!da&&(T=e.plotfillangle,ba=Ma?180-ba:360-ba);h.colorArr=F=z.graphics.getColumnColor(q+","+e.plotgradientcolor,na,pa,ba,da,e.plotbordercolor,La,Ma?1:0,Na?!0:!1);h.originalPlotColor=q;za=n.getLabel(a($a-u,Oa));h.origLabel=G=D(A(za.label));G=h.label=D(A(za.tooltext))||G;if(0!==qa){za=t(N.hovercolor,d.hovercolor,m.plotfillhovercolor,m.columnhovercolor,q);ha=t(N.hoveralpha,d.hoveralpha,m.plotfillhoveralpha,m.columnhoveralpha,na);sa=t(N.hovergradientcolor,
d.hovergradientcolor,m.plothovergradientcolor,e.plotgradientcolor);!sa&&(sa="");pa=t(N.hoverratio,d.hoverratio,m.plothoverratio,pa);fa=a(360-N.hoverangle,360-d.hoverangle,360-m.plothoverangle,ba);ya=t(N.borderhovercolor,d.borderhovercolor,m.plotborderhovercolor,e.plotbordercolor);Ia=t(N.borderhoveralpha,d.borderhoveralpha,m.plotborderhoveralpha,m.plotfillhoveralpha,m.columnhoveralpha,La,na);La=a(N.borderhoverthickness,d.borderhoverthickness,m.plotborderhoverthickness,e.showplotborder&&Ca);Fa=N.borderhoverdashed||
d.borderhoverdashed||m.plotborderhoverdashed;Ba=a(N.borderhoverdashgap,d.borderhoverdashgap,m.plotborderhoverdashgap,ia);Ja=a(N.borderhoverdashlen,d.borderhoverdashlen,m.plotborderhoverdashlen,ua);Fa=void 0!==Fa?Number(Fa)?Ha(Ja,Ba,La):"":P;if(g.drawTrendRegion||1==qa&&za===q)za=O(za,70);q=z.graphics.getColumnColor(za+","+sa,ha,pa,fa,da,ya,Ia.toString(),Ma?1:0,Na?!0:!1);h.setRolloutAttr={fill:Na?[Q(F[0]),!ab]:Q(F[0]),stroke:p&&Q(F[1]),"stroke-width":Ca,"stroke-dasharray":P};h.setRolloverAttr={fill:Na?
[Q(q[0]),!ab]:Q(q[0]),stroke:Q(q[1]),"stroke-width":La,"stroke-dasharray":Fa}}F=h.toolTipValue;h.origToolText=q=D(A(t(N.tooltext,d.plottooltext,m.plottooltext)));H?null===F?N=!1:void 0!==q?(P=[1,2,3,4,5,6,7],G={yaxisName:v,xaxisName:R,formattedValue:F,label:G},N=E(q,P,G,N,m,d)):(W&&(Y=B(d&&d.seriesname)),N=Y?Y+X:"",N+=G?G+X:""):N=!1;h.toolText=N;h.setTooltext=N;T&&(ba=T);$a++}e.maxValue=Sa;e.minValue=Ua},init:function(a){var b=this.chart;if(!a)return!1;this.JSONData=a;this.chartGraphics=b.chartGraphics;
this.components={};this.graphics={};this.configure()},_addLegend:function(){var b=this.chart,f=b.isBar,h=b.jsonData.chart,g,e;e=this.config;var d=X(e.legendSymbolColor),b=b.components.legend;g=a(h.use3dlighting,h.useplotgradientcolor,1);h=O(d,60).replace(p,q);g?(g=O(d,40),f={FCcolor:{color:d+","+d+","+g+","+d+","+d,ratio:"0,30,30,30,10",angle:f?0:270,alpha:"100,100,100,100,100"}}):f={FCcolor:{color:d,angle:f?0:270,ratio:"0",alpha:"100"}};e={enabled:e.includeinlegend,type:this.type,fillColor:Q(f),
strokeColor:Q(h),rawFillColor:d,rawStrokeColor:d,label:B(this.JSONData.seriesname)};this.legendItemId=b.addItems(this,this.legendInteractivity,e)},legendInteractivity:function(a,b){var f=this.config,g=a.visible,e=b.config,d=b.graphics,c=f.itemHiddenStyle.color,f=f.itemStyle.color,l=e.fillColor,k,e=e.strokeColor;g?a.hide():a.show();g={legendItemSymbol:{fill:g?c:l,stroke:g?c:e},legendItemText:{fill:g?c:f},legendItemLine:{stroke:g?c:e}};for(k in d)(c=d[k])&&g[k]&&c.attr(g[k])},_checkPointerOverColumn:function(a,
b,f){var g=this.chart.config,e=g.plotborderthickness,d=g.showplotborder,c=this.components,c=c.dataRT||c.data,l,k,n,u,m,q=g.viewPortConfig,p=q.x,q=q.scaleX;l=this.config.plotsPerBin||1;var C=c&&c.length,r=0,H=0;a=(R(a/l)-1)*l+1;l=a+l-1;g=g.dragTolerance||0;for(C=l<C?l:C;C>=a;C--){l=c[C];if(!l)break;l._height<L&&(r=L);l._width<L&&(H=L);if(l._xPos||l._yPos)if(k=l.config.setValue,d&&void 0!==e?m=e/2:e=m=0,null!==k&&(n=b-(l._xPos-p*q)+m,u=f-l._yPos+m+(0<=k?g:0),l=n>=-H/2&&n<=(H||l._width)+e&&u>=-r/2&&
u<=(r||l._height)+e+(0>k?2*g:g)))return{pointIndex:C,hovered:l,pointObj:c[C]}}},_getHoveredPlot:function(a,b){var f=this.chart,g=f.config,e=f.components.canvas.config,e=Math.max(e.canvasPaddingLeft,e.canvasPadding),d=g.canvasLeft,g=g.canvasTop,f=f.components.xAxis[0].getValue(f.isBar?b-g-e:a-d-e),g=Math.round(f);return 0<g-f?this._checkPointerOverColumn(g,a,b)||this._checkPointerOverColumn(g-1,a,b):this._checkPointerOverColumn(g+1,a,b)||this._checkPointerOverColumn(g,a,b)},_rolloverResponseSetter:function(a,
b,f,g){var e=(b=(b=b.graphics)&&b.element)&&b.getData();!0!==e.draged&&(b&&0!==e.showHoverEffect&&b.attr(b.getData().setRolloverAttr),!g&&b&&T.call(b,a,f,"DataPlotRollOver"))},_rolloutResponseSetter:function(a,b,f,g){var e=(b=(b=b.graphics)&&b.element)&&b.getData();!0!==e.draged&&(b&&0!==e.showHoverEffect&&b.attr(b.getData().setRolloutAttr),!g&&b&&T.call(b,a,f,"DataPlotRollOut"))},_decideTooltipType:function(a,b,f){var g=this.groupManager,e=this.chart,d=e.config.drawTrendRegion,c=e.components.paper,
l=this.components,k=(l.dataRT||l.data)[a],l=k&&(k.config.finalTooltext||k.config.toolText),k=k&&(k.graphics.element||this.graphics.sharedAnchor.element);f=f.originalEvent;d&&k?g._drawTooltip(a,b,f):l&&!d&&H.customDraw(l,c,f,void 0,void 0,e.chartInstance.id)},_firePlotEvent:function(a,b,f,g){var e=this.chart,d=this.components,d=(d.dataRT||d.data)[b],c=d.graphics.element,l=z.toolTip,k=f.originalEvent,n=e.components.paper.canvas.style,u;if(c)switch(u=d.config,u=u.setLink,a){case "mouseover":this._decideTooltipType(b,
g,f);this._rolloverResponseSetter(e,d,k);u&&(n.cursor="pointer");break;case "mouseout":l.hide(e.chartInstance.id);this._rolloutResponseSetter(e,d,k);u&&(n.cursor=A);break;case "click":T.call(c,e,k);break;case "mousemove":this._decideTooltipType(b,g,f)}},draw:function(){var b=this,k=b.JSONData,h=b.chart.jsonData.chart,m=b.config,e=m.legendInteractivity,d=b.groupManager,c=b.index,l,q,p=b.visible,C=b.chart,r=C.getJobList(),H=C.config,B=H.isDrag,A=H.plothovereffect,O=C.components,D=O.paper,R=O.xAxis[0],
X=R.getCategoryLen(),E=b.yAxis,G=C.graphics.columnGroup,F=H.isstacked,P,T,N,ga=C.graphics.sumLabelsLayer,wa=z.parseUnsafeString,ia=z.getValidValue,ua=z.Raphael,Ca=H.showtooltip,da=C.get("config","animationObj"),qa=da.animObj,ba=da.dummyObj,na=da.duration,pa=da.animType,La=R.getAxisPosition(0),ea=R.getAxisPosition(1),za=d.config,ha=za.groupMaxWidth=m.groupMaxWidth=ea-La,sa=H.definedgrouppadding,fa=H.plotspacepercent/200,ya=d.getDataSetPosition(b),Ia=d.stackSumValue[b.positionIndex],Fa=H.maxcolwidth,
Ba=(1-.01*sa)*ha||S(ha*(1-2*fa),1*Fa),Ja=a(ya.columnWidth,Ba/1),Ha,Da=ya.xPosOffset||0,Ma=ya.height,Na,Oa,Sa=b.components,Ua=Sa.data,Pa,ab,Xa,$a,Ta,bb,Qa,Wa=b.drawn,Za=Sa.removeDataArr,ta=Za&&Za.length,ra=Sa.addDataArr,Va=ra&&ra.length,Ra,I=E.getLimit(),gb=I.min,Sb=0<I.max&&0>gb,yb,zb=E.getAxisBase(),db=E.yBasePos=E.getAxisPosition(zb),nb,Ab,ib=H.plotborderthickness,eb=H.useroundedges,Bb=b.graphics,fb=Bb.container,tb=Bb.dataLabelContainer,ob=Bb.shadowContainer,Cb=Sa.pool,Db,Ob=1,wb,Gb,lb=R.getAxisPosition(X-
1)+Da,jb=R.getAxisPosition(0)+Da,qb,Ya=!0,xb,ub=b.startPosition,vb=C.isInverse,pb,rb=m.isSkippedData,mb,Kb,Fb,sb=function(){!1!==b.visible||!1!==b._conatinerHidden&&void 0!==b._conatinerHidden||(fb.hide(),ob.hide(),tb&&tb.hide(),b._conatinerHidden=!0);this.show()},Hb=function(){ga.show()},hb=function(){return ub?function(a,b){a.x=jb-ha*(Va-b);a.y=T;a.height=Na}:!1===ub?function(a){a.x=lb+ha*Ob++;a.y=T;a.height=Na}:function(a){a.width=0}},cb,Eb=C.config.viewPortConfig,Lb=Eb.x,Jb=Eb.scaleX,Ib=H.showplotborder;
Wa&&(hb=hb());fb||(fb=b.graphics.container=D.group("columns",G),p?fb.show():fb.hide());ob||(ob=b.graphics.shadowContainer=D.group("shadow",G).toBack(),p||ob.hide());p&&(fb.show(),ob.show());for(q=0;q<X;q++)if(mb=(Qa=(Pa=Ua[q])&&Pa.config)&&Qa.isSkipped,Ta=Qa&&Qa.setValue,void 0===Pa||void 0===Ta||null===Ta||!0===mb)(wb=Pa&&Pa.graphics)&&wb.element&&wb.element.hide(),Qa&&delete Qa.isSkipped;else if(Fb=Pa.graphics&&Pa.graphics.element,!1===rb||!Wa||F||B||!e||!(!p&&!Fb||p&&Fb&&0!==Pa._width&&0!==Pa._height)){xb=
Pa.trackerConfig={};yb=0<=Ta;$a=Qa.setLink;Db=Qa.colorArr;Pa.graphics||(Ua[q].graphics={});bb=Qa.displayValue;nb=yb?Qa.previousPositiveY:Qa.previousNegativeY;ab=ia(wa(t(Qa.origToolText,k.plottooltext,h.plottooltext)));F&&(nb=b._parseValues(q,nb,Ia[q],ab),Ta=Qa.value);Ab=E.getAxisPosition(nb||zb);P=R.getAxisPosition(q)+Da+Lb*Jb;0!==Ma?(T=E.getAxisPosition(Ta+(nb||0)),Na=Y(Ab-T)):(Na=0,T=Ab);T=S(T,Ab);!1===rb&&d.isCrisp?(N=ua.crispBound(P,T,Ja,Na,ib),P=N.x,pb=u(Na)===N.height,Gb=u(T)!==N.y,T=N.y,Ha=
N.width,Na=N.height):Ha=Ja;p&&0<ib&&(0===ib%2&&(vb&&Sb?yb?!Gb&&(Na+=1):!pb&&--T:yb?Gb&&--T:pb&&(Na+=1)),Ra=Math.floor(ib/2),vb&&Sb?yb?Na-=Ra:T+=Ra:yb?T+=Ra:Na-=Ra);cb=Qa.shadow;Oa=Qa.finalTooltext=!1!==Qa.toolText?Qa.toolText+(ab?"":Qa.toolTipValue):"";qb=Qa.plotBorderDashStyle;xb.eventArgs={index:q,link:$a,value:Ta,displayValue:bb,categoryLabel:Qa.origLabel,toolText:Oa,id:"",datasetIndex:c,datasetName:k.seriesname,visible:p};Pa._xPos=P;Pa._yPos=T;Pa._height=Na;Pa._width=Ha;Pa._index=q;if(!(Xa=Pa.graphics.element)){l=
{x:P,y:db,width:Ha,height:1,r:eb,ishot:!Ca,fill:Q(Db[0]),stroke:Q(Db[1]),"stroke-width":Ib?ib:0,"stroke-dasharray":qb,"stroke-linejoin":"miter",visibility:p,cursor:$a?"pointer":""};Wa&&(hb(l,q),Cb&&Cb.element[0]&&(Xa=Pa.graphics.element=Cb.element[0],Xa.attr(l),Cb.element.splice(0,1)),Pa._newXPos=l.x);if(Xa)Qa.elemCreated=!1;else{if(za.skipZeroPlots&&0===Ta)continue;Xa=Pa.graphics.element=D.rect(l,fb);Qa.elemCreated=!0}Wa||(Xa.animateWith(ba,qa,{y:T,height:Na||1},na,pa,Ya&&Hb),Ya=!1)}(Xa=Pa.graphics.element)&&
Wa&&(Qa.elemCreated=!1,l={x:P,y:T,width:Ha,height:Na||1,r:eb},F||!1!==b.visible||0===Ma||(delete l.y,delete l.height),e||Xa.attr({fill:Q(Db[0]),stroke:Q(Db[1]),"stroke-width":Ib?ib:0,"stroke-linejoin":"miter","stroke-dasharray":qb,ishot:!Ca,visibility:p,cursor:$a?"pointer":""}),Xa.animateWith(ba,qa,l,na,pa,Ya&&sb),Ya=!1);Xa.shadow(cb,ob).data("BBox",N);if($a||Ca)Na<L&&(T-=(L-Na)/2,Na=L,Kb=!0),xb.attr={x:P,y:T,width:Ha,height:Na,r:eb,cursor:$a?"pointer":"",stroke:v,"stroke-width":Ib?ib:0,fill:v,ishot:!0,
visibility:p};C.config.enablemousetracking&&Xa.data("eventArgs",xb.eventArgs).data(n,A).data(g,Qa.setRolloverAttr||{}).data(f,Qa.setRolloutAttr||{})}Kb&&(H.toleranceBottom=L);Wa?b.drawLabel():r.labelDrawID.push(W.addJob(b.drawLabel,b,[],z.priorityList.label));!Wa&&ga.hide();d.drawSumValueFlag&&d.drawSumValueFlag&&d.drawSumValue();b.drawn=!0;ta&&b.remove()},show:function(){var a=this.graphics&&this.graphics.container,b=this.graphics&&this.graphics.dataLabelContainer,f=this.graphics&&this.graphics.shadowContainer,
g=this.chart.is3D,e=this.components.data,d=this.chart.config.categories,c=this.yAxis,l=this.chart,n=l.components.xAxis[0],d=S(this.JSONData.data&&this.JSONData.data.length,d&&d.length);this.config.legendInteractivity=!0;l._chartAnimation();this.visible=!0;this._conatinerHidden=!1;if(g)for(a=0;a<d;a++)e[a]&&e[a].graphics&&e[a].graphics.element&&e[a].graphics.element.attr({visibility:k}),e[a]&&e[a].graphics&&e[a].graphics.hotElement&&e[a].graphics.hotElement.attr({visibility:k});else a.show();f.show();
b&&b.show();l.config.transposeAxis&&(l._setAxisLimits(),c.draw());l.isRealTime&&n.draw();l._drawDataset();this.config.legendInteractivity=!1;l.chartInstance.__state._rtPaused&&l._setRTdata()},hide:function(){var a=this.yAxis,b=this.chart,f=b.components.xAxis[0];b._chartAnimation();this.visible=!1;this.config.legendInteractivity=!0;b.config.transposeAxis&&(b._setAxisLimits(),a.draw());b.isRealTime&&f.draw();b._drawDataset();this.config.legendInteractivity=!1;b.chartInstance.__state._rtPaused&&b._setRTdata()},
drawLabel:function(b,f){var h=this.chart,g=h.config,e=h.graphics,d=h.components,c=h.get("config","animationObj"),l=c.dummyObj,n=c.animObj,u=c.animType,c=c.duration,m=d.paper,q=h.linkedItems.smartLabel,p=h.config.dataLabelStyle,C=this.config.legendInteractivity,r=d.xAxis[0].getCategoryLen(),H=this.components,d=H.data,H=H.pool,B=this.visible,t,A,g=g.rotatevalues?270:0,v,O,D,z,R,X,S=this.graphics.dataLabelContainer,W=this.labelDrawn;t=a(b,0);r=a(f,r);e=e.datalabelsGroup;S||(S=this.graphics.dataLabelContainer=
m.group("datalabel",e));B?S.show():S.hide();q.useEllipsesOnOverflow(h.config.useEllipsesWhenOverflow);q.setStyle(p);if(B)for(e=t;e<r;e++)if(O=(R=(t=d[e])&&t.config)&&R.setValue,void 0===t||void 0===O||null===O||!0===R.labelSkip)R&&delete R.labelSkip,(X=t&&t.graphics)&&X.label&&X.label.hide();else if(B=t.graphics)D=t._yPos,z=t._xPos,A=R.displayValue,(v=R.showValue)&&null!==O?(C&&R._state||(v=q.getOriSize(A),R._state=g?{labelWidth:v.height,labelHeight:v.width}:{labelWidth:v.width,labelHeight:v.height}),
O=this._getValuePosition({labelWidth:R._state.labelWidth,labelHeight:R._state.labelHeight,width:t._width,height:t._height,yPos:D,xPos:z,value:O}),D=O.textX,O=O.textY,A={x:D,y:O,text:A},C||(A=E(A,{visibility:k,"line-height":p.lineHeight,fill:p.color,"text-bound":[p.backgroundColor,p.borderColor,p.borderThickness,p.borderPadding,p.borderRadius,p.borderDash]})),!B.label&&W&&h.isRealTime&&(R=E({},A),R.x=A.x-z+(t._newXPos||0),R.transform=m.getSuggestiveRotation(g,R.x,O),H&&H.label[0]?(B.label=H.label[0].attr(R),
H.label.splice(0,1)):B.label=m.text(R,S)),A.transform=m.getSuggestiveRotation(g,D,O),(t=B.label)||(t=B.label=m.text(A,S)),t.show(),W&&t.animateWith(l,n,A,c,u)):B.label&&(B.label.attr({"text-bound":[]}),B.label.hide());this.labelDrawn=!0},_getValuePosition:function(a){var b=this.chart,f=b.components,g=b.config,e=f.canvas.config,d=f.yAxis[0],f=e.xDepth,e=e.yDepth,c=g.canvasTop,l=g.canvasHeight+e,k,n,u,m=a.yPos,q=b.is3D,b=b.config.isstacked,p=g.valuepadding+2,r=a.height;k=a.width;g=g.placevaluesinside;
u=a.labelHeight;var H=d.getAxisConfig("isReverse"),B=d.getAxisConfig("axisRange"),A=B.min,d=a.value,B=0<B.max&&0>A;a=a.xPos;H&&B&&(n=0>d?!1:!0);n=t(n,0>d);u=H=u+p;p=.5*H+p;k=a+.5*k;a=n?c+l-(m+r+e):m-c;b?(l=S(c+l-.5*u,m+.5*r+(e||0)),l=C(c+.5*u,l),k-=f):g?r>=u?(l=m+(n?r-p:p),q&&(k-=f,l+=e)):a>=u?(l=m+(n?r+p:-p),q&&n&&(k-=f,l+=e)):(l=m+(n?r-p:p),q&&(k-=f,l+=e)):a>=u?(l=m+(n?r+p:-p),q&&(n?(k-=f,l+=e):k-=f/2)):(l=m+(n?r-p:p),q&&(k-=f,l+=e));return{textX:k,textY:l}},_parseValues:function(a,b,f,g){var e=
this.chart.config;a=this.components.data[a].config;var d=e.showpercentvalues,c=e.showpercentintooltip,l=a.setValue,e=e.stack100percent,k=this.chart.components.numberFormatter,n=this.yAxis,u=a.setDisplayValue,l=(this.visible?l||0:0)/f*100,k=k.percentValue(l);e&&(a.value=l,b=(b||0)/f*100);c&&(a.toolTipValue=k);d&&!u&&(a.displayValue=k);g&&(a.toolText=m(a.setTooltext,[14,24,25,112],{percentValue:k,sum:n.dataLabels(f),unformattedSum:f}));return b},getDataLimits:function(){return{max:this.config.maxValue,
min:this.config.minValue}},addData:function(a,b,f){var g=this.components,e=this.chart.components.numberFormatter,d=g.data,c=a.data,l=c.length,k=this.config,n=k.maxValue,k=k.minValue,u=this.maxminFlag,m;g.addDataArr=a.data;if(0===b)this.startPosition=!0;else if(b+l===d.length||void 0===b)this.startPosition=!1;for(m=0;m<l;m++)if(void 0!==b?d.splice(b+m,0,{config:{}}):d.push({config:{}}),!u&&(g=e.getCleanValue(c[m].value),g>n||g<k))u=this.maxminFlag=!0;this._setConfigure(a,b);u&&this.setMaxMin();f&&
this.draw()},hideElements:function(a){a.hide()},removeData:function(a,b,f){var g=this.components,e=g.data,d=g.removeDataArr||(g.removeDataArr=[]),c=this.config,l=this.groupManager,k=this.maxminFlag;void 0===b&&(b=1);a=a||0;if(a+b===e.length)this.endPosition=!0;else if(0===a||void 0===a)this.endPosition=!1;g.removeDataArr=d=d.concat(e.splice(a,b));l&&l.removeSumLabels&&l.removeSumLabels(a,b,this.positionIndex);g=d.length;for(a=0;a<g;a++)if(d[a]){b=d[a].config;if(b.setValue===c.maxValue||b.setValue===
c.minValue)k=this.maxminFlag=!0;if(k)break}k&&this.setMaxMin();f&&this.draw()},updateData:function(a,b,f){var g=this.config,e=g.maxValue,d=g.prevMin,c=this.chart,l=this.groupManager||this,k=c.components,n=k.xAxis||k.yAxis,u=n&&k.xAxis[0],k=n&&k.yAxis[0];this._setConfigure(a,b);this.setMaxMin();if(g.maxValue!==e||g.minValue!==d)this.maxminFlag=!0;f&&(c._setAxisLimits(),n&&u.draw(),n&&k.draw(),l.draw())},setMaxMin:function(){var a=this.components.data,b=this.config,f,g,e=a.length,d=-Infinity,c=Infinity;
for(f=0;f<e;f++)a[f]&&(g=a[f].config,g=g.setValue,void 0!==g&&(d=C(d,g),c=S(c,g)));b.maxValue=d;b.minValue=c},hidingPosition:function(){var a=this.components.removeDataArr.length,b=this.config.groupMaxWidth;return!1===this.endPosition?function(f){return{x:f._xPos-b*a,y:f._yPos}}:!0===this.endPosition?function(f){return{x:f._xPos+b*a||0,y:f._yPos}}:function(){return{width:0}}},remove:function(){var a=this.components,b=a.removeDataArr,f=a.pool||(a.pool={element:[],hotElement:[],label:[]}),g=this.chart,
e=g.get("config","animationObj"),d=e.duration,c=e.dummyObj,l=e.animObj,e=e.animType,k=this.maxminFlag,n,u,m,p,q=g.components.paper,C=g.config.rotatevalues,r=this.chart.config.realTimeConfig&&this.chart.config.realTimeConfig.clear,H=this.hidingPosition(),B=function(){this.hide()};for(m=b.length-1;0<=m;m--)if(g=b[m],b.splice(m,1),g&&g.graphics){u=g.graphics;for(n in u)"label"===n&&void 0===this.startPosition&&void 0===this.endPosition&&u[n].hide(),p=H(g),"label"===n&&(p.transform=q.getSuggestiveRotation(C,
p.x,p.y)),r&&u[n].hide(),u[n].animateWith(c,l,p,d,e,B);g.graphics.element&&(f.element=f.element.concat(g.graphics.element));g.graphics.hotElement&&(f.hotElement=f.hotElement.concat(g.graphics.hotElement));g.graphics.label&&(f.label=f.label.concat(g.graphics.label))}a.pool=f;k&&this.setMaxMin()},getAxisValuePadding:function(){return{left:.5,right:.5}},manageSpace:function(){var b=this.config||(this.config={}),f=this.chart,h=f.config.rotatevalues,g=f.components.xAxis[0],e=f.components.yAxis[0],d=f.config.dataLabelStyle,
c=(this.components||{}).data||[],l=b.leftMostData||c[0],c=b.rightMostData||c[c.length-1],k,n,u={};k={};var m=0,p=0,q,r=g.getPixel(0),u=f.linkedItems.smartLabel,H={paddingLeft:0,paddingRight:0};k=0;var B=this.groupManager,B="column"===this.type&&B.getDataSetPosition(this),t=this.getAxisValuePadding(),A=b.topMostData,b=b.bottomMostData;l&&(l=l.config,q=l.showValue,n=l&&l.anchorProps||{},q&&(k=l.displayValue,u.useEllipsesOnOverflow(f.config.useEllipsesWhenOverflow),u.setStyle(d),k=u.getOriSize(k),k=
h?k.height:k.width),null!==l.setValue&&(m=a(n.radius,0)+a(n.borderThickness,0)/2,p=(k||0)/2-(g.getPixel(t.left)-r)-(B&&B.xPosOffset+B.columnWidth/2||0),0>p&&(p=0)),H.paddingLeft=C(m,p));c&&(l=c.config,q=l.showValue,n=l&&l.anchorProps||{},q&&!h&&(k=l.displayValue,u.setStyle(d),u=u.getOriSize(k),k=h?u.height:u.width),null!==l.setValue&&(m=a(n.radius,0)+a(n.borderThickness,0)/2,p=(k||0)/2-(g.getPixel(t.right)-r)+(B&&B.xPosOffset+B.columnWidth/2||0),0>p&&(p=0)),H.paddingRight=C(m,p));A&&(n=(l=A.config)&&
l.anchorProps||{},null!==l.setValue&&(m=a(n.radius,0)+a(n.borderThickness,0)/2,p=Math.max(m-(e.getPixel(l.setValue.y)-e.getPixel(e.getLimit().max)),0)),H.paddingTop=p);b&&(n=(l=b.config)&&l.anchorProps||{},null!==l.setValue&&(m=a(n.radius,0)+a(n.borderThickness,0)/2,p=Math.max(m-(e.getPixel(e.getLimit().min)-e.getPixel(l.setValue.y)),0)),H.paddingBottom=p);return H},getPlotClickFn:function(a){return function(b){T.call(this,a,b)}},getEventArgs:function(){return{datasetName:(this.JSONData||{}).seriesname,
datasetIndex:this.index,id:(this.config||{}).userID,visible:this.visible}},rolloverResponseSetter:function(a,b){var f=b.jsonData.chart;return function(g){var e=this.data("hoverEnabled"),d=this.data("draged"),c=this.data("dataset");!0!==d&&(c._hoverFunc(a,"DataPlotRollOver",e,f),T.call(this,b,g,"DataPlotRollOver"))}},rolloutResponseSetter:function(a,b){var f=b.jsonData.chart;return function(g){var e=this.data("hoverEnabled"),d=this.data("draged"),c=this.data("dataset");!0!==d&&(c._hoverFunc(a,"DataPlotRollOut",
e,f),T.call(this,b,g,"DataPlotRollOut"))}}},void 0,{showvalues:void 0,includeinlegend:1,plotfillalpha:void 0,plotfillangle:void 0,ratio:void 0}])}]);N.register("module",["private","modules.renderer.js-dataset-realtimecolumn",function(){N.register("component",["dataset","realtimecolumn",{_realTimeConfigure:function(b){var z=this.chart,G=this.components.data,v=[],F=z.config.realTimeConfig.numDisplaySets;b=b?0:z.components.xAxis[0].getCategoryLen();b<F?(v.length=F-b,this.components.data=v.concat(G)):
b>F&&this.components.data.splice(F,b-F)}},"Column"])}]);N.register("module",["private","modules.renderer.js-dataset-scrollcolumn2d",function(){N.register("component",["dataset","scrollcolumn2d",{},"Column"])}]);N.register("module",["private","modules.renderer.js-dataset-column3d",function(){var b=this.window,z=this.hcLib,b=/msie/i.test(b.navigator.userAgent)&&!b.opera,G=z.BLANKSTRING,v="rgba(192,192,192,"+(b?.002:1E-6)+")",b=z.TOUCH_THRESHOLD_PIXELS,F=z.CLICK_THRESHOLD_PIXELS,E=z.pluck,t=z.pluckNumber,
a=z.toRaphaelColor,Q=z.hasTouch?b:F,b=z.preDefStr,r=b.noneStr,P=b.configStr,T=b.animationObjStr,L=b.showHoverEffectStr,D=b.columnStr,B=b.shadowStr,m=b.visibleStr,p=b.hiddenStr,q=b.negativeValueStr,A=b.positiveValueStr,n=b.zeroPlaneStr,k=b.categoryPlotsStr,g=b.setRolloverAttrStr,f=b.setRolloutAttrStr,S=b.strokeWidthStr,C=b.strokeDashStr,Y=z.graphics.getCubePathOutline,b=Math,R=b.min,u=b.abs,X=b.round,O=z.schedular;N.register("component",["dataset","Column3D",{draw:function(){var b=this,H=b.JSONData,
w=b.chart.jsonData.chart,K=b.config,h=b.groupManager,X=b.index,e=b.chart.config.categories,d,c,l=b.chart,M=l.getJobList(),J=l.config,F=l.components.paper,N=l.components.xAxis[0],va=b.yAxis,ka=l.graphics.columnGroup,ca=l.config.isstacked,U,la,Ga=z.parseUnsafeString,xa=z.getValidValue,aa=J.showtooltip,Z=l.get(P,T),ja=Z.animType,ma=Z.animObj,oa=Z.dummyObj,Z=Z.duration,Aa=N.getAxisPosition(0),ga=N.getAxisPosition(1),ga=K.groupMaxWidth=ga-Aa,wa=K.definedGroupPadding,ia=J.plotspacepercent/200,ua=h.getDataSetPosition(b),
Aa=h.stackSumValue[b.positionIndex],Ca=J.maxcolwidth,ga=(1-.01*wa)*ga||R(ga*(1-2*ia),1*Ca),ga=t(ua.columnWidth,ga/1),da,wa=ua.xPosOffset||0,ua=ua.height,qa,ia=b.components.data,ba,na,pa,La,ea,za,ha;pa={};ea={};Ca=va.getLimit();na=Ca.max;var sa=Ca.min,Ca=va.getAxisBase(),fa=va.yBasePos=va.getAxisPosition(Ca),ya=0,Ia=J.plotborderthickness;za=b.graphics.container;var Fa=b.graphics.dataLabelContainer,Ba=b.graphics.shadowContainer,Ja,Ha,Da,Ma,Na,Oa=K.use3dlighting,Sa,Ua,Pa,ab,Xa=!0,$a=!1,Ta=b.visible,
bb=(b.components.removeDataArr||[]).length,Qa=b.components.pool||[],Wa=J.showplotborder,Za=J.plothovereffect,ta,ra,Va,Ra=function(){var a,c;if(!1===b.visible&&(!1===b._conatinerHidden||void 0===b._conatinerHidden)){a=b.components.data;for(c=0;c<d;c++)a[c]&&a[c].graphics&&a[c].graphics.element&&a[c].graphics.element.attr("visibility",p),a[c]&&a[c].graphics&&a[c].graphics.hotElement&&a[c].graphics.hotElement.attr("visibility",p);Ba.hide();Fa&&Fa.hide();b._conatinerHidden=!0}},I=function(){h.drawSumValueFlag&&
h.drawSumValue()};za||(za=b.graphics.container=l.datasetLayers=l.datasetLayers||F.group(D,ka));Ba||(Ba=b.graphics.shadowContainer=F.group(B,ka).toBack());l._cacheObj||(l._cacheObj={});!l._cacheObj.elemAttr&&(l._cacheObj.elemAttr={});ta=l._cacheObj.elemAttr;!l._cacheObj.zeroplaneAttr&&(l._cacheObj.zeroplaneAttr={});ha=l._cacheObj.zeroplaneAttr;!l._cacheObj.cubepathObj&&(l._cacheObj.cubepathObj={});ra=l._cacheObj.cubepathObj;d=N.getCategoryLen();if(Ta)for(c=0;c<d;c++)ia[c].graphics&&ia[c].graphics.element&&
ia[c].graphics.element.attr("visibility",m),ia[c].graphics&&ia[c].graphics.hotElement&&ia[c].graphics.hotElement.attr("visibility",m);ka=za.negative=za.negative||F.group(q,za);Ha=za.column=za.column||F.group(A,za);0>sa&&0<=na?(c=za.zeroPlane,ha.fill=[J.zeroPlaneColor,!Oa],ha.stroke=J.zeroPlaneBorderColor||"none",ha[S]=J.zeroPlaneShowBorder?1:0,c?(c=[l.config.canvasLeft-10,fa+10,l.config.canvasWidth,1,10,10,c],h.graphics.zeroplane.show(),h.graphics.zeroplane._.cubetop.show(),h.graphics.zeroplane._.cubeside.show(),
ra.cubepath=c,h.graphics.zeroplane.animateWith(oa,ma,ra,Z,ja),h.graphics.zeroplane.attr(ha)):(c=za.zeroPlane=F.group(n,za).insertBefore(Ha),!h.graphics&&(h.graphics={}),h.graphics.zeroplane=F.cubepath(l.config.canvasLeft-10,fa+10,l.config.canvasWidth,1,10,10,c).attr(ha))):h.graphics&&h.graphics.zeroplane&&h.graphics.zeroplane.hide()&&h.graphics.zeroplane._.cubetop.hide()&&h.graphics.zeroplane._.cubeside.hide();(Da=ka.data(k))||(ka.data(k,Array(d)),Da=ka.data(k));(Ma=Ha.data(k))||(Ha.data(k,Array(d)),
Ma=Ha.data(k));for(c=0;c<d;c++)if(za=c,pa=(ha=(J=ia[c])&&J.config)&&ha.setValue,void 0!==J&&void 0!==pa&&null!==pa){Va=J.trackerConfig={};!J||void 0!==pa&&null!==pa||(J.graphics&&J.graphics.element&&(J.graphics.element.hide(),J.graphics.element._.cubeside.hide(),J.graphics.element._.cubetop.hide()),J.graphics&&J.graphics.hotElement&&J.graphics.hotElement.hide());Da[c]=Da[c]||F.group(ka);Ma[c]=Ma[c]||F.group(Ha);J.graphics||(ia[c].graphics={});na=ha.setLink;sa=ha.colorArr;ea=ha.displayValue;U=0<=pa?
ha.previousPositiveY:ha.previousNegativeY;qa=xa(Ga(E(ha.origToolText,H.plottooltext,w.plottooltext)));ca&&(U=b._parseValues(c,U,Aa[c],qa),pa=ha.value);da=va.getAxisPosition(U||Ca);l=N.getAxisPosition(c)+wa;0!==ua?(la=va.getAxisPosition(pa+(U||0)),U=u(da-la)):(U=0,la=da);la=R(la,da);da=ga;Ja=(Va.isNegative=Na=0>pa)?Da:Ma;qa=ha.finalTooltext=!1!==ha.toolText&&ha.toolText+(qa?"":ha.toolTipValue);Va.eventArgs={index:c,link:na,value:pa,displayValue:ea,categoryLabel:e[c].label,toolText:qa?qa:"",id:G,datasetIndex:X,
datasetName:H.seriesname,visible:Ta};La=Va.eventArgs;pa=ha.setRolloutAttr;ea=ha.setRolloverAttr;Z||(fa=la,ya=U);Sa=l;Ua=la;Pa=da;ab=U;l-=10;la+=10;J.graphics.element?($a=!0,ba=J.graphics.element,Ja[c].appendChild(ba._.cubetop),Ja[c].appendChild(ba._.cubeside),Ja[c].appendChild(ba),ra.cubepath=[l,!0===b.visible||0===ua||ca?la:ba.attrs.cubepath[1],da,!0===b.visible||0===ua||ca?U:ba.attrs.cubepath[3],10,10],ba.animateWith(oa,ma,ra,Z,ja,Xa&&Ra),ta.fill=[a(sa[0]),!Oa],ta.ishot=!0,ta.stroke=Wa&&a(sa[1]),
ta[S]=Wa?Ia:0,ta[C]=ha.plotBorderDashStyle,ta.cursor=na?"pointer":G,ta.visibility&&delete ta.visibility,ta.cubepath&&delete ta.cubepath,ba.attr(ta),ha.elemCreated=!1):(Qa.element&&Qa.element.length?(ba=J.graphics.element=Qa.element.shift(),Ja[c].appendChild(ba._.cubetop),Ja[c].appendChild(ba._.cubeside),Ja[c].appendChild(ba),ba.show()):ba=J.graphics.element=F.cubepath(Ja[c]),ta.cubepath=[l,Z?fa+10:la,da,Z?0:ya,10,10],ta.fill=[a(sa[0]),!Oa],ta.ishot=!0,ta.stroke=Wa&&a(sa[1]),ta[S]=Wa?Ia:0,ta[C]=ha.plotBorderDashStyle,
ta.cursor=na?"pointer":G,ta.visibility=Ta?m:p,ba.attr(ta),ra.cubepath=[l,la,da,U,10,10],ba.animateWith(oa,ma,ra,Z,ja,Xa&&I),Xa=!1,J._newXPos=l,ha.elemCreated=!0);ba.shadow(ha.shadow,Ba).data("BBox",{height:ya,width:da,x:l,y:la});if(na||aa)U<Q&&(la-=(Q-U)/2,U=Q),Va.attr={path:Y([l,la,da,U,10,10]),cursor:na?"pointer":G,stroke:Ia&&v||r,"stroke-width":Wa?K.plotBorderThickness:0,fill:v,ishot:!0};ca&&Na&&ba.toBack();J._xPos=Sa;J._yPos=Ua;J._height=ab;J._width=Pa;ba.data("eventArgs",La).data("groupId",za).data(L,
Za).data(g,ea).data(f,pa).tooltip(qa);ba._.cubetop.data("eventArgs",La).data("groupId",za).data(L,Za).data(g,ea).data(f,pa).tooltip(qa);ba._.cubeside.data("eventArgs",La).data("groupId",za).data(L,Za).data(g,ea).data(f,pa).tooltip(qa)}b.drawn?b.drawLabel():M.labelDrawID.push(O.addJob(b.drawLabel,b,[],z.priorityList.label));b.drawn=!0;h.drawSumValueFlag&&$a&&h.drawSumValueFlag&&h.drawSumValue();bb&&b.remove();b.chart.config.canvasBottom+=10},_checkPointerOverColumn:function(a,b,f){var g=this.chart.config,
h=g.plotborderthickness,k=g.showplotborder,e=this.components.data,d=e[a],c,l,n;if(d&&(c=d.config.setValue,!g.isstacked||!(0>c&&this.valueLook||0<c&&!this.valueLook))&&(h=k?h:0,n=h/2,n=0===n%2?n+1:X(n),null!==c&&(c=d._xPos-10,k=d._width+10,g=d._yPos,d=d._height+10,l=b-c+n,n=f-g+n,h=(h=0<=l&&l<=k+h&&0<=n&&n<=d+h?0<b+f-(c+g)-10:!1)?0>b+f-(c+g+k+d)+10:!1)))return{pointIndex:a,hovered:h,pointObj:e[a]}},_getHoveredPlot:function(a,b){var f=this.chart,g=f.config,h=f.components.canvas.config,h=Math.max(h.canvasPaddingLeft,
h.canvasPadding),k=g.canvasLeft,g=g.canvasTop,f=f.components.xAxis[0].getValue(f.isBar?b-g-h:a-k-h),g=Math.round(f);return 0<g-f?this._checkPointerOverColumn(g,a,b)||this._checkPointerOverColumn(g-1,a,b):this._checkPointerOverColumn(g+1,a,b)||this._checkPointerOverColumn(g,a,b)},remove:function(){var a=this,b=a.components,f=b.removeDataArr,g=b.pool||(b.pool={element:[],hotElement:[],label:[]}),h=f.length,k=a.config.groupMaxWidth,e,d=a.maxminFlag,c,l,n;(function(){return!1===a.endPosition?function(){return{x:e._xPos-
k*h}}:!0===a.endPosition?function(){return{x:e._xPos+k*h||0}}:function(){return{width:0}}})();for(n=0;n<h;n++)if(e=f[0],f.splice(0,1),e&&e.graphics){l=e.graphics;for(c in l)l[c].hide();e.graphics.element&&(g.element=g.element.concat(e.graphics.element));e.graphics.hotElement&&(g.hotElement=g.hotElement.concat(e.graphics.hotElement));e.graphics.label&&(g.label=g.label.concat(e.graphics.label))}b.pool=g;d&&a.setMaxMin()}},"Column",{use3dlighting:void 0}])}]);N.register("module",["private","modules.renderer.js-dataset-waterfall2d",
function(){var b=this.window,z=this.hcLib,b=/msie/i.test(b.navigator.userAgent)&&!b.opera,G=z.BLANKSTRING,v="rgba(192,192,192,"+(b?.002:1E-6)+")",b=z.TOUCH_THRESHOLD_PIXELS,F=z.CLICK_THRESHOLD_PIXELS,E=z.pluck,t=z.pluckNumber,a=z.toRaphaelColor,Q=z.graphics.convertColor,r=z.parseUnsafeString,P=z.getDefinedColor,T=z.HUNDREDSTRING,L=z.hasTouch?b:F,D=z.getCrispValues,B=z.getValidValue,m=z.getFirstValue,b=z.preDefStr,p=b.showHoverEffectStr,q=b.setRolloverAttrStr,A=b.setRolloutAttrStr,n=b.elementStr,k=
b.hotElementStr,b=Math,g=b.round,f=b.min,S=b.max,C=b.abs,Y=z.graphics.getLightColor;N.register("component",["dataset","Waterfall2D",{configure:function(){var b,g,k=this.chart,n=k.components;b=this.config;g=this.JSONData;var p=g.data,q=k.config.categories,q=f(q&&q.length,p&&p.length),w=k.jsonData.chart,C=n.colorManager,h,r=C.getPlotColor(this.index||this.positionIndex),e=t(g.dashed,w.plotborderdashed),d=t(w.useplotgradientcolor,1),c=t(w.showtooltip,1),l=z.parseUnsafeString,A=l(w.yaxisname),v=l(w.xaxisname),
D=l(E(w.tooltipsepchar,", ")),F=z.parseTooltext,L,ka,ca,U,N,Ga,xa,aa,Z,ja,ma,oa,Aa,ga,wa,ia,ua,Ca,da,qa,ba,na,pa,La,ea,za,ha,sa=z.getDashStyle,fa=this.components.data,ya=n.numberFormatter,Ia;h={};h=h.dataObj||(h.dataObj={});Ia=h.chart||(h.chart={});ua=E(w.connectorthickness,1);var Fa,Ba=-Infinity,Ja=Infinity,Ha=0,Da=0,Ma=0,Na,Oa,Sa,Ua;this.visible=1===t(this.JSONData.visible,!Number(this.JSONData.initiallyhidden),1);h=b.showplotborder=t(w.showplotborder,1);b.plotBorderThickness=N=h?t(w.plotborderthickness,
1):0;b.isRoundEdges=Ga=t(w.useroundedges,0);b.plotBorderAlpha=ma=h?E(w.plotborderalpha,ca,T):0;b.plotBorderColor=oa=E(w.plotbordercolor,C.getColor("plotBorderColor").split(",")[0]);b.plotgradientcolor=ja=d?P(w.plotgradientcolor,C.getColor("plotGradientColor")):G;b.plotDashLen=d=t(w.plotborderdashlen,6);b.plotDashGap=U=t(w.plotborderdashgap,3);b.use3DLighting=t(w.use3dlighting,1);b.showSum=Fa=t(w.showsumatend,1);b.plotColor=E(g.color,r);b.plotfillAngle=aa=t(360-w.plotfillangle,90);b.showShadow=Ga?
t(w.showshadow,1):t(w.showshadow,C.getColor("showShadow"));b.showHoverEffect=xa=t(w.plothovereffect,w.showhovereffect,void 0);b.plotFillAlpha=E(g.alpha,w.plotfillalpha,T);b.plotRadius=t(w.useRoundEdges,b.isRoundEdges?1:0);b.plotFillRatio=Z=E(g.ratio,w.plotfillratio);b.plotBorderDashStyle=Aa=e?sa(d,U,N):"none";b.showValues=t(g.showvalues,w.showvalues,1);b.valuePadding=t(w.valuepadding,2);b.enableAnimation=r=t(w.animation,w.defaultanimation,1);b.animation=r?{duration:1E3*t(w.animationduration,1)}:!1;
Ia.transposeAnimation=b.transposeAnimation=t(w.transposeanimation,Ia.transposeAnimation,r);b.transposeAnimDuration=1E3*t(w.transposeanimduration,.2);b.showTooltip=t(w.showtooltip,1);b.stack100Percent=t(k.stack100percent,w.stack100percent,0);b.definedGroupPadding=S(t(w.plotspacepercent),0);b.plotSpacePercent=S(t(w.plotspacepercent,20)%100,0);b.maxColWidth=t(w.maxcolwidth,50);b.showPercentValues=t(w.showpercentvalues,0);b.showPercentInToolTip=t(w.showpercentintooltip,0);b.plotPaddingPercent=t(w.plotpaddingpercent);
b.rotateValues=t(w.rotatevalues)?270:0;b.placeValuesInside=t(w.placevaluesinside,0);b.parentYAxis=Ia="s"===E(g.parentyaxis&&g.parentyaxis.toLowerCase(),"p")?1:0;fa||(fa=this.components.data=[]);b.zLine=Oa={step:!0,data:[],dashStyle:"1"===w.connectordashed?sa(t(w.connectordashlen,2),t(w.connectordashgap,2),ua):"none",useForwardSteps:!0,color:Q(E(w.connectorcolor,"000000"),E(w.connectoralpha,100)),lineWidth:ua};for(k=0;k<q;k+=1)ga=p[k],ia=ya.getCleanValue(ga.value),ka=t(ga.issum,0),ga.vline||ka?delete ga._value:
(Ha+=ia,ga._value=ia);Na=ya.dataLabels(Ha);Fa&&(Fa=!0,q+=1,Sa={label:m(w.sumlabel,"Total"),_value:Ha,value:Ha,issum:1,cumulative:1});for(Ua=k=0;k<q;k+=1)ga=p[k],ua=(ia=fa[k])&&ia.config,ia||(ia=fa[k]={graphics:{}}),ia.config||(ua=fa[k].config={}),!ga&&Fa&&(ga=p[k]=Sa),r=E(ga.color,C.getPlotColor(k)),ia.vline||(ia=ga._value,delete ga._value,ua.issum=ka=t(ga.issum,0),ca=ua.isCumulative=t(ga.cumulative,1),ka?(ia=ca?Da:Da===Ma?Da:Da-Ma,ua.lastComTotal=Ma,Ma=Da,Oa.data.push({y:null,x:Ua-.5})):Da+=ia,Ba=
S(Ba,Da),Ja=f(Ja,Da),ua.total=Da,ka=ua.showLabel=t(ga.showlabel,w.showlabels,1),ka=ua.dataLabel=l(ka?m(ga.label,ga.name):G),0<ia?(Ca=E(ga.color,w.positivecolor,r),0!==xa&&(da=E(ga.positivehovercolor,w.positivehovercolor,w.plotfillhovercolor,w.columnhovercolor,Ca))):(Ca=E(ga.color,w.negativecolor,r),0!==xa&&(da=E(ga.negativehovercolor,w.negativehovercolor,w.plotfillhovercolor,w.columnhovercolor,Ca))),ca=E(ga.alpha,b.plotFillAlpha),L=t(ga.dashed,e),qa=t(ga.dashlen,d),ba=U=t(ga.dashgap,U),ua.showValue=
t(ga.showvalue,b.showValues),ua.setValue=wa=ia,ua.setLink=E(ga.link),ua.toolTipValue=wa=ya.dataLabels(wa,Ia),ua.setDisplayValue=na=B(l(ga.displayvalue)),ua.displayValue=E(na,wa),ua.plotBorderDashStyle=L=1===L?sa(qa,ba,N):0===L?"none":Aa,ua.colorArr=Ca=z.graphics.getColumnColor(Ca+","+ja.replace(/,+?$/,""),ca,Z,aa,Ga,oa,ma.toString(),0,!1),0!==xa&&(qa=E(ga.alpha,ga.hoveralpha,g.hoveralpha,w.plotfillhoveralpha,w.columnhoveralpha,ca),ba=E(ga.hovergradientcolor,g.hovergradientcolor,w.plothovergradientcolor,
ja),!ba&&(ba=""),wa=E(ga.hoverratio,g.hoverratio,ga.ratio,w.plothoverratio,Z),na=t(360-ga.hoverangle,360-g.hoverangle,360-w.plothoverangle,aa),pa=E(ga.borderhovercolor,g.borderhovercolor,w.plotborderhovercolor,oa),La=E(ga.borderhoveralpha,g.borderhoveralpha,w.plotborderhoveralpha,ma,ca),ca=t(ga.borderhoverthickness,g.borderhoverthickness,w.plotborderhoverthickness,N),ea=t(ga.borderhoverdashed,g.borderhoverdashed,w.plotborderhoverdashed),za=t(ga.borderhoverdashgap,g.borderhoverdashgap,w.plotborderhoverdashgap,
d),ha=t(ga.borderhoverdashlen,g.borderhoverdashlen,w.plotborderhoverdashlen,U),ea=ea?sa(ha,za,ca):L,1===xa&&da===r&&(da=Y(da,70)),r=z.graphics.getColumnColor(da+","+ba,qa,wa,na,Ga,pa,La.toString(),0,!1),ua.setRolloutAttr={fill:a(Ca[0]),stroke:h&&a(Ca[1]),"stroke-width":N,"stroke-dasharray":L},ua.setRolloverAttr={fill:a(r[0]),stroke:h&&a(r[1]),"stroke-width":ca,"stroke-dasharray":ea}),L=ua.toolTipValue,r=B(l(E(ga.tooltext,g.plottooltext,w.plottooltext))),c?void 0!==r?(ca=[1,2,3,5,6,7,20,21,24,25],
ka={formattedValue:L,label:ka,yaxisName:A,xaxisName:v,cumulativeValue:Da,cumulativeDataValue:ya.dataLabels(Da),sum:Na,unformattedSum:Ha},r=F(r,ca,ka,ga,w,g)):r=null===L?!1:ka!==G?ka+D+L:L:r=!1,Oa.data.push({y:null===ia?null:Da,x:Ua}),Ua+=1,ua.toolText=r,ua.setTooltext=r);b.maxValue=Ba;b.minValue=Ja;b.connectNullData=t(w.connectnulldata,0);b.showConnectors=t(w.showconnectors,1);b=g.catData;for(k=0;k<b.length;k+=1)g=b[k],p.splice(g.index,0,g.data);n.xAxis[0].setCategory(p);this.maxminFlag=!1},draw:function(){var b,
k,n,m=this,D=m.chart,H=m.chart.jsonData.chart,w=D.config.canvasBottom;n=D.graphics.datasetGroup;var K=m.JSONData,h=m.config,S=m.groupManager,e=m.positionIndex,d=m.chart.config.categories,c=K.data,l=d&&d.length,M=c&&c.length,J,c=m.visible,F=D.components,G=F.paper,Y=F.xAxis[0],P=F.yAxis[0],Q=m.components,U,T,N,xa=D.graphics,aa=z.Raphael,Z=h.showTooltip,ja=Y.getAxisPosition(0),ja=Y.getAxisPosition(1)-ja,ma=h.definedGroupPadding,oa=h.plotSpacePercent/200,Aa=S.getDataSetPosition(m),ga=h.maxColWidth,ja=
(1-.01*ma)*ja||f(ja*(1-2*oa),1*ga),ja=t(Aa.columnWidth,ja/1),wa,ma=Aa.xPosOffset||0,Aa=Aa.height,ia,ua,Q=Q.data,Ca,da,oa=P.getAxisBase(),ga=P.yBasePos=P.getAxisPosition(oa),qa=0,ba=h.showShadow,na=h.plotBorderThickness,pa=h.plotRadius,La=m.graphics.container,ea=m.graphics.trackerContainer,za=m.graphics.dataLabelContainer,ha=m.graphics.shadowContainer;Ca=xa.trackerGroup;var sa,xa=!0,fa=!1,ya=m.pool||(m.pool={}),Ia=function(){!1!==m.visible||!1!==m._conatinerHidden&&void 0!==m._conatinerHidden||(La.hide(),
ea.hide(),ha.hide(),za&&za.hide(),m._conatinerHidden=!0)},Fa=function(){m.drawLabel()},Ba=D.get("config","animationObj"),Ja=Ba.duration||0,Ha=Ba.dummyObj,Da=Ba.animObj,Ba=Ba.animType,Ma,F=F.canvas.config.clip["clip-canvas"].slice(0);La||(La=m.graphics.container=G.group("columns",n),c||La.hide());La.attr("clip-rect",F);ea||(ea=m.graphics.trackerContainer=G.group("col-hot",Ca),c||ea.hide());ha||(ha=m.graphics.shadowContainer=G.group("shadow",n).toBack(),c||ha.hide());h.showConnectors&&m.drawLine();
h=f(l,M);for(l=0;l<h;l++)if(Ma=(M=Q[l])&&(M.trackerConfig={}),da=M&&M.config,F=(n=M&&M.graphics)&&n.element,da)(J=da.setValue,U=0<=J,null===J)?F&&F.hide():(Ca=da.setLink,k=da.colorArr,M.graphics||(Q[l].graphics={}),b=da.displayValue,B(r(E(da.origToolText,K.plottooltext,H.plottooltext))),T=U?da.previousPositiveY:da.previousNegativeY,da.issum?da.isCumulative||(T=da.lastComTotal):T=Q[l-1]&&Q[l-1].config.total,wa=P.getAxisPosition(T||oa),U=Y.getAxisPosition(l)+ma,0!==Aa?(T=P.getAxisPosition(J+(T||0)),
ia=C(wa-T)):(ia=0,T=wa),T=f(T,wa),g(T+ia)>=w&&(ia+=na/2),S.isCrisp?(N=aa.crispBound(U,T,ja,ia,na),U=N.x,T=N.y,wa=N.width,ia=N.height):wa=ja,ua=da.finalTooltext=da.toolText,sa=da.plotBorderDashStyle,Ma.eventArgs={index:l,link:Ca,value:J,displayValue:b,categoryLabel:d[l].label,toolText:ua,id:"",datasetIndex:e,datasetName:K.seriesname,visible:c,setRolloutAttr:da.setRolloutAttr,setRolloverAttr:da.setRolloverAttr},Ja||(ga=T,qa=ia),J={ishot:!Z,fill:a(k[0]),stroke:a(k[1]),"stroke-width":na,"stroke-linejoin":"miter",
visibility:c},k={x:U,y:ga,width:wa,height:qa||1,r:pa,"stroke-dasharray":sa},M._xPos=U,M._yPos=T,M._height=ia,M._width=wa,b=!1,F?(fa=!0,k.y=T,k.height=ia||1,F.attr(J).animateWith(Ha,Da,k,Ja,Ba,xa&&Ia)):(ya.element&&ya.element.length?F=n.element=ya.element.shift():(F=n.element=G.rect(La),b=!0),F.show().attr(J).attr(k),Ja?(F.animateWith(Ha,Da,{y:T,height:ia||1},Ja,Ba,xa&&Fa),xa=!1):fa=!0),F.shadow({opacity:ba},ha).data("BBox",N),Ca||Z?(ia<L&&(T-=(L-ia)/2,ia=L),Ma.attr={x:U,y:T,width:wa,height:ia,r:pa,
cursor:Ca?"pointer":"",stroke:v,"stroke-width":na,fill:v,ishot:!0,visibility:c}):b&&m.attachCallBack.call(F,m,D,M),D.config.enablemousetracking&&F.data("eventArgs",Ma.eventArgs).data(p,!0).data(q,da.setRolloverAttr||{}).data(A,da.setRolloutAttr||{}));fa&&m.drawLabel()},attachCallBack:function(a,b,f){this.click(a.getPlotClickFn(b)).hover(a.rolloverResponseSetter(f,b),a.rolloutResponseSetter(f,b))},drawLine:function(){var a=this.chart,b=a.components,g=a.graphics,k=this.config,n=b.paper,m,p,q=b.xAxis[0],
b=b.yAxis[0],h=b.getAxisBase();m=b.getAxisPosition(h);var h=this.graphics.lineContainer,C=k.definedGroupPadding,e=k.plotSpacePercent/200,d=q.getAxisPosition(0),d=q.getAxisPosition(1)-d,c=k.maxColWidth,C=((1-.01*C)*d||f(d*(1-2*e),1*c))/2,l=k.zLine,k=k.connectNullData,e=l.data,d=e.length,c=this.graphics,r=l.dashStyle,B=l.color,l=l.lineWidth,A,v=c.zLine,z=null,S=[],E=[],F=a.get("config","animationObj"),a=F.duration||0,G=F.dummyObj,Y=F.animObj,F=F.animType,g=g.datalabelsGroup;p=c.dataLabelContainer;p||
(p=this.graphics.dataLabelContainer=n.group("datalabel",g));h||(h=c.lineContainer=n.group("line-connector",p));b.yBasePos=m;for(g=0;g<d;g+=1)p=e[g],m=p.y,null===m?(E.length=0,0===k&&(z=null)):(p=t(p.x,g),m=b.getAxisPosition(m),p=q.getAxisPosition(p),p=D(p,l,l).position,m=D(m,l,l).position,null!==z?(E.length&&(S=S.concat(E),E.length=0),S.push("M",A,z,"m",-C,0,"H",p,"h",C,"m",0,m-z)):E.push("M",p,m),A=p,z=m);v||(v=c.zLine=n.path(h).attr({path:S,"stroke-linecap":"round","stroke-opacity":0}));v.animateWith(G,
Y,{path:S,"stroke-opacity":1,"stroke-dasharray":r,stroke:B,"stroke-linejoin":2<=l?"round":"miter","stroke-width":l},a,F)},hidingPosition:function(){return function(){return{width:0}}},_hoverFunc:function(a,b,f){var g=a.graphics[k]||a.graphics[n];b="DataPlotRollOver"===b?g.data(q):g.data(A);f&&a.graphics[n].attr(b)}},"Column"])}]);N.register("module",["private","modules.renderer.js-dataset-bar2d",function(){var b=this.window,z=this.hcLib,b=/msie/i.test(b.navigator.userAgent)&&!b.opera,G=z.BLANKSTRING,
v="rgba(192,192,192,"+(b?.002:1E-6)+")",b=z.TOUCH_THRESHOLD_PIXELS,F=z.CLICK_THRESHOLD_PIXELS,E=z.pluck,t=z.pluckNumber,a=z.toRaphaelColor,Q=z.hasTouch?b:F,b=z.preDefStr,r=b.configStr,P=b.animationObjStr,T=b.showHoverEffectStr,L=b.barStr,D=b.shadowStr,B=b.visibleStr,m=b.setRolloverAttrStr,p=b.setRolloutAttrStr,q=b.dataLabelStr,A=b.miterStr,n=b.POSITION_MIDDLE,k=b.POSITION_START,g=b.POSITION_END,b=Math,f=b.min,S=b.max,C=z.schedular;N.register("component",["dataset","Bar2D",{type:"bar2d",draw:function(){var b=
this,g=b.JSONData,k=b.chart.jsonData.chart,n=b.config,q=n.legendInteractivity,S=b.groupManager,H=b.index,w=g.data,K=b.chart.config.categories,h,V,e,d,c=b.chart,l=c.getJobList(),F=c.config,J=c.components.paper,Ea=c.components.xAxis[0],N=c.components.yAxis[0];h=c.graphics.columnGroup;var va=c.config.isstacked,ka,ca,U,la=z.parseUnsafeString,Ga=z.getValidValue,xa=z.Raphael,aa=F.showtooltip,Z=Ea.getAxisPosition(0),ja=Ea.getAxisPosition(1),ma=S.config.groupMaxWidth=n.groupMaxWidth=ja-Z,oa=n.definedGroupPadding,
Aa=F.plotspacepercent/200,ga=S.getDataSetPosition(b),Z=S.stackSumValue[b.positionIndex],wa=F.maxcolwidth,ia=c.get(r,P),ja=ia.animType,ua=ia.animObj,Ca=ia.dummyObj,ia=ia.duration,ma=(1-.01*oa)*ma||f(ma*(1-2*Aa),1*wa),ma=t(ga.columnWidth,ma/1),da,oa=ga.xPosOffset||0,ga=ga.height,qa,Aa=b.components.data,ba,na,pa,La,ea,wa=N.getLimit(),za=wa.min,wa=0<wa.max&&0>za,za=N.getAxisBase(),ha=N.yBasePos=N.getAxisPosition(za),sa,fa=0,ya=F.plotborderthickness,Ia=ya/2,Fa=F.useroundedges,Ba=b.graphics.container,Ja=
b.graphics.dataLabelContainer,Ha=b.graphics.shadowContainer,Da,Ma=b.visible,Na=!0,Oa=!1,Sa=(b.components.removeDataArr||[]).length,Ua=b.components.pool||[],Pa=F.showplotborder,ab=F.plothovereffect,Xa,n=n.isSkippedData,$a,Ta,bb=b.drawn,Qa=function(){!1!==b.visible||!1!==b._conatinerHidden&&void 0!==b._conatinerHidden||(Ba.hide(),Ha.hide(),Ja&&Ja.hide(),b._conatinerHidden=!0)},Wa=function(){S.drawSumValueFlag&&S.drawSumValue()};Ba||(Ba=b.graphics.container=J.group(L,h),Ma||Ba.hide());Ha||(Ha=b.graphics.shadowContainer=
J.group(D,h).toBack(),Ma||Ha.hide());Ma&&(Ba.show(),Ha.show());h=Ea.getCategoryLen();for(d=0;d<h;d++)if(V=w&&w[d],e=(ea=(ba=Aa[d])&&ba.config)&&ea.setValue,pa=ea&&ea.isSkipped,void 0===ba||void 0===e||null===e||!0===pa)(Ta=ba&&ba.graphics)&&Ta.element&&Ta.element.hide(),ea&&delete ea.isSkipped;else if(pa=ba.graphics&&ba.graphics.element,!(bb&&!1!==n&&q&&(!Ma&&!pa||Ma&&pa&&0!==ba._width&&0!==ba._height))){Xa=ba.trackerConfig={};!ba||void 0!==e&&null!==e||ba.graphics&&ba.graphics.hotElement&&ba.graphics.hotElement.hide();
pa=ea.setLink;Da=ea.colorArr;qa=0<=e;ba.graphics||(Aa[d].graphics={});La=ea.displayValue;da=qa?ea.previousPositiveY:ea.previousNegativeY;na=Ga(la(E(V.tooltext,g.plottooltext,k.plottooltext)));va&&(da=b._parseValues(d,da,Z[d],na),e=ea.value);sa=N.getAxisPosition(da||za);V=Ea.getAxisPosition(d)+oa;0!==ga?(ca=N.getAxisPosition(e+(da||0)),ka=Math.abs(sa-ca)):(ka=0,ca=sa);ca=Math.min(ca,sa);0<ka-ya&&0<ya&&(wa?va?(ca+=Ia,qa||da)?qa&&(ka=ka-ya+1,da&&(ca=ca-ya+1)&&(ka=ka+ya-1)):ka-=ya:(ca+=Ia,ka-=ya):qa&&
(ca-=Ia));S.isCrisp?(U=xa.crispBound(V,ca,ma,ka,ya),V=U.x,ca=U.y,da=U.width,ka=U.height):da=ma;qa=ea.finalTooltext=!1!==ea.toolText?ea.toolText+(na?"":ea.toolTipValue):"";na=ea.plotBorderDashStyle;Xa.eventArgs={index:d,link:pa,value:e,displayValue:La,categoryLabel:K[d].label,toolText:qa?qa:"",id:G,datasetIndex:H,datasetName:g.seriesname,visible:Ma};ia||(ha=ca,fa=ka);e={x:ha,y:V,width:fa||1,height:da,r:Fa,ishot:!aa,fill:a(Da[0]),stroke:a(Da[1]),"stroke-width":Pa?ya:0,"stroke-dasharray":na,"stroke-linejoin":A,
visibility:B};ba._xPos=ca;ba._yPos=V;ba._height=da;ba._width=ka;if(ba.graphics.element){Oa=!0;ba=ba.graphics.element;e={x:ca,y:V,height:da};if(!0===b.visible||0===ga||va)e.width=ka;ba.animateWith(Ca,ua,e,ia,ja,Na&&Qa);ba.attr({ishot:!aa,fill:a(Da[0]),stroke:a(Da[1]),"stroke-width":Pa?ya:0,"stroke-dasharray":na,"stroke-linejoin":A,visibility:B});ea.elemCreated=!1}else Ua.element&&Ua.element.length?(ba=ba.graphics.element=Ua.element.shift(),ba.show()):ba=ba.graphics.element=J.rect(Ba),ba.attr(e),ba.animateWith(Ca,
ua,{x:ca,width:ka||1},ia,ja,Na&&Wa),ea.elemCreated=!0,Na=!1;ba.shadow(ea.shadow,Ha).data("BBox",U);if(pa||aa)ka<Q&&(ca-=(Q-ka)/2,ka=Q,$a=!0),Xa.attr={x:ca,y:V,width:ka,height:da,r:Fa,cursor:pa?"pointer":G,stroke:v,"stroke-width":Pa?ya:0,fill:v,ishot:!0,visibility:Ma},c.config.enablemousetracking&&ba.data("eventArgs",Xa.eventArgs).data(T,ab).data(m,ea.setRolloverAttr||{}).data(p,ea.setRolloutAttr||{})}$a&&(F.toleranceLeft=5);!c.config.enablemousetracking&&(b.drawn?b.drawTracker():l.trackerDrawID.push(C.addJob(b.drawTracker,
b,[],z.priorityList.tracker)));b.drawn?b.drawLabel():l.labelDrawID.push(C.addJob(b.drawLabel,b,[],z.priorityList.label));b.drawn=!0;S.drawSumValueFlag&&Oa&&S.drawSumValueFlag&&S.drawSumValue();Sa&&b.remove()},drawLabel:function(){var a=this.chart,b=a.graphics,m=a.config,p=a.components.canvas.config,C=a.config.dataLabelStyle,A=this.JSONData.data,H=a.config.categories,w=a.is3D,K=a.config.isstacked,h=H&&H.length,v=A.length,H=this.components.data,e=a.components.paper,d=a.linkedItems.smartLabel,c,l,D=
p.yDepth,p=p.xDepth,z=a.components.numberFormatter,E=G,F,L=m.placevaluesinside,Q=m.canvasWidth,T=m.canvasLeft,U,m=m.valuepadding+2,N,Ga,xa,aa=a.get(r,P),a=aa.duration,Z=aa.animType,ja=aa.dummyObj,aa=aa.animObj,ma=this.graphics.dataLabelContainer,oa,Aa,ga,wa=this.components.pool||{};xa=this.visible;b=b.datalabelsGroup;ma||(ma=this.graphics.dataLabelContainer=e.group(q,b),xa||ma.hide());xa&&ma.show();d.setStyle(C);b=h<v?h:v;if(xa)for(h=0;h<b;h++)if(Ga=(l=(c=H[h])&&c.config)&&l.setValue,void 0===c||
void 0===Ga||null===Ga||!0===l.labelSkip)(ga=c&&c.graphics)&&ga.label&&ga.label.hide(),l&&delete l.labelSkip;else if(v=c.graphics)if(F=A[h],N=c._yPos,xa=c._xPos,Ga=z.getCleanValue(F.value),F=0>t(Ga),U=c._height,c=c._width,oa=K?n:F?L?k:g:L?g:k,E=l.displayValue,Aa=v.label,l.showValue&&void 0!==E&&null!==E&&E!==G&&null!==Ga){l={text:E,fill:C.color,"text-bound":[C.backgroundColor,C.borderColor,C.borderThickness,C.borderPadding,C.borderRadius,C.borderDash],"line-height":C.lineHeight,visibility:B};E=d.getOriSize(E);
E=E.width;E+=m;Aa=m;N+=.5*U;U=xa+(F?0:c);Ga=F?xa-T:T+Q-(xa+c);K?(U+=.5*(F?c:-c),U=S(T+.5*E,U),U=f(T+Q-.5*E,U),U-=w?p:0,N+=w?D:0):L?c>=E?(U+=F?Aa:-Aa,w&&(N+=D,U-=p)):E<Ga?(U+=F?-Aa:Aa,oa=F?g:k,w&&F&&(U-=p)):(F?(U=xa+c+S(E-xa-c+T,0)-Aa,oa=g):(U=xa-S(E-(T+Q-xa),0)+Aa,oa=k),w&&(U-=p,N+=D)):Ga>=E?(U+=F?-Aa:Aa,w&&F&&(U-=p,N+=p)):(U+=F?Aa+E:-(Aa+E),w&&(U-=p,N+=D));if(U>T+Q||U<T)U=T+4,oa=k;l["text-anchor"]=oa;(Aa=v.label||wa.label&&wa.label.shift())?Aa.show().animateWith(ja,aa,{x:U,y:N},a,Z).attr(l):(l.x=
U,l.y=N,v.label=e.text(l,ma))}else Aa&&Aa.hide()},remove:function(){var a=this.components,b=a.removeDataArr,f=a.pool||(a.pool={element:[],hotElement:[],label:[]}),g=b.length,k,n=this.maxminFlag,m,p,q;for(q=0;q<g;q++)if(k=b[0],b.splice(0,1),k&&k.graphics){p=k.graphics;for(m in p)p[m].hide();k.graphics.element&&(f.element=f.element.concat(k.graphics.element));k.graphics.hotElement&&(f.hotElement=f.hotElement.concat(k.graphics.hotElement));k.graphics.label&&(f.label=f.label.concat(k.graphics.label))}a.pool=
f;n&&this.setMaxMin()}},"Column"])}]);N.register("module",["private","modules.renderer.js-dataset-bar3d",function(){var b=this.window,z=this.hcLib,b=/msie/i.test(b.navigator.userAgent)&&!b.opera,G=z.BLANKSTRING,v="rgba(192,192,192,"+(b?.002:1E-6)+")",b=z.TOUCH_THRESHOLD_PIXELS,F=z.CLICK_THRESHOLD_PIXELS,E=z.pluck,t=z.pluckNumber,a=z.toRaphaelColor,Q=z.hasTouch?b:F,b=z.preDefStr,r=b.noneStr,P=b.configStr,T=b.animationObjStr,L=b.showHoverEffectStr,D=b.shadowStr,B=b.visibleStr,m=b.barStr,p=b.hiddenStr,
q=b.negativeValueStr,A=b.positiveValueStr,n=b.zeroPlaneStr,k=b.categoryPlotsStr,g=b.setRolloverAttrStr,f=b.setRolloutAttrStr,S=z.graphics.getCubePathOutline,b=Math,C=b.min,Y=b.abs,R=z.schedular;N.register("component",["dataset","Bar3D",{draw:function(){var b=this,X=b.JSONData,O=b.chart.jsonData.chart,F=b.config,H=b.groupManager,w=b.index,K=X.data,h=b.chart.config.categories,V,e,d,c,l=b.chart,M=l.getJobList(),J=l.config,Ea=J.plothovereffect,N=l.components.paper,va=l.components.xAxis[0],ka=l.components.yAxis[0];
c=l.graphics.columnGroup;var ca=J.isstacked,U,la,Ga=z.parseUnsafeString,xa=z.getValidValue,aa=J.showtooltip,Z=va.getAxisPosition(0),ja=va.getAxisPosition(1),ma=F.groupMaxWidth=Y(ja-Z),oa=F.definedGroupPadding,Aa=J.plotspacepercent/200,ga=H.getDataSetPosition(b),F=H.stackSumValue[b.positionIndex],wa=J.maxcolwidth,ia=l.get(P,T),Z=ia.animType,ja=ia.animObj,ua=ia.dummyObj,ia=ia.duration,ma=(1-.01*oa)*ma||C(ma*(1-2*Aa),1*wa),ma=t(ga.columnWidth,ma/1),Ca,oa=ga.xPosOffset||0,ga=ga.height,da,Aa=b.components.data,
qa,ba,na,pa,La,ea,za,ha;pa={};ea={};var wa=ka.getLimit(),sa=wa.max;ha=wa.min;var wa=ka.getAxisBase(),fa=ka.yBasePos=ka.getAxisPosition(wa),ya=0,Ia=J.plotborderthickness;za=b.graphics.container;var Fa=b.graphics.dataLabelContainer,Ba=b.graphics.shadowContainer,Ja,Ha,Da,Ma,Na,Oa,Sa,Ua=J.use3dlighting,Pa=!0,ab=!1,Xa=b.visible,$a=(b.components.removeDataArr||[]).length,Ta=b.components.pool||[],bb=J.showplotborder,Qa,Wa=function(){var a,c;if(!1===b.visible&&(!1===b._conatinerHidden||void 0===b._conatinerHidden)){Fa&&
Fa.hide();a=b.components.data;for(c=0;c<V;c++)a[c]&&a[c].graphics&&a[c].graphics.element&&a[c].graphics.element.attr("visibility",p),a[c]&&a[c].graphics&&a[c].graphics.hotElement&&a[c].graphics.hotElement.attr("visibility",p);Ba.hide();b._conatinerHidden=!0}},Za=function(){var c=b.components.data,d;for(d=0;d<V;d++)c[d]&&c[d].graphics&&c[d].graphics.element&&c[d].graphics.element.attr("fill",[a(c[d].config.colorArr[0]),!Ua]);H.drawSumValueFlag&&H.drawSumValue()};za||(za=b.graphics.container=l.datasetLayers=
l.datasetLayers||N.group(m,c));Ba||(Ba=b.graphics.shadowContainer=N.group(D,c).toBack());V=va.getCategoryLen();if(Xa)for(c=0;c<V;c++)Aa[c].graphics&&Aa[c].graphics.element&&Aa[c].graphics.element.attr("visibility",B),Aa[c].graphics&&Aa[c].graphics.hotElement&&Aa[c].graphics.hotElement.attr("visibility",B);qa=za.negative=za.negative||N.group(q,za);na=za.column=za.column||N.group(A,za);0>ha&&0<=sa?(c=za.zeroPlane)?(c=[fa-5,l.config.canvasTop+5,1,l.config.canvasHeight,5,5,c],H.graphics.zeroplane.show(),
H.graphics.zeroplane._.cubetop.show(),H.graphics.zeroplane._.cubeside.show(),H.graphics.zeroplane.animateWith(ua,ja,{cubepath:c},ia,Z),H.graphics.zeroplane.attr({fill:[J.zeroPlaneColor,!Ua],stroke:J.zeroPlaneBorderColor||"none","stroke-width":J.zeroPlaneShowBorder?1:0})):(c=za.zeroPlane=N.group(n,za).insertBefore(na),!H.graphics&&(H.graphics={}),H.graphics.zeroplane=N.cubepath(fa-5,l.config.canvasTop+5,1,l.config.canvasHeight,5,5,c).attr({fill:[J.zeroPlaneColor,!Ua],stroke:J.zeroPlaneBorderColor||
"none","stroke-width":J.zeroPlaneShowBorder?1:0})):H.graphics&&H.graphics.zeroplane&&H.graphics.zeroplane.hide()&&H.graphics.zeroplane._.cubetop.hide()&&H.graphics.zeroplane._.cubeside.hide();(l=qa.data(k))||(qa.data(k,Array(V)),l=qa.data(k));(sa=na.data(k))||(na.data(k,Array(V)),sa=na.data(k));for(c=0;c<V;c+=1)l[c]=l[c]||N.group(qa),sa[c]=sa[c]||N.group(na);c=0;for(Ha=V-1;c<V;c++,Ha--)if(za=c,e=K&&K[c],pa=(ha=(qa=Aa[c])&&qa.config)&&ha.setValue,void 0!==qa&&void 0!==pa&&null!==pa){Qa=qa.trackerConfig=
{};!qa||void 0!==pa&&null!==pa||(qa.graphics&&qa.graphics.element&&(qa.graphics.element.hide(),qa.graphics.element._.cubeside.hide(),qa.graphics.element._.cubetop.hide()),qa.graphics&&qa.graphics.hotElement&&qa.graphics.hotElement.hide());na=ha.setLink;Ja=ha.colorArr;qa.graphics||(Aa[c].graphics={});ea=ha.displayValue;U=0<=pa?ha.previousPositiveY:ha.previousNegativeY;da=xa(Ga(E(e.tooltext,X.plottooltext,O.plottooltext)));ca&&(U=b._parseValues(c,U,F[c],da),pa=ha.value);Ca=ka.getAxisPosition(U||wa);
e=va.getAxisPosition(c)+oa;0!==ga?(la=ka.getAxisPosition(pa+(U||0)),U=Math.abs(Ca-la)):(U=0,la=Ca);la=Math.min(la,Ca);Ca=ma;d=(Qa.isNegative=Da=0>pa)?l:sa;Qa.targetGroupTracker=void 0;da=ha.finalTooltext=!1!==ha.toolText&&ha.toolText+(da?"":ha.toolTipValue);Qa.eventArgs={index:c,link:na,value:pa,displayValue:ea,categoryLabel:h[c].label,toolText:da?da:"",id:G,datasetIndex:w,datasetName:X.seriesname,visible:Xa};La=Qa.eventArgs;pa=ha.setRolloutAttr;ea=ha.setRolloverAttr;ia||(fa=la,ya=U);Ma=e;Na=la;Oa=
Ca;Sa=U;e+=5;la-=5;qa.graphics.element?(ab=!0,ba=qa.graphics.element,d[Ha].appendChild(ba._.cubetop),d[Ha].appendChild(ba._.cubeside),d[Ha].appendChild(ba),d={cubepath:[la,e,!0===b.visible||0===ga||ca?U:ba.attrs.cubepath[2],Ca,5,5]},ba.animateWith(ua,ja,d,ia,Z,Pa&&Wa),ba.attr({fill:[a(Ja[0]),!Ua],ishot:!0,stroke:bb&&a(Ja[1]),"stroke-width":bb?J.plotborderthickness:0,"stroke-dasharray":ha.plotBorderDashStyle,cursor:na?"pointer":G}),ha.elemCreated=!1):(Ta.element&&Ta.element.length?(ba=qa.graphics.element=
Ta.element.shift(),d[Ha].appendChild(ba._.cubetop),d[Ha].appendChild(ba._.cubeside),d[Ha].appendChild(ba),ba.show()):ba=qa.graphics.element=N.cubepath(d[Ha]),ba.attr({cubepath:[ia?fa-5:la,e,ia?0:ya,Ca,5,5],fill:[a(Ja[0]),!Ua],ishot:!0,stroke:bb&&a(Ja[1]),"stroke-width":bb?J.plotborderthickness:0,"stroke-dasharray":ha.plotBorderDashStyle,cursor:na?"pointer":G,visibility:Xa?B:p}),ba.animateWith(ua,ja,{cubepath:[la,e,U,Ca,5,5]},ia,Z,Pa&&Za),Pa=!1,qa._newXPos=e,ha.elemCreated=!0);ba.shadow(ha.shadow,
Ba).data("BBox",{height:Ca,width:ya,x:la,y:e});if(na||aa)U<Q&&(la-=(Q-U)/2,U=Q),Qa.attr={path:S([la,e,U,Ca,5,5]),cursor:na?"pointer":G,stroke:Ia&&v||r,"stroke-width":bb?J.plotborderthickness:0,fill:v,ishot:!0};ca&&!Da||ba.toBack();qa._xPos=Na;qa._yPos=Ma;qa._height=Oa;qa._width=Sa;ba.data("eventArgs",La).data("groupId",za).data(L,!0).data(g,ea).data(f,pa).tooltip(da);ba._.cubetop.data("eventArgs",La).data("groupId",za).data(L,Ea).data(g,ea).data(f,pa).tooltip(da);ba._.cubeside.data("eventArgs",La).data("groupId",
za).data(L,Ea).data(g,ea).data(f,pa).tooltip(da)}b.drawn?b.drawLabel():M.labelDrawID.push(R.addJob(b.drawLabel,b,[],z.priorityList.label));b.drawn=!0;H.drawSumValueFlag&&ab&&H.drawSumValueFlag&&H.drawSumValue();$a&&b.remove();J.toleranceLeft=7;J.toleranceBottom=7},_checkPointerOverColumn:function(a,b,f){var g=this.chart.config,k=g.plotborderthickness,n=g.showplotborder,m=this.components.data,h=m[a],p,e,d;if(h&&(p=h.config.setValue,!g.isstacked||!(0>p&&this.valueLook||0<p&&!this.valueLook))&&(k=n?
k:0,null!==p&&(n=h._yPos,p=h._height+5,g=h._xPos-5,h=h._width+5,e=b-g,d=f-n,k=(k=0<=e&&e<=h+k&&0<=d&&d<=p+k?0<b+f-(g+n)-5:!1)?0>b+f-(g+n+h+p)+5:!1)))return{pointIndex:a,hovered:k,pointObj:m[a]}},_getHoveredPlot:function(a,b){var f=this.chart,g=f.config,k=f.components.canvas.config,k=Math.max(k.canvasPaddingLeft,k.canvasPadding),n=g.canvasLeft,g=g.canvasTop,f=f.components.xAxis[0].getValue(f.isBar?b-g-k:a-n-k),f=Math.round(f);return this._checkPointerOverColumn(f-1,a,b)||this._checkPointerOverColumn(f,
a,b)},remove:function(){var a=this,b=a.components,f=b.removeDataArr,g=b.pool||(b.pool={element:[],hotElement:[],label:[]}),k=f.length,n=a.config.groupMaxWidth,m,h=a.maxminFlag,p,e,d;(function(){return!1===a.endPosition?function(){return{x:m._xPos-n*k}}:!0===a.endPosition?function(){return{x:m._xPos+n*k||0}}:function(){return{width:0}}})();for(d=0;d<k;d++)if(m=f[0],f.splice(0,1),m&&m.graphics){e=m.graphics;for(p in e)e[p].hide();m.graphics.element&&(g.element=g.element.concat(m.graphics.element));
m.graphics.hotElement&&(g.hotElement=g.hotElement.concat(m.graphics.hotElement));m.graphics.label&&(g.label=g.label.concat(m.graphics.label))}b.pool=g;h&&a.setMaxMin()}},"Bar2D"])}]);N.register("module",["private","modules.renderer.js-dataset-area",function(){var b=this.hcLib,z=b.parseConfiguration,G=this.window.Image,v="VML"===b.Raphael.type,F=b.BLANKSTRING,E=b.TOUCH_THRESHOLD_PIXELS,t=b.CLICK_THRESHOLD_PIXELS,a=b.extend2,Q=b.pluck,r=b.pluckNumber,P=b.toRaphaelColor,T=b.getFirstAlpha,L=b.HUNDREDSTRING,
D=b.plotEventHandler,B=b.hasTouch?E:t,m=b.getCrispValues,p=b.getValidValue,E=b.preDefStr,q=E.DEFAULT,A=E.visibleStr,n=E.hiddenStr,k=E.setRolloverAttrStr,g=E.setRolloutAttrStr,E=Math,f=E.min,S=E.max,C=E.ceil,Y=b.getFirstColor,R=b.schedular;N.register("component",["dataset","area",{type:"area",_getHoveredPlot:function(a,b){var f=this.chart,g=f.components.canvas.config,k=f.components.xAxis[0],n=this.components,n=n.dataRT||n.data,m,h=n.length,p;m=this.config.plotsPerBin||1;var e=this.config,g=a-f.config.canvasLeft-
Math.max(g.canvasPaddingLeft,g.canvasPadding||0),e=e&&e.radius||0,f=Math.floor(Math.max(k.getValue(g-e),0)),k=Math.ceil(Math.min(k.getValue(g+e),h-1));1<m&&(f=C(f/m),k=C(k/m),f=(f-1)*m+1,k*=m);for(;k>=f;k--)if(m=n[k])if(p=this.isWithinShape(m,k,a,b))break;return p},isWithinShape:function(a,b,f,g,k){if(a&&((k=a.config.setValue)||0===k)){var n=a.config.anchorProps,m=n&&n.borderThickness,h=this.chart.config.viewPortConfig;k=this.components;k=k.dataRT||k.data;var p=r(a.config.dragTolerance,0),e,h=a._xPos-
(h?h.x*h.scaleX:0);e=a._yPos;if(null!==e)return a=a.config.hoverEffects,(a=Math.max(n&&n.radius,a&&a.anchorRadius||0,B)+m/2)||(a=0),f=Math.sqrt(Math.pow(f-h,2)+Math.pow(g-e,2)),f<=a||f<=p?{pointIndex:b,hovered:!0,pointObj:k[b]}:!1}},_parseShadowOptions:function(){var a=this.chart,b=this.config,f=a.jsonData.chart,a=r(a.defaultPlotShadow,a.components.colorManager.getColor("showShadow"));return{opacity:r(f.showshadow,a)?b.alpha/100:0}},_firePlotEvent:function(a,f,g,k){var n=this.chart,m=this.components,
m=(m.dataRT||m.data)[f],p=this.graphics.sharedAnchor,p=m.graphics.element||void 0!==m.config.setValue&&p&&p.element,h=b.toolTip,C=g.originalEvent,e=n.components.paper.canvas.style,d,c;if(p)switch(d=m.config,c=d.setLink,d=d.eventArgs,a){case "mouseover":this._decideTooltipType(f,k,g);this._rolloverResponseSetter(n,m,C);c&&(e.cursor="pointer");break;case "mouseout":h.hide(n.chartInstance.id);this._rolloutResponseSetter(n,m,C);c&&(e.cursor=q);break;case "click":D.call(p,n,C,"dataplotclick",d);break;
case "mousemove":this._decideTooltipType(f,k,g)}},_rolloverResponseSetter:function(a,b,f,g){var k=b.graphics,n=(k=k&&(k.element||this.getAnchor(a,b)))&&k.getData(),m=n.hoverEnabled;!0!==n.draged&&(this._hoverFunc(b,"DataPlotRollOver",m,a.jsonData.chart),!g&&k&&D.call(k,a,f,"DataPlotRollOver"))},_rolloutResponseSetter:function(a,b,f,g){var k=b.graphics,n=(k=k&&(k.element||this.getAnchor(a,b,!0)))&&k.getData(),m=n.hoverEnabled,h=this.type,p=b.config,e=p.anchorProps,e=e.radius&&e.anchorAlpha;!0!==n.draged&&
(this._hoverFunc(b,"DataPlotRollOut",m,a.jsonData.chart),!g&&k&&D.call(k,a,f,"DataPlotRollOut"));p.isAnchorsDrawn&&!e&&"area"===h&&k&&k.hide()},getAnchor:function(a,b,f){var n=this.graphics,n=n.sharedAnchor||(n.sharedAnchor={}),m=n.element,p=this.graphics.container,q=a.components.paper,h=b&&b.config,C=h&&h.anchorProps,e,d,c,l,r,B;if(C)return e=h&&h.eventArgs,d=h&&h.setRolloutAttr,c=h&&h.setRolloverAttr,l=h&&h.hoverEffects,r=C&&C.radius,B=C&&C.shadow,a=a.config.prevAnchorHovered,C=C&&C.anchorAlpha,
l.anchorAnimation=0,m||(m=n.element=q.polypath(p.anchorGroup)),b._index!==a&&(m.shadow(B,p.anchorShadowGroup).data("anchorRadius",r).data("anchorHoverRadius",l.anchorRadius).data("hoverEnabled",l.enabled).data("eventArgs",e),l.enabled&&m&&m.data(k,c).data(g,d)),f?m.hide():C&&m.show(),h.prevAnchorHovered=b._index,m},configure:function(){var a=this.chart,f=a.components,g=a.config,k=this.config,n=this.JSONData,m=a.jsonData.chart,q=a.singleseries,h=f.colorManager,C=r(this.index,this.stackIndex),e=r(n.showplotborder,
m.showplotborder||1),C=!q||p(m.palettecolors)?h.getPlotColor(C):h.getColor("plotFillColor").split(/\s*\,\s*/)[0],d,c=g.isdual,l=g.haslineset;this.__setDefaultConfig();z(n,k,a.config,{data:!0});k.plotColor=C;k.parentYAxis=c?l?d=1:d="s"===Q(n.parentyaxis&&n.parentyaxis.toLowerCase(),"p")?1:0:d=0;this.yAxis=f.yAxis[d];k.valueposition=k.valueposition.toLowerCase();k.plotfillcolor=Q(n.color,m.plotfillcolor,C);k.plotgradientcolor=0!==g.useplotgradientcolor?b.getDefinedColor(m.plotgradientcolor,h.getColor("plotGradientColor")):
"";k.plotfillalpha=Q(n.alpha,g.plotfillalpha);k.fillColor={color:k.plotfillcolor+(k.plotgradientcolor?","+k.plotgradientcolor:""),alpha:k.plotfillalpha,angle:k.plotfillangle};k.plotborderalpha=e?Q(n.plotborderalpha,m.plotborderalpha,n.alpha,m.plotfillalpha,"95"):0;k.plotbordercolor=Q(n.plotbordercolor,m.plotbordercolor,m.areabordercolor,q?p(m.palettecolors)?h.getPlotColor(0):h.getColor("plotBorderColor").split(/\s*\,\s*/)[0]:"666666");k.plotborderdashstyle=k.dashed?b.getDashStyle(k.plotborderdashlen,
k.plotborderdashgap,k.plotborderthickness):"none";k.linecolor=Q(n.color,m.linecolor,k.plotColor);k.legendSymbolColor="line"===this.type?k.linecolor:k.plotfillcolor;f=b.getDashStyle(k.linedashlen,k.linedashgap,k.linethickness);k.lineDashStyle=k.dashed?f:"none";k.shadow=this._parseShadowOptions();k.drawanchors=r(n.drawanchors,n.showanchors,m.showanchors,m.drawanchors);k.anchorbgcolor=Q(n.anchorbgcolor,g.anchorbgcolor,h.getColor("anchorBgColor"));k.anchorbordercolor=Q(n.anchorbordercolor,g.anchorbordercolor,
k.linecolor,k.plotColor);this.components.data=this.components.data||(this.components.data=[]);this.visible=1===r(n.visible,!Number(n.initiallyhidden),1);this._setConfigure();this._realTimeConfigure&&this._realTimeConfigure();!1!==a.hasLegend&&this._addLegend()},_setConfigure:function(a,g){var k=this.chart,n=b.parseUnsafeString,m=this.config,q=k.config,C=this.JSONData,h=k.jsonData.chart,t=a||C.data||[],e,d=k.components.xAxis[0],c=a?a.data.length:d.getCategoryLen(),l,A=q.isDrag,v,D,z,R,E,F=-Infinity,
G=Infinity,Y=n(q.yaxisname),L=n(q.xaxisname),P=this.yAxis,T=q.tooltipsepchar,N=m.dashed,ja,ma;m.imageCount=0;l=this.components.data;l||(l=this.components.data=[]);m.maxRadius=-Infinity;q.dragTolerance=q.dragTolerance||-Infinity;for(D=0;D<c;D++)a?(k=a&&a.data[D]||{},ja=void 0!==g?g+D:l.length-c+D,e=l[ja]):(e=l[D],k=t&&t[D]||{}),v=e&&e.config,e||(e=l[D]={}),e.config||(v=l[D].config={}),e.graphics||(e.graphics={}),R=r(ja-c,D),v.setValue=z=P.getCleanValue(k.value,m.stack100percent),v.setLink=Q(k.link),
v.anchorProps=this._parseAnchorProperties(R),m.maxRadius=S(v.anchorProps.radius+v.anchorProps.borderThickness/2,m.maxRadius),ma=v.anchorProps.radius+v.anchorProps.borderThickness/2,v.dragTolerance=A?(6>ma?5.5:ma+.5)+B:0,R=d.getLabel(R),v.label=p(n(R.tooltext||R.label)),v.showValue=r(k.showvalue,m.showvalues),v.dashed=r(k.dashed,N),v.dashStyle=v.dashed?b.getDashStyle(m.linedashlen,m.linedashgap,m.linethickness):"none",v.color=Q(k.color,m.linecolor),v.setColor=k.color,v.setAlpha=k.alpha,v.setDashed=
k.dashed,v.alpha=Q(k.alpha,k.linealpha,m.linealpha),null!==z&&(F=S(F,z),G=f(G,z)),v.setTooltext=n(k.toolText),v.toolTipValue=z=P.dataLabels(z),v.setDisplayValue=R=n(k.displayvalue),v.displayValue=Q(R,z),v.formatedVal=R=v.toolTipValue,v.setTooltext=b.getValidValue(n(Q(k.tooltext,C.plottooltext,h.plottooltext))),v.valuePosition=Q(k.valueposition,m.valueposition),v.valuePosition&&(v.valuePosition=v.valuePosition.toLowerCase()),q.showtooltip?null===R?z=!1:void 0!==v.setTooltext?(z=[1,2,3,4,5,6,7],R={yaxisName:Y,
xaxisName:L,formattedValue:R,label:v.label},z=b.parseTooltext(v.setTooltext,z,R,k,h,C)):(q.seriesnameintooltip&&(E=b.getFirstValue(C&&C.seriesname)),z=E?E+T:"",z+=v.label?v.label+T:""):z=!1,v.toolText=z,v.setLevelTooltext=v.setTooltext,v.setTooltext=z,v.hoverEffects=this._parseHoverEffectOptions(e,k),v.anchorProps.isAnchorHoverRadius=v.hoverEffects.anchorRadius,q.dragTolerance=S(q.dragTolerance,m.maxRadius,v.hoverEffects.anchorRadius);q.dragTolerance=A?(5<q.dragTolerance?q.dragTolerance:5.5)+B:0;
m.maxValue=F;m.minValue=G;this.ErrorValueConfigure&&this.ErrorValueConfigure()},init:function(a){this.JSONData=a;this.components={};this.graphics={};this.configure()},draw:function(){var f=this,q=f.chart,C=q.jsonData,r=f.graphics,B=q.graphics,w=q.config,t=q.getJobList(),h=q.components,A=f.JSONData,e=C.chart,d=f.config,c=d.legendInteractivity,l=q.config.isstacked,v=f.groupManager.stackSumValue[0],D=f.stackIndex,z,E,F=h.paper,Y=h.xAxis[0],L=f.yAxis,U,T,N,xa=w.showtooltip,aa,Z=f.components.data,ja=f.components.removeDataArr||
[],ma=ja.length,oa,Aa,ga,wa,ia,ua,Ca,da,qa=B.areaGroup,ba=L.getAxisBase(),na,pa,La=d.plotbordercolor,ea=d.plotborderalpha,za=d.plotborderdashstyle,ha=d.plotborderthickness,sa=r.container,fa,ya=b.parseUnsafeString,Ia=d.fillColor,Fa=q.is3D,Ba=r.shadowContainer,Ja=r.dataLabelContainer,Ha=function(){!1!==f.visible||!1!==f._conatinerHidden&&void 0!==f._conatinerHidden||(sa.areaGroup.hide(),Ba.hide(),sa.anchorShadowGroup.hide(),sa.anchorGroup.hide(),Ja&&Ja.hide(),f._conatinerHidden=!0)},Da=function(){!1!==
f.visible&&(sa.anchorShadowGroup.show(),sa.anchorGroup.show(),Ja.show(),Ba.show());qa.area.attr({"clip-rect":null});qa.area.node&&qa.area.node.removeAttribute("clip-path");q._animCallBack()},Ma=d.shadow,Na,Oa=f.visible,Sa,Ua,Pa={},ab=B.datalabelsGroup,Xa=Y.getPVR(),$a,Ta=Fa?10:0,bb,Qa=Fa?10:0,Wa=q.components.scrollBar,Za=q.components.canvas.config.clip,ta=a([],Za["clip-canvas"]),ra=a([],Za["clip-canvas-init"]),Va=w.height,Ra=!w.drawfullareaborder,I=r.connector,gb=f.components.pool||(f.components.pool=
{}),sb=0,yb=!0!==f.drawn,zb,db,nb,Ab=f.startPosition,ib={},eb={},Bb=q.get("config","animationObj")||{},fb=Bb.duration,tb=Bb.dummyObj,ob=Bb.animObj,Cb=Bb.animType,Db=d.lastPath||{},Ob,wb=!0,Gb,lb,jb,qb,Ya,xb=q.config.viewPortConfig,ub=xb.x,vb=xb.scaleX,pb,rb,mb,Kb,Fb,Tb=f.chart.config.realTimeConfig&&f.chart.config.realTimeConfig.clear,Hb=0,hb=!yb&&fb,cb=0,Eb,Lb,Jb,Ib,Mb=d.isSkippedData,kb=q.config.canvasTop,Pb=q.config.canvasBottom,Rb=r.sharedAnchor,Qb=Rb&&Rb.element,Nb=0;d.imagesLoaded=0;f.noOfNewDataAtEnd=
0;sa||(sa=r.container={anchorShadowGroup:F.group("anchor-shadow",qa.areaConnector),areaGroup:F.group("area",qa.area),anchorGroup:F.group("anchors",qa.areaConnector)},Oa||(sa.anchorShadowGroup.hide(),sa.areaGroup.hide(),sa.anchorGroup.hide()));Ba||(Ba=r.shadowContainer=F.group("shadows",qa.shadows),Oa||Ba.hide());Ja||(Ja=r.dataLabelContainer=r.dataLabelContainer||F.group("datalabel",ab),Oa||Ja.hide());Oa&&(sa.anchorShadowGroup.show(),sa.areaGroup.show(),sa.anchorGroup.show(),Ba.show(),Ja.show(),f._conatinerHidden=
!1);d.groupMaxWidth=Y.getAxisPosition(1)-Y.getAxisPosition(0);z=Y.getCategoryLen();$a=Xa*z;if(Tb)for(E=0,z=ja.length;E<z;E++)f._removeDataVisuals(ja.shift());else f._shiftOffRemovedPoints();ib=d.removePath;q.isRealTime&&(ta[1]=0,ta[3]=Va,sa.areaGroup.attr({"clip-rect":ta}),Ja.attr({"clip-rect":ta}),sa.anchorGroup.attr({"clip-rect":ta}),sa.anchorShadowGroup.attr({"clip-rect":ta}),Ba.attr({"clip-rect":ta}));for(E=0;E<z;E++)aa=(oa=Z[E])&&oa.config,oa&&void 0!==aa.setValue&&(oa.graphics||(oa.graphics=
{}),ga=oa.graphics.element,pb=oa.graphics.image,zb=Y.getLabel(E).label,ia=aa.setValue,Jb=aa&&aa.isSkipped,void 0===ia||!0===Jb||!1!==Mb&&!yb&&c&&(!Oa&&!ga||Oa&&ga&&!oa._xPos&&!oa._yPos)?(ga&&ga.hide(),pb&&pb.hide(),aa&&(aa.isSkipped=!0)):(wa=aa.setLink,Pa=aa.anchorProps||{},Ua=Pa.shadow,U=p(ya(Q(aa.setLevelTooltext,A.plottooltext,e.plottooltext))),aa&&(na=0<=ia?aa.previousPositiveY:aa.previousNegativeY),l&&ia&&(na=f._parseValues(E,na,v[E],U),ia=aa.value),null!==ia&&(pa=L.getAxisPosition(na||ba)+Qa,
N=f.visible?L.getAxisPosition(ia+(na||0))+Qa:pa,T=Y.getAxisPosition(E)-Ta+ub*vb,T=m(T,ha,ha).position,N=m(N,ha,ha).position,rb=Pa.symbol,mb=Pa.radius,Kb=Pa.startAngle,Gb=Pa.bgColor,Ya=Pa.bgAlpha,lb=Pa.borderColor,qb=Pa.borderAlpha,jb=Pa.borderThickness,Na=aa.hoverEffects,Eb=N-mb-jb/2,Lb=N+mb+jb/2,Eb<kb&&(w.toleranceTop=S(w.toleranceTop||0,kb-Eb)),Lb>Pb&&(w.toleranceBottom=S(w.toleranceBottom||0,Lb-Pb)),Aa=xa?aa.toolText+(U?"":aa.toolTipValue):"",aa.finalTooltext=Aa,ua=aa.eventArgs=aa.eventArgs||{},
ua.index=E,ua.link=wa,ua.value=ia,ua.displayValue=aa.displayValue,ua.categoryLabel=zb,ua.toolText=Aa,ua.id=f.userID,ua.datasetIndex=D||0,ua.datasetName=A.seriesname,ua.visible=Oa,Na.enabled&&(aa.setRolloverAttr={polypath:[Na.anchorSides||2,T,N,Na.anchorRadius,Na.startAngle,Na.dip],fill:P({color:Na.anchorColor,alpha:Na.anchorBgAlpha}),stroke:P({color:Na.anchorBorderColor,alpha:Na.anchorBorderAlpha}),"stroke-width":Na.anchorBorderThickness},aa.setRolloutAttr={polypath:[Pa.symbol[1]||2,T,N,Pa.radius,
Pa.startAngle,0],fill:P({color:Pa.bgColor,alpha:Pa.bgAlpha}),stroke:P({color:Pa.borderColor,alpha:Pa.borderAlpha}),"stroke-width":Pa.borderThickness},da=aa.setRolloverAttr,Ca=aa.setRolloutAttr),Fb={polypath:[rb[1]||2,T,N,mb,Kb,0]},!ga&&hb&&!0!==Ab&&(nb=z+sb,db=Y.getPixel(nb),oa._baseXPos=oa._xPos=db,oa._yPos=N,oa._baseYPos=pa,Db=this.getLinePath([oa],Db),sb++),Ib=mb&&Pa.anchorAlpha,aa.isAnchorsDrawn||d.drawanchors||Ib?Pa.imageUrl?(aa.anchorImageLoaded=!1,Sa=new G,Sa.onload=f._onAnchorImageLoad(f,
E,ua,T,N,oa),Sa.onerror=f._onErrorSetter(f,E),Sa.src=Pa.imageUrl,Hb++):(pb&&pb.hide(),ga||(gb.element&&gb.element.length?ga=oa.graphics.element=gb.element.shift():(ga=oa.graphics.element=F.polypath(sa.anchorGroup),ga.attr(Fb),aa.isAnchorsDrawn=!0,Nb++),hb&&ga.attr({polypath:[Pa.symbol[1]||2,db,N,Pa.radius,Pa.startAngle,0]})),ga.show().attr({transform:""}).animateWith(tb,ob,Fb,fb,Cb,wb&&Ha),ga.attr({fill:P({color:Gb,alpha:Ya}),stroke:P({color:lb,alpha:qb}),"stroke-width":jb,visibility:mb?Oa:n}).shadow(Ua,
sa.anchorShadowGroup).data("anchorRadius",mb).data("anchorHoverRadius",Na.anchorRadius).data("hoverEnabled",Na.enabled).data("eventArgs",ua),wb=!1,pb&&pb.hide(),Na.enabled&&ga&&ga.data("anchorRadius",Pa.radius).data("anchorHoverRadius",Na.anchorRadius).data("hoverEnabled",Na.enabled).data("eventArgs",ua).data(k,da).data(g,Ca)):ga&&!Ib&&ga.hide()),oa._xPos=T,oa._yPos=N,oa._baseXPos=T,oa._baseYPos=pa,oa._polyPath=Fb,oa._index=E,cb++));E===Nb||d.drawanchors?Qb&&Qb.hide():Rb&&Qb?Qb.hide():f.getAnchor(q,
oa,!0);d.noOfImages=Hb;d.totalImages=Hb;0===Hb&&(!0===f.drawn?f.drawLabel():t.labelDrawID.push(R.addJob(f.drawLabel,f,[],b.priorityList.label)));eb=this.getLinePath(Z,{});ma&&q.isRealTime?(ib=this.getLinePath(Z,ib),Ob=ib.getPathArr()):Ob=eb.getPathArr();d.lastPath=eb;Wa&&(bb=Wa.conf.startPercent,ta[2]=$a+ra[0],1===bb&&(ra[0]=ta[2],ta[0]=0));ta[3]+=Qa;(fa=f.graphics.lineElement)?fb&&q.isRealTime&&fa.attr({path:Db.getPathArr()}):(fa=f.graphics.lineElement=F.path(sa.areaGroup),fa.attr({path:eb.getPathArr()}),
fb&&Oa&&(sa.anchorGroup.hide(),sa.anchorShadowGroup.hide(),Ba.hide(),Ja.hide(),qa.area.attr({"clip-rect":ra}).animate({"clip-rect":ta},fb,Cb,Da)));Tb?fa.hide():fa.show().animateWith(tb,ob,{path:Ob},fb,Cb,wb&&Ha);wb=!1;fa.attr({stroke:P({color:La,alpha:ea}),"stroke-width":Ra?0:ha,fill:P(Ia),"stroke-linecap":"round","stroke-linejoin":2<ha?"round":"miter","stroke-dasharray":za}).shadow(Ma,Ba);Ra?(I=f.graphics.connector,I||(I=f.graphics.connector=F.path({path:eb.pathArr,stroke:P({color:La,alpha:ea}),
"stroke-width":ha,"stroke-linecap":"round","stroke-linejoin":2<ha?"round":"miter","stroke-dasharray":za},sa.areaGroup)),I.show().animateWith(tb,ob,{path:eb.pathArr},fb,Cb)):I&&I.hide();f.drawn=!0},getPathArr:function(){var a=this.pathArr,b=this.path2Arr;return a.length||b.length?a.concat(b):[]},_getPathString:function(a){var b=a.length,f="",g;for(g=0;g<b;g+=1)f+=" "+a[g];return f},getLinePath:function(a,b,f){var g=this.chart.config.connectnulldata,k=b||{};b=k.lastValidValue||!1;var n=k.temp||[],m=
k.temp2||[],h=k.pathArr||[],p=k.path2Arr||[],e,d,c,l,q=a.length,k=k.pointsJoined||0,C,r,q=f&&f.end||q;for(f=f&&f.begin||0;f<q;f++)if(C=a[f])e=C.config,r=e.setValue,d=C._xPos,c=C._yPos,void 0===r||e&&!0===e.isSkipped?e&&delete e.isSkipped:(e=C._baseXPos,l=C._baseYPos,null===r?g||(0<k&&("Z"!==p[p.length-1]&&void 0!==l&&p.push("Z"),h=h.concat(p),p=[]),n=[],m=[],b=!1):b?(n.length&&(h=h.concat(n),void 0!==e&&(p=m,m=[]),n=[],k++),h.push(d,",",c),void 0!==l&&p.unshift(d,",",l)):(n.push("M",d,",",c,"L"),
void 0!==l&&m.push(e,",",l),k=0,b=!0));"Z"!==p[p.length-1]&&0<k&&void 0!==l&&p.push("Z");return{pathArr:h,path2Arr:p,lastValidValue:b,pointsJoined:k,temp:n,temp2:m,getPathArr:this.getPathArr}},_shiftOffRemovedPoints:function(){var a=this,b=a.chart,f=a.config,g=a.components.removeDataArr,k,n=b.components.xAxis[0].getPVR();k=b.get("config","animationObj");var b=k.duration,m=a.drawn&&b,h=k.dummyObj,p=k.animObj,e=k.animType,d,c,l,q,C,r={},B,t,A=a.components.removeElementsArr=a.components.removeElementsArr||
(a.components.removeElementsArr=[]),v=f.hideAnimFlag=!1,D=function(){var b=a.components.removeElementsArr,c=b.length,d;for(d=0;d<c;d++)a._removeDataVisuals(b.shift())},z,S;if(g){k=g.length;for(B=0;B<k;B++){if(S=g[0])if(A.push(S),m){d=S.config.setValue;c=S._xPos;if(void 0==c){g.splice(0,1);continue}l=S.graphics.element;q=S.graphics.label;C=S.graphics.image;t=S.graphics.connector;null!==d&&(d=k*n,z="T,"+-d+",0",S._xPos=c-d,c=S._xPos,S._baseXPos=c,l&&l.animateWith(h,p,{transform:z},b,e,!v&&D),f.hideAnimFlag=
!0,q&&q.animateWith(h,p,{transform:z},b,e),C&&C.animateWith(h,p,{transform:z},b,e),t&&t.hide());r=a.getLinePath([S],r)}else D();g.splice(0,1)}f.removePath=r}},_removeDataVisuals:function(a){var b=this.components.pool||(this.components.pool={}),f,g,k;if(a)for(f in g=a.graphics,g)a=b[f]||(b[f]=[]),k=g[f],k.hide&&"function"===typeof k.hide&&(k.attr({"text-bound":[]}),k.hide(),k.shadow&&k.shadow(!1)),a.push(g[f])},_parseAnchorProperties:function(a,f){var g=this.config,k=this.type,n=this.chart,m=n.config.anchoralpha,
m="area"===(!n.config.anchoralpha&&k)?0:1,p=this.JSONData,h=this.chart.jsonData.chart,n=(f||p.data||[])[a]||{},k={},q=b.graphics.mapSymbolName,e,d;e=void 0!==Q(n.anchorstartangle,p.anchorstartangle,h.anchorstartangle,n.anchorimagealpha,p.anchorimagealpha,h.anchorimagealpha,n.anchorimagescale,p.anchorimagescale,h.anchorimagescale,n.anchorimagepadding,p.anchorimagepadding,h.anchorimagepadding,n.anchorimageurl,p.anchorimageurl,h.anchorimageurl,n.anchorradius,p.anchorradius,h.anchorradius,n.anchorbgcolor,
p.anchorbgcolor,h.anchorbgcolor,n.anchorbordercolor,p.anchorbordercolor,h.anchorbordercolor,n.anchoralpha,p.anchoralpha,h.anchoralpha,n.anchorsides,p.anchorsides,h.anchorsides,n.anchorborderthickness,p.anchorborderthickness,h.anchorborderthickness,void 0);d=r(n.drawanchors,g.drawanchors);k.enabled=e?r(d,e):r(d,m);k.startAngle=r(n.anchorstartangle,g.anchorstartangle);k.imageAlpha=r(n.anchorimagealpha,g.anchorimagealpha);k.imageScale=r(n.anchorimagescale,g.anchorimagescale);k.imagePadding=r(n.anchorimagepadding,
g.anchorimagepadding);0>k.imagePadding&&(k.imagePadding=0);k.imageUrl=Q(n.anchorimageurl,g.anchorimageurl);k.imageUrl&&g.imageCount++;k.radius=r(n.anchorradius,g.anchorradius);k.isAnchorRadius=Q(n.anchorradius,p.anchorradius,h.anchorradius);k.bgColor=Q(n.anchorbgcolor,g.anchorbgcolor);m=k.enabled?T(Q(n.anchoralpha,g.anchoralpha,k.enabled?L:"0")):0;k.anchorAlpha=m;k.bgAlpha=T(Q(n.anchorbgalpha,g.anchorbgalpha,m))*m/100;k.imageAlpha=k.imageAlpha*m/100;k.borderColor=Q(n.anchorbordercolor,g.anchorbordercolor);
k.borderAlpha=m;k.sides=Q(n.anchorsides,g.anchorsides);k.borderThickness=Q(n.anchorborderthickness,g.anchorborderthickness);k.symbol=q(k.sides).split("_");g=r(n.anchorshadow,g.anchorshadow)&&1<=k.radius;k.shadow={opacity:g?m/100:0};return k},_onErrorSetter:function(a){return function(){var f=a.config,g=a.chart.getJobList();f.imagesLoaded++;f.imagesLoaded===f.imageCount&&(!0===a.drawn?a.drawLabel():g.labelDrawID.push(R.addJob(a.drawLabel,a,[],b.priorityList.label)))}},_onAnchorImageLoad:function(m,
p,q,C,r,w){return function(){var B=m.chart,h=B.getJobList(),t=m.config,e=B.config,d=B.components.paper,c=m.components.data,l=void 0!==w?w:c[p],D=l.config,z=l.graphics,E=D.anchorProps,F=m.graphics.container,G=F.anchorGroup,Y=F.anchorShadowGroup,L=B.get("config","animationObj"),F=L.dummyObj,Q=L.animObj,T=L.animType,L=L.duration,N=E.imageUrl,xa=B.components.xAxis[0],aa=c.length,c=D.hoverEffects,B=E.imageScale,Z=E.imageAlpha,ja=c.imageHoverAlpha,ma=c.imageHoverScale,oa=this.height*B*.01,Aa=this.width*
B*.01,ga=this.width*ma*.01,wa=this.height*ma*.01,ia=e.showtooltip,ua=m.startPosition,Ca=m.noOfNewDataAtEnd,da=m.allImagesDrawn&&L,qa=D.setLink,ba,na,pa,La,ea,za,ha,sa,fa,ya,Ia=m.config.animFlag,Fa=t.noOfImages;na=t.noOfImagesDrawn=t.noOfImagesDrawn||(t.noOfImagesDrawn=0);var Ba=m.components.pool||{};D.isRemoving||(v?(ea={x:C-this.width*B*.005,y:r-this.height*B*.005,width:Aa,height:oa,alpha:Z},sa={x:C-this.width*ma*.005,y:r-this.height*ma*.005,width:ga,height:this.height*ma*.01,alpha:ja},(ja=z.element)&&
"image"!==ja.type&&(ja.remove(),ja=z.element=null),ja||(z.element=ja=d.image(N,G),D.isAnchorsDrawn=!0),e.dragTolerance=e.dragTolerance<oa?oa+.5:e.dragTolerance,ja.css({opacity:.01*Z}).data("alwaysInvisible",!B).data("setRolloverProperties",c).data(k,sa).data(g,ea).data("imgRef",this).data("anchorRadius",B).data("anchorHoverRadius",ma),ja.animateWith(F,Q,ea,L,T)):(ba=E.symbol[1],za=c.isAnchorHoverRadius,na=E.isAnchorRadius,na=E.radius=na?E.radius:f(Aa,oa)/2,pa=E.shadow,ea=E.imagePadding,c.radius=za?
c.anchorRadius:na+1,La=c.radius-ea-.5*c.anchorBorderThickness,za=na-ea-.5*E.borderThickness,sa={},ha=[ba||2,C,r,na,E.startAngle,void 0],E.markerRadius=na,e.dragTolerance=e.dragTolerance<na?na+.5:e.dragTolerance,e={fill:P({color:E.bgColor,alpha:E.bgAlpha}),"stroke-width":E.borderThickness,stroke:P({color:E.borderColor,alpha:E.borderAlpha})},ea=a({polypath:ha},e),c&&(sa={polypath:[c.anchorSides||2,C,r,c.radius,c.startAngle,c.dip],fill:P({color:c.anchorColor,alpha:c.anchorBgAlpha}),"stroke-width":c.anchorBorderThickness,
stroke:P({color:c.anchorBorderColor,alpha:c.anchorBorderAlpha})},ha=S(c.anchorAlpha,c.anchorBorderAlpha),ja>ha&&(ja=ha)),E.bgAlpha&&E.borderAlpha&&(ha=S(E.bgAlpha,E.borderAlpha),Z>ha&&(Z=ha)),fa=z.element,ha={polypath:ea.polypath},fa||(Ba.element&&Ba.element.length?fa=z.element=Ba.element.shift():(fa=z.element=d.polypath(G),fa.attr(ha),D.isAnchorsDrawn=!0),da&&!0!==ua&&(ya=xa.getPixel(aa+Ca),m.noOfNewDataAtEnd+=1,xa=[ba||2,ya,r,na,E.startAngle,void 0],fa.attr({transform:"",polypath:xa}))),fa&&fa.attr({transform:""}),
fa.show().animateWith(F,Q,ha,L,T,Ia&&void 0).attr(e),Ia=m.config.animFlag=!1,fa.attr({fill:P({color:E.bgColor,alpha:E.bgAlpha}),ishot:!ia,"stroke-width":E.borderThickness,stroke:P({color:E.borderColor,alpha:E.borderAlpha}),cursor:qa?"pointer":"",visibility:na?A:n}).data("alwaysInvisible",!na).data("setRolloverProperties",c).data("hoverEnabled",c.enabled).data(k,sa).data(g,ea).data("anchorRadius",na).data("anchorHoverRadius",c&&c.radius).data("eventArgs",q).shadow(pa,Y),Y=d.polypath(ba||2,C,r,0<za?
za:0,E.startAngle,void 0,G).attr({visibility:n}),ea=m._getPathString(Y.attrs.path),Y.remove(),Y=d.polypath(ba||2,C,r,0<La?La:0,c.startAngle,c.dip,G).attr({visibility:n}),e=m._getPathString(Y.attrs.path),Y.remove(),E.imgRefWidth=this.width,E.imgRefHeight=this.height,E.imgRefScale=B,E.rolloutClipRadius=za,ea={x:C-this.width*B*.005,y:r-this.height*B*.005,width:Aa,height:oa,alpha:Z,"clip-path":ea},sa={x:C-this.width*ma*.005,y:r-this.height*ma*.005,width:ga,height:wa,alpha:ja,"clip-path":e},ja=z.image,
ja||(Ba.image&&Ba.image.length?(ja=z.image=Ba.image.shift(),ja.show()):(z.image=ja=d.image(N,G),D.isAnchorsDrawn=!0),da&&(Y=d.polypath(ba||2,ya,r,0<za?za:0,E.startAngle,void 0).attr({visibility:n}),d=m._getPathString(Y.attrs.path),Y.remove(),ya={x:ya-this.width*B*.005,y:r-this.height*B*.005,width:Aa,height:oa,alpha:Z,"clip-path":d},ja.attr({transform:""}).attr(ya))),ja.attr({src:N}),ja.attr({visibility:na?A:n}).css({opacity:.01*Z}).data("alwaysInvisible",!B).data("setRolloverProperties",c).data(k,
sa).data(g,ea).data("anchorRadius",B).data("imgRef",this).data("anchorHoverRadius",ma),ja.attr({transform:""}).animateWith(F,Q,{x:ea.x,y:ea.y,width:ea.width,height:ea.height,"clip-path":ea["clip-path"]},L,T,Ia&&void 0),ja.attr({alpha:ea.alpha}),S(na,c&&c.anchorRadius||0,2)),l._xPos=C,l._yPos=r,t.imagesLoaded++,D.anchorImageLoaded=!0,t.imagesLoaded===t.totalImages&&(!0===m.drawn?m.drawLabel():h.labelDrawID.push(R.addJob(m.drawLabel,m,[],b.priorityList.label))),na=t.noOfImagesDrawn+=1,na===Fa&&(m.allImagesDrawn=
!0))}},_hideGraphics:function(a){var b,f;for(f in a)a.hasOwnProperty(f)&&(b=a[f])&&(b.hide?b.hide():this._hideGraphics(b))},getPlotClickFn:function(a){return function(b){D.call(this,a,b)}},show:function(){var a=this.chart,b=a.components.xAxis[0],f=this.yAxis;this.config.legendInteractivity=!0;a._chartAnimation();this.visible=!0;this._conatinerHidden=!1;a.config.transposeAxis&&(a._setAxisLimits(),f.draw());a.isRealTime&&b.draw();a._drawDataset();a.chartInstance.__state._rtPaused&&a._setRTdata()},hide:function(){var a=
this.chart,b=this.yAxis,f=a.components.xAxis[0];a._chartAnimation();this.config.legendInteractivity=!0;this.visible=!1;a.config.transposeAxis&&(a._setAxisLimits(),b.draw());a.isRealTime&&f.draw();a._drawDataset();a.chartInstance.__state._rtPaused&&a._setRTdata()},_parseHoverEffectOptions:function(a,b){var f=this.JSONData,g=this.chart,k=g.jsonData.chart,g=g.config,n=a.config.anchorProps||{},m=g.plothovereffect,h=this.config.drawanchors,p={enabled:!1};b=b||{};0!==m&&0!==h&&(p.enabled=void 0!==Q(b.hovercolor,
b.anchorhovercolor,b.hovercolor,f.hovercolor,b.anchorbghovercolor,f.anchorbghovercolor,k.anchorbghovercolor,f.anchorhovercolor,k.anchorhovercolor,b.hoveralpha,b.anchorhoveralpha,f.anchorhoveralpha,k.anchorhoveralpha,b.bghoveralpha,b.anchorbghoveralpha,f.anchorbghoveralpha,k.anchorbghoveralpha,b.anchorborderhovercolor,b.borderhovercolor,f.anchorborderhovercolor,k.anchorborderhovercolor,b.anchorborderhoverthickness,b.borderhoverthickness,f.anchorborderhoverthickness,k.anchorborderhoverthickness,b.anchorborderhoveralpha,
b.borderhoveralpha,f.anchorborderhoveralpha,k.anchorborderhoveralpha,b.hoverdip,b.anchorhoverdip,f.anchorhoverdip,k.anchorhoverdip,b.anchorhoverstartangle,f.anchorhoverstartangle,k.anchorhoverstartangle,b.hoversides,b.anchorhoversides,f.anchorhoversides,k.anchorhoversides,b.hoverradius,b.anchorhoverradius,f.anchorhoverradius,k.anchorhoverradius,f.plotfillhovercolor,k.plotfillhovercolor,g.plothovereffect,void 0),p.startAngle=r(b.anchorhoverstartangle,f.anchorhoverstartangle,k.anchorhoverstartangle,
n.startAngle),p.anchorSides=r(b.hoversides,b.anchorhoversides,f.anchorhoversides,k.anchorhoversides,n.sides),p.anchorRadius=r(b.anchorhoverradius,f.anchorhoverradius,k.anchorhoverradius),p.isAnchorHoverRadius=p.anchorRadius,p.anchorRadius=r(p.anchorRadius,n.radius+(m?2:0)),p.anchorScale=Q(b.hoverscale,f.anchorscale,k.anchorscale),p.imageHoverScale=r(b.anchorimagehoverScale,f.anchorimagehoverscale,k.anchorimagehoverscale,110),p.imageHoverAlpha=r(b.anchorimagehoveralpha,f.anchorimaghoverealpha,k.anchorimagehoveralpha),
p.anchorAlpha=Q(b.anchorhoveralpha,b.hoveralpha,f.anchorhoveralpha,k.anchorhoveralpha,n.anchorAlpha),p.anchorColor=Y(Q(b.hovercolor,b.anchorhovercolor,b.hoverColor,b.anchorbghovercolor,f.anchorbghovercolor,f.anchorhovercolor,f.hovercolor,k.anchorbghovercolor,k.anchorhovercolor,k.plotfillhovercolor,n.bgColor)),p.anchorBgAlpha=Q(b.bghoveralpha,b.anchorbghoveralpha,f.anchorbghoveralpha,k.anchorbghoveralpha,k.plotfillhoveralpha,n.bgAlpha),p.anchorBgAlpha=p.anchorBgAlpha*p.anchorAlpha/100,p.anchorBorderColor=
Q(b.borderhovercolor,b.anchorborderhovercolor,f.anchorborderhovercolor,k.anchorborderhovercolor,n.borderColor),p.anchorBorderAlpha=Q(b.borderhoveralpha,b.anchorborderhoveralpha,f.anchorborderhoveralpha,k.anchorborderhoveralpha,p.anchorAlpha,n.borderAlpha),p.anchorBorderThickness=r(b.borderhoverthickness,b.anchorborderhoverthickness,f.anchorborderhoverthickness,k.anchorborderhoverthickness,k.anchorBorderThickness,n.borderThickness),p.dip=Q(b.hoverdip,b.anchorhoverdip,f.anchorhoverdip,k.anchorhoverdip,
n.dip),p.anchorAnimation=r(b.anchorhoveranimation,f.anchorhoveranimation,k.anchorhoveranimation,1));return p},_hoverPlotAnchor:function(a,b){var f=this.graphics.sharedAnchor,m=a.graphics.element||f&&f.element,p=a.graphics.label,q=a.config||{},C=q.anchorProps.anchorAlpha,q=q&&q.anchorProps.imageUrl,h=v&&q?a.graphics.element:a.graphics.image,r=m.data(k),e=m.data(g),d="DataPlotRollOver"===b?m.data(k):m.data(g),q="image"===m.type,c=m.data("anchorRadius"),l=m.data("anchorHoverRadius"),B=p&&(p.data("isBelow")?
1:-1)*(q?.5*(r.height-e.height):l-c),t=a.config.hoverEffects,D,z={polypath:d.polypath},d={fill:d.fill,"stroke-width":d["stroke-width"],stroke:d.stroke},S=p&&p.data("rotation")||"",B={transform:"T0,"+("DataPlotRollOver"===b?B:0)+S},r=!(/,0\)$/.test(r.fill)&&/,0\)$/.test(e.fill))&&m.data("anchorHoverRadius")-m.data("anchorRadius")&&t.anchorAnimation&&50;h&&(D=h.data(k),e=h.data(g),D="DataPlotRollOver"==b?D:e);if("DataPlotRollOver"==b&&0!==l||"DataPlotRollOut"==b&&0!==c)m.attr({visibility:A}),h&&h.attr({visibility:A});
h&&h.css({opacity:.01*D.alpha});q?m.css({opacity:.01*z.alpha}):m.attr(d);m.stop();m.animate(z,r,"easeOut",function(){("DataPlotRollOver"==b&&!l||"DataPlotRollOut"==b&&!c)&&m.attr({visibility:n})});h&&h.animate(D,r,"easeOut",function(){("DataPlotRollOver"==b&&!l||"DataPlotRollOut"==b&&!c)&&h.attr({visibility:n})});p&&p.stop();(r||f&&f.element&&C)&&p&&p.animate(B,50,"easeOut")},drawLabel:function(a){var b=this.chart,f=b.config,g=b.linkedItems.smartLabel,k=b.config.dataLabelStyle,n=this.components.data,
m=b.components.paper,h=b.get("config","animationObj"),p=h.duration,e=!0===this.drawn&&p,d=f.stack100percent,c=h.dummyObj,l=h.animObj,q="",h=h.animType,C=f.rotatevalues?270:0,r=f.canvasTop,B=f.canvasHeight,t=b.config.isstacked,A,v=this.graphics.dataLabelContainer,D=b.components.xAxis[0],z=0,S=D.getCategoryLen(),E=this.startPosition,R=this.components.pool||{},G,Y,L,P,Q,T,N,ia,ua,Ca,da,qa;ia=this.visible;void 0!==a?(da=a,a=da+1):(da=0,a=n.length);g.setStyle({"font-weight":k.fontWeight,"font-style":k.fontStyle,
"font-family":k.fontFamily,"font-size":k.fontSize,"line-height":k.lineHeight});if(ia)for(;da<a;da++)if(G=(ia=(P=n[da])&&P.config)&&ia.setValue,void 0===P||void 0===G||null===G||!0===ia.labelSkip)ia&&delete ia.labelSkip,(qa=P&&P.graphics)&&qa.label&&qa.label.hide();else{Q=ia.anchorProps;G=P.graphics;L=P._yPos;P=P._xPos;Q=G.element?G.image&&.5*G.element.attr("height")||Q.radius-3:0;A=f.valuepadding+2+Q;Q=ia.valuePosition;switch(Q){case "above":T=0;break;case "below":T=1;break;default:Q=n[da-1]&&n[da-
1].config||{},ua=n[da+1]&&n[da+1].config||{},t&&d?(Q=Q.value,Ca=ua.value,ua=ia.value):(Q=Q.setValue,Ca=ua.setValue,ua=ia.setValue),T=da?Q>ua?1:(null==Ca&&Ca)>ua?1:0:0}q=ia.displayValue;Ca=ia.showValue;Q=G.label;void 0!==q&&null!==q&&q!==F&&null!==ua&&Ca?(Ca={text:q,fill:k.color,"text-bound":[k.backgroundColor,k.borderColor,k.borderThickness,k.borderPadding,k.borderRadius,k.borderDash]},q=g.getOriSize(q),C?(ia._state={labelWidth:q.height,labelHeight:q.width},ia._rotated=!0):(ia._state={labelWidth:q.width,
labelHeight:q.height},ia._rotated=!1),q=Y=ia._state.labelHeight,q+=A,A=.5*Y+A,Y=L-r,N=r+B-L,q+=4,T?N>q?(L+=A,ia._valueBelowPoint=1):Y>q&&(L-=A,ia._valueBelowPoint=0):Y>q?(L-=A,ia._valueBelowPoint=0):N>q&&(L+=A,ia._valueBelowPoint=1),A=T=!1,Q||(R.label&&R.label.length?(G.label=Q=R.label.shift(),G.label.show()):(Ca.x=P,Ca.y=L,Ca.transform=m.getSuggestiveRotation(C,P,L),G.label=Q=m.text(Ca,v),A=!0),e&&b.isRealTime&&!0!==E&&(G=S+z,G=D.getPixel(G),G instanceof Object&&(G=G.x),Q.attr({x:G,y:L,transform:m.getSuggestiveRotation(C,
G,L)}),z++,T=!0)),A||Q.attr(Ca),A&&!T||Q.show().animateWith(c,l,{x:P,y:L,transform:m.getSuggestiveRotation(C,P,L)},p,h),Q.data("isBelow",ia._valueBelowPoint),Q.data("rotation",m.getSuggestiveRotation(C,P,L))):Q&&Q.hide()}},getAxisValuePadding:function(){var a=(this.chart||{}).hasScroll;return{left:a?.5:0,right:a?.5:0}},hidingPosition:function(){return function(){return{polypath:[[2,0,0,0,0,0]],text:""}}},_hoverFunc:function(a,b,f,g){if(f)return this._hoverPlotAnchor(a,b,g)}},"column",{valueposition:void 0,
plotborderdashlen:void 0,plotborderdashgap:void 0,plotborderdashstyle:void 0,plotborderthickness:void 0,linethickness:void 0,linedashlen:void 0,linedashgap:void 0,dashed:void 0,linedashstyle:void 0,linecolor:void 0,linealpha:void 0,anchorbgcolor:void 0,anchorbordercolor:void 0,anchorradius:void 0,anchoralpha:void 0,anchorimageurl:void 0,anchorsides:void 0,anchorbgalpha:void 0,anchorborderthickness:void 0,anchorshadow:void 0,anchorstartangle:void 0,anchorimagealpha:void 0,anchorimagescale:void 0,anchorimagepadding:void 0,
alpha:void 0,parentyaxis:void 0}])}]);N.register("module",["private","modules.renderer.js-dataset-scrollarea2d",function(){N.register("component",["dataset","scrollarea2d",{},"area"])}]);N.register("module",["private","modules.renderer.js-dataset-realtimearea",function(){N.register("component",["dataset","realtimearea",{_realTimeConfigure:N.get("component",["dataset","realtimecolumn"]).prototype._realTimeConfigure},"area"])}]);N.register("module",["private","modules.renderer.js-dataset-radar",function(){var b=
this.hcLib,z=this.window.Image,G=b.TOUCH_THRESHOLD_PIXELS,v=b.CLICK_THRESHOLD_PIXELS,F=b.pluck,E=b.pluckNumber,t=b.toRaphaelColor,a=b.hasTouch?G:v,Q=b.getValidValue,r=b.getFirstValue,P=b.regex.dropHypeash,T=b.HASHSTRING,G=b.preDefStr,L=G.hiddenStr,D=G.setRolloverAttrStr,B=G.setRolloutAttrStr,m=Math.max,p=b.graphics.getLightColor,q=b.schedular;N.register("component",["dataset","radar",{type:"radar",configure:function(){var a=this.config,b=this.chart,k=b.jsonData.chart,g=this.JSONData,b=b.components.colorManager.getPlotColor(this.index);
this.__base__.configure.call(this);a.plotfillcolor=F(g.color,k.plotfillcolor,b);a.plotbordercolor=F(g.plotbordercolor,k.plotbordercolor,k.areabordercolor,b).split(",")[0];a.fillColor.color=a.plotfillcolor;a.legendSymbolColor=a.plotfillcolor},_addLegend:function(){var a=this.chart,b=a.jsonData.chart,k,g;g=this.config;var a=a.components.legend,f=g.legendSymbolColor;k=E(b.use3dlighting,b.useplotgradientcolor,1);b=p(f,60).replace(P,T);k?(k=p(f,40),k={FCcolor:{color:f+","+f+","+k+","+f+","+f,ratio:"0,70,30",
angle:270,alpha:"100,100,100,100,100"}}):k={FCcolor:{color:f,angle:0,ratio:"0",alpha:"100"}};g={enabled:g.includeInLegend,type:this.type,fillColor:t(k),strokeColor:t(b),rawFillColor:f,label:r(this.JSONData.seriesname)};this.legendItemId=a.addItems(this,this.legendInteractivity,g)},_getHoveredPlot:function(a,b){var k=this.chart.components.xAxis[0],g=this.components.data,f,m=g.length,p,q=this.config,r=360/m;f=Math.floor(Math.max(k.getAngle(a-q.maxRadius,b)/r-1,0));for(m=Math.ceil(Math.min(k.getAngle(a+
q.maxRadius,b)/r,m-1));m>=f;m--)if(k=g[m])if(p=this.isWithinShape(k,m,a,b))break;return p},draw:function(){var p=this,n=p.chart,k=n.getJobList(),g=n.graphics,f=n.config,r=n.components,C=p.JSONData,v=n.jsonData.chart,E=p.config,u=p.index,G=C.data||[],O,W,H,w=r.paper,K=r.xAxis[0],h=p.yAxis,V,e,d,c=f.showtooltip,l,M=p.components.data,J,P,T,N,ka,ca,U=h.getAxisBase(),la,r=E.plotbordercolor,Ga=E.plotborderalpha,xa=E.plotBorderDashStyle,aa=E.plotborderthickness,Z=p.graphics.container,ja=[],ma,oa,Aa=b.parseUnsafeString,
ga=!1,wa=E.fillColor,ia=n.is3D,ua=g.areaGroup,Ca=n.get("config","animationObj"),da=Ca.duration,qa=Ca.dummyObj,ba=Ca.animObj,Ca=Ca.animType,na=Z&&Z.shadowContainer,pa=p.graphics.dataLabelContainer,La=function(){!1===p.visible&&(Z.areaGroup.hide(),na.hide(),Z.lineShadowGroup.hide(),Z.anchorShadowGroup.hide(),Z.anchorGroup.hide(),pa&&pa.hide(),p._conatinerHidden=!0)},ea=function(){Z.areaGroup.attr({"clip-rect":null});!1!==p.visible&&(Z.lineShadowGroup.show(),Z.anchorShadowGroup.show(),Z.anchorGroup.show(),
pa.show());n._animCallBack()},za=E.shadow,ha,sa=p.visible,fa,ya={};ma=g.datalabelsGroup;var Ia=ia?10:0,g=p.components.removeDataArr||[],ia=g.length,Fa=p.components.pool||{},Ba=!0,Ja=0,Ha,Da,Ma=0;E.imagesLoaded=0;Z||(Z=p.graphics.container={lineShadowGroup:w.group("connector-shadow",ua.areaConnector),anchorShadowGroup:w.group("anchor-shadow",ua.areaConnector),areaGroup:w.group("area",ua.area),anchorGroup:w.group("anchors",ua.areaConnector)},sa||(Z.lineShadowGroup.hide(),Z.anchorShadowGroup.hide(),
Z.areaGroup.hide(),Z.anchorGroup.hide()));na||(na=p.graphics.shadowContainer=ua.shadows||(ua.shadows=w.group("shadows",Z.areaGroup).toBack()),sa||na.hide());M||(M=p.components.data);pa||(pa=p.graphics.dataLabelContainer=p.graphics.dataLabelContainer||w.group("datalabel",ma),sa||pa.hide());sa&&(Z.lineShadowGroup.show(),Z.anchorShadowGroup.show(),Z.areaGroup.show(),Z.anchorGroup.show(),pa.show());O=K.getCategoryLen();ma=K.config.centerX;oa=K.config.centerY;for(H=0;H<O;H++)W=G[H]||{},l=(J=M[H])&&J.config,
Ha=K.getLabel(H).label,N=l.setValue,T=l.setLink,ya=l.anchorProps,fa=ya.shadow,V=Q(Aa(F(W.tooltext,C.plottooltext,v.plottooltext))),J.graphics||(J.graphics={}),l&&(la=0<=N?l.previousPositiveY:l.previousNegativeY),e=J.graphics,W=e.element,Da=e.image,null===N?(!1!==ga?ja.push("L",ma,",",oa):ja.push("M",ma,",",oa),ga=!1,W&&W.hide()):(e=h.getAxisPosition(la||U)+Ia,d=p.visible?h.getAxisPosition(N+(la||0))+Ia:e,e=K.getAxisPosition(H,f.canvasTop+f.canvasHeight/2-d),d=e.y,e=e.x,ha=l.hoverEffects,P=c?l.toolText+
(V?"":l.toolTipValue):"",l.finalTooltext=P,V=l.eventArgs||(l.eventArgs={}),V.index=H,V.link=T,V.value=N,V.displayValue=l.displayValue,V.categoryLabel=Ha,V.toolText=P,V.id=p.userID,V.datasetIndex=u||0,V.datasetName=C.seriesname,V.visible=sa,ha.enabled&&(l.setRolloverAttr={polypath:[ha.anchorSides||2,e,d,ha.anchorRadius,ha.startAngle,ha.dip],fill:t({color:ha.anchorColor,alpha:ha.anchorBgAlpha}),stroke:t({color:ha.anchorBorderColor,alpha:ha.anchorBorderAlpha}),"stroke-width":ha.anchorBorderThickness},
l.setRolloutAttr={polypath:[ya.symbol[1]||2,e,d,ya.radius,ya.startAngle,0],fill:t({color:ya.bgColor,alpha:ya.bgAlpha}),stroke:t({color:ya.borderColor,alpha:ya.borderAlpha}),"stroke-width":ya.borderThickness},ca=l.setRolloverAttr,ka=l.setRolloutAttr),ya.imageUrl?(l.anchorImageLoaded=!1,l=new z,l.onload=p._onAnchorImageLoad(p,H,V,e,d),l.onerror=p._onErrorSetter(p,H),l.src=ya.imageUrl,Ma++):(Da&&Da.hide(),W||(Fa.element&&Fa.element.length?W=J.graphics.element=Fa.element.shift():(W=J.graphics.element=
w.polypath(Z.anchorGroup),W.attr({polypath:[ya.symbol[1]||2,e,d,ya.radius,ya.startAngle,0]}))),W.show().animateWith(qa,ba,{polypath:[ya.symbol[1]||2,e,d,ya.radius,ya.startAngle,0]},da,Ca,Ba&&La),Ba=!1,W.attr({fill:t({color:ya.bgColor,alpha:ya.bgAlpha}),stroke:t({color:ya.borderColor,alpha:ya.borderAlpha}),"stroke-width":ya.borderThickness,visibility:ya.radius?sa:L}).shadow(fa,Z.anchorShadowGroup).data("anchorRadius",ya.radius).data("anchorHoverRadius",ha.anchorRadius).data("hoverEnabled",ha.enabled).data("eventArgs",
V),ha.enabled&&W&&W.data("anchorRadius",ya.radius).data("anchorHoverRadius",ha.anchorRadius).data("hoverEnabled",ha.enabled).data(D,ca).data(B,ka).data("eventArgs",V),l.trackerConfig||(l.trackerConfig={}),l.trackerConfig.trackerRadius=m(ya.radius,ha&&!0&&ha.anchorRadius||0,a)+(ya.borderThickness||0)/2),J._xPos=e,J._yPos=d,J._index=H,ga?(ja.push("L",e,",",d),Ja++):(0===H?ja.push("M",e,",",d):ja.push("L",e,",",d),ga=!0));ja.push("Z");E.noOfImages=E.totalImages=Ma;0===Ma&&k.labelDrawID.push(q.addJob(p.drawLabel,
p,[],b.priorityList.label));f=ja.concat([]);k=p.graphics.lineElement;k||(k=p.graphics.lineElement=w.path(Z.areaGroup),k.attr({path:ja}),da&&sa&&(Z.anchorGroup.hide(),Z.anchorShadowGroup.hide(),pa.hide(),ua.scale(.01,.01,ma,oa).animateWith(qa,ba,{transform:"s1,1"},da,Ca,ea)));k.show().animateWith(qa,ba,{path:f},da,Ca,Ba&&La).attr({stroke:t({color:r,alpha:Ga}),"stroke-width":aa,fill:t(wa),"stroke-linecap":"round","stroke-linejoin":2<aa?"round":"miter","stroke-dasharray":xa}).shadow(za,na);p.drawn=!0;
for(H=0;H<ia;H++)p._removeDataVisuals(g.shift())}},"area"])}]);N.register("module",["private","modules.renderer.js-dataset-line",function(){var b=this.hcLib,z=b.Raphael,G=this.window.Image,v=b.pluck,F=b.pluckNumber,E=b.toRaphaelColor,t=b.getCrispValues,a=b.getFirstValue,Q=b.preDefStr,r=Q.hiddenStr,P=Q.setRolloverAttrStr,T=Q.setRolloutAttrStr,Q=Math,L=Q.max,D=Q.pow,B=b.schedular;N.register("component",["dataset","Line",{type:"line",_addLegend:function(){var b=this.config,p=this.chart.components.legend,
q=F(b.drawanchors,1),b={enabled:b.includeinlegend,type:this.type,drawLine:v(b.drawLine,!0),fillColor:E({color:b.anchorbgcolor,alpha:b.anchorbgalpha}),strokeColor:E({color:b.anchorbordercolor,alpha:"100"}),rawFillColor:b.anchorbgcolor,rawStrokeColor:b.anchorbordercolor,anchorSide:q?b.anchorsides:0,strokeWidth:b.anchorborderthickness,label:a(this.JSONData.seriesname),lineWidth:b.linethickness};this.legendItemId=p.addItems(this,this.legendInteractivity,b)},draw:function(){var a,p,q=this,A=q.JSONData,
n=q.chart,k=n.getJobList(),g=n.components,f=g.canvas.config.clip,D=q.config,C=D.legendInteractivity,F=q.index,R=n.config,u=q.components,X=q.graphics,O=u.data,W=O.length,H=g.paper,w=g.xAxis[0],K=q.yAxis,h=u.removeDataArr||[],V=n.graphics,e=V.datalabelsGroup,d,c,l,M=D.linethickness,J=X.container,Q=R.showtooltip,N=V.lineGroup,va,ka=D.shadow,ca,U=X.dataLabelContainer,la={},Ga,xa,aa,Z=n.is3D,ja=R.use3dlineshift,ma=q.graphics.errorGroupContainer,oa=q.graphics.errorShadowContainer,Aa=function(){!1!==q.visible||
!1!==q._conatinerHidden&&void 0!==q._conatinerHidden||(J.lineGroup.hide(),J.lineShadowGroup.hide(),J.anchorShadowGroup.hide(),J.anchorGroup.hide(),U&&U.hide(),ma&&ma.hide(),oa&&oa.hide(),q._conatinerHidden=!0)},ga=function(){N.lineConnector.attr({"clip-rect":null});N.lineConnector.node&&N.lineConnector.node.removeAttribute("clip-path");!1!==q.visible&&(J.lineShadowGroup.show(),J.anchorShadowGroup.show(),J.anchorGroup.show(),U&&U.show())},wa=!0,ia,ua,Ca,da=K.getAxisBase(),qa=K.yBasePos=K.getAxisPosition(da),
ba=w.getPVR(),na,pa=Z?10:0,La=Z&&ja?10:0,ea=f["clip-canvas"].slice(0),za=f["clip-canvas-init"].slice(0),ha=g.scrollBar,sa=n.hasScroll||!1,fa,ya=D.lineDashStyle,Ia={color:D.linecolor,alpha:D.alpha},Fa=[E(Ia),ya].join(":"),Ba,Ja,Ha,Da,Ma,Na=X.lineElement,Oa=q.visible,Sa,Ua,Pa=0,ab=!0!==q.drawn,Xa=q.components.pool||(q.components.pool={}),$a,Ta,bb=q.startPosition,Qa={},Wa=W,Za,ta={},ra=D.lastPath||{},Va,Ra,I=0,gb=n.config.viewPortConfig,sb=gb.x,yb=gb.scaleX,zb,db,nb,Ab,ib,eb,Bb,fb,tb,ob,Cb,Db,Ob,wb,
Gb,lb,jb,qb,Ya=D.noOfImages=0,xb,ub=n.get("config","animationObj"),vb=ub.duration,pb=ub.dummyObj,rb=ub.animObj,mb=ub.animType,Kb=!ab&&vb,Fb,Nb=R.height,Hb=R.realTimeConfig&&R.realTimeConfig.clear,hb=Wa,cb,Eb,Lb,Jb,Ib=D.isSkippedData,Mb=R.canvasTop,kb=R.canvasBottom,Pb=b.plotEventHandler,Rb=X.sharedAnchor,Qb=Rb&&Rb.element,Ub=0,Vb=function(a){Pb.call(this,n,a)},Wb=function(a){Pb.call(this,n,a,"DataPlotRollOver")},Xb=function(a){Pb.call(this,n,a,"DataPlotRollOut")};q.noOfNewDataAtEnd=0;D.hideAnimFlag=
!1;D.imagesLoaded=0;N.lineConnector=N.lineConnector||H.group("line-connector",N);J||(J=q.graphics.container={lineShadowGroup:H.group("connector-shadow",N.lineConnector),anchorShadowGroup:H.group("anchor-shadow",N.lineConnector),lineGroup:H.group("line",N.lineConnector),anchorGroup:H.group("anchors",N.lineConnector)},Oa||(J.lineShadowGroup.hide(),J.anchorShadowGroup.hide(),J.lineGroup.hide(),J.anchorGroup.hide()));O||(O=q.components.data=[]);U||(U=q.graphics.dataLabelContainer=q.graphics.dataLabelContainer||
H.group("datalabel",e),Oa||U.hide());Oa&&(J.lineShadowGroup&&J.lineShadowGroup.show(),J.lineGroup&&J.lineGroup.show(),J.anchorGroup&&J.anchorGroup.show(),q._conatinerHidden=!1,U.show(),D.attachEvents&&J.anchorGroup.trackTooltip(!0));na=ba*Wa;n.isRealTime&&(ea[1]=0,ea[3]=Nb,U.attr({"clip-rect":ea}),J.anchorGroup.attr({"clip-rect":ea}),J.anchorShadowGroup.attr({"clip-rect":ea}),J.lineGroup.attr({"clip-rect":ea}),J.lineShadowGroup.attr({"clip-rect":ea}));if(Hb)for(Za=0,Wa=h.length;Za<Wa;Za++)q._removeDataVisuals(h.shift());
else q._shiftOffRemovedPoints();Qa=D.removePath||{};Gb=J.anchorShadowGroup;for(Za=0;Za<hb;Za++)if(d=O[Za])aa=d.config||{},ib=aa.setValue,d.graphics&&(db=d.graphics.element,jb=d.graphics.image),Lb=aa&&aa.isSkipped,void 0===ib||!0===Lb||!1!==Ib&&!ab&&C&&(!Oa&&!db||Oa&&db&&!d._xPos&&!d._yPos)?(db&&db.hide(),jb&&jb.hide(),aa&&(aa.isSkipped=!0)):(nb=d.graphics,Ab=aa.setLink,Sa=aa.x||Za,ia=aa.setLevelTooltext,la=aa.anchorProps,xa=la.symbol,fb=la.radius,ca=la.shadow,tb=la.startAngle,ob=la.bgColor,Cb=la.bgAlpha,
Db=la.borderColor,Ob=la.borderAlpha,wb=la.borderThickness,Bb=aa.displayValue,Ua=aa.dip||0,d||(d=O[Za]={graphics:{}}),a=aa.setColor,p=aa.setAlpha,Ca=aa.dashStyle,Da=aa.xPos||w.getAxisPosition(Sa)-pa+sb*yb,Ma=!q.visible&&vb?qa:K.getAxisPosition(ib)+La,Da=t(Da,D.linethickness,D.linethickness).position,Ma=t(Ma,D.linethickness,D.linethickness).position,va=aa.hoverEffects,la.isAnchorHoverRadius=va.anchorRadius,cb=Ma-fb-wb/2,Eb=Ma+fb+wb/2,cb<Mb&&(R.toleranceTop=L(R.toleranceTop||0,Mb-cb)),Eb>kb&&(R.toleranceBottom=
L(R.toleranceBottom||0,Eb-kb)),Va=w.getLabel(Za)||{},zb=Q?aa.toolText+(ia?"":aa.toolTipValue):"",aa.finalTooltext=zb,eb=aa.eventArgs=aa.eventArgs||{},eb.index=Za,eb.link=Ab,eb.value=ib,eb.displayValue=Bb,eb.categoryLabel=Va.label,eb.toolText=zb,eb.id=D.userID,eb.datasetIndex=F||0,eb.datasetName=A.seriesname,eb.visible=Oa,qb=!1,db=d.graphics.element,jb=d.graphics.image,va.enabled&&(l=aa.setRolloverAttr={polypath:[va.anchorSides||2,Da,Ma,va.anchorRadius,va.startAngle,va.dip],fill:E({color:va.anchorColor,
alpha:va.anchorBgAlpha}),stroke:E({color:va.anchorBorderColor,alpha:va.anchorBorderAlpha}),"stroke-width":va.anchorBorderThickness},c=aa.setRolloutAttr={polypath:[la.sides,Da,Ma,la.radius,la.startAngle,Ua],fill:E({color:la.bgColor,alpha:la.bgAlpha}),stroke:E({color:la.borderColor,alpha:la.borderAlpha}),"stroke-width":la.borderThickness}),null!==ib?(xb={polypath:[xa[1]||2,Da,Ma,fb,tb,aa.dip||0]},!db&&Kb&&!0!==bb&&(Ta=Wa+Pa,$a=w.getPixel(Ta),d._xPos=$a,d._yPos=Ma,ra=q.getLinePath([d],ra),Pa++),Jb=fb&&
la.anchorAlpha,aa.isAnchorsDrawn||D.drawanchors||Jb?la.imageUrl?(Ga=new G,aa.anchorImageLoaded=!1,Ga.onload=q._onAnchorImageLoad(q,Za,eb,Da,Ma,d),Ga.onerror=q._onErrorSetter(q,Za),Ga.src=la.imageUrl,Ya++):(jb&&jb.hide(),db||(Xa.element&&Xa.element.length?(db=nb.element=Xa.element.shift(),db.show()):(db=nb.element=H.polypath(J.anchorGroup),db.attr(xb),qb=!0,aa.isAnchorsDrawn=!0,Ub++),Kb&&db.attr({polypath:[xa[1]||2,$a,Ma,fb,tb,0]})),db.show().attr({transform:""}).animateWith(pb,rb,xb,vb,mb,wa&&Aa),
vb||wa&&Aa(),wa=!1,db.attr({fill:E({color:ob,alpha:Cb}),stroke:E({color:Db,alpha:Ob}),"stroke-width":wb,visibility:fb?Oa:r}).shadow(ca,Gb).data("anchorRadius",fb).data("anchorHoverRadius",va.anchorRadius).data("hoverEnabled",va.enabled).data("eventArgs",eb),va.enabled&&db&&db.data("anchorRadius",la.radius).data("anchorHoverRadius",va.anchorRadius).data(P,l).data(T,c).data("hoverEnabled",va.enabled).data("eventArgs",eb)):db&&!Jb&&db.hide(),D.attachEvents&&(qb&&(db.tooltip(aa.finalTooltext),db.click(Vb).hover(Wb,
Xb)),qb=!1)):(db&&db.hide(),jb&&jb.hide()),d._xPos=Da,d._yPos=Ma,d._polyPath=xb,d._index=Za,Za===Ub||D.drawanchors?Qb&&Qb.hide():Rb&&Qb?Qb.hide():q.getAnchor(n,d,!0),Ha=Fa!==[E({color:v(a,Ia.color),alpha:v(p,Ia.alpha)}),Ca||ya].join(":"),ua=d.graphics.connector,Ra=[],Ha&&(lb=Za,ta=q.getLinePath(O,{},{begin:I,end:lb+1}),aa.connStartIndex=I,aa.connEndIndex=lb,Ra=ta.getPathArr(),Ra.length&&(Fb=z.animation({path:Ra},vb,mb,wa&&Aa),ua||(Xa.connector&&Xa.connector.length?ua=d.graphics.connector=Xa.connector.shift():
(ua=d.graphics.connector=H.path(J.lineGroup),ua.attr({path:Ra}))),ua.show().animateWith(pb,rb,Fb),ua.attr({"stroke-dasharray":Ja,"stroke-width":M,stroke:Ba,"stroke-linecap":"round","stroke-linejoin":2<M?"round":"miter"}).shadow(ka,J.lineShadowGroup),I=Za,ta={}),lb=null),Ha||Ra.length||ua&&ua.hide(),null!==ib&&(Ba=E({color:v(a,Ia.color),alpha:v(p,Ia.alpha)}),Ja=Ca||ya),Fa=[Ba,Ja].join(":"));0===Ya&&(!0===q.drawn?q.drawLabel():k.labelDrawID.push(B.addJob(q.drawLabel,q,[],b.priorityList.label)));D.pathStartIndex=
I;D.pathEndIndex=lb;D.noOfImages=D.totalImages=Ya;ta=q.getLinePath(O,{},{begin:I,end:lb});h&&n.isRealTime&&(Qa=q.getLinePath(O,Qa));n.isRealTime&&(D.lastPath=ta);Na?vb&&n.isRealTime&&Na.attr({path:ra.getPathArr()}):Na=X.lineElement=H.path({path:ta.getPathArr()},J.lineGroup);Hb?Na.hide():Na.show().animateWith(pb,rb,{path:Qa.getPathArr&&n.isRealTime?Qa.getPathArr():ta.getPathArr()},vb,mb,wa&&Aa);Na.attr({"stroke-width":M,"stroke-dasharray":Ja,stroke:Ba,"stroke-linecap":"round","stroke-linejoin":2<=
M?"round":"miter"}).shadow(ka,J.lineShadowGroup);sa&&(fa=ha.conf.startPercent,ea[2]=na+za[0],1===fa&&(za[0]=ea[2],ea[0]=0));ea[3]+=La;q._drawTracker&&q._drawTracker();vb&&Oa&&!q.drawn&&(J.anchorGroup.hide(),J.anchorShadowGroup.hide(),U.hide(),N.lineConnector.attr({"clip-rect":za}).animateWith(pb,rb,{"clip-rect":ea},vb,mb,ga));q.drawn=!0;q.drawErrorValue&&q.drawErrorValue()},getDataLimits:function(){var a=this.config,b=a.maxValue,a=a.minValue,q=this.chart.config.transposeAxis;!1===this.visible&&q&&
(b=-Infinity,a=Infinity);return{max:b,min:a}},pointValueWatcher:function(a,b,q){var r=q.obj||(q.obj={}),n=q.objX||(q.objX={});null!==b&&(r.max=r.max>b?r.max:b,r.min=r.min<b?r.min:b);null!==a&&(n.max=n.max>a?n.max:a,n.min=n.min<a?n.min:a);q.isRegression&&(a=a||0,b=b||0,q.sumX+=a,q.sumY+=b,q.sumXY+=a*b,q.sumXsqure+=D(a,2),q.xValues.push(a),q.sumYsqure+=D(b,2),q.yValues.push(b))}},"area"])}]);N.register("module",["private","modules.renderer.js-dataset-realtimeline",function(){N.register("component",
["dataset","Realtimeline",{_realTimeConfigure:N.get("component",["dataset","realtimecolumn"]).prototype._realTimeConfigure},"line"])}]);N.register("module",["private","modules.renderer.js-quadrant",function(){var b=this.hcLib,z=b.pluck,G=b.pluckNumber,v=b.setLineHeight,F=b.graphics.convertColor,E=b.HUNDREDSTRING,t=b.getDashStyle,a=b.getValidValue,Q=b.getFirstValue,b=b.preDefStr,r=b.POSITION_START,P=b.POSITION_TOP,T=b.POSITION_BOTTOM,L=b.POSITION_END;N.register("component",["quadrant","cartesian",
{pIndex:1,init:function(){var a=this.chart.components,b=a.xAxis[0];this.yAxis=a.yAxis[0];this.xAxis=b;this.components={};this.conf={};this.graphics={};this.configure()},configure:function(){var b,r,m,p,q,A,n,k,g,f,S=this.conf;g=this.chart;A=g.config;var C=g.jsonData.chart;r=g.components.canvas.config;var Y=A.dataLabelStyle;b=g.linkedItems.smartLabel;if(S.enabled=G(C.drawquadrant,0))g=G(C.quadrantxval),f=G(C.quadrantyval),k=F(z(C.quadrantlinecolor,r.canvasBorderColor),z(C.quadrantlinealpha,C.quadrantlinealpha,
E)),r=G(C.quadrantlinethickness,r.canvasBorderThickness),p=G(C.quadrantlinedashed,C.quadrantlineisdashed,0),m=G(C.quadrantlinedashlen,4),q=G(C.quadrantlinedashgap,2),m=p?t(m,q,r):"none",S.xVal=g,S.yVal=f,S.quadrantLineColor=k,S.quadrantLineThickness=r,S.dashStyle=m,r=a(C.quadrantlabeltl,""),k=a(C.quadrantlabeltr,""),g=a(C.quadrantlabelbl,""),f=a(C.quadrantlabelbr,""),S.quadrantLabelPadding=G(C.quadrantlabelpadding,3),b.useEllipsesOnOverflow(A.useEllipsesWhenOverflow),b.setStyle(Y),""!==r&&(b=Q(C.quadrantlabeltlbordercolor,
C.quadrantlabelbordercolor,""),p=z(C.quadrantlabeltlbgcolor,C.quadrantlabelbgcolor),A=G(C.quadrantlabeltlborderthickness,C.quadrantlabelborderthickness,1),b=b?F(b,G(C.quadrantlabeltlborderalpha,C.quadrantlabelborderalpha,C.quadrantlabeltlalpha,C.quadrantlabelalpha,100)):"",n=S.tlConfig,n||(n=S.tlConfig={enabled:!0,styleObj:{}}),n.label=r,n.styleObj.fontSize=z(G(C.quadrantlabeltlfontsize,C.quadrantlabelfontsize),parseInt(Y.fontSize,10))+"px",n.styleObj.lineHeight=Y.lineHeight,n.styleObj.fontFamily=
z(C.quadrantlabeltlfont,C.quadrantlabelfont,Y.fontFamily),n.styleObj.color=F(z(C.quadrantlabeltlfontcolor,C.quadrantlabelfontcolor,Y.color),G(C.quadrantlabeltlfontalpha,C.quadrantlabelfontalpha,100)),n.styleObj.fontWeight=G(C.quadrantlabeltlfontbold,C.quadrantlabelfontbold)?"bold":"normal",n.styleObj.fontStyle=G(C.quadrantlabeltlfontitalic,C.quadrantlabelfontitalic)?"italic":"normal",v(n.styleObj),r=G(C.quadrantlabeltlborderpadding,C.quadrantlabelborderpadding,2),m=G(C.quadrantlabeltlborderradius,
C.quadrantlabelborderradius,0),p=p?F(p,G(C.quadrantlabeltlbgalpha,C.quadrantlabelbgalpha,C.quadrantlabeltlalpha,C.quadrantlabelalpha,100)):"",q=G(C.quadrantlabeltlborderdashed,C.quadrantlabelborderdashed,0)?t(G(C.quadrantlabeltlborderdashlen,C.quadrantlabelborderdashlen,4),G(C.quadrantlabeltlborderdashgap,C.quadrantlabelborderdashgap,2),A):"none",n["text-bound"]=[p,b,A,r,m,q]),""!==k&&(b=Q(C.quadrantlabeltrbordercolor,C.quadrantlabelbordercolor,""),p=z(C.quadrantlabeltrbgcolor,C.quadrantlabelbgcolor),
A=G(C.quadrantlabeltrborderthickness,C.quadrantlabelborderthickness,1),b=b?F(b,G(C.quadrantlabeltrborderalpha,C.quadrantlabelborderalpha,C.quadrantlabeltralpha,C.quadrantlabelalpha,100)):"",k=S.trConfig,k||(k=S.trConfig={enabled:!0,styleObj:{}}),k.label=a(C.quadrantlabeltr,""),k.styleObj.fontSize=z(G(C.quadrantlabeltrfontsize,C.quadrantlabelfontsize),parseInt(Y.fontSize,10))+"px",k.styleObj.lineHeight=Y.lineHeight,k.styleObj.fontFamily=z(C.quadrantlabeltrfont,C.quadrantlabelfont,Y.fontFamily),k.styleObj.color=
F(z(C.quadrantlabeltrfontcolor,C.quadrantlabelfontcolor,Y.color),G(C.quadrantlabeltrfontalpha,C.quadrantrabelfontalpha,100)),k.styleObj.fontWeight=G(C.quadrantlabeltrfontbold,C.quadrantlabelfontbold)?"bold":"normal",k.styleObj.fontStyle=G(C.quadrantlabeltrfontitalic,C.quadrantlabelfontitalic)?"italic":"normal",v(k.styleObj),r=G(C.quadrantlabeltrborderpadding,C.quadrantlabelborderpadding,2),m=G(C.quadrantlabeltrborderradius,C.quadrantlabelborderradius,0),p=p?F(p,G(C.quadrantlabeltrbgalpha,C.quadrantlabelbgalpha,
C.quadrantlabeltralpha,C.quadrantlabelalpha,100)):"",q=G(C.quadrantlabeltrborderdashed,C.quadrantlabelborderdashed,0)?t(G(C.quadrantlabeltrborderdashlen,C.quadrantlabelborderdashlen,4),G(C.quadrantlabeltrborderdashgap,C.quadrantlabelborderdashgap,2),A):"none",k["text-bound"]=[p,b,A,r,m,q]),""!==g&&(b=Q(C.quadrantlabelblbordercolor,C.quadrantlabelbordercolor,""),p=z(C.quadrantlabelblbgcolor,C.quadrantlabelbgcolor),A=G(C.quadrantlabelblborderthickness,C.quadrantlabelborderthickness,1),b=b?F(b,G(C.quadrantlabelblborderalpha,
C.quadrantlabelborderalpha,C.quadrantlabelblalpha,C.quadrantlabelalpha,100)):"",k=S.blConfig,k||(k=S.blConfig={enabled:!0,styleObj:{}}),k.label=g,k.styleObj.fontSize=z(G(C.quadrantlabelblfontsize,C.quadrantlabelfontsize),parseInt(Y.fontSize,10))+"px",k.styleObj.lineHeight=Y.lineHeight,k.styleObj.fontFamily=z(C.quadrantlabelblfont,C.quadrantlabelfont,Y.fontFamily),k.styleObj.color=F(z(C.quadrantlabelblfontcolor,C.quadrantlabelfontcolor,Y.color),G(C.quadrantlabelblfontalpha,C.quadrantlabelfontalpha,
100)),k.styleObj.fontWeight=G(C.quadrantlabelblfontbold,C.quadrantlabelfontbold)?"bold":"normal",k.styleObj.fontStyle=G(C.quadrantlabelblfontitalic,C.quadrantlabelfontitalic)?"italic":"normal",v(k.styleObj),r=G(C.quadrantlabelblborderpadding,C.quadrantlabelborderpadding,2),m=G(C.quadrantlabelblborderradius,C.quadrantlabelborderradius,0),p=p?F(p,G(C.quadrantlabelblbgalpha,C.quadrantlabelbgalpha,C.quadrantlabelblalpha,C.quadrantlabelalpha,100)):"",q=G(C.quadrantlabelblborderdashed,C.quadrantlabelborderdashed,
0)?t(G(C.quadrantlabelblborderdashlen,C.quadrantlabelborderdashlen,4),G(C.quadrantlabelblborderdashgap,C.quadrantlabelborderdashgap,2),A):"none",k["text-bound"]=[p,b,A,r,m,q]),""!==f&&(b=Q(C.quadrantlabelbrbordercolor,C.quadrantlabelbordercolor,""),p=z(C.quadrantlabelbrbgcolor,C.quadrantlabelbgcolor),A=G(C.quadrantlabelbrborderthickness,C.quadrantlabelborderthickness,1),b=b?F(b,G(C.quadrantlabelbrborderalpha,C.quadrantlabelborderalpha,C.quadrantlabelbralpha,C.quadrantlabelalpha,100)):"",g=S.brConfig,
g||(g=S.brConfig={enabled:!0,styleObj:{}}),g.label=a(C.quadrantlabelbr,""),g.styleObj.fontSize=z(G(C.quadrantlabelbrfontsize,C.quadrantlabelfontsize),parseInt(Y.fontSize,10))+"px",g.styleObj.lineHeight=Y.lineHeight,g.styleObj.fontFamily=z(C.quadrantlabelbrfont,C.quadrantlabelfont,Y.fontFamily),g.styleObj.color=F(z(C.quadrantlabelbrfontcolor,C.quadrantlabelfontcolor,Y.color),G(C.quadrantlabelbrfontalpha,C.quadrantrabelfontalpha,100)),g.styleObj.fontWeight=G(C.quadrantlabelbrfontbold,C.quadrantlabelfontbold)?
"bold":"normal",g.styleObj.fontStyle=G(C.quadrantlabelbrfontitalic,C.quadrantlabelfontitalic)?"italic":"normal",v(g.styleObj),p=p?F(p,G(C.quadrantlabelbrbgalpha,C.quadrantlabelbgalpha,C.quadrantlabelbralpha,C.quadrantlabelalpha,100)):"",r=G(C.quadrantlabelbrborderpadding,C.quadrantlabelborderpadding,2),m=G(C.quadrantlabelbrborderradius,C.quadrantlabelborderradius,0),q=G(C.quadrantlabelbrborderdashed,C.quadrantlabelborderdashed,0)?t(G(C.quadrantlabelbrborderdashlen,C.quadrantlabelborderdashlen,4),
G(C.quadrantlabelbrborderdashgap,C.quadrantlabelborderdashgap,2),A):"none",g["text-bound"]=[p,b,A,r,m,q])},_preDraw:function(){var a,b,m,p,q,r;m=this.conf;var n=this.chart;p=n.components;r=p.yAxis[0];q=p.xAxis[0].getLimit();var k=r.getLimit();p=q.max;r=k.max;var g=q.min;q=k.min;var n=n.config,f=n.canvasWidth,t=n.canvasHeight,n=m.quadrantLabelPadding,k=m.tlConfig,C=m.trConfig,v=m.blConfig,z=m.brConfig;a=m.xVal||(m.xVal=(g+p)/2);b=m.yVal||(m.yVal=(q+r)/2);if(b>=q&&b<=r&&a>=g&&a<=p){m=f/(p-g)*(a-g);
p=f-m;r=t/(r-q)*(b-q);m-=n;q=t-r-n;r-=n;if(0>q||0>m)k.enabled=!1;if(0>q||0>p-n)C.enabled=!1;if(0>r||0>m)v.enabled=!1;if(0>r||0>m)z.enabled=!1}else m.enabled=!1;return this},draw:function(){var a=this._preDraw(),b=a.conf,m=a.chart,p=m.graphics,q=m.config,t=q.reverseXAxis,n=m.components,k=m.linkedItems.smartLabel,a=a.graphics,g=a.tlLabel,f=a.trLabel,v=a.blLabel,C=a.brLabel,z=q.textDirection,E=n.xAxis[0],u=n.yAxis[0],n=n.paper,F=a.container,O=b.tlConfig||{},G=b.trConfig||{},H=b.blConfig||{},w=b.brConfig||
{},O=O.enabled&&O.label,G=G.enabled&&G.label,H=H.enabled&&H.label,w=w.enabled&&w.label,K=q.canvasLeft,h=q.canvasTop,V=b.quadrantLabelPadding,e=E.getLimit(),d=u.getLimit(),c=t?e.min:e.max,l=d.max,d=d.min,t=E.getPixel(t?e.max:e.min)+V,c=E.getPixel(c)-V,d=u.getPixel(d)-V,V=u.getPixel(l)+V,E=E.getPixel(b.xVal),M=u.getPixel(b.yVal),u=E-t,l=c-E,e=M-V,J=d-M,Q=a.horizontalQuadLine,N=a.verticalQuadLine,va=m.get("config","animationObj"),m=va.duration||0,ka=va.dummyObj,va=va.animObj,ca=!1;b.enabled?(F||(ca=
!0,F=a.container=n.group("quadrant").insertBefore(p.datasetGroup)),F.animateWith(ka,va,{"clip-rect":q.canvasLeft+","+q.canvasTop+","+q.canvasWidth+","+q.canvasHeight},ca?0:m),Q||(Q=a.horizontalQuadLine=n.path(F)),Q.animateWith(ka,va,{path:"M"+K+" "+M+"h"+q.canvasWidth},m).attr({stroke:b.quadrantLineColor,"stroke-dasharray":b.dashStyle,"stroke-width":b.quadrantLineThickness,"stroke-linecap":"butt"}),N||(N=a.verticalQuadLine=n.path(F)),N.animateWith(ka,va,{path:"M"+E+" "+h+"v"+q.canvasHeight},m).attr({stroke:b.quadrantLineColor,
"stroke-width":b.quadrantLineThickness,"stroke-dasharray":b.dashStyle,"stroke-linecap":"butt"}),O?(g||(g=a.tlLabel=n.text(F).attr({"text-anchor":r,"vertical-align":P}).css(b.tlConfig.styleObj)),k.useEllipsesOnOverflow(q.useEllipsesWhenOverflow),k.setStyle(b.tlConfig.styleObj),p=k.getSmartText(O,u,e),O&&g.animateWith(ka,va,{x:t,y:V},ca?0:m).attr({text:p.text,direction:z,"text-bound":b.tlConfig["text-bound"]}).show()):g&&g.hide(),G?(f||(f=a.trLabel=n.text(F).attr({"text-anchor":L,"vertical-align":P,
direction:z}).css(b.trConfig.styleObj)),k.setStyle(b.trConfig.styleObj),p=k.getSmartText(G,l,e),G&&f.animateWith(ka,va,{x:c,y:V},ca?0:m).attr({text:p.text,"text-bound":b.trConfig["text-bound"]}).show()):f&&f.hide(),H?(v||(v=a.blLabel=n.text(F).attr({"text-anchor":r,"vertical-align":T,direction:z}).css(b.blConfig.styleObj)),k.setStyle(b.blConfig.styleObj),p=k.getSmartText(H,u,J),H&&v.animateWith(ka,va,{x:t,y:d},ca?0:m).attr({text:p.text,"text-bound":b.blConfig["text-bound"]}).show()):v&&v.hide(),w?
(C||(C=a.brLabel=n.text(F).attr({"text-anchor":L,"vertical-align":T,direction:z}).css(b.brConfig.styleObj)),k.setStyle(b.brConfig.styleObj),p=k.getSmartText(w,l,J),w&&C.animateWith(ka,va,{x:c,y:d},ca?0:m).attr({text:p.text,"text-bound":b.brConfig["text-bound"]}).show()):C&&C.hide()):F&&F.hide()}}])}]);N.register("module",["private","modules.renderer.js-dataset-scatter",function(){var b=this.hcLib,z=this.window.Image,G=b.BLANKSTRING,v=b.BGRATIOSTRING,F=b.extend2,E=b.pluck,t=b.pluckNumber,a=b.toRaphaelColor,
Q=b.graphics.getDarkColor,r=b.getFirstAlpha,P=b.HUNDREDSTRING,T=b.getFirstValue,L=b.parseTooltext,D=b.preDefStr,B=D.hiddenStr,m=D.setRolloverAttrStr,p=D.setRolloutAttrStr,D=Math,q=D.max,A=D.pow,n=b.getFirstColor,k=b.graphics.getLightColor,g=b.schedular;N.register("component",["dataset","Scatter",{type:"scatter",configure:function(){var f,g,k,m=this.chart,p=m.components,q=b.parseUnsafeString,B=this.config,A=this.JSONData,v=m.areaAlpha,H=m.jsonData.chart,w=p.colorManager;f=t(A.showplotborder,H.showplotborder||
1);var D=w.getPlotColor(this.index),h=B.lineDashed=t(A.linedashed,A.dashed,H.linedashed,0),z=this.isLineSet;B.plotColor=D;k=t(m.defaultPlotShadow,w.getColor("showShadow"));B.xAxisLabelMode=E(H.xaxislabelmode,"categories");B.toolTipSepChar=E(H.tooltipsepchar,", ");B.parentYAxis=z?g=1:g="s"===E(A.parentyaxis&&A.parentyaxis.toLowerCase(),"p")?1:0;this.yAxis=p.yAxis[g];B.connectNullData=t(H.connectnulldata,0);B.includeInLegend=t(A.includeinlegend,1);B.enableAnimation=g=t(H.animation,H.defaultanimation,
1);B.animation=g?{duration:1E3*t(H.animationduration,1)}:!1;B.transposeanimation=t(H.transposeanimation,g);B.transposeanimduration=1E3*t(H.transposeanimduration,.2);B.showValues=t(A.showvalues,H.showvalues);B.valuePadding=t(H.valuepadding,2);B.valuePosition=E(A.valueposition,H.valueposition,"auto");B.showTooltip=t(H.showtooltip,1);B.seriesNameInTooltip=t(H.seriesnameintooltip,1);B.showRegressionLine=t(A.showregressionline,H.showregressionline,0);B.plotFillColor=E(A.color,H.plotfillcolor,D);B.plotFillAngle=
E(H.plotfillangle,270);B.plotFillAlpha=E(A.alpha,H.plotfillalpha,v,"70");v=t(H.useplotgradientcolor,1);B.plotGradientColor=0!==v?b.getDefinedColor(H.plotgradientcolor,w.getColor("plotGradientColor")):"";B.fillColor={color:B.plotFillColor+(B.plotGradientColor?","+B.plotGradientColor:G),alpha:B.plotFillAlpha,angle:B.plotFillAngle};B.plotBorderAlpha=f?E(A.plotborderalpha,H.plotborderalpha,A.alpha,"95"):0;B.plotBorderColor=E(A.plotbordercolor,H.plotbordercolor,H.areabordercolor,"666666");B.dashed=f=t(A.dashed,
H.plotborderdashed);B.plotBorderDashLen=E(A.plotborderdashlen,H.plotborderdashlen,5);B.plotBorderDashGap=E(A.plotborderdashgap,H.plotborderdashgap,4);B.plotBorderThickness=t(A.plotborderthickness,H.plotborderthickness,1);B.plotBorderDashStyle=f?b.getDashStyle(B.plotBorderDashLen,B.plotBorderDashGap,B.plotBorderThickness):"none";B.showHoverEffect=t(H.plothovereffect,H.anchorhovereffect,H.showhovereffect,void 0);B.rotateValues=t(H.rotatevalues)?270:0;B.drawLine=t(A.drawline,H.drawlines,0);B.lineThickness=
t(A.linethickness,H.linethickness,2);B.lineDashLen=t(A.linedashlen,H.linedashlen,5);B.lineDashGap=t(A.linedashgap,H.linedashgap,4);B.lineAlpha=t(A.linealpha,H.linealpha,A.alpha,P);B.lineColor=E(A.linecolor,H.linecolor,A.color,B.plotColor);B.lineDashStyle=b.getDashStyle(B.lineDashLen,B.lineDashGap,B.lineThickness);B.lineDashStyle=h?B.lineDashStyle:"none";B.shadow={opacity:t(H.showshadow,k)?B.lineAlpha/100:0};B.drawanchors=t(A.drawanchors,A.showanchors,H.drawanchors,H.showanchors);B.anchorbgcolor=n(E(A.anchorbgcolor,
H.anchorbgcolor,w.getColor("anchorBgColor")));B.anchorbordercolor=n(E(A.anchorbordercolor,A.color,H.anchorbordercolor,B.lineColor));B.anchorradius=t(A.anchorradius,H.anchorradius,3);B.anchoralpha=E(A.anchoralpha,A.alpha,H.anchoralpha,P);B.anchorbgalpha=E(A.anchorbgalpha,A.alpha,H.anchorbgalpha,P);B.anchorborderthickness=E(A.anchorborderthickness,H.anchorborderthickness,1);B.anchorsides=t(A.anchorsides,H.anchorsides,this.index+3);B.anchorimageurl=E(A.anchorimageurl,H.anchorimageurl);B.anchorimagealpha=
t(A.anchorimagealpha,H.anchorimagealpha,100);B.anchorimagescale=t(A.anchorimagescale,H.anchorimagescale,100);B.anchorimagepadding=t(A.anchorimagepadding,H.anchorimagepadding,1);B.anchorstartangle=t(A.anchorstartangle,H.anchorstartangle,90);B.anchorshadow=t(A.anchorshadow,H.anchorshadow,0);B.plotToolText=b.getValidValue(q(E(A.plottooltext,H.plottooltext)));B.showRegressionLine&&(B.regressionObj={isRegression:!0,sumX:0,sumY:0,sumXY:0,sumXsqure:0,sumYsqure:0,xValues:[],yValues:[]},B.showYOnX=t(A.showyonx,
H.showyonx,1),B.regressionLineColor=n(E(A.regressionlinecolor,H.regressionlinecolor,B.anchorbordercolor)),B.regressionLineThickness=t(A.regressionlinethickness,H.regressionlinethickness,B.anchorborderthickness),B.regressionLineAlpha=r(t(A.regressionlinealpha,H.regressionlinealpha,B.anchoralpha)),B.regLineColor=a({color:B.regressionLineColor,alpha:B.regressionLineAlpha}));B.seriesNameInTooltip&&(B.seriesname=b.getFirstValue(A&&A.seriesname));this.visible=1===t(A.visible,!Number(A.initiallyhidden),
1);this._setConfigure();!1!==m.hasLegend&&this._addLegend()},_setConfigure:function(){var a,g,k,n,m,p,q,r,B,A=-Infinity,w=Infinity,v=Infinity,h=-Infinity,D=this.components.data||(this.components.data=[]);a=this.chart;var e=b.parseUnsafeString,d=this.config,c=this.JSONData,l=a.jsonData.chart,z=c.data||[],J=z.length,F=a.components.numberFormatter,P=e(l.yaxisname),Q=e(l.xaxisname),T=d.lineDashed,N=d.lineDashStyle,U=d.parentYAxis,la=d.toolTipSepChar,Ga=d.seriesname;for(a=d.imageCount=0;a<J;a+=1)n=z[a],
k=D[a]||(D[a]={}),g=k.config||(k.config={}),g.setValue=m={x:F.getCleanValue(n.x),y:F.getCleanValue(n.y)},null!==m.x&&null!==m.y&&(m.x>h&&(h=m.x,d.rightMostData=k),m.x<v&&(v=m.x,d.leftMostData=k),m.y>A&&(A=m.y,d.topMostData=k),m.y<w&&(w=m.y,d.bottomMostData=k)),d.showRegressionLine&&this.pointValueWatcher(m.x,m.y,d.regressionObj),g.setLink=E(n.link),g.anchorProps=this._parseAnchorProperties(a),g.showValue=t(n.showvalue,d.showValues),g.dashed=t(n.dashed,T),g.color=E(n.color,d.lineColor),g.alpha=E(n.alpha,
d.lineAlpha),g.dashStyle=g.dashed?N:"none",g.toolTipValue=p=F.dataLabels(m.y,U),g.setDisplayValue=B=e(n.displayvalue),r=g.formatedVal=E(n.toolTipValue,F.dataLabels(m.y,U)),q=F.xAxis(m.x),g.displayValue=E(B,p),g.setTooltext=b.getValidValue(e(E(n.tooltext,d.plotToolText))),d.showTooltip?void 0!==g.setTooltext?(m=[4,5,6,7,8,9,10,11],q={yaxisName:P,xaxisName:Q,yDataValue:r,xDataValue:q},n=L(g.setTooltext,m,q,n,l,c)):null===r?n=!1:(n=Ga?Ga+la:G,n+=m.x?q+la:G,n+=p):n=!1,g.toolText=n,k?k.graphics||(D[a].graphics=
{}):k=D[a]={graphics:{}},g.hoverEffects=this._parseHoverEffectOptions(k),g.anchorProps.isAnchorHoverRadius=g.hoverEffects.anchorRadius;d.xMax=h;d.xMin=v;d.yMin=w;d.yMax=A;d.showRegressionLine&&(d.regressionData=this.getRegressionLineSeries(d.regressionObj,d.showYOnX,J));this.ErrorValueConfigure&&this.ErrorValueConfigure()},sortFN:function(a,b){return a-b},_getHoveredPlot:function(a,b){var g=this.dataTree.getNeighbour({x:a,y:b},!0);if(g)return{pointIndex:g.index||g.i,hovered:!0,pointObj:g.data}},getRegressionLineSeries:function(a,
b,g){var k,n,m,p;p=a.sumXY;var q=a.sumX,r=a.sumY;n=a.xValues;m=a.sumXsqure;k=a.yValues;a=a.sumYsqure;b?(n.sort(this.sortFN),k=n[0],n=n[n.length-1],p=(g*p-q*r)/(g*m-A(q,2)),m=!isNaN(p)&&isFinite(p)?p*(k-q/g)+r/g:r/g,g=!isNaN(p)&&isFinite(p)?p*(n-q/g)+r/g:r/g,g=[{x:k,y:m},{x:n,y:g}]):(k.sort(this.sortFN),m=k[0],k=k[k.length-1],p=(g*p-q*r)/(g*a-A(r,2)),n=isNaN(p)?q/g:p*(m-r/g)+q/g,g=isNaN(p)?q/g:p*(k-r/g)+q/g,g=[{x:n,y:m},{x:g,y:k}]);return g},draw:function(){var f,k,n,r,t,u,A,v,D,H,w,K,h,F,e,d,c,l,
G,J=this.JSONData,L=this.chart,P=L.getJobList(),Q=L.components,T=this.components.removeDataArr,T=T&&T.length,N=L.jsonData.chart,U=this.config,la=this.index,Ga=J.data||[],xa=L.config,aa=Q.paper,Z=Q.xAxis[0],Q=Q.yAxis[0],ja=b.parseUnsafeString,ma=b.getValidValue,oa=this.components.data,Aa=oa.length;c={};k={};var ga=U.lineThickness;k=L.graphics;u=k.datalabelsGroup;var wa=this.graphics.container,ia=this.graphics.trackerContainer;F=k.trackerGroup;var ua=this.pool||(this.pool={}),Ca=U.connectNullData,da=
U.showTooltip;k=k.datasetGroup;var qa=U.shadow,ba=this.graphics.dataLabelContainer,na=this.visible;t={};var pa=this.searchDataArr=[],La=[q(0,xa.canvasLeft),q(0,xa.canvasTop),q(1,xa.canvasWidth),q(1,xa.canvasHeight)],xa=[q(0,xa.canvasLeft),q(0,xa.canvasTop),1,q(1,xa.canvasHeight)],ea=U.lineDashStyle,za={color:U.lineColor,alpha:U.lineAlpha},ha=[],sa=[],fa=null,ya=[],Ia=!1,Fa=this.graphics.lineElement;t=this.graphics.regressionLineElement;var Ba=L.get("config","animationObj"),L=Ba.duration||0,Ja=Ba.dummyObj,
Ha=Ba.animObj,Ba=Ba.animType,Da=0;U.imagesLoaded=0;k.line=k.line||aa.group("line",k);k.lineConnector=k.lineConnector||aa.group("line-connector",k);wa||(wa=this.graphics.container={lineShadowGroup:aa.group("connector-shadow",k.lineConnector),anchorShadowGroup:aa.group("anchor-shadow",k.lineConnector),lineGroup:aa.group("connector",k.lineConnector),anchorGroup:aa.group("anchors",k.lineConnector)});ia||(ia=this.graphics.trackerContainer=aa.group("line-hot"));oa||(oa=this.components.data=[]);F&&F.appendChild(ia);
ba||(ba=this.graphics.dataLabelContainer=aa.group("datalabel",u).attr("class","fusioncharts-datalabels"));U.showRegressionLine&&na?(u=U.regressionData[0],F=U.regressionData[1],(k=U._regressionAttr)||(U._regressionAttr=k={}),k.stroke=U.regLineColor,k["stroke-width"]=U.regressionLineThickness,k["stroke-linecap"]="round",k["stroke-linejoin"]=2<U.regressionLineThickness?"round":"miter",k.path="M "+Z.getAxisPosition(u.x)+","+Q.getAxisPosition(u.y)+" L "+Z.getAxisPosition(F.x)+","+Q.getAxisPosition(F.y),
t?t.animateWith(Ja,Ha,k,L,Ba):t=this.graphics.regressionLineElement=aa.path(k,wa.regLineGroup),t.show()):t&&t.hide();for(u=0;u<Aa;u+=1)if(t=Ga[u],F=oa[u],l=F.config,n=l.trackerConfig={},k=F.graphics,K=l.setValue,w=l.setLink,ma(ja(E(t.tooltext,J.plottooltext,N.plottooltext))),t=l.anchorProps,c=t.symbol,e=t.shadow,h=l.displayValue,F||(F=oa[u]={graphics:{}}),r=K.y,f=K.x,D=l.finalTooltext=l.toolText,null!==r&&null!==f){d=l.hoverEffects;A=Z.getAxisPosition(f);v=Q.getAxisPosition(r);l.eventArgs={index:u,
link:w,x:f,y:r,value:K,displayValue:h,toolText:D,id:U.userID,datasetIndex:la||0,datasetName:J.seriesname,visible:na};if(t.imageUrl)l.anchorImageLoaded=!1,n=new z,l.anchorImageLoaded=!1,na||k.image&&k.image.animateWith(Ja,Ha,{opacity:0},L,Ba),n.onload=this._onAnchorImageLoad(this,u,void 0,A,v),n.onerror=this._onErrorSetter(this,u),n.src=t.imageUrl,Da++;else if(H=k.element,(K=k.image)&&K.hide(),H||(H=ua.element&&ua.element.length?k.element=ua.element.shift():k.element=aa.polypath(wa.anchorGroup),Ia=
!0,L&&Ia&&H.attr({polypath:[c[1]||2,A,v,t.radius,t.startAngle,0],opacity:0,"fill-opacity":0,"stroke-opacity":0})),H.attr({fill:a({color:t.bgColor,alpha:t.bgAlpha}),stroke:a({color:t.borderColor,alpha:t.borderAlpha}),"stroke-width":t.borderThickness,cursor:w?"pointer":"",visibility:t.radius?na:B}).shadow(e,wa.anchorShadowGroup).animateWith(Ja,Ha,{polypath:[c[1]||2,A,v,t.radius,t.startAngle,0],opacity:na?t.bgAlpha/100:0,"fill-opacity":na?t.bgAlpha/100:0,"stroke-opacity":na?t.borderAlpha/100:0},L,Ba),
w||da||d)k=q(t.radius,d.anchorRadius||0),n.trackerRadius=k;d.enabled&&(k={polypath:[d.anchorSides||2,A,v,d.anchorRadius,d.startAngle,d.dip],fill:a({color:d.anchorColor,alpha:d.anchorBgAlpha}),stroke:a({color:d.anchorBorderColor,alpha:d.anchorBorderAlpha}),"stroke-width":d.anchorBorderThickness},c={polypath:[c[1]||2,A,v,t.radius,t.startAngle,0],fill:a({color:t.bgColor,alpha:t.bgAlpha}),stroke:a({color:t.borderColor,alpha:t.borderAlpha}),"stroke-width":t.borderThickness},H&&H.data("hoverEnabled",d.enabled).data("anchorRadius",
t.radius).data("anchorHoverRadius",d.anchorRadius).data(m,k).data(p,c));t.isAnchorHoverRadius=d.anchorRadius;null!==fa?(ya.length&&(ha=ha.concat(ya),ya.length=0),ha.join("")||ha.push("M",G,fa),ha.push("L",A,v)):ya.push("M",A,v);G=A;fa=v;F._xPos=A;F._yPos=v;H&&H.data("eventArgs",l&&l.eventArgs);pa.push({x:A,y:v,index:u,data:F,r:t.radius||0})}else ya.length=0,Ca||(fa=null);this.dataTree=(new b.KdTree).buildKdTree(pa);ha.length&&(sa=sa.concat(ha));U.drawLine&&sa.join("")?(Fa||(Fa=this.graphics.lineElement=
aa.path({path:sa},wa.lineGroup),Ia=!0),na&&Fa.attr({"stroke-dasharray":ea,"stroke-width":ga,stroke:a(za),"stroke-linecap":"round","stroke-linejoin":2<=ga?"round":"miter"}),na?Fa.animateWith(Ja,Ha,{path:sa,"stroke-opacity":1},L,Ba,function(){this.shadow(qa,wa.lineShadowGroup)}):Fa.animateWith(Ja,Ha,{path:sa,"stroke-opacity":0},Ia?0:L,Ba).shadow(!1)):Fa&&Fa.animateWith(Ja,Ha,{"stroke-opacity":0},L,Ba).shadow(!1);U.totalImages=U.noOfImages=Da;0===Da&&(this.drawn?this.drawLabel():P.labelDrawID.push(g.addJob(this.drawLabel,
this,[],b.priorityList.label)));wa.lineShadowGroup.hide();wa.anchorShadowGroup.hide();ba.hide();Ia&&wa.lineGroup.attr({"clip-rect":xa});wa.lineGroup.animateWith(Ja,Ha,{"clip-rect":La},L,Ba,function(){wa.lineGroup.attr({"clip-rect":null});na?(wa.lineShadowGroup.show(),wa.anchorShadowGroup.show(),wa.anchorGroup.show(),ia.show(),ba&&ba.show()):(wa.lineShadowGroup.hide(),wa.anchorShadowGroup.hide(),wa.anchorGroup.hide(),ia.hide(),ba&&ba.hide())});T&&this.remove();this.drawErrorValue&&this.drawErrorValue();
this.drawn=!0},getDataLimits:function(){var a=this.config,b=a.yMax,g=a.yMin,k=a.xMax,a=a.xMin,n=this.chart.config.transposeAxis;!1===this.visible&&n&&(b=-Infinity,g=Infinity,k=-Infinity,a=Infinity);return{max:b,min:g,xMax:k,xMin:a}},getAxisValuePadding:function(){return{left:0,right:0}},_addLegend:function(){var b,g=this.config,k=this.chart.components.legend,n=t(g.drawanchors,1);b=this.getPointColor(g.anchorbgcolor,P);var m={FCcolor:{color:g.anchorbordercolor,alpha:g.anchoralpha}};k.config.symbol3DLighting?
b&&b.FCcolor?(b=F({},b),b.FCcolor.alpha="100"):b=E(b):b={FCcolor:{color:E(b&&(b.FCcolor&&b.FCcolor.color.split(",")[0]||b)),angle:0,ratio:"0",alpha:"100"}};this.legendItemId=k.addItems(this,this.legendInteractivity,{enabled:g.includeInLegend,type:this.type,drawLine:E(g.drawLine,!0),fillColor:a(b),strokeColor:a(E(m&&(m.FCcolor&&m.FCcolor.color.split(",")[0]||m))),rawFillColor:g.anchorbgcolor,rawStrokeColor:g.anchorbordercolor,anchorSide:n?g.anchorsides:0,strokeWidth:g.anchorborderthickness,label:T(this.JSONData.seriesname)})},
getPointColor:function(a,b){var g,m;a=n(a);b=r(b);g=k(a,70);m=Q(a,50);return{FCcolor:{gradientUnits:"objectBoundingBox",cx:.4,cy:.4,r:"100%",color:g+","+m,alpha:b+","+b,ratio:v,radialGradient:!0}}}},"Line"])}]);N.register("module",["private","modules.renderer.js-dataset-pareto",function(){var b=this.hcLib,z=b.extend2,G=b.pluck,v=b.pluckNumber,F=b.toRaphaelColor,E=b.graphics.convertColor,t=b.HUNDREDSTRING,a=b.getValidValue,Q=Math,r=Q.min,P=Q.max,T=Q.abs,L=b.getFirstColor,D=b.graphics.getLightColor;
N.register("component",["dataset","Pareto",{configure:function(){var B=this.chart,m=this.config,p=B.components,q=p.xAxis[0],A=this.JSONData,n=A.data,k=n&&n.length,g=B.jsonData.chart,f=p.colorManager,S,C=f.getPlotColor(this.index||this.positionIndex),Y=v(A.dashed,g.plotborderdashed),R=v(g.useplotgradientcolor,1),u=v(g.showtooltip,1),X=b.parseUnsafeString,O=X(g.yaxisname),W=X(g.xaxisname),H=b.parseTooltext,w,K,h,V,e,d,c,l,M,J,Q,N,va,ka,ca,U=b.getDashStyle,la=this.components.data,p=p.numberFormatter,
Ga,xa=B.is3D,aa,Z,ja,ma,oa,Aa,ga,wa,ia=-Infinity,ua=Infinity,Ca=this.type.toLowerCase(),da,qa,ba=0,na=[],pa=0,La,ea=m.tootipSepChar=G(g.tooltipsepchar,", ");m.enableAnimation=c=v(g.animation,g.defaultanimation,1);m.animation=c?{duration:1E3*v(g.animationduration,1)}:!1;m.showTooltip=v(g.showtooltip,1);m.valuePadding=v(g.valuepadding,2);m.rotateValues=v(g.rotatevalues)?270:0;m.showHoverEffect=c=v(g.plothovereffect,g.showhovereffect,void 0);m.showShadow=d||xa?v(g.showshadow,1):v(g.showshadow,f.getColor("showShadow"));
m.useDataPlotColorForLabels=La=v(g.usedataplotcolorforlabels,0);m.use3dlineshift=v(g.use3dlineshift,B.use3dlineshift);/column/.test(Ca)&&(S=m.showplotborder=v(g.showplotborder,xa?0:1),m.plotDashLen=h=v(g.plotborderdashlen,5),m.plotDashGap=V=v(g.plotborderdashgap,4),m.plotfillangle=l=v(360-g.plotfillangle,90),m.plotfillalpha=M=G(g.plotfillalpha,t),m.plotColor=C,m.isRoundEdges=d=v(g.useroundedges,0),m.plotRadius=v(g.useRoundEdges,m.isRoundEdges?1:0),m.plotfillratio=J=G(g.plotfillratio),m.plotgradientcolor=
Q=b.getDefinedColor(g.plotgradientcolor,f.getColor("plotGradientColor")),!R&&(Q=""),m.plotborderalpha=N=S&&!xa?G(g.plotborderalpha,M,t):0,m.plotbordercolor=va=G(g.plotbordercolor,xa?"#ffffff":f.getColor("plotBorderColor")),m.plotborderthickness=e=v(g.plotborderthickness,1),m.plotBorderDashStyle=ka=Y?U(h,V,e):"none",m.showValues=v(g.showvalues,1),m.definedGroupPadding=P(v(g.plotspacepercent),0),m.plotSpacePercent=P(v(g.plotspacepercent,20)%100,0),m.maxcolwidth=v(g.maxcolwidth,50),m.plotpaddingpercent=
v(g.plotpaddingpercent),m.placevaluesinside=v(g.placevaluesinside,0),m.use3dlighting=v(g.use3dlighting,1),m.parentYAxis=0);"line"===Ca&&(m.linecolor=L(G(g.linecolor,f.getColor("plotBorderColor"))),m.linethickness=v(g.linethickness,2),m.linealpha=G(g.linealpha,t),m.linedashed=v(g.linedashed,0),m.linedashlen=v(A.linedashlen,g.linedashlen,5),m.linedashgap=v(A.linedashgap,g.linedashgap,4),Y=b.getDashStyle(m.linedashlen,m.linedashgap,m.linethickness),m.lineDashStyle=m.linedashed?Y:"none",m.drawanchors=
v(g.drawanchors,g.showanchors),m.anchorbgcolor=G(g.anchorbgcolor,f.getColor("anchorBgColor")),m.anchorbordercolor=G(g.anchorbordercolor,m.linecolor),m.anchorradius=v(g.anchorradius,3),m.anchoralpha=G(g.anchoralpha),m.anchorbgalpha=G(g.anchorbgalpha,100),m.anchorborderthickness=G(g.anchorborderthickness,1),m.anchorsides=G(g.anchorsides,0),m.anchorimageurl=G(g.anchorimageurl),m.anchorimagealpha=v(g.anchorimagealpha,100),m.anchorimagescale=v(g.anchorimagescale,100),m.anchorimagepadding=v(g.anchorimagepadding,
1),m.anchorstartangle=v(g.anchorstartangle,90),m.parentYAxis=1,m.valuePosition=G(g.valueposition,"auto"),m.showValues=v(g.showlinevalues,g.showvalues,1),m.showShadow&&(m.shadow={opacity:m.lineAlpha/100}),m.showCumulativeLine=v(g.showcumulativeline,1),m.maxRadius=-Infinity);la||(la=this.components.data=[]);for(Y=0;Y<k;Y++)R=T(p.getCleanValue(n[Y].value)),ba+=R,na[Y]=z({},n[Y]),na[Y].value=R;na.sort(function(a,b){return b.value-a.value});for(Y=m.imageCount=0;Y<k;Y++)R=na[Y],(C=la[Y])||(C=la[Y]={graphics:{}}),
C.config||(n=la[Y].config={}),B=T(p.getCleanValue(R.value)),null!==B&&(n=C&&C.config,Ga=q.getLabel(Y),n.label=a(X(G(Ga.label))),n.showValue=v(R.showvalue,m.showValues),n.setValue=B,n.setLink=G(R.link),n.setDisplayValue=Ga=X(R.displayvalue),pa+=n.setValue,da=p.dataLabels(B),/column/.test(Ca)?(C=v(R.dashed),w=v(R.dashlen,h),ca=V=v(R.dashgap,V),n.plotBorderDashStyle=w=1===C?U(w,ca,e):0===C?"none":ka,C=f.getPlotColor(Y),C=G(R.color,C),J=G(R.ratio,m.plotfillratio),M=G(R.alpha,m.plotfillalpha),N=G(R.alpha,
m.plotborderalpha),0>B&&!d&&(K=l,l=360-l),n.colorArr=ca=b.graphics.getColumnColor(C+","+Q,M,J,l,d,va,N.toString(),0,xa?!0:!1),0!==c&&(aa=G(R.hovercolor,g.plotfillhovercolor,g.columnhovercolor,C),Z=G(R.hoveralpha,g.plotfillhoveralpha,g.columnhoveralpha,M),ja=G(R.hovergradientcolor,g.plothovergradientcolor,Q),!ja&&(ja=""),J=G(R.hoverratio,g.plothoverratio,J),ma=v(360-R.hoverangle,360-A.hoverangle,360-g.plothoverangle,l),oa=G(R.borderhovercolor,g.plotborderhovercolor,va),N=G(R.borderhoveralpha,A.borderhoveralpha,
g.plotborderhoveralpha,g.plotfillhoveralpha,N,M),M=v(R.borderhoverthickness,A.borderhoverthickness,g.plotborderhoverthickness,e),Aa=v(R.borderhoverdashed,g.plotborderhoverdashed),ga=v(R.borderhoverdashgap,g.plotborderhoverdashgap,h),wa=v(R.borderhoverdashlen,g.plotborderhoverdashlen,V),Aa=Aa?U(wa,ga,M):w,1==c&&aa===C&&(aa=D(aa,70)),aa=b.graphics.getColumnColor(aa+","+ja,Z,J,ma,d,oa,N.toString(),0,xa?!0:!1),n.setRolloutAttr={fill:xa?[F(ca[0]),!m.use3dlighting]:F(ca[0]),stroke:S&&F(ca[1]),"stroke-width":e,
"stroke-dasharray":w},n.setRolloverAttr={fill:xa?[F(aa[0]),!m.use3dlighting]:F(aa[0]),stroke:S&&F(aa[1]),"stroke-width":M,"stroke-dasharray":Aa}),La&&q.updateCategory(Y,{labelfontcolor:E(C)}),n.displayValue=G(Ga,da),w=n.setTooltext=n.origToolText=a(X(G(R.tooltext,g.plottooltext))),n.toolTipValue=p.dataLabels(B,m.parentYAxis)):(B=n.setValue=pa/ba*100,qa=p.percentValue(B),n.toolTipValue=qa,n.displayValue=qa,n.valuePosition=G(R.valueposition,m.valuePosition),n.anchorProps=this._parseAnchorProperties(Y,
na),n.hoverEffects=this._parseHoverEffectOptions(C),C=n.anchorProps,m.maxRadius=Math.max(m.maxRadius,C.radius+C.borderThickness/2)),C=n.toolTipValue,ia=P(ia,B),ua=r(ua,B),u?(m.showTooltip?void 0!==w?(B={formattedValue:C,label:n.label,yaxisName:O,xaxisName:W,cumulativeValue:pa,cumulativeDataValue:p.dataLabels(pa),cumulativePercentValue:qa,sum:p.dataLabels(ba),unformattedSum:ba},C=[1,2,3,5,6,7,20,21,22,23,24,25],R=H(w,C,B,R,g)):R=n.label?n.label+ea:"":R=!1,n.toolText=R):R=!1,n.toolText=R,n.tooltext=
w,n.setTooltext=R,K&&(l=K));m.maxValue=ia;m.minValue=ua},init:function(a,b,p){var q=a.chart.components;a.JSONData={data:b};a.type=p;a.yAxis="line"===p?q.yAxis[1]:q.yAxis[0];a.components={};a.graphics={};a.visible=!0;this.configure.call(a)}}])}]);N.register("module",["private","modules.renderer.js-dataset-mssplinearea",function(){var b=this.hcLib,z=this.window.Image,G=b.TOUCH_THRESHOLD_PIXELS,v=b.CLICK_THRESHOLD_PIXELS,F=b.toRaphaelColor,E=b.hasTouch?G:v,G=b.preDefStr,t=G.hiddenStr,a=G.setRolloverAttrStr,
Q=G.setRolloutAttrStr,G=Math,r=G.sqrt,P=G.min,T=G.max,L=G.abs,D=b.schedular;N.register("component",["dataset","MSSplineArea",{configure:function(){N.get("component",["dataset","area"]).prototype.configure.call(this);this._calculateMaxMin()},_calculateMaxMin:function(){var a=this.config,b=this.chart,p=b.config,q=b.origRenderWidth,r=p.connectnulldata,n=this.components.data,k=Number.MIN_VALUE,g=Number.MAX_VALUE;0===p.minimizetendency&&(b=b.getSplineExtremities(n,q,r),a.maxValue=T(a.maxValue,b.max),a.minValue=
P(a.minValue,b.min),a.maxValue===k&&(a.maxValue=0),a.minValue===g&&(a.minValue=0))},getSplinePath:function(a,b,p,q){var t=function(a,b,c,d){b=(d-b)/r((c-a)*(c-a)+(d-b)*(d-b));b=L(.5*b);return a*b+c*(1-b)},n=function(a,b,c,d){var e=a.length,f=a[e-1],g=f.length,h=f[0],f=f[g-2];3>g||("R"!==h&&"C"!==h||3!==g||(a[e-1][0]="L"),b&&a.push(["L",f,d,c,d,"Z"]))},k=/area/ig.test(this.defaultDatasetType),g=[null],f=[],v=[],C=b.getAxisBase();b=b.getAxisPosition(C);var D,z,u,E,F,G,H,w,K,h,V,e,d,c,l,M;l=0;for(M=
a.length;l<M;l+=1)if(K=a[l],u=a[l-1]||{},E=a[l+1]||{},F=K.x,C=K.y,D=u.x,u=u.y,G=E.x,E=E.y,H=K.lastYPos,w=K.lastXPos,V=f.length,K=v.length,q)if(null!==H)if(z=d,l===a.length-1){H=g[l-e-1];K=G=(F+D)/2;V=(K-D)*H+u;if(u>C&&V<C||u<C&&V>C)V=C,K=(V-u)/H+D;d.push(K,V,G,(C+u)/2,F,C);f.push(d);v.push(d);k&&n(f,!0,c,b);k&&n(v,!1)}else{H=g[l-e-1];if(u>C&&E>=C||u<C&&E<=C)if(h=0,G=t(D,u,F,C),E=C,1!==l-e){K=G;V=(K-D)*H+u;if(u>C&&V<C||u<C&&V>C)V=C,K=(V-u)/H+D;d.push(K,V,G,E,F,C)}else d.push((F+D)/2,(C+u)/2,G,E,F,
C);else if(u===C)h=0,d.push(D,u,F,C,F,C);else if(u>C&&C>E||u<C&&C<E){h=(E-u)/(G-D);G=t(D,u,F,C);E=(G-F)*h+C;if(u>C&&E>u||u<C&&E<u)E=u,G=(E-C)/h+F;if(1!==l-e){K=G;V=(K-D)*H+u;if(u>C&&V<C||u<C&&V>C)V=C,K=(V-u)/H+D;d.push(K,V,G,E,F,C)}else d.push((F+D)/2,(C+u)/2,G,E,F,C)}g.push(h)}else null===H&&0!==l?(z||(z=[]),"C"===z[0]&&(f.push(d),v.push(d),k&&n(f,!0,c,b),k&&n(v,!1)),f.push(["M",F,C]),v.push(["M",F,C]),c=F,d=["C"],e=l,g=[null]):(f.push(["M",F,C]),v.push(["M",F,C]),c=F,d=["C"],e=l);else null!==H?
2<=V?("M"===f[V-1][0]&&f.push(["R"]),"M"===v[K-1][0]&&v.push(["R"]),V=f.length,K=v.length,z=f[V-1],D=z.length,f[V-1].push(F),f[V-1].push(C),v[K-1].push(F),v[K-1].push(C),l===p-1&&"R"===z[0]&&(n(f,!0,c,b),n(v,!1))):(f.push(["M",w,H]),f.push(["R",F,C]),v.push(["M",w,H]),v.push(["R",F,C]),c=w):null===H&&2<=V&&(z=f[V-1],"R"===z[0]&&(n(f,!0,c,b),n(v,!1)),f.push(["M",F,C]),v.push(["M",F,C]),c=F);z=f[f.length-1];k&&z&&(D=z.length,"Z"===z[D-1]||"R"!==z[0]&&"C"!==z[0]||(n(f,!0,c,b),n(v,!1)));k||(f=q?f:v,2<=
f.length&&n(f,!1));return{closedPath:f,openPath:v}},draw:function(){var r=this,m=r.config,p=r.chart,q=p.getJobList(),A=r.JSONData,n=p.config,k=p.components,g=k.canvas.config,f=r.index,v,C,G=k.paper,k=k.xAxis[0],R=r.yAxis,u,L,O,P,H=null,w=[],K=[],h=p.graphics,V=n.showtooltip,e,d=r.components.data,c,l,M,J,N,Ka=n.connectnulldata,va,ka,ca=n.minimizetendency,U=R.getAxisBase(),la,Ga=m.plotbordercolor,xa=m.plotborderalpha,aa=m.plotBorderDashStyle,Z=m.plotborderthickness,ja=r.graphics.container,ma=[],oa,
Aa=m.fillColor,ga=h.areaGroup,wa=p.get("config","animationObj"),ia=wa.duration,ua=wa.animType,Ca=r.components.removeDataArr||[],da=Ca.length,qa=ja&&ja.shadowContainer,ba=r.graphics.dataLabelContainer,na=function(){!1!==r.visible||!1!==r._conatinerHidden&&void 0!==r._conatinerHidden||(ja.areaGroup.hide(),qa.hide(),ja.lineShadowGroup.hide(),ja.anchorShadowGroup.hide(),ja.anchorGroup.hide(),ba&&ba.hide(),r._conatinerHidden=!0)},pa=function(){ga.area.attr({"clip-rect":null});ga.area.node&&ga.area.node.removeAttribute("clip-path");
!1!==r.visible&&(ja.lineShadowGroup.show(),ja.anchorShadowGroup.show(),ja.anchorGroup.show(),ba.show(),qa.show())},La=m.shadow,ea,za=r.visible,ha,ma={},ma=h.datalabelsGroup,h=g.clip["clip-canvas"].slice(0),g=g.clip["clip-canvas-init"].slice(0),n=!n.drawfullareaborder,sa=!0,fa=r.components.pool||[],ya=wa.dummyObj,wa=wa.animObj,Ia=r.graphics.connector,Fa=0,Ba;m.imagesLoaded=0;ja||(ja=r.graphics.container={lineShadowGroup:G.group("connector-shadow",ga.areaConnector),anchorShadowGroup:G.group("anchor-shadow",
ga.areaConnector),areaGroup:G.group("area",ga.area),anchorGroup:G.group("anchors",ga.areaConnector)},za||(ja.lineShadowGroup.hide(),ja.anchorShadowGroup.hide(),ja.areaGroup.hide(),ja.anchorGroup.hide()));qa||(qa=r.graphics.shadowContainer=G.group("shadows",ga.shadows),za||qa.hide());d||(d=r.components.data);ba||(ba=r.graphics.dataLabelContainer=r.graphics.dataLabelContainer||G.group("datalabel",ma),za||ba.hide());za&&(ja.lineShadowGroup.show(),ja.anchorShadowGroup.show(),ja.areaGroup.show(),ja.anchorGroup.show(),
ba.show(),qa.show());v=k.getCategoryLen();oa=r.graphics.splineElement;for(C=0;C<v;C++)if(c=d[C])e=c&&c.config,N=e.setValue,J=e.setLink,ma=e.anchorProps,ha=ma.shadow,u=e.setLevelTooltext,e&&(la=0<=N?e.previousPositiveY:e.previousNegativeY),M=c.graphics.element,L=c.graphics.hotElement,Ba=c.graphics.image,null===N?(M&&M.hide(),L&&L.hide(),Ba&&Ba.hide(),Ka||(H=null)):(R.getAxisPosition(la||U),O=R.getAxisPosition(N+(la||0)),L=k.getAxisPosition(C),!1===za&&ia&&(O=R.getPixel(R.getAxisBase())),ea=e.hoverEffects,
l=V?e.toolText+(u?"":e.toolTipValue):"",e.finalTooltext=l,u=e.eventArgs=e.eventArgs||{},u.index=C,u.link=J,u.value=N,u.displayValue=e.displayValue,u.categoryLabel=k.getLabel(C).label,u.toolText=l,u.id=r.userID,u.datasetIndex=f||0,u.datasetName=A.seriesname,u.visible=za,ea.enabled&&(e.setRolloverAttr={polypath:[ea.anchorSides||2,L,O,ea.anchorRadius,ea.startAngle,ea.dip],fill:F({color:ea.anchorColor,alpha:ea.anchorBgAlpha}),stroke:F({color:ea.anchorBorderColor,alpha:ea.anchorBorderAlpha}),"stroke-width":ea.anchorBorderThickness},
e.setRolloutAttr={polypath:[ma.symbol[1]||2,L,O,ma.radius,ma.startAngle,0],fill:F({color:ma.bgColor,alpha:ma.bgAlpha}),stroke:F({color:ma.borderColor,alpha:ma.borderAlpha}),"stroke-width":ma.borderThickness},ka=e.setRolloverAttr,va=e.setRolloutAttr),J=[ma.symbol[1]||2,L,O,ma.radius,ma.startAngle,0],ma.imageUrl?(e.anchorImageLoaded=!1,Fa++,e=new z,e.onload=r._onAnchorImageLoad(r,C,u,L,O),e.onerror=r._onErrorSetter(r,C),e.src=ma.imageUrl):(Ba&&Ba.hide(),M||(fa.element&&fa.element.length?M=c.graphics.element=
fa.element.shift():(M=c.graphics.element=G.polypath(ja.anchorGroup),M.attr({polypath:J}))),Ba&&Ba.hide(),M.show().animateWith(ya,wa,{polypath:J},ia,ua,sa&&void 0).attr({fill:F({color:ma.bgColor,alpha:ma.bgAlpha}),stroke:F({color:ma.borderColor,alpha:ma.borderAlpha}),"stroke-width":ma.borderThickness,visibility:ma.radius?za:t}).shadow(ha,ja.anchorShadowGroup).data("anchorRadius",ma.radius).data("anchorHoverRadius",ea.anchorRadius).data("eventArgs",u),ea.enabled&&M&&M.data("anchorRadius",ma.radius).data("anchorHoverRadius",
ea.anchorRadius).data("hoverEnabled",ea.enabled).data(a,ka).data(Q,va),e.trackerConfig||(e.trackerConfig={}),e.trackerConfig.trackerRadius=T(ma.radius,ea&&ea.anchorRadius||0,E)+(ma.borderThickness||0)/2),c._xPos=L,c._yPos=O,K.push({x:L,y:O,lastXPos:P,lastYPos:H}),P=L,H=O);m.noOfImages=m.totalImages=Fa;0===Fa&&q.labelDrawID.push(D.addJob(r.drawLabel,r,[],b.priorityList.label));ma=this.getSplinePath.call(p,K,R,v,ca).closedPath;ma=ma.join();oa||(oa=r.graphics.splineElement=G.path(ja.areaGroup),oa.attr({path:ma}),
ia&&za&&(ja.anchorGroup.hide(),ja.anchorShadowGroup.hide(),ba.hide(),qa.hide(),ga.area.attr({"clip-rect":g}).animateWith(ya,wa,{"clip-rect":h},ia,ua,pa)));""===ma?oa.hide():oa.show().animateWith(ya,wa,{path:ma},ia,ua,sa&&na);sa=!1;oa.attr({stroke:F({color:Ga,alpha:xa}),"stroke-width":n?0:Z,fill:F(Aa),"stroke-linecap":"round","stroke-linejoin":2<Z?"round":"miter","stroke-dasharray":aa}).shadow(La,qa);n&&(Ia||(Ia=r.graphics.connector=G.path(ja.areaGroup)),Ia.animateWith(ya,wa,{path:w},ia,ua),Ia.attr({stroke:F({color:Ga,
alpha:xa}),"stroke-width":Z,"stroke-linecap":"round","stroke-linejoin":2<Z?"round":"miter","stroke-dasharray":aa}));for(C=0;C<da;C++)r._removeDataVisuals(Ca.shift())}},"area"])}]);N.register("module",["private","modules.renderer.js-dataset-msspline",function(){var b=this.hcLib,z=this.window.Image,G=b.TOUCH_THRESHOLD_PIXELS,v=b.CLICK_THRESHOLD_PIXELS,F=b.pluck,E=b.toRaphaelColor,t=b.hasTouch?G:v,G=b.preDefStr,a=G.hiddenStr,Q=G.setRolloverAttrStr,r=G.setRolloutAttrStr,G=Math,P=G.sqrt,T=G.max,L=G.abs,
D=b.schedular;N.register("component",["dataset","MSSpline",{type:"spline",configure:function(){var a=N.get("component",["dataset","line"]),b=N.get("component",["dataset","MSSplineArea"]);a.prototype.configure.call(this);b.prototype._calculateMaxMin.call(this)},getSplinePath:function(a,b,p){var q=function(a,b,c,d){b=(d-b)/P((c-a)*(c-a)+(d-b)*(d-b));b=L(.5*b);return a*b+c*(1-b)},r=function(a,b,c,d){var e=a.length,f=a[e-1],g=f.length,h=f[0],f=f[g-2];3>g||("R"!==h&&"C"!==h||3!==g||(a[e-1][0]="L"),b&&
a.push(["L",f,d,c,d,"Z"]))},n=this.chart,k=/area/ig.test(n.defaultDatasetType);b=b.getAxisPosition(b.getAxisBase());var n=n.config.minimizetendency,g=[null],f=[],t=[],C,v,D,u,z,E,F,H,w,K,h,G,e,d,c,l,M;l=0;for(M=a.length;l<M;l+=1)if(K=a[l],u=a[l-1]||{},z=a[l+1]||{},E=K.x,D=K.y,C=u.x,u=u.y,F=z.x,z=z.y,H=K.lastYPos,w=K.lastXPos,G=f.length,K=t.length,n)if(null!==H)if(v=d,l===a.length-1){H=g[l-e-1];K=F=(E+C)/2;G=(K-C)*H+u;if(u>D&&G<D||u<D&&G>D)G=D,K=(G-u)/H+C;d.push(K,G,F,(D+u)/2,E,D);f.push(d);t.push(d);
k&&r(f,!0,c,b);k&&r(t,!1)}else{H=g[l-e-1];if(u>D&&z>=D||u<D&&z<=D)if(h=0,F=q(C,u,E,D),z=D,1!==l-e){K=F;G=(K-C)*H+u;if(u>D&&G<D||u<D&&G>D)G=D,K=(G-u)/H+C;d.push(K,G,F,z,E,D)}else d.push((E+C)/2,(D+u)/2,F,z,E,D);else if(u===D)h=0,d.push(C,u,E,D,E,D);else if(u>D&&D>z||u<D&&D<z){h=(z-u)/(F-C);F=q(C,u,E,D);z=(F-E)*h+D;if(u>D&&z>u||u<D&&z<u)z=u,F=(z-D)/h+E;if(1!==l-e){K=F;G=(K-C)*H+u;if(u>D&&G<D||u<D&&G>D)G=D,K=(G-u)/H+C;d.push(K,G,F,z,E,D)}else d.push((E+C)/2,(D+u)/2,F,z,E,D)}g.push(h)}else null===H&&
0!==l?(v||(v=[]),"C"===v[0]&&(f.push(d),t.push(d),k&&r(f,!0,c,b),k&&r(t,!1)),f.push(["M",E,D]),t.push(["M",E,D]),c=E,d=["C"],e=l,g=[null]):(f.push(["M",E,D]),t.push(["M",E,D]),c=E,d=["C"],e=l);else null!==H?2<=G?("M"===f[G-1][0]&&f.push(["R"]),"M"===t[K-1][0]&&t.push(["R"]),G=f.length,K=t.length,v=f[G-1],C=v.length,f[G-1].push(E),f[G-1].push(D),t[K-1].push(E),t[K-1].push(D),l===p-1&&"R"===v[0]&&(r(f,!0,c,b),r(t,!1))):(f.push(["M",w,H]),f.push(["R",E,D]),t.push(["M",w,H]),t.push(["R",E,D]),c=w):null===
H&&2<=G&&(v=f[G-1],"R"===v[0]&&(r(f,!0,c,b),r(t,!1)),f.push(["M",E,D]),t.push(["M",E,D]),c=E);v=f[f.length-1];k&&v&&(C=v.length,"Z"===v[C-1]||"R"!==v[0]&&"C"!==v[0]||(r(f,!0,c,b),r(t,!1)));k||(f=n?f:t,2<=f.length&&r(f,!1));return{closedPath:f,openPath:t}},draw:function(){var B=this,m=B.JSONData,p=[],q=[],A=B.chart,q=A.getJobList(),n=A.components,k=n.canvas.config,g=B.config,f=A.config,v=B.index||B.positionIndex,C=f.categories,G=n.paper,R=n.xAxis[0],u=B.yAxis,L,O,P=A.graphics,H=P.datalabelsGroup,w=
b.parseUnsafeString,K=b.getValidValue,h,V,e,d,c,l,M=B.components.data,J,n=g.linethickness,N=B.graphics.container,Ka=f.connectnulldata,f=f.showtooltip,va=P.datasetGroup,ka,P=g.shadow,ca=B.graphics.dataLabelContainer,U={},la,Ga,U=A.get("config","animationObj"),A=U.duration,xa=U.animType,aa=B.components.removeDataArr||[],Z=aa.length,ja=B.components.pool||[],ma=function(){!1!==B.visible||!1!==B._conatinerHidden&&void 0!==B._conatinerHidden||(N.lineGroup.hide(),N.lineShadowGroup.hide(),N.anchorShadowGroup.hide(),
N.anchorGroup.hide(),ca&&ca.hide())},oa=function(){va.lineConnector.attr({"clip-rect":null});va.lineConnector.node&&va.lineConnector.node.removeAttribute("clip-path");!1!==B.visible&&(N.lineShadowGroup.show(),N.anchorShadowGroup.show(),N.anchorGroup.show(),ca&&ca.show())},Aa=B.config.animFlag=B.config.animFlag||(B.config.animFlag=!0),ga=k.clip["clip-canvas"].slice(0),k=k.clip["clip-canvas-init"].slice(0),wa=null,ia,ua=!1,Ca=g.lineDashStyle,da={color:g.linecolor,alpha:g.alpha},qa,ba,na,pa=U.dummyObj,
La=U.animObj,ea=0,U=B.graphics.SplineElement,za=B.visible;g.imagesLoaded=0;va.lineConnector=va.lineConnector||G.group("line-connector",va);N||(N=B.graphics.container={lineShadowGroup:G.group("connector-shadow",va.lineConnector),anchorShadowGroup:G.group("anchor-shadow",va.lineConnector),lineGroup:G.group("spline",va.lineConnector),anchorGroup:G.group("anchors",va.lineConnector)},za||(N.lineShadowGroup.hide(),N.anchorShadowGroup.hide(),N.lineGroup.hide(),N.anchorGroup.hide()));M||(M=B.components.data=
[]);ca||(ca=B.graphics.dataLabelContainer=B.graphics.dataLabelContainer||G.group("datalabel",H),za||ca.hide());za&&(N.lineShadowGroup.show(),N.anchorShadowGroup.show(),N.lineGroup.show(),N.anchorGroup.show(),ca.show());ba=R.getCategoryLen();for(qa=0;qa<ba;qa++)if(H=M[qa])Ga=H.config,d=Ga.setValue,e=Ga.setLink,c=Ga.setLevelTooltext,U=Ga.anchorProps,la=U.symbol,J=U.shadow,l=Ga.displayValue,H||(H=M[qa]={graphics:{}}),V=H.graphics.element,na=H.graphics.image,O=H.graphics.label,L=H.graphics.hotElement,
null===d?(V&&V.hide(),O&&O.hide(),L&&L.hide(),na&&na.hide(),Ka||(wa=null)):(L=R.getAxisPosition(qa),O=u.getAxisPosition(d),ka=Ga.hoverEffects,U.isAnchorHoverRadius=ka.anchorRadius,!1===za&&A&&(O=u.getPixel(u.getAxisBase())),K(w(F(C[qa].tooltext,C[qa].label))),h=f?Ga.toolText+(c?"":Ga.toolTipValue):"",Ga.finalTooltext=h,c=Ga.eventArgs||(Ga.eventArgs={}),c.index=qa,c.link=e,c.value=d,c.displayValue=l,c.categoryLabel=R.getLabel(qa).label,c.toolText=h,c.id=g.userID,c.datasetIndex=v||0,c.datasetName=m.seriesname,
c.visible=za,U.imageUrl?(Ga.anchorImageLoaded=!1,V=new z,V.onload=B._onAnchorImageLoad(B,qa,c,L,O),V.onerror=B._onErrorSetter(B,qa),V.src=U.imageUrl,ea++):(na&&na.hide(),e=[la[1]||2,L,O,U.radius,U.startAngle,0],V||(ja.element&&ja.element.length?V=H.graphics.element=ja.element.shift():(V=H.graphics.element=G.polypath(N.anchorGroup),V.attr({polypath:e}))),V.show().animateWith(pa,La,{polypath:e},A,xa,Aa&&ma),V.attr({fill:E({color:U.bgColor,alpha:U.bgAlpha}),stroke:E({color:U.borderColor,alpha:U.borderAlpha}),
"stroke-width":U.borderThickness,visibility:U.radius?za:a}).shadow(J,N.anchorShadowGroup).data("eventArgs",c),Aa=!1,ka.enabled&&(e={polypath:[ka.anchorSides||2,L,O,ka.anchorRadius,ka.startAngle,ka.dip],fill:E({color:ka.anchorColor,alpha:ka.anchorBgAlpha}),stroke:E({color:ka.anchorBorderColor,alpha:ka.anchorBorderAlpha}),"stroke-width":ka.anchorBorderThickness},J={polypath:[U.sides,L,O,U.radius,U.startAngle,0],fill:E({color:U.bgColor,alpha:U.bgAlpha}),stroke:E({color:U.borderColor,alpha:U.borderAlpha}),
"stroke-width":U.borderThickness},V&&V.data("anchorRadius",U.radius).data("anchorHoverRadius",ka.anchorRadius).data("hoverEnabled",ka.enabled).data(Q,e).data(r,J)),Ga.trackerConfig||(Ga.trackerConfig={}),Ga.trackerConfig.trackerRadius=T(U.radius,ka&&ka.anchorRadius||0,t)+(U.borderThickness||0)/2),p.push({x:L,y:O,lastXPos:ia,lastYPos:wa}),ia=L,wa=O,H._xPos=L,H._yPos=O,!U.imageUrl&&this.drawLabel(qa));g.noOfImages=g.totalImages=ea;0===ea&&q.labelDrawID.push(D.addJob(B.drawLabel,B,[],b.priorityList.label));
q=B.getSplinePath(p,u).closedPath;U=B.graphics.SplineElement;2<=q.length?(U||(U=B.graphics.SplineElement=G.path(q,N.lineGroup),ua=!0),U.show().animateWith(pa,La,{path:q},A,xa,Aa&&ma),U.attr({"stroke-dasharray":Ca,"stroke-width":n,stroke:E(da),"stroke-linecap":"round"}).shadow(P,N.lineShadowGroup),Aa=!1):U&&U.hide();A&&za&&ua&&(N.anchorGroup.hide(),N.lineShadowGroup.hide(),N.anchorShadowGroup.hide(),ca.hide(),va.lineConnector.attr({"clip-rect":k}).animateWith(pa,La,{"clip-rect":ga},A,xa,oa));B.drawn=
!0;for(qa=0;qa<Z;qa++)B._removeDataVisuals(aa.shift())}},"Line"])}]);N.register("module",["private","modules.renderer.js-dataset-bubble",function(){var b=this.hcLib,z=b.BLANKSTRING,G=b.TOUCH_THRESHOLD_PIXELS,v=b.CLICK_THRESHOLD_PIXELS,F=b.pluck,E=b.pluckNumber,t=b.toRaphaelColor,a=b.graphics.convertColor,Q=b.getFirstAlpha,r=b.hasTouch?G:v,P=b.getValidValue,G=b.preDefStr,T=G.visibleStr,L=G.setRolloverAttrStr,D=G.setRolloutAttrStr,B=Math,m=B.round,p=B.min,q=B.max,A=b.getFirstColor,n=b.graphics.getLightColor,
k=b.schedular;N.register("component",["dataset","Bubble",{type:"bubble",configure:function(){var g=this.chart,f=g.components,g=g.jsonData.chart,k=this.JSONData,m=this.config,r=k.data||[],B,u,v,D,z;B=f.colorManager;u=this.index;var f=f.numberFormatter,H,w=b.parseUnsafeString,K=F(w(g.tooltipsepchar),", "),h,G,e,d,c,l,L=-Infinity,J=Infinity,N=-Infinity,T=Infinity,va=-Infinity,ka=Infinity,ca,U=b.graphics.getPointColor;m.includeInLegend=E(k.includeinlegend,1);m.seriesname=w(k.seriesname);m.anchorBgColor=
F(k.color,k.plotfillcolor,g.plotfillcolor,B.getPlotColor(u));m.showPlotBorder=E(k.showplotborder,g.showplotborder,1);m.anchorBorderThickness=m.showPlotBorder?E(k.plotborderthickness,g.plotborderthickness,1):0;m.anchorBorderColor=A(F(k.plotbordercolor,g.plotbordercolor,"666666"));m.plotFillAlpha=F(k.plotfillalpha,k.bubblefillalpha,g.plotfillalpha,"100");m.plotBorderAlpha=F(k.plotborderalpha,g.plotborderalpha,"95");m.negativeColor=F(g.negativecolor,"FF0000");m.is3d=0!==E(g.use3dlighting,k.is3d,g.is3d);
m.bubbleScale=E(g.bubblescale,1);m.minBubbleRadius=E(g.minbubbleradius);m.clipBubbles=E(g.clipbubbles,1);m.showRegressionLine=E(k.showregressionline,g.showregressionline,0);m.enableAnimation=B=E(g.animation,g.defaultanimation,1);m.animation=B?{duration:1E3*E(g.animationduration,1)}:!1;m.showTooltip=E(g.showtooltip,1);m.transposeAnimation=E(g.transposeanimation,B);m.transposeAnimDuration=1E3*E(g.transposeanimduration,.2);m.seriesNameInTooltip=E(g.seriesnameintooltip,1);m.rotateValues=E(g.rotatevalues)?
270:0;m.showHoverEffect=E(g.plothovereffect,g.showhovereffect,void 0);m.showValues=E(k.showvalues,g.showvalues,0);D=this.components.data=this.components.data||(this.components.data=[]);B=r.length;m.showRegressionLine&&(this.events={hide:this.hideRLine,show:this.showRLine},H={sumX:0,sumY:0,sumXY:0,sumXsqure:0,sumYsqure:0,xValues:[],yValues:[],isRegression:!0},m.showYOnX=E(k.showyonx,g.showyonx,1),m.regressionLineColor=A(F(k.regressionlinecolor,g.regressionlinecolor,m.anchorBgColor)),m.regressionLineThickness=
E(k.regressionlinethickness,g.regressionlinethickness,1),m.regressionLineAlpha=Q(E(k.regressionlinealpha,g.regressionlinealpha,100)),m.regLineColor=a(m.regressionLineColor,m.regressionLineAlpha));m.fillColor=m.is3d?t(U(m.anchorBgColor,m.plotFillAlpha)):t({color:m.anchorBgColor,alpha:m.plotFillAlpha});m.strokeColor=t({color:m.anchorBorderColor,alpha:m.plotFillAlpha});for(u=0;u<B;u++)if(G=r[u],v=D[u]=D[u]||(D[u]={}),!v.graphics&&(v.graphics={}),e=v.config={},e.x=f.getCleanValue(G.x),e.y=f.getCleanValue(G.y),
e.z=f.getCleanValue(G.z,!0),e.showValue=E(G.showvalue,m.showValues),e.anchorProps={},l=e.label=e.x,e.setLink=P(G.link),m.max=va=q(va,e.z||0),m.min=ka=p(ka,e.z||0),e.is3d=0!==E(G.is3d,m.is3d),L=q(L,e.x),J=p(J,e.x),N=q(N,e.y),T=p(T,e.y),v=e.color=A(F(G.color,0>G.z?m.negativeColor:m.anchorBgColor)),z=e.alpha=F(G.alpha,m.plotFillAlpha),e.colorObj=ca=e.is3d?U(v,z):{color:v,alpha:z},e.setDisplayValue=d=w(F(G.displayvalue,G.name,G.label)),h=e.formatedVal=null===e.y?e.y:f.dataLabels(e.y),e.displayValue=F(d,
e.formatedVal),e.setTooltext=b.getValidValue(w(F(G.tooltext,k.plottooltext,g.plottooltext))),m.showTooltip?null===h?d=!1:void 0!==e.setTooltext?(d=[4,5,6,7,8,9,10,11,12,13,118],h={yDataValue:h,xDataValue:f.xAxis(l),yaxisName:w(g.yaxisname),xaxisName:w(g.xaxisname),zDataValue:f.dataLabels(e.z)},d=b.parseTooltext(e.setTooltext,d,h,G,g,k)):(m.seriesNameInTooltip&&(c=b.getFirstValue(k&&k.seriesname)),d=c?c+K:"",d+=l?f.xAxis(l)+K:"",d+=h,d+=G.z?K+f.dataLabels(G.z):""):d=!1,e.toolText=d,this.pointValueWatcher(e.x,
e.y,m.showRegressionLine&&H),h=e.hoverEffects={},0!==m.showHoverEffect){l=h.enabled=void 0!==F(G.hoveralpha,k.hoveralpha,g.bubblehoveralpha,G.hovercolor,k.hovercolor,k.bubblehovercolor,g.bubblehovercolor,G.borderhovercolor,k.borderhovercolor,g.plotborderhovercolor,G.borderhoveralpha,k.borderhoveralpha,g.plotborderhoveralpha,G.hoverscale,k.bubblehoverscale,g.bubblehoverscale,G.borderhovercolor,k.borderhovercolor,g.plotborderhovercolor,G.borderhoverthickness,k.borderhoverthickness,g.plotborderhoverthickness,
G.negativehovercolor,k.negativeColor,g.negativecolor,G.is3donhover,g.plotfillhovercolor,k.is3donhover,g.is3donhover,void 0);h.negativeColor=F(G.negativehovercolor,k.negativehovercolor,g.negativehovercolor,m.negativeColor);h.is3d=E(G.is3donhover,k.is3donhover,g.is3donhover,e.is3d);h.color=F(G.hovercolor,k.hovercolor,k.bubblehovercolor,g.plotfillhovercolor,g.bubblehovercolor,e.is3d?ca.FCcolor.color:v);h.color=h.negativeColor&&0>G.z?h.negativeColor:h.color;h.scale=F(G.hoverscale,k.hoverscale,k.bubblehoverscale,
g.bubblehoverscale,1);h.color=A(h.color);h.alpha=F(G.hoveralpha,k.hoveralpha,g.plotfillhoveralpha,g.bubblehoveralpha,z);h.borderColor=F(G.borderhovercolor,k.borderhovercolor,g.plotborderhovercolor,m.anchorBorderColor);h.borderAlpha=F(G.borderhoveralpha,k.borderhoveralpha,g.plotborderhoveralpha,h.alpha,m.plotBorderAlpha);h.borderThickness=E(G.borderhoverthickness,k.borderhoverthickness,g.plotborderhoverthickness,m.anchorBorderThickness);h.color=h.is3d?U(h.color,h.alpha):{FCcolor:{color:h.color,alpha:h.alpha}};
G=l&&m.showHoverEffect?0:m.showHoverEffect;if(1===G){e=(G="string"==typeof h.color)?h.color.split(/\s{0,},\s{0,}/):h.color.FCcolor.color.split(/\s{0,},\s{0,}/);z=e.length;for(v=0;v<z;v++)e[v]=n(e[v],70);G?h.color=e.join(","):h.color.FCcolor.color=e.join(",")}!1===l&&(h.enabled=!!m.showHoverEffect)}else h.enabled=!1;m.xMax=L;m.xMin=J;m.yMin=T;m.yMax=N;m.regressionData=m.showRegressionLine&&this.getRegressionLineSeries(H,m.showYOnX,B);this.visible=1===E(k.visible,!Number(k.initiallyhidden),1);this._addLegend()},
init:function(a){this.yAxis=this.chart.components.yAxis[0];this.components={};this.graphics={};this.JSONData=a;this.configure()},_getHoveredPlot:function(a,b){var k=this.dataTree.getNeighbour({x:a,y:b},!0,"circle");if(k)return{pointIndex:k.index||k.i,hovered:!0,pointObj:k.data}},_addLegend:function(){var a=this.config;this.legendItemId=this.chart.components.legend.addItems(this,this.legendInteractivity,{enabled:a.includeInLegend,fillColor:a.fillColor,strokeColor:a.strokeColor,rawFillColor:a.anchorBgColor,
rawStrokeColor:a.anchorBorderColor,anchorSide:1,type:this.type,label:a.seriesname})},draw:function(){var a=this,f=a.JSONData,n=B.sqrt,C=a.chart,A=C.getJobList(),v=C.components,u=v.canvas.config,z=v.paper,F=C.config,G=C.graphics,F=p(F.canvasHeight,F.canvasWidth)/8,H=G.datasetGroup,w,K,h=a.yAxis,v=v.xAxis[0],V=a.config;w=V._regressionAttr;var e,d,c,l;e=u.clip["clip-canvas"].slice(0);var M=u.clip["clip-canvas-init"].slice(0),J,u=a.components.data,Q=a.components.removeDataArr||[],P=Q.length,N=a.graphics.container,
T=a.graphics.dataLabelContainer,ca=function(){!1===a.visible&&(N.bubbleGroup.hide(),N.regLineGroup.hide(),T.hide(),a._containerHidden=!0)};J=function(){a.visible&&(T.attr({"clip-rect":null}),N.regLineGroup.attr({"clip-rect":null}))};var U=V.minBubbleRadius,la=V.bubbleScale,Ga=C.getDataLimits().zMax||0,Ga=n(Ga);l=V.clipBubbles;var xa=C.get("config","animationObj"),C=xa.duration;d=a.graphics.regressionLineElement;c=V.showRegressionLine;var aa=a.visible,Z=V.showTooltip,ja=G.datalabelsGroup,ma,oa,Aa;
ma={};var ga,wa,G=!0,ia=xa.dummyObj,ua=xa.animObj,xa=xa.animType,Ca=a.components.pool||{},da=V.anchorBorderThickness;ma=a.drawn;var qa=[];N||(N=a.graphics.container={bubbleGroup:z.group("bubble",H),regLineGroup:z.group("regLine",H)},aa||(N.bubbleGroup.hide(),N.regLineGroup.hide()));T||(T=a.graphics.dataLabelContainer=z.group("datalabel",ja),T.attr({"clip-rect":M}).animateWith(ia,ua,{"clip-rect":e},C,xa,J),aa||T.hide());l?ma?N.bubbleGroup.animateWith(ia,ua,{"clip-rect":e},C,xa):N.bubbleGroup.attr({"clip-rect":e}):
(N.bubbleGroup.attr({"clip-rect":null}),N.bubbleGroup.node&&N.bubbleGroup.node.removeAttribute&&N.bubbleGroup.node.removeAttribute("clip-path"));aa&&(N.bubbleGroup.show(),N.regLineGroup.show(),T.show());c?(ma=V.regressionData[0],H=V.regressionData[1],w||(V._regressionAttr=w={}),w.stroke=t({color:V.regressionLineColor,alpha:V.regressionLineAlpha}),w["stroke-width"]=V.regressionLineThickness,w["stroke-linecap"]="round",w["stroke-linejoin"]=2<V.regressionLineThickness?"round":"miter",w.path="M "+v.getAxisPosition(ma.x)+
","+h.getAxisPosition(ma.y)+" L "+v.getAxisPosition(H.x)+","+h.getAxisPosition(H.y),d?d.animateWith(ia,ua,w,C,xa):(d=a.graphics.regressionLineElement=z.path(w,N.regLineGroup),N.regLineGroup.attr({"clip-rect":M}),N.regLineGroup.animateWith(ia,ua,{"clip-rect":e},C,xa,J))):d&&d.hide();H=0;for(M=u.length;H<M;H+=1)e=u[H],J=e.config,l=E(J.x,H),ja=J.y,d=J.z,w=e.graphics.element,oa=J.setLink,Aa=J.displayValue,c=J.toolText,J.finalTooltext=J.toolText,ma=J.hoverEffects,w=e.graphics.element,K=e.graphics.hotElement,
wa=e.graphics.label,null!==ja?(K=J.eventArgs||(J.eventArgs={}),K.index=H,K.link=oa,K.value=ja,K.y=ja,K.x=l,K.z=d,K.displayValue=Aa,K.toolText=c,K.id=a.userID,K.datasetIndex=a.index||0,K.datasetName=f.seriesname,K.visible=aa,c=h.getAxisPosition(ja),l=v.getAxisPosition(l),d=n(d),d=m(d*F/Ga)*la||0,qa.push({x:l,y:c,r:d}),U&&(d=q(d,U)),ja=J.setRolloutAttr={fill:t(J.colorObj),"stroke-width":V.anchorBorderThickness,stroke:t({color:V.anchorBorderColor,alpha:V.plotBorderAlpha}),r:d},!1!==ma.enabled&&(ga=J.setRolloverAttr=
{fill:t(ma.color),"stroke-width":ma.borderThickness,stroke:t({color:ma.borderColor,alpha:ma.borderAlpha}),r:d*ma.scale}),a.visible||(d=0),w||(Ca.element&&Ca.element.length?w=e.graphics.element=Ca.element.shift():(w=e.graphics.element=z.circle(N.bubbleGroup),w.attr({cx:l,cy:c,r:C?0:d}))),w.show().animateWith(ia,ua,{cx:l,cy:c,r:d||0},C,xa,G&&ca).attr({fill:t(J.colorObj),ishot:!Z,"stroke-width":V.anchorBorderThickness,stroke:ja.stroke,visibility:aa}),G=!1,J.trackerConfig||(J.trackerConfig={}),J.trackerConfig.trackerRadius=
q(d+(da||0),r),w.data("hoverEnabled",ma.enabled).data(L,ga).data(D,ja),e._xPos=l,e._yPos=c,w&&w.data("eventArgs",J&&J.eventArgs)):(w&&w.hide(),K&&K.hide(),wa&&wa.hide());this.dataTree=(new b.KdTree).buildKdTree(qa);a.drawn?a.drawLabel():A.labelDrawID.push(k.addJob(a.drawLabel,a,[],b.priorityList.label));a.drawn=!0;for(H=0;H<P;H++)a._removeDataVisuals(Q.shift())},show:function(){var a=this.chart,b=this.graphics.container,k=this.graphics.dataLabelContainer;this.visible=!0;b.bubbleGroup.show();b.regLineGroup&&
b.regLineGroup.show();k.show();a._setAxisLimits();a._drawAxis();a._drawDataset()},hide:function(){var a=this.chart;this.visible=!1;a._setAxisLimits();a._drawAxis();a._drawDataset()},getDataLimits:function(){var a=this.config,b=a.yMax,k=a.yMin,n=this.chart.config.transposeAxis,m=a.xMin,p=a.xMax,q=a.max,a=a.min;!1===this.visible&&n&&(b=-Infinity,m=k=Infinity,p=-Infinity);return{max:b,min:k,xMin:m,xMax:p,zMax:q,zMin:a}},drawLabel:function(){var a=this.chart,b=a.config.dataLabelStyle,k=this.components.data,
n=a.components.paper,m;m="";var p=this.config,q=a.get("config","animationObj"),a=q.duration,r=q.animType,t=q.animObj,q=q.dummyObj,p=p.rotateValues,B,A=this.graphics.dataLabelContainer,w,v,h,D,e,d,c,l,E=this.components.pool||{};d=0;for(c=k.length;d<c;d++)if(m=k[d])w=m.config,B=m.graphics,h=m._yPos,v=m._xPos,m=w.displayValue,e=B.label,l=w.showValue,void 0!==m&&null!==m&&m!==z&&null!==w.z&&l?(m={text:m,fill:b.color,"text-bound":[b.backgroundColor,b.borderColor,b.borderThickness,b.borderPadding,b.borderRadius,
b.borderDash],"line-height":b.lineHeight,visibility:T},e||(E.label&&E.label.length?e=B.label=E.label.shift():(m.x=v,m.y=h,m.transform=n.getSuggestiveRotation(p,v,h),e=B.label=n.text(m,A),D=!0)),D||(e.show().animateWith(q,t,{x:v,y:h,transform:n.getSuggestiveRotation(p,v,h)},a,r),e.attr(m))):e&&e.hide()},_hoverFunc:function(a,b,k){a=a.graphics.element;b="DataPlotRollOut"===b?a.data(D):a.data(L);k&&a.attr(b)}},"scatter"])}]);N.register("module",["private","modules.renderer.js-dataset-pie2d",function(){var b=
this.hcLib,z=b.parseConfiguration,G="VML"===b.Raphael.type,v=b.getPosition,F=b.COMMASPACE,E=b.ZEROSTRING,t=b.hasSVG,a=b.pluck,Q=b.parsexAxisStyles,r=b.pluckNumber,P=b.toRaphaelColor,T=b.graphics.convertColor,L=b.parseUnsafeString,D=b.graphics.getDarkColor,B=b.ONESTRING,m=b.getFirstAlpha,p=b.HUNDREDSTRING,q=b.getDashStyle,A=b.getValidValue,n=b.parseTooltext,k=b.preDefStr.visibleStr,g=8===this.window.document.documentMode?k:"",k=Math,f=k.sin,S=k.cos,C=k.max,Y=k.abs,R=k.PI,u=2*R,X=b.getFirstColor,O=
b.graphics.getLightColor,W=b.schedular;N.register("component",["dataset","Pie2D",{type:"pie2d",configure:function(){var f=this.chart,g=f.config,k=g.dataLabelStyle,h=this.config,n=this.JSONData,e=f.jsonData.chart,d=b.parseUnsafeString,c=f.is3D,l,m;this.__setDefaultConfig();z({},this.config,f&&f.config);m=h.enableAnimation=r(e.animation,e.defaultanimation,1);h.animation=m?{duration:1E3*r(e.animationduration,e.moveduration,1)}:!1;h.transposeAnim=m||r(h.transposeanimation,1)?{duration:1E3*r(e.transposeanimduration,
.2)}:!1;h.showPlotBorder=r(e.showplotborder,1);h.showHoverEffect=r(e.plothovereffect,e.showhovereffect,void 0);h.showTooltip=r(e.showtooltip,1);h.toolText=A(d(a(n.plottooltext,e.plottooltext)));m=h.enableMultiSlicing=r(e.enablemultislicing,1);l=h.use3DLighting=r(e.use3dlighting,1);h.radius3D=l?r(e.radius3d,90):100;h.showZeroPies=r(e.showzeropies,1);h.showPercentInToolTip=r(e.showpercentintooltip,1);h.showLabels=r(e.showlabels,1);h.showValues=r(n.showvalues,e.showvalues,1);h.showPercentValues=r(e.showpercentvalues,
e.showpercentagevalues,0);l=h.toolTipSepChar=a(e.tooltipsepchar,e.hovercapsepchar,F);h.labelSepChar=a(e.labelsepchar,l);h.pieBorderColor=a(e.plotbordercolor,e.piebordercolor);h.pieBorderAlpha=r(e.plotborderalpha,e.pieborderalpha);h.pieBorderThickness=h.showPlotBorder?r(e.plotborderthickness,e.pieborderthickness,g.plotborderthickness,1):0;h.plotDashLen=r(e.plotborderdashlen,5);h.plotDashGap=r(e.plotborderdashgap,4);h.showValueInLegend=r(e.showvalueinlegend,0);h.showLabelInLegend=r(e.showlabelinlegend,
1);h.valueBeforeLabelInLegend=r(e.valuebeforelabelinlegend,0);h.showValueAsPercentInLegend=r(e.showvalueaspercentinlegend,1);h.legendSepChar=a(e.legendsepchar,", ");h.showvalues=r(e.showvalues,1);h.chartPosition=v(f.linkedItems.container,void 0,f);h.timerThreshold=30;h.centerLabelConfig={label:d(a(e.defaultcenterlabel,"")),font:a(e.centerlabelfont,k.fontFamily),fontSize:r(e.centerlabelfontsize,parseInt(k.fontSize,10)),color:X(a(e.centerlabelcolor,e.valuefontcolor,g.style.inCanvasStyle.color,"555555")),
alpha:r(e.centerlabelalpha,100),bold:r(e.centerlabelbold,k.fontWeight),italic:r(e.centerlabelitalic,k.style),bgColor:a(e.centerlabelbgcolor,""),bgAlpha:r(e.centerlabelbgalpha,100),borderColor:a(e.centerlabelbordercolor,k.borderColor),borderAlpha:r(e.centerlabelborderalpha,100),borderThickness:r(e.centerlabelborderthickness,k.borderThickness),borderRadius:r(e.centerlabelborderradius,k.borderRadius),textPadding:r(e.centerlabeltextpadding,k.borderPadding),padding:r(e.centerlabelpadding,2),bgOval:r(e.centerlabelbgoval,
0),shadow:r(e.showcenterlabelshadow,0),hoverColor:e.centerlabelhovercolor&&X(a(e.centerlabelhovercolor)),hoverAlpha:r(e.centerlabelhoveralpha),toolText:d(a(e.centerlabeltooltext,""))};h.showLegend=r(e.showlegend,0);h.reverselegend=!r(e.reverselegend,0);f.is3D=c;h.pieYScale=r(e.pieyscale,40);1>h.pieYScale&&(h.pieYScale=1);100<=h.pieYScale&&(h.pieYScale=80);h.pieYScale/=100;h.pieSliceDepth=r(e.pieslicedepth,15);1>h.pieSliceDepth&&(h.pieSliceDepth=1);h.managedPieSliceDepth=h.pieSliceDepth;h.enableMultiSlicing=
!!m;h.startAngle=r(e.startingangle,0)*-(R/180);h.usePerPointLabelColor=e.colorlabelsfromplot==B;h.reversePlotOrder=r(e.reverseplotorder,0);h.animateClockWise=r(e.animateclockwise,h.reversePlotOrder);h.showShadow=r(e.showshadow,1);h.singletonCase=1===n.data.length;h.valueTotal=0;this._setConfigure();this._addLegend()},_parseDisplayProperties:function(b,f){var g,h,k="",e,d,c,l,m,p,q;g=this.chart;var u=g.components.numberFormatter,C=g.jsonData.chart;l=this.config;d=r(f.y,u.getCleanValue(b.value,!0));
var t=l.valueTotal;c=l.showLabels;var B=L(a(f.seriesName,b.label,b.name,""));p=l.showPercentValues;e=l.showPercentInToolTip;var v=l.labelSepChar,D=l.toolTipSepChar,z=l.showTooltip;g=A(L(a(b.tooltext,l.toolText)));h=f.pValue=u.percentValue(d/t*100);d=f.value=u.dataLabels(d)||"";c=1===r(b.showlabel,c)?B:"";l=1===(q=r(b.showvalue,l.showValues))?1===p?h:d:"";e=e?h:d;m=A(L(b.displayvalue));p=a(m,B+v+(p?h:d),"");l=void 0!==m&&q?m:""!==l&&""!==c?c+v+l:a(c,l);z&&(void 0!==g?k=n(g,[1,2,3,5,6,7,14,24,25],{formattedValue:d,
label:B,yaxisName:L(C.yaxisname),xaxisName:L(C.xaxisname),percentValue:h,sum:u.dataLabels(t),unformattedSum:t},b,C):(k=B,k=""!=k?k+D+e:e));f.displayValue=l;f.displayValueArgs=p;f.toolText=k;f.seriesName=B;f.categoryLabel=c},foldingFn:function(a){a=a.data("plotItem");return{ringpath:[a.center[0],a.center[1],a.radius,a.innerDiameter/2,a.angle,a.angle]}},_isStyled:function(a){if(this.chart.config.usedataplotcolorforlabels||a.labelbordercolor||a.labelbgcolor||a.labelborderthickness||a.labelborderalpha||
a.labelalpha||a.labelfont||a.labelfontsize||a.labelfontcolor||a.labelfontalpha||a.labelalpha||a.labelfontbold||a.labelfontitalic||a.labelborderpadding||a.labelborderradius||a.labelbgalpha||a.labelborderdashed||a.labelborderdashlen||a.labelborderdashgap)return!0},_setConfigure:function(b,f){var g,h,k,e,d,c,l,n,m,u,t,v,D,z,F,G,O,R;d=this.chart;var S=d.jsonData.chart,P=d.components;e=P.legend;var Y=d.config,W=this.config,N=this.JSONData;h=(u=(b||N).data)&&u.length;v=W.showZeroPies;var N=W.valueTotal||
0,Aa=[],ga=r(S.plotborderdashed,0),wa=this.components.data||(this.components.data=[]),ia=P.numberFormatter,P=P.colorManager,ua=W.labelInLeg,Ca=W.valInLeg,da=W.centerLabelConfig,qa=W.pieBorderThickness,ba=W.reversePlotOrder,na=W.radius3D,pa=W.enableMultiSlicing,La=W.lastSlicedid||0,ea=r(S.plotBorderDashed,5),za=r(S.plotborderdashgap,4),ha=r(S.valuebeforelabelinlegend,0),sa=r(S.showvalueaspercentinlegend,1);R=0;var fa=a(S.legendsepchar,", ");d=d.get("config","animationObj");m=d.duration||0;c=d.dummyObj;
n=d.animObj;t=d.animType;Y.dataLabelStyle=Q({},{},S,Y.dataLabelStyle,l);for(d=0;d<h;d+=1)l=u[d],k=ia.getCleanValue(l.value,!0),null===k||!v&&0===k?R+=1:(Aa.push(l),N+=k);if(R&&wa.length>h-R)for(e&&e.emptyItems(wa.length-R),d=wa.length-1;0<R;--d,--R)if(wa[d]){l=wa[d];h=l.config;k=l.graphics;for(g in k)e=k[g],e.animateWith(c,n,this.foldingFn.call(this,e),m,t,this.hideFn.call(this,k,g,this));h.y=null;l.legendItemId=void 0}0===N&&(Aa=[]);W.valueTotal=N;W.dataLabelCounter=0;Y.allPlotSliceEnabled=Y.enableslicing;
for(d=(h=Aa.length)-1;0<=d;--d){k=d;b?(R=Aa[d],k=void 0!==f?f+d:wa.length-h+d,l=wa[k]):(l=wa[d]||(wa[d]={graphics:{},config:{}}),R=Aa[d]);g=l&&l.config;g||(g=wa[k].config={});l.graphics||(wa[k].graphics={});g.y=k=ia.getCleanValue(R.value,!0);g.seriesName=c=L(a(R.label,R.name,""));l=a(R.color,P.getPlotColor(d));e=a(R.alpha,S.plotfillalpha,p);n=g.borderConfig=this._parseBorderConfig(l,e,R);m=n.setPlotBorderColor;n=n.setPlotBorderAlpha;u={opacity:C(e,n)/100};if(v=!!r(R.issliced,S.issliced,0))pa||(-1!==
La&&(wa[wa.length-La-1].sliced=!1),W.lastSlicedid=d),W.preSliced=v;z=(t=r(R.dashed,ga))?q(a(R.dashlen,ea),a(R.dashgap,za),qa):"none";this._parseDisplayProperties(R,g);t=ua?c:"";Ca&&(k=sa?ia.legendPercentValue(k/N*100):ia.legendValue(k),t=ha?k+(t&&fa+t):(t&&t+fa)+k);(k=g.displayValue)&&(W.dataLabelCounter+=1);G=g.value;F=g.pValue;k={label:a((D=R.centerlabel||S.centerlabel)&&this.replaceMacros(D,["\\$value","\\$percentValue","\\$displayValue","\\$label"],[G,F,void 0===k?"":k,c]),""),font:da.font,fontSize:r(R.centerlabelfontsize,
da.fontSize),color:X(a(R.centerlabelcolor,da.color)),alpha:r(R.centerlabelalpha,da.alpha),bold:r(R.centerlabelbold,da.bold),italic:r(R.centerlabelitalic,da.italic),bgColor:a(R.centerlabelbgcolor,da.bgColor),bgAlpha:r(R.centerlabelbgalpha,da.bgAlpha),borderColor:a(R.centerlabelbordercolor,da.borderColor),borderAlpha:r(R.centerlabelborderalpha,da.borderAlpha),borderThickness:da.borderThickness,borderRadius:da.borderRadius,textPadding:da.textPadding,padding:da.padding,bgOval:da.bgOval,shadow:da.shadow,
hoverColor:(O=a(R.centerlabelhovercolor,da.hoverColor))&&X(O),hoverAlpha:r(R.centerlabelhoveralpha,da.hoverAlpha),toolText:a(R.centerlabeltooltext,"")};this._isStyled(R)?g.style=Q(R,{},S,Y.dataLabelStyle,l):g.style&&delete g.style;g.showInLegend=""!==t;g.isVisible=!0;g.name=t;g.shadow=u;g.setColor=l;g.color=this._getPointColor(l,e,na);g._3dAlpha=e;g.borderColor=T(m,n);g.borderWidth=qa;g.link=A(R.link);g.sliced=v;g.dashStyle=z;(g.doNotSlice=a(R.enableslicing,Y.enableslicing)!=B)||Y.allPlotSliceEnabled!==
E||(Y.allPlotSliceEnabled=B);this._parseHoverEffectOptions(d);g.centerLabelConfig=k;g.radius3D=na}ba&&wa&&wa.reverse();W.dataArr=Aa;W.enableRotation=1<wa.length?r(S.enablerotation,1):0},_parseHoverEffectOptions:function(b){var f,g,h,k,e,d,c,l,n;d=this.chart.jsonData.chart;g=this.config;var m=this.components.data[b].config;c=this.JSONData;l=c.data[b];h=m.setColor;k=m._3dAlpha;b=g.radius3D;n=m.borderConfig;e=n.setPlotBorderAlpha;var p=n.setPlotBorderColor;n=g.setBorderWidth;g=r(m.hovereffect,g.showHoverEffect);
m=m.hoverEffects={enabled:g};void 0===g&&(g=m.enabled=void 0!==a(l.hovercolor,c.hovercolor,d.plotfillhovercolor,l.hoveralpha,c.hoveralpha,d.plotfillhoveralpha,l.borderhovercolor,c.borderhovercolor,d.plotborderhovercolor,l.borderhoveralpha,c.borderhoveralpha,d.plotborderhoveralpha,d.plotfillhoveralpha,l.borderhoverthickness,c.borderhoverthickness,d.plotborderhoverthickness,void 0));if(g){f=r(l.highlightonhover,c.highlight,d.highlight,1);(g=a(l.hovercolor,c.hovercolor,d.plotfillhovercolor))&&f&&(f=
0);g=a(g,h);h=a(l.hoveralpha,c.hoveralpha,d.plotfillhoveralpha,k);k=a(l.borderhovercolor,c.borderhovercolor,d.plotborderhovercolor,p);e=a(l.borderhoveralpha,c.borderhoveralpha,d.plotborderhoveralpha,d.plotfillhoveralpha,e);d=r(l.borderhoverthickness,c.borderhoverthickness,d.plotborderhoverthickness,n);g.replace(/,+?$/,"");if(1===f){l=(c="string"==typeof g)?g.split(/\s{0,},\s{0,}/):g.color.split(/\s{0,},\s{0,}/);n=l.length;for(f=0;f<n;f++)l[f]=O(l[f],70);c?g=l.join(","):g.color=l.join(",")}this._setHoverColor(m,
g,h,b);m.borderColor=T(k,e);m.borderWidth=d}else m.enabled=!1},_setHoverColor:function(a,b,f,g){a.color=this._getPointColor(b,f,g)},replaceMacros:function(a,b,f){for(var g=b.length||0,k;g--;)k=new RegExp(b[g],"gi"),a=a.replace(k,f[g]);return a},containsMacro:function(a,b){for(var f=b.length||0,g;f--;)if(g=new RegExp(b[f],"gi"),g=a.match(g))return!0;return!1},updateData:function(a,b){this.config.valueTotal-=this.components.data[b].config.y;this.__base__.updateData.apply(this,arguments)},_parsePiePlotOptions:function(){var a=
this.config;return{size:a.pieMinRadius,slicedOffset:a.slicingDistance}},_parseDataLabelOptions:function(){return{style:this.chart.config.dataLabelStyle}},_addLegend:function(){var a,b,f,g=this.chart.components.legend,k=this.components.data;for(a=0;a<k.length;a+=1)f=k[a],b=f.config,null!==b.y&&(f.legendItemId=g.addItems(this,this.legendInteractivity,{index:a,fillColor:P(b.setColor),strokeColor:P(b.borderColor),type:this.type,label:b.seriesName,enabled:r(b.includeInLegend,1),legendItemId:f.legendItemId}))},
_parseBorderConfig:function(b,f,g){var h=this.chart.jsonData.chart,k=a(g.bordercolor,this.config.pieBorderColor);g=a(g.borderalpha,h.plotborderalpha,h.pieborderalpha);k=a(k,O(b,25)).split(",")[0];g=h.showplotborder==E?E:a(g,f,"80");return{setPlotBorderColor:k,setPlotBorderAlpha:g}},_getPointColor:function(a,b,f){var g,k;a=X(a);b=m(b);100>f&&t?(g=Math.floor(85*(100-.35*f))/100,g=D(a,g),k=Math.floor(50*(100+f))/100,a=O(a,k),b={color:a+","+g,alpha:b+","+b,ratio:f+","+(100-f),radialGradient:!0,gradientUnits:"userSpaceOnUse"}):
b={color:a+","+a,alpha:b+","+b,ratio:"0,100"};return b},hideElements:function(){var a=this.data&&this.data("plotItem").chart,b=0,f=this._&&this._.shadows||[];if(a&&a.components.dataset[0])for(this.hide();b<f.length;b+=1)f[b].hide()},hideFn:function(a,b){return function(){a[b].hide()}},singleFillColor:function(a){return P({color:X(a.color),alpha:m(a.alpha)})},draw:function(){var a,k,n=this.chart,h=n.getJobList(),m=n.graphics,e=n.config,d=e.dataLabelStyle,c=n.graphics,l=this.config,p=l.showShadow,q=
n.components.paper,r=this.components,C=r.data,t=r.removeDataArr||[],B,A,v,D,z;B=e.style;B=m.datasetGroup.trackTooltip(!0);var E=this.graphics,F=this.pool,R=E.container,L=this.visible,O=E.shadowContainer;A=m.datalabelsGroup;var Q=E.dataLabelContainer,N,X,T,ia,ua,Ca,da,qa,ba,na=r.data||[],pa=na.length,r=e.canvasLeft+.5*e.canvasWidth,m=e.canvasTop+.5*e.canvasHeight,La=c.datasetGroup;D=e.alphaanimation;var ea=!1,c=n.get("config","animationObj"),za=c.duration||0,ha=c.dummyObj,sa=c.animObj,fa=c.animType,
c=function(){ea||(ea=!0,Q.show(),La.animateWith(ha,sa,{opacity:1},za,fa))},ya=function(){var a,b;if(k)for(a=0;a<pa;a+=1)b=na[a],b.graphics.element&&b.graphics.element.attr({fill:P(b.config.color)})};N=function(){var a=l.pieCenter||[],b={cx:a[0],cy:a[1],r:(l.piePlotOptions||[]).size,r2:.5*(l.innerSize||0)};return function(a){var c,d=!1;for(c in a)if(5<Y(a[c]-b[c])){d=!0;break}return d}}();X=function(){ea||ya()};var Ia=n._plotDragMove,Fa=n._plotDragStart,Ba=n._plotDragEnd,Ja=n._plotRollOver,Ha=n._plotRollOut,
Da=!!l.enableRotation,Ma=l.piePlotOptions=this._parsePiePlotOptions(),e=e.textDirection,Na=l.dataLabelOptions,Oa=Ma.slicedOffset,Sa,Ma=Ma.size,Ua=.5*(l.innerSize||0),Pa=(l.startAngle||0)%u,ab,Xa,$a,Ta=Pa-u,bb=l.animateClockWise,Qa,Wa;R?($a=!0,za&&(ab=X),k=N({cx:r,cy:m,r:Ma,r2:Ua})):(B.pie=q.group("pie",B),B.pieLabels=q.group("pie",B),R=E.container={lineShadowGroup:q.group("connector-shadow",B.pieLabels),anchorShadowGroup:q.group("anchor-shadow",B.pieLabels),pieGroup:E.pieContainer=q.group("pie",B.pie),
dataLabel:q.group("dataLabel",B.pie)},O=E.shadowContainer=B.shadows||(B.shadows=q.group("shadows",R.pieGroup).toBack()),Q=E.dataLabelContainer=this.graphics.dataLabelContainer||q.group("datalabel",A).trackTooltip(!0),za&&(ab=c,Q.hide()));Q.css(d);L||(R.lineShadowGroup.hide(),R.anchorShadowGroup.hide(),R.pieGroup.hide(),R.dataLabel.hide(),O.hide(),Q.hide());D&&La.attr({opacity:0});t.length&&this.remove();R=l.valueTotal;L=u/R;l.pieCenter=[r,m];N=t=Pa;h.labelDrawID.push(W.addJob(n.placeDataLabels,n,
[!1,C,l],b.priorityList.label));for(h=0;h<pa;h+=1)if(B=na[h],z=B.graphics,X=B.config,(Qa=X._textAttrs)||(Qa=X._textAttrs={}),T=X.y,ia=X.displayValue,ua=X.sliced,A=X.toolText,D=!!X.link,B=X.style,Ca=D||Da||!X.doNotSlice,null!==T&&void 0!==T&&!1!==X.isVisible){N=X.color;N.r=Ma;N.cx=r;N.cy=m;N=t;t-=l.singletonCase?u:T*L;da=.5*(t+N);v=z.element;qa=z.label;Sa=z.connector;if(!v){v=F&&F.element.length?z.element=F.element.splice(0,1)[0].show():z.element=q.ringpath(E.pieContainer).attr({"stroke-linejoin":"round",
ishot:Ca}).drag(Ia,Fa,Ba).hover(Ja,Ha);if($a){if(h<pa)for(Xa=void 0,a=h+1;a<pa&&void 0===Xa;a+=1)Xa=na[a].config.endAngle;void 0===Xa&&(Xa=Ta)}else Xa=bb?Ta:Pa;v.attr({ringpath:[r,m,Ma,Ua,Xa,Xa]})}void 0!==ia?(B?((Wa=X._textCss)||(Wa=X._textCss={}),Wa.fontFamily=B.fontFamily,Wa.fontSize=B.fontSize,Wa.lineHeight=B.lineHeight,Wa.fontWeight=B.fontWeight,Wa.fontStyle=B.fontStyle):X._textCss&&(qa&&qa.removeCSS(),delete X._textCss,Wa=void 0),X.style=B||(B=d),Qa.text=ia,Qa.fill=B.color||"#000000",Qa["text-bound"]=
[B.backgroundColor,B.borderColor,B.borderThickness,B.borderPadding,B.borderRadius,B.borderDash],Qa.direction=e,Qa.lineHeight=B.lineHeight,qa?(Wa&&(qa.css(Wa),delete Wa.fontFamily,delete Wa.fontSize,delete Wa.lineHeight,delete Wa.fontWeight,delete Wa.fontStyle,Wa=void 0),delete Qa.ishot):F&&F.label.length?qa=z.label=F.label.splice(0,1)[0]:Qa.ishot=Ca,0<Na.distance&&(ba=Na.connectorWidth)&&Na.enableSmartLabels?(Sa||(Sa=F&&F.connector.length?z.connector=F.connector.splice(0,1)[0]:z.connector=q.path("M 0 0 l 0 0",
Q).attr({visibility:g,ishot:!0}).drag(Ia,Fa,Ba).hover(Ja,Ha)),Sa.attr({"stroke-width":ba,stroke:Na.connectorColor||"#606060"}).show()):Sa&&Sa.hide()):(Qa.visibility="hidden",qa&&qa.hide(),Sa&&Sa.hide());B=X.plotItem={chart:n,index:h,seriesData:l,value:T,angle:X.angle=da,angle1:X.startAngle=t,angle2:X.endAngle=N,slicedX:S(da)*Oa,slicedY:f(da)*Oa,sliced:ua,labelText:ia,toolText:A,name:X.name,link:X.link,percentage:R?T*R/100:0,originalIndex:pa-h-1,style:X.style,color:P(X.color),borderColor:X.borderColor,
borderWidth:X.borderWidth,rolloverProperties:X.hoverEffects,radius:Ma,center:[r,m],innerDiameter:2*Ua,centerLabelConfig:X.centerLabelConfig,graphic:v,isVisible:X.isVisible,label:qa,connector:Sa,transX:X.transX=S(da)*Oa,transY:X.transY=f(da)*Oa,slicedTranslation:X.slicedTranslation="t"+S(da)*Oa+","+f(da)*Oa};z={index:l.reversePlotOrder?pa-1-h:h,link:X.link,value:X.y,displayValue:X.displayValueArgs,categoryLabel:X.categoryLabel,isSliced:ua,toolText:A};v.animateWith(ha,sa,{ringpath:[r,m,Ma,Ua,t,N]},
za,fa,ab);v.attr({"stroke-width":X.borderWidth,stroke:X.borderColor,fill:G||$a&&k?this.singleFillColor(X.color):P(X.color),"stroke-dasharray":X.dashStyle,redrawDataLabels:Pa,cursor:D?"pointer":"",transform:B.sliced?B.slicedTranslation:""}).show().shadow(p&&X.shadow,O).tooltip(A).data("plotItem",B).data("eventArgs",z);Qa.plotItem=B;Qa.eventArgs=z;Sa&&Sa.data("plotItem",B).data("eventArgs",z)}za?$a&&n.placeDataLabels(!1,C,l):(ya(),c())},remove:function(){var a=this.components.removeDataArr||[],b=this.pool=
this.pool={},f=a.length,g=this.config,k,e=g.pieCenter,d,c=e[0],e=e[1],l=this.hideElements,n=g.pieMinRadius,m=.5*(g.innerSize||0),p,g=g.startAngle-u;p=this.chart.get("config","animationObj");var q=p.duration||0,r=p.dummyObj,C=p.animObj,t=p.animType;for(p=0;p<f;p++){k=a[0];k=k.graphics;for(d in k)k[d].data("plotItem"),k[d].animateWith(r,C,{ringpath:[c,e,n,m,g,g+.01]},q,t,l),b[d]||(b[d]=[]),b[d].push(k[d].hide());a.splice(0,1)}},legendInteractivity:function(a,b){a.chart._plotGraphicClick.call(a.components.data[b.configuration.index].graphics.element)},
init:function(a){var b=this.chart;if(!a)return!1;this.JSONData=a;this.chartGraphics=b.chartGraphics;this.components={};this.graphics={};this.visible=1===r(this.JSONData.visible,!Number(this.JSONData.initiallyhidden),1);this.configure()},_getInnerSize:function(){var a,b=this.config,f=this.chart.jsonData.chart;a=r(f.doughnutradius,0);var f=r(f.use3dlighting,1)?r(f.radius3d,f["3dradius"],50):100,g,k,e;g=b.pieMinRadius;100<f&&(f=100);0>f&&(f=0);a=0>=a||a>=g?g/2:a;b.innerRadius=a;if(0<f&&t&&(b=parseInt(a/
g*100,10),g=(100-b)/2,f=parseInt(g*f/100,10),f=b+","+f+","+2*(g-f)+","+f,this&&(e=this.components.data)))for(b=0,g=e.length;b<g;b+=1)k=e[b],k=k.config,k.color&&(k.color.ratio=f,k.hoverEffects&&k.hoverEffects.color&&(k.hoverEffects.color.ratio=f));return 2*a},getEventArgs:function(a){a=a.configuration.index;var b=this.components.data[a].config||{};return{datasetName:b.seriesName,datasetIndex:a,id:b.userID,visible:b.isVisible,label:b.seriesName,value:b.value,percentValue:b.pValue,tooltext:b.toolText,
link:b.link,sliced:b.sliced}}},"area"])}]);N.register("module",["private","modules.renderer.js-dataset-pie3d",function(){var b=this.hcLib,z=b.BLANKSTRING,G=b.ZEROSTRING,v=b.pluck,F=b.toRaphaelColor,E=b.getFirstAlpha,t=b.preDefStr.elementStr,a=Math,Q=a.sin,r=a.cos,P=2*a.PI,T=b.getFirstColor,L=b.graphics.getLightColor;N.register("component",["dataset","Pie3D",{type:"pie3d",_parsePie3DOptions:function(){var a=this.config;return{size:2*a.pieMinRadius,slicedOffset:a.slicingDistance,allowPointSelect:!0,
cursor:"pointer",innerSize:"pie3d"===this.type?0:this._getInnerSize()}},_parseBorderConfig:function(a,b,m){var p=this.chart.jsonData.chart,q=v(m.bordercolor,this.config.pieBorderColor);m=v(m.borderalpha,p.plotborderalpha,p.pieborderalpha);q=v(q,L(a,90)).split(",")[0];m=p.showplotborder==G?G:v(m,b,"80");return{setPlotBorderColor:q,setPlotBorderAlpha:m}},_setHoverColor:function(a,b,m){a.color=b;a.alpha=m},draw:function(){var a,b,m=this.pool||(this.pool={}),p=this.components,q=this.config,t=this.chart,
n=t.get("config","animationObj"),k=n.duration||0,g=n.dummyObj,f=n.animObj,v=n.animType,C=t.config;a=t.graphics;var E=p.data,n=q.dataLabelOptions,G=n.style,u=t.components.paper,L=C.tooltip||{},L=L&&!1!==L.enabled,O=q.slicingDistance,W=q.slicedOffsetY||(q.slicedOffsetY=O*q.pieYScale),H=t._plotDragMove,w=t._plotDragStart,K=t._plotDragEnd,h=t._plotRollOver,N=t._plotRollOut,e=!!q.enableRotation,d=q.showBorderEffect,c=E.length,l=q.usePerPointLabelColor,M=C.textDirection,J,T,Ka,va,ka,ca,U,la,Ga,xa,aa,Z,
ja;b=p.removeDataArr||[];var ma;aa=this.visible;var oa,Aa,ga=!1,wa=this.graphics.dataLabelContainer,ia=(q.startAngle||0)%P,ua,Ca,da,qa=ia-P,ba=q.animateClockWise,na,pa,La,ea=a.datasetGroup;oa=C.alphaanimation;var za=function(){wa.show();t.placeDataLabels(!1)},ha=function(){ga||(ga=!0,ea.animateWith(g,f,{opacity:1},k,v,za))};pa=function(){var a,b;if(!ga)for(ha(),a=0;a<c;a+=1)b=E[a],b.graphics.element&&b.graphics.element.attr({fill:F(b.config.color)})};C=C.dataLabelStyle;wa?(da=!0,k&&(la=k,ua=pa)):
(wa=this.graphics.dataLabelContainer=u.group("datalabel",a.datalabelsGroup).trackTooltip(!0),k&&(ua=ha,la=k,wa.hide(),oa&&ea.attr({opacity:0})));wa.css(C);aa||wa.hide();b.length&&this.remove();t._preDrawCalculate();a=q.center;b=q.pieYScale;E&&c||(E=[]);for(oa=-1;++oa<c;)if(G=E[oa],aa=G.config,(pa=aa._textAttrs)||(pa=aa._textAttrs={}),Z=G.graphics,J=aa.y,T=aa.displayValue,va=aa.sliced,Ga=aa.shapeArgs,ca=aa.centerAngle,xa=aa.toolText,Ka=!!aa.link,G=aa.style,ka=Ka||e||!aa.doNotSlice,null!==J&&void 0!==
J){na=Z.element;ja=Z.label;ma=Z.connector;if(!na){na=Z.element=p.Pie3DManager.useSliceFromPool();if(da){if(oa<c)for(Ca=void 0,Aa=oa+1;Aa<c&&void 0===Ca;Aa+=1)Ca=E[Aa].config.shapeArgs.end;void 0===Ca&&(Ca=ia)}else Ca=ba?ia:qa;na||(na=Z.element=p.Pie3DManager.createSlice().drag(H,w,K).mouseover(h).mouseout(N).attr({ishot:ka}));na.attr({start:-Ca,end:-Ca,cx:a[0],cy:a[1],r:a[2],innerR:a[3],radiusYFactor:b})}void 0!==T?(G?((La=aa._textCss)||(La=aa._textCss={}),La.fontFamily=G.fontFamily,La.fontSize=G.fontSize,
La.lineHeight=G.lineHeight,La.fontWeight=G.fontWeight,La.fontStyle=G.fontStyle):aa._textCss&&(ja&&ja.removeCSS(),delete aa._textCss,La=void 0),aa.style=G||(G=C),pa.text=T,pa.fill=(l?F(aa.color):G.color)||"#000000",pa["text-bound"]=[G.backgroundColor,G.borderColor,G.borderThickness,G.borderPadding,G.borderRadius,G.borderDash],pa.direction=M,pa.lineHeight=G.lineHeight,ja?(La&&(ja.css(La),delete La.fontFamily,delete La.fontSize,delete La.lineHeight,delete La.fontWeight,delete La.fontStyle,La=void 0),
delete pa.ishot):m&&m.graphics&&m.graphics.label&&m.graphics.label.length?ja=Z.label=m.graphics.label.splice(0,1):pa.ishot=ka,0<n.distance&&(U=n.connectorWidth)&&n.enableSmartLabels?(ma||(ma=m&&m.graphics&&m.graphics.connector&&m.graphics.connector.length?Z.connector=m.graphics.connector.splice(0,1):Z.connector=u.path("M 0 0 l 0 0",wa).attr({visibility:"hidden",ishot:ka}).drag(H,w,K).hover(h,N)),ma.attr({"stroke-width":U,stroke:n.connectorColor||"#606060",cursor:Ka?"pointer":""}).show()):ma&&ma.hide()):
(ja&&ja.hide(),ma&&ma.hide());J={chart:t,index:oa,seriesData:q,value:J,angle:aa.angle=ca,link:aa.link,shapeArgs:Ga,slicedX:va&&!q.singletonCase?r(ca)*O:0,slicedY:va&&!q.singletonCase?Q(ca)*W:0,sliced:va,labelText:T,name:aa.name,percentage:aa.percentage,toolText:xa,originalIndex:c-oa-1,style:aa.style,graphic:na,transX:aa.transX=r(ca)*O,transY:aa.transY=Q(ca)*W,slicedTranslation:aa.slicedTranslation="t"+aa.transX+","+aa.transY,label:ja,connector:ma};G={index:q.reversePlotOrder?oa:c-1-oa,link:aa.link,
value:aa.y,displayValue:aa.displayValueArgs,categoryLabel:aa.categoryLabel,isSliced:aa.sliced,toolText:aa.toolText};na.attr({transform:"t"+J.slicedX+","+J.slicedY,cursor:Ka?"pointer":"",color:aa.color.color.split(",")[0],alpha:aa._3dAlpha,borderWidth:aa.borderWidth,borderColor:aa.borderColor,showBorderEffect:d}).animateWith(g,f,{start:Ga.start,end:Ga.end,r:a[2],innerR:a[3],cx:a[0],cy:a[1],radiusYFactor:b},la,v,ua).tooltip(L?xa:z).data("groupId",oa).data("plotItem",J).data("eventArgs",G);pa.plotItem=
J;pa.eventArgs=G;ma&&ma.data("plotItem",J).data("eventArgs",G)}!k&&za()},hideFn:function(a,b,m){var p=m&&m.components||{};return function(){b===t?(p.Pie3DManager.removeSlice(a.element),delete a.element):a[b].hide()}},remove:function(){var a=this.chart,b=this.config,m=this.components.removeDataArr||[],p=this.pool=this.pool=[],q=m.length,r,n,k,g,f=this.hideFn,b=b.startAngle;k=a.get("config","animationObj");var a=k.duration||0,v=k.dummyObj,C=k.animObj,z=k.animType;for(k=0;k<q;k++){r=m[0];r=r.graphics;
for(n in r)g=r[n],p[n]||(p[n]=[]),n===t?g.animateWith(v,C,{start:-b,end:-b+.01},a,z,f(r,n,this)):p[n].push(g.hide());m.splice(0,1)}},foldingFn:function(){var a=this.config.startAngle;return{start:-a,end:-a+.01}},_getPointColor:function(a,b){a=T(a);b=E(b);return{color:a+","+a,alpha:b+","+b,ratio:"0,100"}}},"pie2D",{setBorderWidth:void 0,showBorderEffect:void 0}])}]);N.register("module",["private","modules.renderer.js-dataset-doughnut2d",function(){var b=this.hcLib,z=b.hasSVG,G=b.toRaphaelColor,v=b.graphics.getDarkColor,
F=b.getFirstAlpha,E=Math.floor,t=b.getFirstColor,a=b.graphics.getLightColor;N.register("component",["dataset","Doughnut2D",{type:"doughnut2d",_getPointColor:function(b,r,G){var N;b=t(b);r=F(r);100>G&&z?(N=v(b,E(100*(85-.2*(100-G)))/100),b=a(b,E(100*(100-.5*G))/100),r={color:N+","+b+","+b+","+N,alpha:r+","+r+","+r+","+r,radialGradient:!0,gradientUnits:"userSpaceOnUse",r:G}):r={color:b+","+b,alpha:r+","+r,ratio:"0,100"};return r},_parsePiePlotOptions:function(){var a=this.__base__._parsePiePlotOptions.call(this);
a.innerSize=this._getInnerSize();return a},draw:function(){var a=this.chart,b=a.config,t=this.config,v=b.canvasLeft+.5*b.canvasWidth,b=b.canvasTop+.5*b.canvasHeight,z,D=t.centerLabelConfig,B=D.label;z=.5*((t.innerSize=this._getInnerSize())||0);this.__base__.draw.call(this);B&&z&&a.drawDoughnutCenterLabel(B,v,b,2*z,2*z,D,!0);t.lastCenterLabelConfig=D},singleFillColor:function(a){return G({color:t(a.color,1),alpha:F(a.alpha,1)})}},"Pie2D"])}]);N.register("module",["private","modules.renderer.js-dataset-doughnut3D",
function(){N.register("component",["dataset","Doughnut3D",{type:"doughnut3d"},"Pie3D"])}]);N.register("module",["private","modules.renderer.js-dataset-marimekko",function(){var b=this.hcLib,z="VML"===b.Raphael.type,G=b.pluck,v=b.pluckNumber,F=b.toRaphaelColor,E=b.getFirstValue,t=b.regex.dropHypeash,a=b.HASHSTRING,Q=b.preDefStr,r=Q.showHoverEffectStr,P=Q.setRolloverAttrStr,T=Q.setRolloutAttrStr,Q=Math,L=Q.round,D=Q.min,B=Q.abs,m=b.graphics.getLightColor,p=b.schedular;N.register("component",["dataset",
"marimekko",{type:"marimekko",configure:function(){b.each(this.JSONData.data,function(a){a&&(a.value=B(a.value))});this.__base__.configure.call(this)},_addLegend:function(){var b=this.chart,p=b.jsonData.chart,n,k;k=this.config;var b=b.components.legend,g=k.legendSymbolColor;n=v(p.us3dlighting,p.useplotgradientcolor,1);p=m(g,60).replace(t,a);n?(n=m(g,40),n={FCcolor:{color:g+","+g+","+n+","+g+","+g,ratio:"0,70,30",angle:270,alpha:"100,100,100,100,100"}}):n={FCcolor:{color:g,angle:0,ratio:"0",alpha:"100"}};
k={enabled:k.includeInLegend,type:this.type,fillColor:F(n),strokeColor:F(p),rawFillColor:g,label:E(this.JSONData.seriesname)};this.legendItemId=b.addItems(this,this.legendInteractivity,k)},searchIndex:function(a,b){for(var n=this.chart.components.xAxis[0],k=0,g=b.length-1,f,m;k<=g;)if(f=Math.round((k+g)/2)||0,m=n.getAxisPosition(b[f].x)+b[f].columnWidth/2,m<a)k=f+1;else if(m>a)g=f-1;else return f;return k},_getHoveredPlot:function(a,b){var n=this.groupManager,k=n.stackConf,g=this.chart.config,n=n.config,
f=g.plotborderthickness,m=k.length-1,p,f=g.showplotborder?f:0,g=f/2,g=0===g%2?g+1:Math.round(g),k=p&&n.datasetIndex||this.searchIndex(a+g,k);n.datasetIndex||(n.datasetIndex=k);(p=this._checkPointerOverColumn(k,a,b))?delete n.datasetIndex:this.index===m&&delete n.datasetIndex;return p},draw:function(){var a=this,m=a.JSONData,n=a.chart,k=n.jsonData.chart,g=n.config,f=n.getJobList(),t=a.config,C=a.groupManager,E=a.index,R,u,Q=a.visible,O=n.components;u=O.canvas.config.clip;var W=O.paper,O=O.xAxis[0],
H=O.getCategoryLen(),w=a.yAxis,K=n.graphics.datasetGroup,h=n.config.isstacked,N,e,d,c=b.parseUnsafeString,l=b.getValidValue,M=b.Raphael,J=g.showtooltip,Ea=n.get("config","animationObj"),Ka=Ea.duration,va=Ea.dummyObj,ka=Ea.animObj,Ea=Ea.animType,ca=O.getAxisPosition(0),U=O.getAxisPosition(1),la=t.groupMaxWidth=U-ca,ca=C.stackSumValue[a.positionIndex],U=g.maxcolwidth,U=(1-.01*t.definedgrouppadding)*la||D(1*la,1*U),Ga,xa,aa,Z=a.components,ja=Z.data,ma,oa,Aa,ga,wa,ia=a.drawn,ua=Z.removeDataArr,ua=ua&&
ua.length,Ca=(Z=Z.addDataArr)&&Z.length,da,Z=w.getAxisBase(),qa=w.yBasePos=w.getAxisPosition(Z),ba,na=0,t=t.showshadow,pa=g.plotborderthickness,La=g.useroundedges,ea=a.graphics,za=ea.container,ha=ea.dataLabelContainer,sa=ea.shadowContainer,ea=ea.pool,fa=1,ya=O.getAxisPosition(H-1)+0,Ia=O.getAxisPosition(0)+0,Fa=!0,Ba=a.startPosition,Ja=C.stackConf,Ha=g.showplotborder,Da=function(){!1!==a.visible||!1!==a._conatinerHidden&&void 0!==a._conatinerHidden||(za.hide(),sa.hide(),ha&&ha.hide(),a._conatinerHidden=
!0)},Ma=function(){Fa&&Da();this.show()},Na=function(){return Ba?function(a,b){a.x=Ia-la*(Ca-b);a.y=e;a.height=xa}:!1===Ba?function(a){a.x=ya+la*fa++;a.y=e;a.height=xa}:function(a){a.width=0}},Oa=n.components.canvas.config;wa=Oa.oriCanvasBorderThickness;var Oa=0<Oa.canvasBorderWidth,Sa=g.canvasRight,Ua=g.canvasTop,g=g.canvasLeft;ia&&(Na=Na());za||(za=a.graphics.container=W.group("columns",K),Q||za.hide());sa||(sa=a.graphics.shadowContainer=W.group("shadow",K).toBack(),Q||sa.hide());u=u["clip-canvas"];
Oa||(u[3]+=wa/2,z&&(u[2]+=2*wa));ia?(za.animateWith(va,ka,{"clip-rect":u},Ka,Ea),sa.animateWith(va,ka,{"clip-rect":u},Ka,Ea)):(za.attr({"clip-rect":u}),sa.attr({"clip-rect":u}));for(u=0;u<H;u++)R=(wa=(K=ja[u])&&K.config)&&wa.setValue,void 0!==K&&null!==R&&(da=C.getDataSetPosition(a,u),Ga=v(da.columnWidth,U/1),Aa=da.height,oa=wa.setLink,da=wa.colorArr,K.graphics||(ja[u].graphics={}),ga=wa.displayValue,ba=wa.previousPositiveY,ma=l(c(G(wa.origToolText,m.plottooltext,k.plottooltext))),h&&(ba=a._parseValues(u,
ba,ca[u],ma),R=wa.value),N=Ja[u].x,aa=w.getAxisPosition(ba||Z),N=O.getAxisPosition(N)-Ga/2,0!==Aa?(e=w.getAxisPosition(R+(ba||0)),xa=B(aa-e)):(xa=0,e=aa),e=D(e,aa),parseInt(e)<=Ua&&(xa-=Ua-e-+Oa,e=Ua-+Oa),1>=pa&&(L(N)<=g&&(Ga+=N,N=g-pa/2+ +!!pa-+Oa,Ga-=N),L(N+Ga)>=Sa&&(Ga=Sa-N+pa/2-+!!pa+ +Oa)),C.isCrisp&&(d=M.crispBound(N,e,Ga,xa,pa),N=d.x,e=d.y,Ga=d.width,xa=d.height),ba=K.trackerConfig||(K.trackerConfig={}),(aa=!1!==wa.toolText&&wa.toolText+(ma?"":wa.toolTipValue))&&(wa.finalTooltext=aa),ma=wa.plotBorderDashStyle,
Aa=ba.eventArgs||(ba.eventArgs={}),Aa.index=u,Aa.link=oa,Aa.value=R,Aa.displayValue=ga,Aa.categoryLabel=wa.label,Aa.toolText=aa,Aa.id="",Aa.datasetIndex=E||0,Aa.datasetName=m.seriesname,Aa.visible=Q,Ka||(qa=e,na=xa),R={x:N,y:qa,width:Ga,height:na||1,r:La,ishot:!J,fill:F(da[0]),stroke:F(da[1]),"stroke-width":Ha?pa:0,"stroke-dasharray":ma,"stroke-linejoin":"miter",visibility:Q},K._xPos=N,K._yPos=e,K._height=xa,K._width=Ga,K._index=u,!K.graphics.element&&ia&&(Na(R,u),ea&&ea[0].graphics.element?(oa=ea[0].graphics.element,
oa.attr(R)):oa=K.graphics.element=W.rect(R,za),ea&&ea[0].graphics.hotElement&&(K.graphics.hotElement=ea[0].graphics.hotElement),ea&&ea.splice(0,1)),K.graphics.element?(R={x:N,y:e,width:Ga,height:xa||1},Ka?oa=K.graphics.element.animateWith(va,ka,R,Ka,Ea,Ma):(oa=K.graphics.element.attr(R),Fa&&Da())):(oa=K.graphics.element=W.rect(R,za),Ka&&(oa.animateWith(va,ka,{y:e,height:xa||1},Ka,Ea),Fa=!1)),oa.attr({r:La,ishot:!J,fill:F(da[0]),stroke:F(da[1]),"stroke-width":Ha?pa:0,"stroke-dasharray":ma,"stroke-linejoin":"miter"}).shadow({opacity:t},
sa).data("BBox",d),n.config.enablemousetracking&&oa.data("eventArgs",ba.eventArgs).data(r,!0).data(P,wa.setRolloverAttr||{}).data(T,wa.setRolloutAttr||{}));a.drawn?a.drawLabel():f.labelDrawID.push(p.addJob(a.drawLabel,a,[],b.priorityList.label));a.drawn=!0;ua&&a.remove()},getDataLimits:function(){var a=this.conf;return{max:a.yMax,min:a.yMin,xMax:100,xMin:0}}},"column"])}]);N.register("module",["private","modules.renderer.js-dataset-group-column",function(){var b=this.window,z=this.hcLib,G=z.pluck,
v=z.pluckNumber,F=z.plotEventHandler,E=z.hashify,t=z.preDefStr,a=t.visibleStr,Q=t.customTooltipStr1='<span style="color :',r=t.customTooltipStr2='; font-size : 12px">&#9632 </span>',P=t.customTooltipStr3=' <span style="color :',T=t.closeSpan="</span> ",L=t.closeTag='">',D=t.breakLineStr="</br>",t=Math,B=t.min,m=t.max,p=t.abs,q=t.ceil,A=z.toolTip;N.register("component",["datasetGroup","Column",{init:function(){this.positionStackArr=[];this.stackSumValue=[];this.stackConfig=[];this.drawSumValueFlag=
!0},addDataSet:function(a,b,g){var f=this.positionStackArr[b];a.groupManager=this;a.positionIndex=b;a.stackIndex=g;f||(f=this.positionStackArr[b]=[]);f[g]={dataSet:a}},removeDataSet:function(a,b,g){var f=this.positionStackArr[a];f&&f[b]&&f.splice(b,g);0===f.length&&this.positionStackArr.splice(a,1)},_decideSkipping:function(a,b,g){a=a&&a.length;b=q(g/b);b=a/b;return 1<b?q(b):!1},_decidePlotableData:function(a,b,g,f){var m=this.stackSumValue&&this.stackSumValue[0],p,r,t,u,B=this.chart.config,A,v,z=
(a&&a.length)-b,w,D,h=q(1/B.binSize*B.labelBinSize),E,e;this.lastPlot||(this.lastPlot={positvePlot:[],negativePlot:[]});for(w=r=p=t=0;t<z&&g;t+=b,p++,r++){D=w%h;w++;for(u=t+b;u>=t+1;u--)v=a[u].config,A=m&&m[u]||v.setValue,B.labelBinSize&&(v.labelSkip=!0),v.isSkipped=!0,0<=A?(this.lastPlot.positvePlot[p]||(this.lastPlot.positvePlot[p]=A,0===D&&delete v.labelSkip,E=u,delete v.isSkipped),this.lastPlot.positvePlot[p]<A&&(this.lastPlot.positvePlot[p]=A,E=u,delete v.isSkipped)):(this.lastPlot.negativePlot[r]||
(this.lastPlot.negativePlot[r]=A,0===D&&delete v.labelSkip,e=u,delete v.isSkipped),this.lastPlot.negativePlot[r]>A&&(this.lastPlot.negativePlot[r]=A,e=u,delete v.isSkipped));0===D&&(a[E]&&delete a[E].config.labelSkip,a[e]&&delete a[e].config.labelSkip)}f&&delete this.lastPlot},skipOverlapPlot:function(){var a=this.positionStackArr,b,g,f,m,p,q;b=this.chart;var r=this.config,u=b.config,t=u.canvasWidth,B=u.canvasHeight,v=u.binSize,A,w,D=b.isBar;for(b=a.length-1;0<=b;b--)for(f=a[b],m=f.length,g=0;g<m;g++)p=
f[g].dataSet,A=p.visible,q=p.components,q=q.data,(w=this._decideSkipping(q,v,D?B:t))||(p.config.isSkippedData=!1),(p.config.plotsPerBin=w)&&this._decidePlotableData(q,w,A,!b);r.skipZeroPlots=u.skipZeroPlots&&3>r.groupNetWidth},draw:function(){var a=this.positionStackArr,b=a.length,g,f,m,p,q=this.chart,r=q.config;g=r.viewPortConfig.scaleX||1;f=q.graphics.columnGroup;p=q.graphics;m=q.components.canvas.config.clip["clip-canvas"].slice(0);p=p.datalabelsGroup;var u=q.get("config","animationObj"),q=u.animType,
t=u.animObj,B=u.dummyObj,v=m[2],u=u.duration;m[2]*=g;f.attrs["clip-rect"]||f.attr({"clip-rect":m});p.attrs["clip-rect"]||p.attr({"clip-rect":[m[0],0,v,m[3]+m[1]]});f.animateWith(B,t,{"clip-rect":m},u,q);p.animateWith(B,t,{"clip-rect":[m[0],0,v,m[3]+m[1]]},u,q);this.preDrawCalculate();this.drawSumValueFlag=!0;for(g=0;g<b;g++)for(f=a[g],m=f.length,this.manageClip=!0,f=0;f<m;f++)p=a[g][f].dataSet,p.draw();r.drawTrendRegion&&this.drawTrendRegion()},_moveTrendRegion:function(a,b,g){var f=this.chart,m=
f.isBar,p=f.graphics.trendRegion.columnTrendRegion,q=f.config.plotcolorintooltip,t=f.config.rolloverbandanimationduration,u=f.config.rolloverbandanimation?t:0,t=this.config,B=f.components.xAxis[0].getAxisPosition(a),v=f.components.dataset,A=v.length,H=v[0].components.data.length,w=t.prevIndexHovered;g=void 0===g?!0:g;var K,h,L,e,d,c=t.toolText||(t.toolText=""),l=z.toolTip;b=b&&b.originalEvent;var M,J;if(!(0>a||a>=H)){if(t.customHighlightFlag&&!t.groupHighlightFlag||w!==a){c="";for(K=0;K<A;K++)L=v[K],
h=L.components.data,H=h[a],e=h[w],d=H&&H.config,h=L.graphics.sharedAnchor,M=e&&e.config.setValue,J=H&&H.config.setValue,g&&e&&(e.graphics&&e.graphics.element||h&&h.element)&&(M||0===M)&&L._rolloutResponseSetter(f,e,b,!0),H&&(J||0===J)&&(H.graphics&&H.graphics.element||h&&h.element)&&L.visible&&(void 0!==a&&(g&&L._rolloverResponseSetter(f,H,b,!0),q?(e=d&&G(d.originalPlotColor,d.color),t.toolText=c+=Q+E(e)+r+H.config.finalTooltext+D):t.toolText=c+=H.config.finalTooltext+D),L.config.hidSharedAnchor||
void 0!==a||h&&h.element.hide());t.groupHighlightFlag=!0}c&&t.customHighlightFlag&&this._drawTooltip(a,void 0,b);w!==a&&(void 0===w&&(u=0),H=v[0].components.data,void 0!==a?(u?m?p.animate({transform:"t0,"+B},u):p.animate({transform:"t"+B+",0"},u):m?p.transform("t0,"+B):p.transform("t"+B+",0"),p.show(),g&&(m=void 0!==w&&H[w].config,void 0!==w&&F.call(p,f,b,"trendRegionRollOut",{index:w,categoryLabel:m.origLabel||m.label}),F.call(p,f,b,"trendRegionRollOver",{index:a,categoryLabel:H[a].config.origLabel||
H[a].config.label}))):(p.hide(),m=H[w].config,g&&F.call(p,f,b,"trendRegionRollOut",{index:w,categoryLabel:m.origLabel||m.label})),void 0!==a&&c||(t.toolText="",l.hide(f.chartInstance.id)),this.config.prevIndexHovered=a)}},_drawTooltip:function(a,k,g){var f=this.config,m=f.toolText,p=this.chart,q=p.isBar||0,t=p.components,u=t.dataset,B,v=t.paper,z=u.length,H,t=t.yAxis[0],w=p.linkedItems.container,F=this.sumValues[0],h=p.config,N=h.plotcolorintooltip,h=h.tooltipgrayoutcolor,e,d,c,l,M,J;if(void 0!==
k)for(m="",J=0;J<z;J++)B=u[J],H=B.components.data,d=(H=H[a])&&H.config,c=H.config.displayValue||0,e=d.color,e=d&&G(d.originalPlotColor,e),(c=void 0!==a&&c)&&B.visible&&(B=k===J?void 0:h,N?(c=k===J?e:h,f.toolText=m+=Q+E(c)+r+P+E(B)+L+H.config.finalTooltext+T+D):f.toolText=m+=P+E(B)+L+H.config.finalTooltext+T+D);g||(H=u[0].components.data[a],k=w.getBoundingClientRect(),f=b.document.documentElement,l=H._xPos+(q&&H._width)+k.left+(b.pageXOffset||f.scrollLeft)-f.clientLeft-A.pointeroffset,M=k.top+(b.pageYOffset||
f.scrollTop)-f.clientTop+(F?t.getPixel(F[a].positive):H._yPos)-A.pointeroffset);A.customDraw(m,v,g,l,M,p.chartInstance.id)},_notifyGroup:function(a,b){var g=this.chart,f=g.components.dataset,m=f.length,p,q,r,u,t=this.config;p=t.customHighlightFlag;var B=this.config.prevIndexHovered,v=b.originalEvent;!a&&(t.customHighlightFlag=!0);if(a&&p){for(p=0;p<m;p++)u=f[p],q=(r=u.components.data[B])&&r.config.setValue,r&&(q||0===q)&&(r.graphics||u.graphics.sharedAnchor)&&u._rolloutResponseSetter(g,r,v,!0);t.customHighlightFlag=
!1;t.groupHighlightFlag=!1}},_getHoveredRegion:function(a,b,g){var f=this.chart,m=f.config,p=f.components.xAxis[0],q=f.components.canvas.config,r=Math.max(q.canvasPaddingLeft,q.canvasPadding),q=m.canvasLeft,u=m.canvasRight,t=m.canvasTop,m=m.canvasBottom,f=p.getValue(f.isBar?b-t-r:a-q-r),f=Math.round(f);0>f||f>=p.getCategoryLen()||a<=q||a>=u||b<=t||b>=m?this._moveTrendRegion(void 0,g):this._moveTrendRegion(f,g)},drawTrendRegion:function(){var a=this.chart,b=a.isBar,g=a.config,f=a.graphics,m=f.trendRegion||
(f.trendRegion={}),p=m.columnTrendRegion,f=f.columnTrendGroup,q=g.trendRegionColor,r=g.trendRegionStroke,a=a.components.paper,u=this.stackConfig[0].xPosOffset,t=this.config.groupNetWidth,B=this.config.groupMaxWidth||(this.config.groupMaxWidth=1),b="M"+(b?g.canvasLeft:0)+", "+(b?0:g.canvasTop)+", "+(b?"H"+(g.canvasWidth+g.canvasLeft):"V"+(g.canvasHeight+g.canvasTop));this.config.trendRegionOffset=u-(B-t)/2;b={path:b,fill:q,stroke:r,"stroke-width":B,"stroke-linecap":"butt"};p?p.attr(b):(p=m.columnTrendRegion=
a.path(b,f),p.hide())},getDataSetPosition:function(a){var b=this.numVisiblePositions,g=this.stackConfig[a.positionIndex||0];a=a.visible;var f;if(g){if(!a&&g.visible||0===b)f=0;return{xPosOffset:g.xPosOffset,columnWidth:g.columnWidth,height:f}}},preDrawCalculate:function(){var a=this.chart,b=a.config.transposeAxis,g=this.stackConfig,f=this.stackSumValue,q=this.positionStackArr,r=this.sumValues=[],t=this.dataLimits=[],A=!1,u=a.config.isstacked,D=q.length,z,E,H,w,G,h,F,e,d,c,l,L,J,P,Q,N,T,ca=a.isBar,
U=a.jsonData.chart,la=a.components.xAxis[0],Ga=v(ca?U.overlapbars:U.overlapcolumns,a.is3D?0:1),xa=la.getAxisPosition(0),aa=la.getAxisPosition(1),Z=p(aa-xa),ja=m(v(U.plotspacepercent),0),ma=v(U.plotpaddingpercent),xa=m(v(U.plotspacepercent,20)%100,0),oa=this.config.groupPadding=xa/200,Aa,aa=!0,ga,wa,ia;for(F=this.numVisiblePositions=0;F<D;F++){e=q[F].length;N=g[F]||(g[F]={});N.visible=!1;N.previousVisibleCount=this.numVisiblePositions;wa=[];for(T=0;T<e;T++)if(ia=Infinity,w=q[F][T],ga=w.dataSet.yAxis,
w&&!1!==w.dataSet.visible&&(N.visible=!0),u){h=q[F][T+1];d=T;for(A=!1;0<=d&&!A;)A=(z=q[F][--d])&&z.dataSet.visible;G=w&&w.dataSet.components.data;Q=h&&h.dataSet.components.data;c=w.dataSet.components.data;l=z&&z.dataSet.components.data;c||(c=w.dataSet.components.data=[]);L=G&&G.length;for(h=0;h<L;h++){(J=c[h])||(J=c[h]={config:{}});P=l&&l[h];if(!P)for(;0<=d&&!P;)if(A=(z=q[F][--d])&&z.dataSet.visible)P=(l=z&&z.dataSet.components.data)&&l[h];J=J.config;J.value=A=ga.getCleanValue(G[h].config.setValue);
H=(P=P&&P.config)&&P.value;!wa[h]&&(wa[h]=(H||0===H)&&!0);E=(P&&P.previousPositiveY||0)+(P&&(0<H?H:0)||0);H=(P&&P.previousNegativeY||0)+(P&&(0>H?H:0)||0);J.previousPositiveY=E;J.previousNegativeY=H;ia=B(ia,(H||E)+J.setValue);Q&&Q[h]&&Q[h].config.setValue||(f[F]||(f[F]=[],f[F].parentYAxis=w.dataSet.config.parentYAxis),f[F][h]=E+(w.dataSet.visible&&p(A))+p(H),!f[F][h]&&(f[F][h]=1),r&&(r[F]||(r[F]=[]),r[F][h]=r[F][h]||{},null!==A&&(J=w.dataSet.visible,r[F][h].visible=wa[h]||J&&!0,r[F][h].positive=E+
(0<=A?J&&A:0),r[F][h].negative=H+(0>A?J&&A:0))))}h=q[F][T+1];d=T;if(!b)for(z=q[F][T-1],G=w&&w.dataSet.components.data,Q=h&&h.dataSet.components.data,c=w.dataSet.components.data,l=z&&z.dataSet.components.data,L=G&&G.length,h=0;h<L;h++){J=c[h];P=l&&l[h];if(!P)for(;0<=d&&!P;)P=(l=(z=q[F][--d])&&z.dataSet.components.data)&&l[h];J=J.config;J.value=A=ga.getCleanValue(G[h].config.setValue);P=P&&P.config;ia=B(ia,(H||E)+J.setValue);Aa=(P&&P.previousPositiveDataLimit||0)+(P&&(0<P.value?P.value:0)||0);P=(P&&
P.previousNegativeDataLimit||0)+(P&&(0>P.value?P.value:0)||0);J.previousPositiveDataLimit=Aa;J.previousNegativeDataLimit=P;Q&&Q[h]&&Q[h].config.setValue||!t||(t[F]||(t[F]=[],t[F].parentYAxis=w.dataSet.config.parentYAxis),t[F][h]=t[F][h]||{},null!==A&&(t[F][h].positive=Aa+(0<=A?A:0),t[F][h].negative=P+(0>A?A:0)))}ia&&(w.dataSet.config.minValue=ia)}N.visible&&(this.numVisiblePositions+=1)}b&&(this.dataLimits=this.sumValues);b=this.numVisiblePositions;F=p(v(ca?U.maxbarheight:U.maxcolwidth,a.maxColWidth||
50));a=this.config.groupNetWidth=(1-.01*ja)*Z||B(Z*(1-2*oa),F*(b||1));ca=a/2;U=0===b?a:a/b;Ga=B(U-1,1<b?Ga||void 0!==ma?0<ma?U*ma/100:0:4:0);for(F=0;F<D;F++)g=this.stackConfig[F],ma=g.previousVisibleCount,g.xPosOffset=ma*U-ca+Ga/2,U-=Ga,g.columnWidth=g.visible||0===b?U:0,U+=Ga;D=la.getAxisPosition(0)-ca;4>la.getAxisPosition(1)-ca-(D+a)&&(aa=!1);"0"==xa&&(aa=!0);this.isCrisp=aa},getMaxSumValueSpace:function(){var a=this.stackSumValue,b=this.chart,g={},f=a.length,p=b.components.numberFormatter,q,r=
0,t=0,u,B,A,v=b.linkedItems.smartLabel;u=b.config.dataLabelStyle;v.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);v.setStyle(u);for(b=0;b<f;b++)for(u=a[b],A=u.length,B=0;B<A;B++)g=u[B],g=p.dataLabels(g),g=v.getOriSize(g),q=g.width,g=g.height,t=m(t,q),r=m(r,g);return{maxWidth:t,maxHeight:r}},drawSumValue:function(){var b=this.chart,k=b.components,g=k.paper,f=this.positionStackArr,m=this.stackConfig,q=b.linkedItems.smartLabel,r,t=b.config.rotatevalues?270:0,k=k.xAxis[0],u,B=b.config.isstacked,
A,z=b.config.dataLabelStyle,D,w,E,h,F,e,d,c,l,G,J=this.sumValuesDrawn,L,P,Q,N,T=k.getPVR(),U,la=this.pool,Ga=!1,xa=!1,aa=b.get("config","animationObj"),Z=aa.duration,ja=aa.dummyObj,ma=aa.animObj,aa=aa.animType,oa=b.config.stack100percent,Aa;E=v(b.jsonData.chart.showsum,b.showsum,0);var ga=1,wa=!1,ia=this.sumValues,ua=b.config.canvasTop,Ca=b.components.canvas.config.clip["clip-canvas"].slice(0),da,qa=b.graphics.sumLabelsLayer;Ca[1]=0;Ca[3]+=ua;this.drawSumValueFlag=!1;if(B)if(E){qa.css(z);q.setStyle(z);
qa.show();!this.graphics&&(this.graphics={});r=this.graphics.sumLabels;B=this.graphics.sumLabelContainer;r||(r=this.graphics.sumLabels=[]);B||(B=this.graphics.sumLabelContainer=[]);wa=r.length;E=ia.length;if(wa>E)for(;E<wa;E++){ua=r[E].length;for(h=0;h<ua;h++)u=r[E][h]||{},(G=u.element)&&G.hide();(ua=B[E])&&ua.hide();r.pop();B.pop()}ua=f.length;for(E=0;E<ua;E++){(r=B[E])||(r=B[E]=this.graphics.sumLabelContainer[E]||g.group("sumlabels",qa));b.isRealTime&&r.attr({"clip-rect":Ca});h=f[E][0].dataSet;
u=h.yAxis;A=ia[E];e=k.getCategoryLen();F=this.graphics.sumLabels[E]=this.graphics.sumLabels[E]||[];l=0;m[E].visible||(xa=!0);Aa=m[E].xPosOffset;U=m[E].columnWidth;Q=k.getPixel(e-1)+Aa;L=h.addDataArr&&h.addDataArr.length;Ga=h.startPosition;P=this.removedSumLabels&&this.removedSumLabels[E]&&this.removedSumLabels[E].length;for(h=0;h<e;h++,l++)if(wa=!1,r.show(),d=A[h]||{},G=d.positive,c=d.negative,!F[l]&&(F[l]={}),void 0!==G||void 0!==c)if(w=G+c,w=u.dataLabels(w),N=p(c)>G?c:G,G=F[l].element,!d.visible)G&&
G.hide();else if(w||""===w)d=z.backgroundColor,c=z.borderColor,da=q.getOriSize(w),D=this.getSumValueConfig({xValue:h,columnWidth:U,sumValue:N,xPosOffset:Aa,stack100percent:oa,yAxis:u}),N=this.getSumValuePosition(da,{stack100percent:oa,rotateValues:t,xPos:D.xPos,yPos:D.yPos,sumValue:N}),D=N.x,w={text:w,fill:z.color,"text-bound":[d,c,z.borderThickness,z.borderPadding,z.borderRadius,z.borderDash],"line-height":z.lineHeight,visibility:a},N.transform=g.getSuggestiveRotation(t,D,N.y),G||(la&&la.sumLabels[E]&&
la.sumLabels[E][0]?(F[l].element=G=la.sumLabels[E][0],la.sumLabels[E].shift()):(w.x=D,w.y=N.y,w.transform=N.transform,N["text-anchor"]&&(w["text-anchor"]=N["text-anchor"]),F[l].element=G=g.text(w,r),wa=!0),J&&Z&&(d=Ga,d=!0===d?NaN-T*(L-E):!1===d?Q+T*ga++:D,G.attr({x:d,y:N.y,transform:g.getSuggestiveRotation(t,d,N.y)}))),wa||(G.show().animateWith(ja,ma,N,Z,aa),G.attr(w));P&&this.removeGraphics(E);xa&&(r.hide(),xa=!1)}}else qa.hide();this.sumValuesDrawn=!0},getSumValueConfig:function(a){var b=this.chart,
g=a.columnWidth,f=a.yAxis,m=b.config.viewPortConfig,p=m.x,q=m.scaleX,m=a.stack100percent,r=a.sumValue,u=a.xPosOffset;a=b.components.xAxis[0].getAxisPosition(a.xValue)+u+p*q;f=f.getAxisPosition(m?100:r);return{xPos:a+.5*g,yPos:f}},getSumValuePosition:function(a,b){var g=this.chart,f=g.config,m=f.canvasBottom,p=f.canvasTop,q=g.is3D,r=b.stack100percent,u=f.yDepth,f=f.xDepth,t=b.yPos,B,A=b.xPos,v=g.components.canvas.config.canvasBorderWidth,w=b.sumValue;B=g=b.rotateValues?a.width:a.height;B=B/2+2;r?t=
p<=g?B:p-B-v:(0<=w&&(p=t-p,t=p<g?t+B-p:t-B),0>w&&(t=m-t<g?t-B:t+B,q&&(A-=f,t+=u)));return{x:A,y:t}},removeGraphics:function(a){var b=this.removedSumLabels||[],g=this.positionStackArr[a][0].dataSet,f=g.endPosition,m=g.config.rotateValues,p=this.chart,g=(p.config.realTimeConfig||{}).clear,q=p.components.paper,r=b[a]&&b[a].length||0,u=p.components.xAxis[0],t=this.pool||(this.pool={sumLabels:[]}),B=u.getPVR(),A=p.get("config","animationObj"),v,p=function(){this.hide()},u=A.dummyObj,w=A.animObj,z=A.transposeAnimDuration,
h=A.animType,D;D=function(){return!1===f?function(a){var b=a.attr("x")-B*r;a=a.attr("y");return{x:b,transform:q.getSuggestiveRotation(m,b,a)}}:function(a){var b=a.attr("x")+B*r||0;a=a.attr("y");return{x:b,transform:q.getSuggestiveRotation(m,b,a)}}}();t.sumLabels||(t.sumLabels=[]);for(A=0;A<r;A++)v=b[a][0]&&b[a][0].element,b[a].splice(0,1),v&&(void 0===f||g?v&&v.hide().attr({"text-bound":[]}):z?v.animateWith(u,w,D(v),z,h,p):(v.stop(),v.hide()),t.sumLabels[a]||(t.sumLabels[a]=[]),t.sumLabels[a]=t.sumLabels[a].concat(v))},
removeSumLabels:function(a,b,g){var f=this.chart,m=(this.graphics||{}).sumLabels||[],p;if(m.length){this.removedSumLabels||(this.removedSumLabels=[]);this.removedSumLabels[g]||(this.removedSumLabels[g]=[]);if(!this.removedSumLabels[g].length||!f.config._sumValuesUpdated||f.config._dataUpdated){for(p=a;p<a+b;p++)m[g].push({});this.removedSumLabels[g]=this.removedSumLabels[g].concat(m[g].splice(a,b))}f.config._sumValuesUpdated=!0}},getDataLimits:function(){var a=this.chart,b=this.positionStackArr,g,
f,p,q,r,t=-Infinity,u=Infinity,A,v,z;g=a.config.isstacked;var a=a.config.transposeAxis,D=-Infinity,w=Infinity;p=r=Infinity;var E;this.preDrawCalculate();q=this.dataLimits;if(g){g=0;for(v=q.length;g<v;g++)for(A=q[g].length,E=q[g].parentYAxis,f=0;f<A;f++)z=q[g][f],void 0!==z.positive&&void 0!==z.negative&&(1===E?(t=m(t,z.positive),u=B(u,z.negative),p=B(p,t)):(D=m(D,z.positive),w=B(w,z.negative),r=B(r,D)));0===w&&(w=r);0===u&&(u=p)}q=b.length;for(g=0;g<q;g++)for(f=b[g],r=f.length,f=0;f<r;f++)p=b[g][f].dataSet,
!1===p.visible&&a||(p=p.config,1===p.parentYAxis?(t=m(t,p.maxValue),u=B(u,p.minValue)):(D=m(D,p.maxValue),w=B(w,p.minValue)));this.maxValue=D;this.minValue=w;return{max:D,min:w,sYMax:t,sYMin:u}},manageSpace:function(){var a=this.positionStackArr,b,g,f,p,q=a.length,r={paddingLeft:-Infinity,paddingRight:-Infinity};for(b=0;b<q;b++)for(f=a[b].length,p=0;p<f;p++)g=a[b][p].dataSet,g=g.manageSpace&&g.manageSpace()||{},r.paddingLeft=m(g.paddingLeft,r.paddingLeft),r.paddingRight=m(g.paddingRight,r.paddingRight);
return r}}])}]);N.register("module",["private","modules.renderer.js-dataset-group-realtimecolumn",function(){N.register("component",["datasetGroup","realtimecolumn",{},"Column"])}]);N.register("module",["private","modules.renderer.js-dataset-group-waterfall2d",function(){N.register("component",["datasetGroup","Waterfall2D",{},"column"])}]);N.register("module",["private","modules.renderer.js-dataset-group-column3d",function(){N.register("component",["datasetGroup","Column3d",{},"column"])}]);N.register("module",
["private","modules.renderer.js-dataset-group-bar2d",function(){var b=this.hcLib.preDefStr,z=b.POSITION_MIDDLE,G=b.POSITION_START;N.register("component",["datasetGroup","bar2d",{getSumValueConfig:function(b){var z=this.chart,E=b.columnWidth,t=b.yAxis,a=z.config.viewPortConfig,G=a.x,r=a.scaleX,a=b.stack100percent,P=b.sumValue,N=b.xPosOffset;b=z.components.xAxis[0].getAxisPosition(b.xValue)+N+G*r;t=t.getAxisPosition(a?100:P);return{xPos:t,yPos:b+.5*E}},getSumValuePosition:function(b,F){var E=this.chart,
t=E.config,a=t.canvasLeft,Q=t.canvasWidth,r=E.is3D,P=F.stack100percent,N=t.yDepth,t=t.xDepth,L,D={},B=F.sumValue,m=F.xPos,p=F.yPos,q=E.components.canvas.config.canvasBorderWidth,E=L=F.rotateValues?b.height:b.width,E=E/2+2;P?(m+=q,D["text-anchor"]=G):(0<=B?(a=a+Q-m,a<L?(m=m-E+a,r&&(m-=t,p+=N)):m+=E):(a=m-a,a<L?(m=m+E-a-(r?t:0),p+=r?N:0):(m-=E,r&&(m-=t,p+=N))),D["text-anchor"]=z);D.x=m;D.y=p;return D}},"column"])}]);N.register("module",["private","modules.renderer.js-dataset-group-bar3d",function(){N.register("component",
["datasetGroup","bar3d",{},"bar2d"])}]);N.register("module",["private","modules.renderer.js-dataset-group-scrollcolumn2d",function(){N.register("component",["datasetGroup","scrollcolumn2d",{},"column"])}]);N.register("module",["private","modules.renderer.js-dataset-group-area",function(){var b=this.hcLib.pluckNumber,z=Math.ceil;N.register("component",["datasetGroup","Area",{_decidePlotableData:function(b,v,F){var E=this.chart.config,t,a,Q,r,P,N,L,D,B,m,p=(b&&b.length)-v,q,A,n=z(1/E.binSize*E.labelBinSize);
for(q=a=t=Q=0;Q<p&&F;Q+=v,t++,a++){A=q%n;q++;L=D=B=m=void 0;for(r=Q+v;r>=Q+1;r--)N=b[r].config,P=N.setValue,N.isSkipped=!0,E.labelBinSize&&(N.labelSkip=!0),B?B<P&&(L=r,B=P):(L=r,B=P),m?m>P&&(D=r,m=P):(D=r,m=P);delete b[D].config.isSkipped;delete b[L].config.isSkipped;0===A&&(delete b[D].config.labelSkip,delete b[L].config.labelSkip)}},draw:function(){var z=this.chart,v=z.config,F=z.graphics,E=this.positionStackArr,t,a=E.length;t=F.areaGroup;var F=F.columnGroup,Q=z.components.paper,z=b(z.jsonData.chart.areaovercolumns,
1);t.area=t.area||Q.group("area",t);t.areaConnector=t.areaConnector||Q.group("area-connector",t);t.shadows||(t.shadows=Q.group("shadow",t).toBack());z?F&&t.insertAfter(F):t.toBack();this.preDrawCalculate();for(t=0;t<a;t++)for(z=E[t],z=z.length,F=0;F<z;F++)Q=E[t][F].dataSet,Q.draw();v.drawTrendRegion&&this.drawTrendRegion()}},"column"])}]);N.register("module",["private","modules.renderer.js-dataset-group-line",function(){N.register("component",["datasetGroup","line",{},"area"])}]);N.register("module",
["private","modules.renderer.js-dataset-group-scrollarea2d",function(){N.register("component",["datasetGroup","scrollarea2d",{},"Area"])}]);N.register("module",["private","modules.renderer.js-dataset-group-realtimearea",function(){N.register("component",["datasetGroup","realtimearea",{},"area"])}]);N.register("module",["private","modules.renderer.js-dataset-group-radar",function(){N.register("component",["datasetGroup","radar",{},"area"])}]);N.register("module",["private","modules.renderer.js-dataset-group-mssplinearea",
function(){N.register("component",["datasetGroup","MSSplineArea",{},"area"])}]);N.register("module",["private","modules.renderer.js-dataset-group-marimekko",function(){var b=this.hcLib,z=b.pluck,G=b.pluckNumber,v=b.preDefStr.visibleStr,F=Math,E=F.min,t=F.max,a=F.abs,Q=b.schedular;N.register("component",["datasetGroup","marimekko",{init:function(){this.__base__.init.call(this);this.stackConf=[]},getDataSetPosition:function(a,b){var t=this.numVisiblePositions,v=this.stackConfig[a.positionIndex||0],
z=this.stackConf[b],B;if(!a.visible&&v.visible||0===t)B=0;return{columnWidth:z.columnWidth,height:B,x:z.x}},draw:function(){var a=this.positionStackArr,t=a.length,v=this.chart.getJobList(),z,D,B,m;this.preDrawCalculate();this.drawLabel();this.drawSumValueFlag=!0;for(z=0;z<t;z++)for(D=a[z],B=D.length,this.manageClip=!0,D=0;D<B;D++)m=a[z][D].dataSet,m.draw();this.drawn?this.drawSumValue():v.labelDrawID.push(Q.addJob(this.drawSumValue,this,[],b.priorityList.label));this.drawn=!0},preDrawCalculate:function(){var b=
this.chart,v=this.stackSumValue,z,F=b.isBar,D=b.jsonData.chart,B=b.components.xAxis[0];z=G(F?D.overlapbars:D.overlapcolumns,b.is3D?0:1);var m=B.getAxisPosition(0),p=B.getAxisPosition(1),q=a(p-m),A=t(G(D.plotspacepercent),0),n=G(D.plotpaddingpercent),k,m=b.config.canvasWidth,g,f=p=0,S=B.config.axisRange.min,B=B.config.axisRange.max-S,C=b.config.categories,Q;g=0;var R=b.components.numberFormatter;this.__base__.preDrawCalculate.call(this);b=S;k=this.numVisiblePositions;F=G(F?D.maxbarheight:D.maxcolwidth,
Infinity);F=(1-.01*A)*q||E(1*q,F*(k||1));F=0===k?F:F/k;E(F-1,1<k?z||void 0!==n?0<n?F*n/100:0:4:0);z=0;for(n=v[0].length;z<n;z++)p+=v[0][z];this.totalSumValue=p;for(z=0;z<C.length;z++)F=C[z],F.widthpercent&&(g+=R.getCleanValue(F.widthpercent));100===g&&(Q=this.setUserWidth=1);z=0;for(n=v[0].length;z<n;z++)F=C[z],this.stackConf[z]||(this.stackConf[z]={}),g=this.stackConf[z],F=Q?R.getCleanValue(F.widthpercent)/100:v[0][z]/p,g.columnWidth=F*m,f+=F,F=F*B/2+b,b=f*B+S,g.x=F;this.isCrisp=!0},getStackSumPercent:function(){var a=
this.stackSumValue,b=this.totalSumValue,t,v=this.chart.components.numberFormatter,z=this.chart.config.categories,B=this.setUserWidth,m=[];for(t=0;t<a[0].length;t++)m[t]=B?v.getCleanValue(z[t].widthpercent):a[0][t]/b*100;return m},drawLabel:function(){var a=this.chart,b=a.components,t=a.linkedItems.smartLabel,E=this.getStackSumPercent(),D=this.stackConf,B,m,p,q=a.graphics.datalabelsGroup,A=b.numberFormatter,n=0,k,g,f=b.paper,F=a.config.canvasBottom,C=b.xAxis[0];B=a.config.style;var Q=a.config.dataLabelStyle,
R=E.length,u,N=this.sumValues[0],O,W,H,w=a.jsonData.chart;W=b.canvas.config.clip["clip-canvas"];q=this.labelContainer=this.labelContainer||f.group("labelGroup",q);m=G(w.showxaxispercentvalues,1);var w=this.xLabels=this.xLabels||[],K=a.get("config","animationObj"),a=K.duration,b=K.animType,h=K.dummyObj,K=K.animObj;q.attr({"clip-rect":W});t.setStyle(Q);if(m)for(W=z(Q.backgroundColor,"#ffffff"),O=z(""===Q.borderColor?"#"+B.inCancolor:Q.borderColor,"#000000"),H=z(Q.borderThickness,1),p=0;p<R-1;p++)n+=
E[p],k=A.percentValue(n),B=C.getAxisPosition(D[p].x)+D[p].columnWidth/2,m=F,u=w[p],N[p].positive===N[p].negative?u&&u.hide():(g={text:k,fill:Q.color,"text-bound":[W,O,H,Q.borderPadding,Q.borderRadius,Q.borderDash],"line-height":Q.lineHeight,visibility:v},k=t.getOriSize(k),m=m-k.height/2-H,u?(u.show().animateWith(h,K,{x:B,y:m},a,b),u.attr(g)):(g.x=B,g.y=m,w[p]=f.text(g,q)))},getSumValueConfig:function(a){var b=a.yAxis,t=a.stack100percent,v=a.sumValue;a=this.chart.components.xAxis[0].getAxisPosition(this.stackConf[a.xValue].x);
b=b.getAxisPosition(t?100:v);return{xPos:a,yPos:b}}},"column"])}]);N.register("module",["private","modules.renderer.js-interface",function(){var b=this,z=b.hcLib,G=b.renderer.getRenderer("javascript"),v=z.hasModule,F=z.loadModule,E=z.getMetaSentence,t=z.moduleCmdQueue,a=z.executeWaitingCommands,Q=z.injectModuleDependency,r=z.moduleDependencies,P=z.getDependentModuleName,N,L;N=function(r){var t,m,p,q={},A;r=E(r);for(t in b.core.items)t=b.core.items[t],m=t.chartType(),p=t.options.chartTypeSourcePath+
m,(m=t.jsVars)&&m.waitingModule&&t.__state.rendering&&z.needsModule(r.predicate,p)&&(m.waitingModuleError=!0,m=P(p).concat(m.userModules),m.length&&(m=m[m.length-1],q[m]=z.moduleCmdQueue[m]));for(A in q)a(q[A]);b.raiseError(b.core,"11171116151","run","HC-interface~renderer.load","Unable to load required modules and resources: "+r.key)};L=function(a,r,m){var p=a.args,q=a.options;a._chartMessageImageStyle={imageHAlign:p.typeNotSupportedMessageImageHAlign||q.baseChartMessageImageHAlign,imageVAlign:p.typeNotSupportedMessageImageVAlign||
q.baseChartMessageImageVAlign,imageAlpha:p.typeNotSupportedMessageImageAlpha||q.baseChartMessageImageAlpha,imageScale:p.typeNotSupportedMessageImageScale||q.baseChartMessageImageScale};a._chartMessageStyle={color:p.typeNotSupportedMessageColor||q.baseChartMessageColor,fontFamily:p.typeNotSupportedMessageFont||q.baseChartMessageFont,fontSize:p.typeNotSupportedMessageFontSize||q.baseChartMessageFontSize};b.hcLib.createChart(a,r,"base",m,q.typeNotSupportedMessage)};z.eventList=b.extend(b.legacyEventList,
{loaded:"FC_Loaded",dataloaded:"FC_DataLoaded",rendered:"FC_Rendered",drawcomplete:"FC_DrawComplete",dataxmlinvalid:"FC_DataXMLInvalid",nodatatodisplay:"FC_NoDataToDisplay",exported:"FC_Exported"});z.raiseEvent=b.raiseEventWithLegacy;r.charts=b.extend(r.charts||{},{column2d:0,column3d:0,bar2d:0,bar3d:0,pie2d:0,pie3d:0,line:0,area2d:0,doughnut2d:0,doughnut3d:0,pareto2d:0,pareto3d:0,mscolumn2d:0,mscolumn3d:0,msline:0,msarea:0,msbar2d:0,msbar3d:0,stackedcolumn2d:0,marimekko:0,stackedcolumn3d:0,stackedarea2d:0,
stackedcolumn2dline:0,stackedcolumn3dline:0,stackedbar2d:0,stackedbar3d:0,msstackedcolumn2d:0,mscombi2d:0,mscombi3d:0,mscolumnline3d:0,mscombidy2d:0,mscolumn3dlinedy:0,stackedcolumn3dlinedy:0,msstackedcolumn2dlinedy:0,scatter:0,bubble:0,ssgrid:0,scrollcolumn2d:0,scrollcolumn3d:0,scrollline2d:0,scrollarea2d:0,scrollstackedcolumn2d:0,scrollcombi2d:0,scrollcombidy2d:0,zoomline:0,zoomlinedy:0,zoomscatter:0});r.powercharts=b.extend(r.powercharts||{},{spline:0,splinearea:0,msspline:0,mssplinearea:0,mssplinedy:0,
multiaxisline:0,multilevelpie:0,waterfall2d:0,msstepline:0,inversemsline:0,inversemscolumn2d:0,inversemsarea:0,errorbar2d:0,errorscatter:0,errorline:0,logmsline:0,logmscolumn2d:0,logstackedcolumn2d:0,radar:0,dragnode:0,candlestick:0,selectscatter:0,dragcolumn2d:0,dragline:0,dragarea:0,boxandwhisker2d:0,kagi:0,heatmap:0,treemap:0});r.widgets=b.extend(r.widgets||{},{angulargauge:0,bulb:0,cylinder:0,drawingpad:0,funnel:0,hbullet:0,hled:0,hlineargauge:0,vlineargauge:0,pyramid:0,realtimearea:0,realtimecolumn:0,
realtimeline:0,realtimelinedy:0,realtimestackedarea:0,realtimestackedcolumn:0,sparkcolumn:0,sparkline:0,sparkwinloss:0,thermometer:0,vbullet:0,gantt:0,vled:0});r.maps=b.extend(r.maps||{},{});b.extend(G,{render:function(a,r){var m=this.chartType(),p=this.options.chartTypeSourcePath+m,q=this.jsVars,A=this.__state,n=z.chartAPI,k=this.options,g=this.args,f=this.options.showChartLoadingMessage,E,C;E=P(p).concat(q.userModules);q.isResizing&&(q.isResizing=clearTimeout(q.isResizing));q.hcObj&&q.hcObj.destroy&&
q.hcObj.destroy();if(n[m]){if(n[A.lastRenderedType]&&A.lastRenderedType!==m)for(C in b.raiseEvent("chartTypeChanged",{previousType:A.lastRenderedType,newType:m},this),n[A.lastRenderedType].eiMethods)delete this[C];A.lastRenderedType=m;A.lastRenderedSrc=this.src;!q.waitingModuleError&&z.raiseEvent("internal.loaded",{type:m,triggeredModuleLoad:q.drLoadAttempted||q.waitingModule},this,[this.id]);delete q.waitingModule;delete q.waitingModuleError;delete q.drLoadAttempted;b.hcLib.createChart(this,a,m,
r)}else{if(m&&v(E)){if(q.drLoadAttempted){b.raiseError(this,11112822001,"run","HC-interface~renderer.render","Chart runtimes not loaded even when resource is present");L(this,a,r);return}Q(p)&&(E=P(p).concat(q.userModules));q.drLoadAttempted=!0}else{if(!E.length){L(this,a,r);return}if(q.waitingModuleError){L(this,a,r);delete q.waitingModule;delete q.waitingModuleError;return}}(m=t[E[E.length-1]])?(m.push({cmd:"render",obj:this,args:arguments}),q.waitingModule||(q=f?k.PBarLoadingText||k.loadMessage:
"",this._chartMessageImageStyle={imageHAlign:g.loadMessageImageHAlign||k.baseChartMessageImageHAlign,imageVAlign:g.loadMessageImageVAlign||k.baseChartMessageImageVAlign,imageAlpha:g.loadMessageImageAlpha||k.baseChartMessageImageAlpha,imageScale:g.loadMessageImageScale||k.baseChartMessageImageScale},this._chartMessageStyle={color:g.loadMessageColor||k.baseChartMessageColor,fontFamily:g.loadMessageFont||k.baseChartMessageFont,fontSize:g.loadMessageFontSize||k.baseChartMessageFontSize},b.hcLib.createChart(this,
a,"base",void 0,q),G.load.call(this,a,r))):(b.raiseError(this,12080515551,"run","HC-interface~renderer.render","Unregistered module in dependentModule definition."),this._chartMessageImageStyle={imageHAlign:g.renderErrorMessageImageHAlign||k.baseChartMessageImageHAlign,imageVAlign:g.renderErrorMessageImageVAlign||k.baseChartMessageImageVAlign,imageAlpha:g.renderErrorMessageImageAlpha||k.baseChartMessageImageAlpha,imageScale:g.renderErrorMessageImageScale||k.baseChartMessageImageScale},this._chartMessageStyle=
{color:g.renderErrorMessageColor||k.baseChartMessageColor,fontFamily:g.renderErrorMessageFont||k.baseChartMessageFont,fontSize:g.renderErrorMessageFontSize||k.baseChartMessageFontSize},b.hcLib.createChart(this,a,"base",void 0,k.renderErrorMessage))}},update:function(a){var r=this.ref,m=this.jsVars,p,q=m&&m.fcObj,q=m.container||q&&q.options&&q.options.containerElement&&q.options.containerElement.childNodes[0];m.hcObj&&m.hcObj.destroy&&m.hcObj.destroy();m.isResizing&&(m.isResizing=clearTimeout(m.isResizing));
void 0===a.error?(delete m.stallLoad,delete m.loadError,!this.__state.firstRenderNotified&&this.jsVars.secondTimeRender&&(this.__state.firstRenderNotified=!0,p=b.renderer.notifyRender),this.isActive()?this.src!==this.__state.lastRenderedSrc?this.render():b.hcLib.createChart(this,q,void 0,p):this.__state.rendering&&!m.waitingModule&&b.hcLib.createChart(this,q,void 0,p)):(this.isActive()&&"function"===typeof r.showChartMessage&&r.showChartMessage("InvalidXMLText"),delete m.loadError)},resize:function(a){var r=
this.ref,m,p=this.jsVars;r&&r.resize&&(p.isResizing&&(p.isResizing=clearTimeout(p.isResizing)),p.isResizing=setTimeout(function(){m=b.normalizeCSSDimension(a.width,a.height,r);void 0!==a.width&&(r.style.width=m.width);void 0!==a.height&&(r.style.height=m.height);r.resize();delete p.isResizing},0))},dispose:function(){var a,r=this.jsVars;r.isResizing&&(r.isResizing=clearTimeout(r.isResizing));this.apiInstance&&(this.apiInstance.dispose(),delete r.instanceAPI);if(a=this.ref)b.purgeDOM(a),a.parentNode&&
a.parentNode.removeChild(a);r.container=null;z.cleanupWaitingCommands(this)},load:function(r,t){var m=this.jsVars,p=this.chartType(),q=b.hcLib.chartAPI[p],p=P(p).concat(m.userModules),A=p[p.length-1];q||!p||p&&0===p.length?(delete m.waitingModule,r&&L(this,r||this.ref,t)):m.waitingModule||(m.waitingModule=!0,delete m.waitingModuleError,F(p,function(){delete m.waitingModule;a(z.moduleCmdQueue[A])},N,this))}})}]);N.register("module",["private","modules.api.dynamicchartattributes",function(){var b=this;
b.extend(b.core,{setChartAttribute:function(z,G){var v,F,E,t;if("string"===typeof z)v=z,z={},z[v]=G;else if(null===z||"object"!==typeof z)return;t=0;if(E=(v=this.getChartData(b.dataFormats.JSON))&&(v.chart||v.graph||v.map)){for(F in z)t+=1,null===z[F]?delete E[F.toLowerCase()]:E[F.toLowerCase()]=z[F];0<t&&("undefined"===typeof E.animation&&(E.animation="0"),this.setChartData(v,b.dataFormats.JSON))}else b.raiseError(this,"2105141421","run","#setChartAttribute()","Could not retrieve attribute list. Is data ready?")},
getChartAttribute:function(z){var G=this.getChartData(b.dataFormats.JSON),G=G&&(G.chart||G.graph||G.map),v,F;if(0===arguments.length||void 0===z||void 0===G)return G;if("string"===typeof z)v=G[z.toString().toLowerCase()];else if(z instanceof Array)for(v={},F=0;F<z.length;F+=1)v[z[F]]=G[z[F].toString().toLowerCase()];else b.raiseError(this,"25081429","param","~getChartAttribute()",'Unexpected value of "attribute"');return v}},!0)}]);N.register("module",["private","api.linkmanager",function(){var b=
this,z=b.FusionChartsDOMInsertModes,G={},v=function(t,a){this.items={};this.root=t;this.parent=a;a instanceof b.core?this.level=this.parent.link.level+1:(G[t.id]=[{}],this.level=0)},F=function(b,a){return(b.options.containerElement===a.options.containerElement||b.options.containerElementId===a.options.containerElementId)&&b.options.insertMode===z.REPLACE},E=function(t){var a;t.sender.link instanceof v&&!t.sender.link.root.disposed?t.sender.link.parent instanceof b.core&&(a=t.sender.link.parent.link.items,
!a[t.sender.id]&&(a[t.sender.id]=t.sender)):t.sender.link=new v(t.sender)};b.policies.link=["link",void 0];v.prototype.configuration=function(){return G[this.root.id][this.level]||(G[this.root.id][this.level]={})};b.extend(b.core,{configureLink:function(t,a){var v;if(t instanceof Array){for(v=0;v<t.length;v+=1)"object"!==typeof G[this.link.root.id][v]&&(G[this.link.root.id][v]={}),b.extend(G[this.link.root.id][v],t[v]);G[this.link.root.id].splice(t.length)}else"object"===typeof t?("number"!==typeof a&&
(a=this.link.level),void 0===G[this.link.root.id][a]&&(G[this.link.root.id][a]={}),b.extend(G[this.link.root.id][a],t)):b.raiseError(this,"25081731","param","~configureLink()","Unable to update link configuration from set parameters")}},!0);b.addEventListener("beforeRender",function(b){E(b)});b.addEventListener("beforeInitialize",function(b){E(b)});b.addEventListener("linkedChartInvoked",function(t,a){var z=t.sender,r=z.clone({dataSource:a.data,dataFormat:a.linkType,asyncRender:0,link:new v(z.link.root,
z)},!0),E=a.alias,G;E&&(!r.typeSource&&r.swfUrl&&(r.typeSource=r.swfUrl.replace(/(.*?)?[^\/]*\.swf.*?/ig,"$1")),r.type=E);z.args&&0!==parseInt(z.args.animate,10)&&delete r.animate;b.extend(r,z.link.configuration());b.raiseEvent("beforeLinkedItemOpen",{level:z.link.level},z.link.root,void 0,function(){b.core.items[r.id]instanceof b.core&&b.core.items[r.id].dispose();G=new b.core(r);F(G,z)||z.options.overlayButton&&z.options.overlayButton.message||("object"!==typeof z.options.overlayButton&&(z.options.overlayButton=
{}),z.options.overlayButton.message="Close");G.render();b.raiseEvent("linkedItemOpened",{level:z.link.level,item:G},z.link.root)})});b.addEventListener("overlayButtonClick",function(t,a){if("LinkManager"===a.id){var v=t.sender,r=v.link.level-1,z=v.link.parent,E=v.link.root;b.raiseEvent("beforeLinkedItemClose",{level:r,item:v},E,v,function(){setTimeout(function(){b.core.items[v.id]&&v.dispose();b.raiseEvent("linkedItemClosed",{level:r},E)},0);z.disposed||z.isActive()||!F(v,z)||z.render()})}});b.addEventListener("DrawComplete",
function(t){t=t.sender;var a;t&&void 0!==t.link&&t.link.root!==t&&t.link.parent instanceof b.core&&(t.ref&&"function"===typeof t.ref.drawOverlayButton?(a=b.extend({show:!0,id:"LinkManager"},t.link.parent.options.overlayButton),b.extend(a,t.link.parent.link.configuration().overlayButton||{}),t.ref.drawOverlayButton(a)):b.raiseWarning(t,"04091602","run","::LinkManager^Loaded","Unable to draw overlay button on object. -"+t.id))});b.addEventListener("beforeDispose",function(t){var a=t.sender;a&&a.link instanceof
v&&(a&&a.link&&a.link.parent instanceof b.core&&a.link.parent.link&&a.link.parent.link.items&&delete a.link.parent.link.items[t.sender.id],delete G[a.id])})}]);N.register("module",["private","modules.renderer.js-thememanager",function(){var b=this,z,G,v,F=/\s+!important$/,E=/\\!important$/,t=function(a,b){for(var p=b.length,q=-1;p--;)if(a===b[p]){q=p;break}return q},a=function(b,m,p,q,r){var n,k,g,f;r?(q.push(b),r.push(m)):(q=[b],r=[m]);if(m instanceof Array)for(n=0;n<m.length;n+=1){try{k=b[n],g=
m[n]}catch(v){continue}if("object"!==typeof g)p&&void 0===g||(b[n]=g);else{if(null===k||"object"!==typeof k)k=b[n]=g instanceof Array?[]:{};f=t(g,r);-1!==f?k=b[n]=q[f]:a(k,g,p,q,r)}}else for(n in m){try{k=b[n],g=m[n]}catch(v){continue}if(null!==g&&"object"===typeof g)if(f=Object.prototype.toString.call(g),"[object Object]"===f){if(null===k||"object"!==typeof k)k=b[n]={};f=t(g,r);-1!==f?k=b[n]=q[f]:a(k,g,p,q,r)}else"[object Array]"===f?(null!==k&&k instanceof Array||(k=b[n]=[]),f=t(g,r),-1!==f?k=b[n]=
q[f]:a(k,g,p,q,r)):b[n]=g;else b[n]=g}return b},N=function(b,m,p){if("object"!==typeof b&&"object"!==typeof m)return null;if("object"!==typeof m||null===m)return b;"object"!==typeof b&&(b=m instanceof Array?[]:{});a(b,m,p);return b},r=function(a){var b={important:!1,str:""};if(!a)return b;a=a.toString();F.test(a)?(a=a.replace(F,""),b.important=!0):(a=a.replace(E,"!imporant"),b.important=!1);b.str=a;return b},P=function(a,b){var p,q,r,n,k,g,f=0,t=0;for(p in a)if(q=a[p],q instanceof Array)for(g=q.length,
k=0;k<g;k+=1){if(n=q[k],"object"===typeof n)if("category"===p)if("true"===n.vline){if(r=b.component("vline",f,n))T(n,r),f+=1}else{if(r=b.component("category",t,n,g))T(n,r),t+=1}else if(r=b.component(p,k,n,g))T(n,r),P(n,r)}else"object"===typeof q&&(r=b.component(p,null,q))&&(T(q,r),P(q,r))},T=function(a,b){var p=b.getAll(),q,t;for(q in p)t=p[q].toString(),t=r(t),t.important?a[q.toLowerCase()]=t.str:void 0===a[q.toLowerCase()]&&(a[q.toLowerCase()]=t.str)},L=function(a,b){"geo"===b.defaultSeriesType&&
D.call(this,a,b)},D=function(a,m){var p=a.sender,q=p.getChartData(b.dataFormats.JSON,!0),r;q.error||((r=q.data.chart.theme)?v.themify(r,p,p.chartType(),q.data,"geo"===m.defaultSeriesType&&"geo"):p.jsVars&&p.jsVars.themeObject&&p.jsVars.themeObject.dispose())};z=function(){this.themeStore={}};z.prototype={constructor:z,add:function(a){for(var b=0,p=a.length,q;b<p;b+=1)(q=a[b].name)&&(this.themeStore[q]=a[b])},themify:function(a,m,p,q,r){var n=m.jsVars,k=a.split(","),g=[],f=k.length,t,C;if(f){for(C=
0;C<f;C+=1){t=this.themeStore;var v;v=k[C];v=v.replace(/^\s\s*/,"");for(var z=/\s/,u=v.length;z.test(v.charAt(--u)););v=v.slice(0,u+1);(t=t[v])&&g.push(this.evaluateThemeJSON(t.theme,m,p,r))}g.length?(n.themeObject=new G(g,m,!1,q),this.applyTheme(m),m.addEventListener("chartTypeChanged",D),m.addEventListener("internal.drawstart",L)):b.raiseWarning(m,"14051100501","run","api.themes~themify()",'The theme "'+a+'" requested has not been registered.')}},evaluateThemeJSON:function(a,b,p,q){var r={},n=b.jsVars,
k=function(a){var b,k;for(b in a)k=a[b],r[b]=k instanceof Array?N(r[b]||[],k):"object"===typeof k?N(r[b]||{},k):k};p=p||b.chartType();n.themeObject&&a!==n.themeObject&&(n.themeObject.dispose(),delete n.themeObject);k(a.base);q&&a[q]&&k(a[q]);p&&a[p]&&k(a[p]);return r},applyTheme:function(a){a=a.jsVars.themeObject;var b=a.getThemedJSONData().data;b&&P(b,a)}};G=function(a,b,p,q){this.themeArray=a;this.themeComponents={};this.base={};this.chartInstance=b;this.isChildInstance=!!p;this.themedData=p?null:
N({},q);this.length=a.length;b=0;for(p=a.length;b<p;b+=1)this.parse(a[b])};G.prototype={constructor:G,pushTheme:function(a){a&&(this.themeArray.push(a),this.parse(a),this.length+=1)},popTheme:function(){},parse:function(a){var b=this.themeComponents,p=this.chartInstance,q=this.base,t,n,k;for(n in a)if("string"===typeof a[n]||"number"===typeof a[n])if(q[n]){if(t=r(a[n]),k=r(q[n]),t.important||!k.important)q[n]=a[n]}else q[n]=a[n];else b[n]||(b[n]=[]),t=b[n],a[n]instanceof Array?t.push(N([],a[n])):
"object"===typeof a[n]?t.push(new G([a[n]],p,!0)):"function"===typeof a[n]&&t.push(a[n])},merge:function(a){var b=this.base,p=a.base,q=this.themeComponents,t=a.themeComponents,n,k,g;for(g in p)if(n=r(b[g]),k=r(p[g]),!n.important||k.important)b[g]=p[g];for(g in t)q[g]=q[g]?q[g].concat(t[g]):[].concat(t[g]);this.length+=a.length},get:function(a){return this.base[a]},getAll:function(){return N({},this.base)},component:function(a,b,p,q){var r=this.themeComponents,n=this.chartInstance,k=new G([],n,!0),
g,f,t;f=r[a];if(!f)return null;a=0;for(r=f.length;a<r;a+=1)t=f[a],"function"===typeof t?(b=b||0,k.pushTheme(t.call(n,b,p,q))):t instanceof Array?(b=b||0,g=t.length,b%=g,g=t[b],g instanceof G?k.merge(g):"function"===typeof g?k.pushTheme(g.call(n,b,p,q)):k.pushTheme(g)):t instanceof G?k.merge(t):k.pushTheme(t);return k},getThemedJSONData:function(){return{data:this.themedData}},dispose:function(){var a=this.themeComponents,b=this.chartInstance,p,q;for(p in a)if(q=a[p].length){for(;q--;)a[p][q].dispose&&
a[p][q].dispose();delete a[p]}this.isChildInstance||(b.removeEventListener("chartTypeChanged",D),b.removeEventListener("internal.drawstart",L));this.dataWithoutTheme=this.isChildInstance=this.themeArray=this.base=this.chartInstance=this.themeComponents=null}};v=new z;b.registrars.theme=b.registerTheme=function(a){a&&("[object Array]"!==Object.prototype.toString.call(a)&&(a=[a]),v.add(a))};b.addEventListener("beforeDataUpdate",function(a,m){var p=a.sender,q=b.core.transcodeData(m.data,m.format,b.dataFormats.JSON),
r=q.chart&&q.chart.theme;r?v.themify(r,p,p.args.type,q):p.jsVars&&p.jsVars.themeObject&&(p.jsVars&&p.jsVars.themeObject.dispose(),p.jsVars&&delete p.jsVars.themeObject)})}]);N.register("theme",{name:"default",theme:{base:{chart:{labelDisplay:"stagger !important",caption:"Theme Caption \\!important",canvasBgColor:"#56EF22",borderThickness:"5 !important",borderColor:"#E60539",baseFontColor:"#781129"},categories:[{fontColor:"#0F4F40",fontSize:15,category:function(b){return{showLabel:b%2?0:1}},vline:{color:"#000000",
thickness:2}}],dataset:[{color:"#8C3146",data:function(b,z){8==b&&(z.value="");return{color:32E3>Number(z.value)?"#8C3146":"#FF0000",alpha:"100"}}}],trendlines:[{line:function(b){return b?{color:"#ff0000",thickness:3}:{color:"#ffff00",thickness:3}}}]},pie2d:{chart:{bgColor:"#FF0000"}},msline:{chart:{canvasBgColor:"#ff0000"}},geo:{chart:{canvasBgColor:"#0000ff"}},world:{chart:{canvasBgColor:"#00ff00"}}}});N.register("module",["private","modules.renderer.js-kdtree",function(){function b(a){function b(a,
f,g,k){var n={},p;p=k?"y":"x";if(f===g)return n.point=a[f],n;if(1===g-f)return a[f][p]>a[g][p]?(n.point=a[f],n.left={point:a[g]}):(n.point=a[g],n.left={point:a[f]}),n;p=f+g>>1;k?m(a,p,f,g):r(a,p,f,g);n.point=a[p];n.left=b(a,f,p-1,!k);n.right=b(a,p+1,g,!k);return n}function r(a,b,m,q){for(var t,z,w,A,h;q>m;){600<q-m&&(t=q-m+1,z=b-m+1,w=v(t),A=.5*C(2*w/3),h=.5*g(w*A*(t-A)/t)*(0>z-t/2?-1:1),w=n(m,k(b-z*A/t+h)),t=f(q,k(b+(t-z)*A/t+h)),r(a,b,w,t));t=a[b];z=m;A=q;p(a,m,b);for(a[q].x>t.x&&p(a,m,q);z<A;){p(a,
z,A);z++;for(A--;a[z].x<t.x;)z++;for(;a[A].x>t.x;)A--}a[m].x===t.x?p(a,m,A):(A++,p(a,A,q));A<=b&&(m=A+1);b<=A&&(q=A-1)}}function m(a,b,q,r){for(var t,z,w,A,h;r>q;){600<r-q&&(t=r-q+1,z=b-q+1,w=v(t),A=.5*C(2*w/3),h=.5*g(w*A*(t-A)/t)*(0>z-t/2?-1:1),w=n(q,k(b-z*A/t+h)),t=f(r,k(b+(t-z)*A/t+h)),m(a,b,w,t));t=a[b];z=q;A=r;p(a,q,b);for(a[r].y>t.y&&p(a,q,r);z<A;){p(a,z,A);z++;for(A--;a[z].y<t.y;)z++;for(;a[A].y>t.y;)A--}a[q].y===t.y?p(a,q,A):(A++,p(a,A,r));A<=b&&(q=A+1);b<=A&&(r=A-1)}}function p(a,b,f){var g=
a[b];a[b]=a[f];a[f]=g}var q=a&&a[0]&&a[0].r||5,t,n=Math.max,k=Math.floor,g=Math.sqrt,f=Math.min,v=Math.log,C=Math.exp,z=Math.pow;a=a||[];for(t=a.length;t--;)a[t].r>q&&(q=a[t].r),a[t].i=t,a[t].x=+a[t].x,a[t].y=+a[t].y;return{tree:0===a.length?{}:b(a,0,a.length-1,!1),search:function(a,b,f){function k(h,l){return"circle"===f?g(z(h-a,2)+z(l-b,2))<=t:h>=t&&h<=e&&l>=d&&l<=c}function m(c){var d=a>=c.x1&&a<=c.x2&&b>=c.y1&&b<=c.y2,e;e=c.point.y;e=g(z(a-c.point.x,2)+z(b-e,2));h?d?l?c.point.i>h.point.i&&(h=
c,l=d,C=e):(h=c,l=d,C=e):!l&&e<C&&(h=c,l=d,C=e):(h=c,l=d,C=e)}function n(g){"circle"===f?t=g:(t=a-g||0,e=a+g||0,d=b-g||0,c=b+g||0)}function p(a){a&&a.point&&(n(a.point.r),k(a.point.x,a.point.y)&&m(a),t<=a.point.x&&r(a.left),e>=a.point.x&&r(a.right))}function r(a){a&&a.point&&(n(a.point.r),k(a.point.x,a.point.y)&&m(a),d<=a.point.y&&p(a.left),c>=a.point.y&&p(a.right))}var h,t=a-q,e=a+q,d=b-q,c=b+q,l=!1,C=0;p(this.tree);return h&&h.point||h}}}function z(a){this.configure(a)}var G=this.hcLib,v=function(a,
b,r,m,p){return Math.pow(r-a,2)+Math.pow(m-b,2)<=Math.pow(p,2)},F=Math.PI,E=Math.cos,t=Math.sin,a=Math.max,N=Math.min,r=F/180,P=function(b,r,t,m,p,q){return t<=a(b,p)&&t>=N(b,p)&&m<=a(r,q)&&m>=N(r,q)?!0:!1},T=function(a,b,r,m,p,q){b=(m-b)*(p-r);a=(r-a)*(q-m);isNaN(b)&&(b=0);isNaN(a)&&(a=0);a=b-a;return 0===a?0:0<a?1:2};z.prototype={configure:function(a){this.validatorFn=a?this.shapeValidator():this.defaultValidator()},defaultValidator:function(){var a=this;return function(b){var r=a.mousePoint;return b&&
1>=Math.pow((b.x-r.x)/a.xLimit,2)+Math.pow((b.y-r.y)/a.yLimit,2)?!0:!1}},shapeValidator:function(){var a=this;return function(b){var z=a.mousePoint,m=b&&b.shapeInfo,p=!1,q,A=z.x,z=z.y,n;switch(m&&m.type){case "circle":q=m.radius;p=v(A,z,b.x,b.y,q);break;case "arc":p=m.innerradius;q=m.radius;p=!v(A,z,b.x,b.y,p)&&v(A,z,b.x,b.y,q);break;case "polygon":q=m.radius;n=m.startAngle;m=m.sides;a:{p=b.x;b=b.y;var k,g=0,f,G,C,N,R;k=!1;if(v(A,z,p,b,q)&&3<=m){k=void 0===n?.5*F:n%360*r;R=2*F/m;f=p+q*E(-k);N=b+q*
t(-k);for(n=0;n<m;n++){k+=R;G=p+q*E(-k);C=b+q*t(-k);var u=f,Q=N,O=G,W=C,H=A,w=z,K=z,h=T(u,Q,O,W,H,w),V=T(u,Q,O,W,Infinity,K),e=T(H,w,Infinity,K,u,Q),d=T(H,w,Infinity,K,O,W);if(h!==V&&e!==d||0===h&&P(u,Q,H,w,O,W)||0===V&&P(u,Q,Infinity,K,O,W)||0===e&&P(H,w,u,Q,Infinity,K)||0===d&&P(H,w,O,W,Infinity,K)){if(0===T(f,N,A,z,G,C)){p=P(f,N,A,z,G,C);break a}g++}f=G;N=C}k=0!==g%2}p=k}break;case "rect":p=b.x;q=b.y;b=p+(m.width||0);m=q+(m.height||0);p=A>=p&&A<=b&&z>=q&&z<=m;break;case "default":p=!1}return p}},
buildKdTree:function(a){this.kdTree=b(a);this.tree=this.kdTree.tree;return this},getNeighbour:function(a,b,r){var m=this.tree,p={x1:a.x-this.xLimit,x2:a.x+this.xLimit,y1:a.y-this.yLimit,y2:a.y+this.yLimit},q=this.validatorFn;this.mousePoint=a;if(b)return this.kdTree&&this.kdTree.search(a.x,a.y,r);if(m)return this._searchBtwnLimit(p,m,!0,q)},_compair2closest:function(a,b){return!a||a&&b&&b.i>a.i?b:a},_searchBtwnLimit:function(a,b,r,m){var p,q,t=r?a.x1:a.y1,n=r?a.x2:a.y2;p=b&&b.point&&b.point[r?"x":
"y"];if(void 0!==p)return m(b.point)&&(q=b.point),p>=t&&b.left&&(q=this._compair2closest(q,this._searchBtwnLimit(a,b.left,!r,m))),p<=n&&b.right&&(q=this._compair2closest(q,this._searchBtwnLimit(a,b.right,!r,m))),q},_setSearchLimit:function(a,b){this.xLimit=a;this.yLimit=b}};z.prototype.constructor=z;G.KdTree=z}]);N.register("module",["private","modules.renderer.js-highlightmanager",function(){var b=this,z=b.hcLib,G=z.extend2,v=z.pluckNumber,F=z.toRaphaelColor,E=/^#?[0-9a-f]{6}/i,t=/FFFFFF/i,a=/255,255,255/,
Q=z.getFirstAlpha,r=function(a){a=a.replace("rgba(","").split(",");return"#"+("000000"+(a[0]<<16|a[1]<<8|a[2]).toString(16)).slice(-6)},P=z.pluck,T=function(a){if(/rgb/.test(a))return a=a.match(/[\d\.]+\)/g),parseFloat(a&&a[0]);if(a.FCcolor)return Q(a.FCcolor.alpha)},L=function(a){a=a.split(",");var b,f,m,n={},p;b=0;for(f=a.length;b<f;b++)m=a[b].split("="),p=m[0],m=m[1],n[p]=m;return n},D=function(a,b,f){var m,n=b.color;if(/rgb/.test(a))b=P(b.alpha,100*T(a)),/rgb/.test(n)&&(n=r(n)),m=f?F({color:P(n,
r(a)),alpha:b}):a;else if(a.FCcolor){if(f){a=a.FCcolor;var p;f={};var q;for(p in a)if("alpha"===p){n=p;if(b.alpha){m=a[p];var u=b.alpha,t=void 0,v=void 0,z=[];if("number"===typeof m)m=u;else{v=m.split&&m.split(",");for(t=0;t<v.length;t++)z.push(u);m=z.join()}}else m=a[p];f[n]=m}else"color"===p?(-1!==a[p].indexOf(",")&&b.color&&(q=b.color+","+a[p].substring(a[p].indexOf(",")+1)),f[p]=P(q||b.color,a[p])):f[p]=a[p];b=F(f)}else b=F(a.FCcolor);m=b}else E.test(a.color||a)&&(m=f?F({color:P(b.color,a.color,
a),alpha:P(b.alpha,a.alpha)}):F({color:a.color||a,alpha:a.alpha}));return m},B=function(a,b,f){var m,n,p,q=a.chart;m=q.config;q=q.config.dataLabelStyle;a=a.components.data;var r,t,v,z,B,w;r=0;for(t=a.length;r<t;r++)if(m=a[r])for(z in v=m.graphics,m=m.config,p=m.anchorProps,n=p.enabled,m={FCcolor:{alpha:f&&n?P(b.anchorbgalpha,b.alpha,p.bgAlpha):p.bgAlpha,color:f&&n?P(b.anchorbgcolor,b.color,p.bgColor):p.bgColor}},n={FCcolor:{alpha:f&&n?P(b.borderalpha,b.alpha,p.borderAlpha):p.borderAlpha,color:f&&
n?P(b.anchorbordercolor,b.color,p.borderColor):p.borderColor}},p=f?b.alpha:p.imageAlpha,f||T(q.color),v)switch(w=(B=v[z])&&B.type,w){case "path":B.attr({fill:F(m),stroke:F(n)});break;case "image":B.attr({opacity:p/100});break;case "text":A(B,b,q,f)}},m=function(b,g,f,m){var n=g.symbolAttr||{},p=n.fill,n=n.stroke,q=g.textAttr||{},q=m?P(f.color,r(q.fill)):r(q.fill),u=b.legendItemText,v=b.legendItemSymbol;b=b.legendItemLine;g=(g.lineAttr||{}).stroke;b&&g&&(E.test(g)?b.attr({stroke:m?F({color:P(f.color,
g),alpha:f.alpha}):g}):(g=D(g,f,m),b.attr({stroke:g})));v&&(p&&(p=p.match(E)?m&&!t.test(p)?F({color:f.color||p,alpha:f.alpha}):p:a.test(p)?p:D(p,f,m)),n&&(n=E.test(n)?m&&!t.test(n)?F({color:f.color||n,alpha:f.alpha}):n:m&&!a.test(n)?f.color?F({color:f.color,alpha:f.alpha}):n:n),v.attr({fill:p||"none",stroke:n||"none"}));u&&u.attr({fill:F({color:q,alpha:m?f.alpha:100})})},p={area:function(a,b,f){var n=this.chart,p=n.config,q=n.components.legend.components.items,r,u=this.legendItemId,t=q.length;a=L(a);
var v=this.graphics||{},n=v.legendGraphics,z=p.dataLabelStyle,A=v.dataLabelContainer,w=this.config,D,p=0<(w.shadow||{}).opacity;if(!f&&!0===this.visible){a.alpha=a.alpha||30;for(f=0;f<t&&(r=q[f]||{},r.legendItemId!==u);f++);A&&A.attr({opacity:b?a.alpha/100:T(z.color)});f=w.plotbordercolor;q=w.plotborderalpha;u=w.plotfillalpha;t=w.plotgradientcolor;v=P(v.lineElement,v.splineElement);f=b?P(a.bordercolor,a.color,f):f;a.color&&(D=a.color+(t?","+t:""));t=w.fillColor.color;D=b?P(D,t):t;w=w.plotfillangle;
u=b?a.alpha:u;q=b?P(a.borderalpha,a.alpha):q;p=p?b?a.alpha/100:u/100:!1;v.attr({fill:F({color:D,alpha:u,angle:w}),stroke:F({color:f,alpha:q})}).shadow(p);n&&m(n,r.config,a,b);B(this,a,b)}},bubble:function(a,b,f){var n=this.chart,p=n.components.legend.components.items||[],q,r=p.length,u=this.legendItemId,n=n.config.dataLabelStyle,t=this.graphics,v=t.legendGraphics,B=z.graphics.getPointColor,D=t.dataLabelContainer;a=L(a);if(!1===f&&!0===this.visible){a.alpha||(a.alpha=30);t=this.components.data||[];
for(f=0;f<r&&(q=p[f]||{},q.legendItemId!==u);f++);m(v,q.config,a,b);D&&D.attr({opacity:b?a.alpha/100:T(n.color)});f=0;for(r=t.length;f<r;f++)if(p=t[f])u=p.graphics,q=p.config,p=q.colorObj,v=q.is3d,q=u.element,u=u.label,v?(v=b?B(P(a.color,p.FCcolor.color),P(a.alpha,Q(p.alpha))):p,v=F(v)):(v=b?P(a.color,p.color):p.color,p=b?a.alpha:p.alpha,v=F({color:v,alpha:p})),q&&q.attr({fill:v}),u&&A(u,a,n,b)}},pie:function(a,b,f,n){var p=n.chart,q;n=n._getPointColor;var r=this,t,v,z,B;z={};var r=this.legendItemId,
D;v=p.components.legend.getItems()||[];a=L(a);if(!1===f){a.alpha||(a.alpha=30);f=this.graphics.element;t=this.config;B=0;for(p=v.length;B<p&&(q=v[B],D=q.legendItemId,D!==r);B++);r=q.graphics;m(r,q.config,a,b);v=t.color.color;r=f.data("plotItem");p=r.chart;q=r.style;p=p.is3D;if(B=r.center)z=B[0],B=B[1],r=r.radius,z={cx:z,cy:B,r:r};v=b?n(P(a.color,v),a.alpha,90):t.color;n=b?a.alpha:v.alpha;v=G(v,z);p?f&&f.attr({color:v.color.split(",")[0],alpha:n}):f&&f.attr({fill:F(v)});n=this.graphics.label;f=this.graphics.connector;
n&&A(n,a,q,b);f&&f.attr({opacity:b?a.alpha/100:T(q.color)})}},line:function(a,b,f){var n=this.chart,p=n.components.legend.components.items||[],q=p.length,r,t=this.legendItemId,v=n.config.dataLabelStyle;a=L(a);var z=this.graphics||{},n=z.legendGraphics,A=z.dataLabelContainer,D=z.errorGroupContainer,w=this.config,E=w.linecolor,h=w.alpha,G=0<(w.shadow||{}).opacity;if(!f&&!0===this.visible){a.alpha||(a.alpha=30);for(f=0;f<q&&(r=p[f]||{},r.legendItemId!==t);f++);D&&(p=T(w.errorBarColor),p=b?P(a.alpha/
100,p):p,D.attr({opacity:p}));A&&A.attr({opacity:b?a.alpha/100:T(v.color)});v=P(z.lineElement,z.SplineElement);E=b?P(a.color,E):E;h=b?P(a.alpha,h):h;G=G?b?a.alpha/100:h/100:!1;v&&v.attr({stroke:F({color:E,alpha:h})}).shadow(G);n&&m(n,r.config,a,b);B(this,a,b)}},boxandwhisker2d:function(a,b,f){var n=this.config.isRoundEdges,p=this.graphics,q=p.legendGraphics,t=p.lowerWhiskerContainer,u=p.upperWhiskerContainer,v=p.dataLabelContainer,A=this.legendItemId,B=this.chart.components.legend.components.items||
[],p=B.length,E;a=L(a);if(!1===f&&!0===this.visible){a.alpha||(a.alpha=30);for(f=0;f<p&&(E=B[f]||{},E.legendItemId!==A);f++);m(q,E.config,a,b);t&&t.attr({opacity:b?a.alpha/100:1});u&&u.attr({opacity:b?a.alpha/100:1});v&&v.attr({opacity:b?a.alpha/100:1});q=this.components.data;f=0;for(p=q.length;f<p;f++){t=q[f];u=t.config;t=t.graphics;E=a;var v=b,A=n,w={},G={},h=w=G=void 0,N=B=void 0,e=void 0,d=void 0,c=void 0;v?(G=z.graphics.getColumnColor(E.color||u.upperColorArr[0].FCcolor.color,E.alpha.toString(),
u.upperColorArr[0].FCcolor.ratio,u.upperColorArr[0].FCcolor.angle,A,E.bordercolor||r(u.upperBoxBorder.color),E.borderalpha&&E.borderalpha.toString()||(100*T(u.lowerBoxBorder.color)).toString()),G=F(G[0]),w=z.graphics.getColumnColor(E.color||u.lowerColorArr[0].FCcolor.color,E.alpha.toString(),u.lowerColorArr[0].FCcolor.ratio,u.lowerColorArr[0].FCcolor.angle,A,E.bordercolor||r(u.lowerBoxBorder.color),E.borderalpha&&E.borderalpha.toString()||(100*T(u.lowerBoxBorder.color)).toString()),w=F(w[0]),h=D(u.median.color,
E,v),e=D(u.lowerQuartile.color,E,v),d=D(u.upperQuartile.color,E,v)):(G=F(u.upperColorArr[0]),w=F(u.lowerColorArr[0]),h=u.median.color,B=u.upperBoxBorder.color,N=u.lowerBoxBorder.color,d=u.upperQuartile.color,e=u.lowerQuartile.color);c=t.upperBoxElem;c.attr({fill:G,"drop-shadow":c.attrs["drop-shadow"]&&"none"!==c.attrs["drop-shadow"]?[1,1,3,"rgba(64,64,64,"+T(G)+")",c.attrs[4],c.attrs["drop-shadow"][5]]:"none"});c=t.lowerBoxElem;c.attr({fill:w,"drop-shadow":c.attrs["drop-shadow"]&&"none"!==c.attrs["drop-shadow"]?
[1,1,3,"rgba(64,64,64,"+T(w)+")",c.attrs[4],c.attrs["drop-shadow"][5]]:"none"});c=t.lowerBoxBorderEle;c.attr({stroke:N});t.upperBoxBorderEle&&t.upperBoxBorderEle.attr({stroke:B});t.lowerQuartileEle&&t.lowerQuartileEle.attr({stroke:e});t.upperQuartileEle&&t.upperQuartileEle.attr({stroke:d});t.midLineElem&&t.midLineElem.attr({stroke:h})}}},heatmap:function(a,b,f,n){var p=n.chart,q=p.config;n=q.dataLabelStyle;var q=p.components.legend,t,u,p=this.legendItemId,v,z;a=L(a);var B=q.getItems()||[];if(!f&&
this.config.visible){a.alpha||(a.alpha=30);q=this.config;v=0;for(f=B.length;v<f&&(t=B[v],z=t.legendItemId,z!==p);v++);p=t.graphics;m(p,t.config,a,b);t=r(q.color);q=T(q.color);t=b?P(a.color,t):t;q=b?a.alpha:100*q;f=this.graphics;p=f.element;p.attr({fill:F({color:t,alpha:q})});b||T(n.color);for(u in f)p=f[u],"text"===p.type&&A(p,a,n,b)}},funnelpyramid:function(a,b,f,n){n=n.chart.components.legend;var p,q,t,u,v;a=L(a);n=n.getItems()||[];q=this.legendItemId;if(!1===f){a.alpha||(a.alpha=30);t=0;for(f=
n.length;t<f&&(p=n[t],u=p.legendItemId,u!==q);t++);f=p.graphics;m(f,p.config,a,b);p=this.style;n=this.color;f=r(n);n=T(n);f=b?P(a.color,f):f;t=b?a.alpha:100*n;q=this.plot.graphic;u=this.plot.dataLabel;v=this.plot.connector;n=this.plot.point.style;q&&q.attr({fill:F({color:f,alpha:t})});u&&A(u,a,n,b);v&&v.attr({opacity:b?a.alpha/100:T(p.color)})}},"default":function(a,b,f){var n=this.config,p=this.chart,q=p.config,r=q.dataLabelStyle,t=q.useroundedges,B=p.is3D,D,E,H;a=L(a);var w=this.graphics,G=w.legendGraphics,
h=w.dataLabelContainer;H=w.errorGroupContainer;var N,e,q="",q=this.legendItemId,d=p.components.legend.components.items||[];N=d.length;p=n.showShadow;w=z.graphics.getColumnColor;if(!1===f&&!0===this.visible){a.alpha||(a.alpha="30");f=this.components.data||[];for(D=0;D<N&&(E=d[D]||{},E.legendItemId!==q);D++);G&&m(G,E.config,a,b);h&&h.attr({opacity:b?a.alpha/100:T(r.color)});H&&(N=T(n.errorBarColor),N=b?P(a.alpha/100,N):N,H.attr({opacity:N}));D=0;for(N=f.length;D<N;D++)if((n=f[D])&&n.graphics){q=n.config;
H=q.colorArr[0];E=q.colorArr[1];G=E.FCcolor.alpha;q=H.FCcolor.color;q=-1!==(e=q.indexOf(","))&&a.color?a.color+q.substring(e):P(a.color,q);h=B?G:P(a.borderalpha,a.alpha,G);0===v(G)&&(h="0");G=b?w(q,a.alpha,H.FCcolor.ratio,H.FCcolor.angle,t,P(a.bordercolor,E.FCcolor.color),h,!1,B):[H,E];if(H=n.graphics.element)q=F(G[0]),E=F(G[1]),H.attr({stroke:E,fill:q}).shadow({opacity:p?Q(G[0].alpha)/100:0});n=n.graphics.label;A(n,a,r,b)}}}},q=function(){this.effectStore={};this.eventHandlers={}},A=function(a,b,
f,m){var n,p,q,t,v;n=r(f.color);q=100*T(f.color);p=m?P(b.valuefontcolor,n):n;t=m?P(b.valuefontalpha,b.alpha,q):q;n=""===f.backgroundColor?"":r(f.backgroundColor);q=""===f.backgroundColor?0:100*T(f.backgroundColor);isNaN(q)&&(q=0);v=m?P(b.valuebgcolor,n):n;q=m?P(b.valuebgalpha,b.alpha,q):q;v=F({color:v,alpha:q});n=""===f.borderColor?"":r(f.borderColor);q=""===f.borderColor?"":100*T(f.borderColor);isNaN(q)&&(q=0);n=m?P(b.valuebordercolor,n):n;b=m?P(b.valueborderalpha,b.alpha,q):q;b=F({color:n,alpha:b});
a&&a.attr({fill:F({color:p,alpha:t}),"text-bound":[v,b,f.borderThickness,f.borderPadding,f.borderRadius,f.borderDash]})},n=new q;q.prototype.add=function(a){this.effectStore[a.name]=a};q.prototype.attachEventHandlers=function(a,g){this.eventHandlers[a]||(this.eventHandlers[a]={},this.eventHandlers[a].listenerFn=b.addEventListener(a,g))};q.prototype.applyEffect=function(a,b,f){var m=this.effectStore,n=a.jsonData.chart,p=a.defaultDatasetType,q=n.plothighlighteffect&&n.plothighlighteffect.toLowerCase(),
n=a.components.dataset;a=a.isSingleSeries?n[0].components.data:n;b=P(b.itemId,b.legendItemId,b.legendItemIndex);var r,t,v,z="",A;q&&(q=q.replace(/\s+/g,"").split("|"),A=q[0],z=q[1]||"");if(A&&m[A])for(t=0,v=a.length;t<v;t++)q=a[t],p=q.type||p,p=p.toLowerCase(),r=P(q.itemId,q.legendItemId),void 0!==r&&(r=r===b,m[A][p]?m[A][p].call(q,z,f,r,n[0]):m[A]["default"].call(q,z,f,r,n[0]))};b.registrars.highlighteffect=function(a){a&&n.add(a)};n.attachEventHandlers("legenditemrollover",function(a,b){var f=a.sender.jsVars.instanceAPI;
!1!==f.hasInteractiveLegend&&!1!==f.highlightEnabled&&n.applyEffect(f,b,!0)});n.attachEventHandlers("legenditemrollout",function(a,b){var f=a.sender.jsVars.instanceAPI;!1!==f.hasInteractiveLegend&&!1!==f.highlightEnabled&&n.applyEffect(f,b,!1)});n.attachEventHandlers("legenditemclicked",function(a,b){var f=a.sender.jsVars.instanceAPI;!1!==f.hasInteractiveLegend&&!1!==f.highlightEnabled&&n.applyEffect(f,b,!0)});N.register("highlightEffect",{name:"fadeout",area:p.area,radar:p.area,bubble:p.bubble,pie2d:p.pie,
line:p.line,spline:p.line,areaspline:p.area,pie3d:p.pie,zoomline:p.line,funnel:p.funnelpyramid,pyramid:p.funnelpyramid,scatter:p.line,doughnut2d:p.pie,doughnut3d:p.pie,heatmap:p.heatmap,boxandwhisker2d:p.boxandwhisker2d,multiaxisline:p.line,"default":p["default"]})}]);Nb&&(sb.FusionCharts=N);return N});

},{}],"react-dom":[function(require,module,exports){
'use strict';

module.exports = require('./lib/ReactDOM');

},{"./lib/ReactDOM":55}],"react":[function(require,module,exports){
'use strict';

module.exports = require('./lib/React');

},{"./lib/React":154}]},{},[])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
